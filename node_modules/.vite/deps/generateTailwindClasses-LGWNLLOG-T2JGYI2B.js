import {
  Fuse,
  require_browser,
  require_browserify_fs,
  require_end_of_stream,
  require_inherits_browser,
  require_main,
  require_path_browserify,
  require_pipeline,
  require_safe_buffer,
  require_src,
  require_stream_browserify,
  require_stream_duplex,
  require_stream_passthrough,
  require_stream_readable,
  require_stream_transform,
  require_stream_writable,
  require_string_decoder2
} from "./chunk-NJ7RB7F2.js";
import {
  __commonJS,
  __esm,
  __export,
  __require,
  __toCommonJS,
  __toESM,
  import_buffer,
  init_buffer,
  init_process,
  process,
  require_buffer
} from "./chunk-SPHEVNWI.js";
import "./chunk-NKHIPFFU.js";

// node_modules/vivid-studio/dist/generateTailwindClasses-LGWNLLOG.mjs
var require_envs = __commonJS({
  "../../node_modules/node-releases/data/processed/envs.json"(exports, module) {
    module.exports = [{ name: "nodejs", version: "0.2.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.3.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.4.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.5.0", date: "2011-08-26", lts: false, security: false }, { name: "nodejs", version: "0.6.0", date: "2011-11-04", lts: false, security: false }, { name: "nodejs", version: "0.7.0", date: "2012-01-17", lts: false, security: false }, { name: "nodejs", version: "0.8.0", date: "2012-06-22", lts: false, security: false }, { name: "nodejs", version: "0.9.0", date: "2012-07-20", lts: false, security: false }, { name: "nodejs", version: "0.10.0", date: "2013-03-11", lts: false, security: false }, { name: "nodejs", version: "0.11.0", date: "2013-03-28", lts: false, security: false }, { name: "nodejs", version: "0.12.0", date: "2015-02-06", lts: false, security: false }, { name: "nodejs", version: "4.0.0", date: "2015-09-08", lts: false, security: false }, { name: "nodejs", version: "4.1.0", date: "2015-09-17", lts: false, security: false }, { name: "nodejs", version: "4.2.0", date: "2015-10-12", lts: "Argon", security: false }, { name: "nodejs", version: "4.3.0", date: "2016-02-09", lts: "Argon", security: false }, { name: "nodejs", version: "4.4.0", date: "2016-03-08", lts: "Argon", security: false }, { name: "nodejs", version: "4.5.0", date: "2016-08-16", lts: "Argon", security: false }, { name: "nodejs", version: "4.6.0", date: "2016-09-27", lts: "Argon", security: true }, { name: "nodejs", version: "4.7.0", date: "2016-12-06", lts: "Argon", security: false }, { name: "nodejs", version: "4.8.0", date: "2017-02-21", lts: "Argon", security: false }, { name: "nodejs", version: "4.9.0", date: "2018-03-28", lts: "Argon", security: true }, { name: "nodejs", version: "5.0.0", date: "2015-10-29", lts: false, security: false }, { name: "nodejs", version: "5.1.0", date: "2015-11-17", lts: false, security: false }, { name: "nodejs", version: "5.2.0", date: "2015-12-09", lts: false, security: false }, { name: "nodejs", version: "5.3.0", date: "2015-12-15", lts: false, security: false }, { name: "nodejs", version: "5.4.0", date: "2016-01-06", lts: false, security: false }, { name: "nodejs", version: "5.5.0", date: "2016-01-21", lts: false, security: false }, { name: "nodejs", version: "5.6.0", date: "2016-02-09", lts: false, security: false }, { name: "nodejs", version: "5.7.0", date: "2016-02-23", lts: false, security: false }, { name: "nodejs", version: "5.8.0", date: "2016-03-09", lts: false, security: false }, { name: "nodejs", version: "5.9.0", date: "2016-03-16", lts: false, security: false }, { name: "nodejs", version: "5.10.0", date: "2016-04-01", lts: false, security: false }, { name: "nodejs", version: "5.11.0", date: "2016-04-21", lts: false, security: false }, { name: "nodejs", version: "5.12.0", date: "2016-06-23", lts: false, security: false }, { name: "nodejs", version: "6.0.0", date: "2016-04-26", lts: false, security: false }, { name: "nodejs", version: "6.1.0", date: "2016-05-05", lts: false, security: false }, { name: "nodejs", version: "6.2.0", date: "2016-05-17", lts: false, security: false }, { name: "nodejs", version: "6.3.0", date: "2016-07-06", lts: false, security: false }, { name: "nodejs", version: "6.4.0", date: "2016-08-12", lts: false, security: false }, { name: "nodejs", version: "6.5.0", date: "2016-08-26", lts: false, security: false }, { name: "nodejs", version: "6.6.0", date: "2016-09-14", lts: false, security: false }, { name: "nodejs", version: "6.7.0", date: "2016-09-27", lts: false, security: true }, { name: "nodejs", version: "6.8.0", date: "2016-10-12", lts: false, security: false }, { name: "nodejs", version: "6.9.0", date: "2016-10-18", lts: "Boron", security: false }, { name: "nodejs", version: "6.10.0", date: "2017-02-21", lts: "Boron", security: false }, { name: "nodejs", version: "6.11.0", date: "2017-06-06", lts: "Boron", security: false }, { name: "nodejs", version: "6.12.0", date: "2017-11-06", lts: "Boron", security: false }, { name: "nodejs", version: "6.13.0", date: "2018-02-10", lts: "Boron", security: false }, { name: "nodejs", version: "6.14.0", date: "2018-03-28", lts: "Boron", security: true }, { name: "nodejs", version: "6.15.0", date: "2018-11-27", lts: "Boron", security: true }, { name: "nodejs", version: "6.16.0", date: "2018-12-26", lts: "Boron", security: false }, { name: "nodejs", version: "6.17.0", date: "2019-02-28", lts: "Boron", security: true }, { name: "nodejs", version: "7.0.0", date: "2016-10-25", lts: false, security: false }, { name: "nodejs", version: "7.1.0", date: "2016-11-08", lts: false, security: false }, { name: "nodejs", version: "7.2.0", date: "2016-11-22", lts: false, security: false }, { name: "nodejs", version: "7.3.0", date: "2016-12-20", lts: false, security: false }, { name: "nodejs", version: "7.4.0", date: "2017-01-04", lts: false, security: false }, { name: "nodejs", version: "7.5.0", date: "2017-01-31", lts: false, security: false }, { name: "nodejs", version: "7.6.0", date: "2017-02-21", lts: false, security: false }, { name: "nodejs", version: "7.7.0", date: "2017-02-28", lts: false, security: false }, { name: "nodejs", version: "7.8.0", date: "2017-03-29", lts: false, security: false }, { name: "nodejs", version: "7.9.0", date: "2017-04-11", lts: false, security: false }, { name: "nodejs", version: "7.10.0", date: "2017-05-02", lts: false, security: false }, { name: "nodejs", version: "8.0.0", date: "2017-05-30", lts: false, security: false }, { name: "nodejs", version: "8.1.0", date: "2017-06-08", lts: false, security: false }, { name: "nodejs", version: "8.2.0", date: "2017-07-19", lts: false, security: false }, { name: "nodejs", version: "8.3.0", date: "2017-08-08", lts: false, security: false }, { name: "nodejs", version: "8.4.0", date: "2017-08-15", lts: false, security: false }, { name: "nodejs", version: "8.5.0", date: "2017-09-12", lts: false, security: false }, { name: "nodejs", version: "8.6.0", date: "2017-09-26", lts: false, security: false }, { name: "nodejs", version: "8.7.0", date: "2017-10-11", lts: false, security: false }, { name: "nodejs", version: "8.8.0", date: "2017-10-24", lts: false, security: false }, { name: "nodejs", version: "8.9.0", date: "2017-10-31", lts: "Carbon", security: false }, { name: "nodejs", version: "8.10.0", date: "2018-03-06", lts: "Carbon", security: false }, { name: "nodejs", version: "8.11.0", date: "2018-03-28", lts: "Carbon", security: true }, { name: "nodejs", version: "8.12.0", date: "2018-09-10", lts: "Carbon", security: false }, { name: "nodejs", version: "8.13.0", date: "2018-11-20", lts: "Carbon", security: false }, { name: "nodejs", version: "8.14.0", date: "2018-11-27", lts: "Carbon", security: true }, { name: "nodejs", version: "8.15.0", date: "2018-12-26", lts: "Carbon", security: false }, { name: "nodejs", version: "8.16.0", date: "2019-04-16", lts: "Carbon", security: false }, { name: "nodejs", version: "8.17.0", date: "2019-12-17", lts: "Carbon", security: true }, { name: "nodejs", version: "9.0.0", date: "2017-10-31", lts: false, security: false }, { name: "nodejs", version: "9.1.0", date: "2017-11-07", lts: false, security: false }, { name: "nodejs", version: "9.2.0", date: "2017-11-14", lts: false, security: false }, { name: "nodejs", version: "9.3.0", date: "2017-12-12", lts: false, security: false }, { name: "nodejs", version: "9.4.0", date: "2018-01-10", lts: false, security: false }, { name: "nodejs", version: "9.5.0", date: "2018-01-31", lts: false, security: false }, { name: "nodejs", version: "9.6.0", date: "2018-02-21", lts: false, security: false }, { name: "nodejs", version: "9.7.0", date: "2018-03-01", lts: false, security: false }, { name: "nodejs", version: "9.8.0", date: "2018-03-07", lts: false, security: false }, { name: "nodejs", version: "9.9.0", date: "2018-03-21", lts: false, security: false }, { name: "nodejs", version: "9.10.0", date: "2018-03-28", lts: false, security: true }, { name: "nodejs", version: "9.11.0", date: "2018-04-04", lts: false, security: false }, { name: "nodejs", version: "10.0.0", date: "2018-04-24", lts: false, security: false }, { name: "nodejs", version: "10.1.0", date: "2018-05-08", lts: false, security: false }, { name: "nodejs", version: "10.2.0", date: "2018-05-23", lts: false, security: false }, { name: "nodejs", version: "10.3.0", date: "2018-05-29", lts: false, security: false }, { name: "nodejs", version: "10.4.0", date: "2018-06-06", lts: false, security: false }, { name: "nodejs", version: "10.5.0", date: "2018-06-20", lts: false, security: false }, { name: "nodejs", version: "10.6.0", date: "2018-07-04", lts: false, security: false }, { name: "nodejs", version: "10.7.0", date: "2018-07-18", lts: false, security: false }, { name: "nodejs", version: "10.8.0", date: "2018-08-01", lts: false, security: false }, { name: "nodejs", version: "10.9.0", date: "2018-08-15", lts: false, security: false }, { name: "nodejs", version: "10.10.0", date: "2018-09-06", lts: false, security: false }, { name: "nodejs", version: "10.11.0", date: "2018-09-19", lts: false, security: false }, { name: "nodejs", version: "10.12.0", date: "2018-10-10", lts: false, security: false }, { name: "nodejs", version: "10.13.0", date: "2018-10-30", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.14.0", date: "2018-11-27", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.15.0", date: "2018-12-26", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.16.0", date: "2019-05-28", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.17.0", date: "2019-10-22", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.18.0", date: "2019-12-17", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.19.0", date: "2020-02-05", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.20.0", date: "2020-03-26", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.21.0", date: "2020-06-02", lts: "Dubnium", security: true }, { name: "nodejs", version: "10.22.0", date: "2020-07-21", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.23.0", date: "2020-10-27", lts: "Dubnium", security: false }, { name: "nodejs", version: "10.24.0", date: "2021-02-23", lts: "Dubnium", security: true }, { name: "nodejs", version: "11.0.0", date: "2018-10-23", lts: false, security: false }, { name: "nodejs", version: "11.1.0", date: "2018-10-30", lts: false, security: false }, { name: "nodejs", version: "11.2.0", date: "2018-11-15", lts: false, security: false }, { name: "nodejs", version: "11.3.0", date: "2018-11-27", lts: false, security: true }, { name: "nodejs", version: "11.4.0", date: "2018-12-07", lts: false, security: false }, { name: "nodejs", version: "11.5.0", date: "2018-12-18", lts: false, security: false }, { name: "nodejs", version: "11.6.0", date: "2018-12-26", lts: false, security: false }, { name: "nodejs", version: "11.7.0", date: "2019-01-17", lts: false, security: false }, { name: "nodejs", version: "11.8.0", date: "2019-01-24", lts: false, security: false }, { name: "nodejs", version: "11.9.0", date: "2019-01-30", lts: false, security: false }, { name: "nodejs", version: "11.10.0", date: "2019-02-14", lts: false, security: false }, { name: "nodejs", version: "11.11.0", date: "2019-03-05", lts: false, security: false }, { name: "nodejs", version: "11.12.0", date: "2019-03-14", lts: false, security: false }, { name: "nodejs", version: "11.13.0", date: "2019-03-28", lts: false, security: false }, { name: "nodejs", version: "11.14.0", date: "2019-04-10", lts: false, security: false }, { name: "nodejs", version: "11.15.0", date: "2019-04-30", lts: false, security: false }, { name: "nodejs", version: "12.0.0", date: "2019-04-23", lts: false, security: false }, { name: "nodejs", version: "12.1.0", date: "2019-04-29", lts: false, security: false }, { name: "nodejs", version: "12.2.0", date: "2019-05-07", lts: false, security: false }, { name: "nodejs", version: "12.3.0", date: "2019-05-21", lts: false, security: false }, { name: "nodejs", version: "12.4.0", date: "2019-06-04", lts: false, security: false }, { name: "nodejs", version: "12.5.0", date: "2019-06-26", lts: false, security: false }, { name: "nodejs", version: "12.6.0", date: "2019-07-03", lts: false, security: false }, { name: "nodejs", version: "12.7.0", date: "2019-07-23", lts: false, security: false }, { name: "nodejs", version: "12.8.0", date: "2019-08-06", lts: false, security: false }, { name: "nodejs", version: "12.9.0", date: "2019-08-20", lts: false, security: false }, { name: "nodejs", version: "12.10.0", date: "2019-09-04", lts: false, security: false }, { name: "nodejs", version: "12.11.0", date: "2019-09-25", lts: false, security: false }, { name: "nodejs", version: "12.12.0", date: "2019-10-11", lts: false, security: false }, { name: "nodejs", version: "12.13.0", date: "2019-10-21", lts: "Erbium", security: false }, { name: "nodejs", version: "12.14.0", date: "2019-12-17", lts: "Erbium", security: true }, { name: "nodejs", version: "12.15.0", date: "2020-02-05", lts: "Erbium", security: true }, { name: "nodejs", version: "12.16.0", date: "2020-02-11", lts: "Erbium", security: false }, { name: "nodejs", version: "12.17.0", date: "2020-05-26", lts: "Erbium", security: false }, { name: "nodejs", version: "12.18.0", date: "2020-06-02", lts: "Erbium", security: true }, { name: "nodejs", version: "12.19.0", date: "2020-10-06", lts: "Erbium", security: false }, { name: "nodejs", version: "12.20.0", date: "2020-11-24", lts: "Erbium", security: false }, { name: "nodejs", version: "12.21.0", date: "2021-02-23", lts: "Erbium", security: true }, { name: "nodejs", version: "12.22.0", date: "2021-03-30", lts: "Erbium", security: false }, { name: "nodejs", version: "13.0.0", date: "2019-10-22", lts: false, security: false }, { name: "nodejs", version: "13.1.0", date: "2019-11-05", lts: false, security: false }, { name: "nodejs", version: "13.2.0", date: "2019-11-21", lts: false, security: false }, { name: "nodejs", version: "13.3.0", date: "2019-12-03", lts: false, security: false }, { name: "nodejs", version: "13.4.0", date: "2019-12-17", lts: false, security: true }, { name: "nodejs", version: "13.5.0", date: "2019-12-18", lts: false, security: false }, { name: "nodejs", version: "13.6.0", date: "2020-01-07", lts: false, security: false }, { name: "nodejs", version: "13.7.0", date: "2020-01-21", lts: false, security: false }, { name: "nodejs", version: "13.8.0", date: "2020-02-05", lts: false, security: true }, { name: "nodejs", version: "13.9.0", date: "2020-02-18", lts: false, security: false }, { name: "nodejs", version: "13.10.0", date: "2020-03-04", lts: false, security: false }, { name: "nodejs", version: "13.11.0", date: "2020-03-12", lts: false, security: false }, { name: "nodejs", version: "13.12.0", date: "2020-03-26", lts: false, security: false }, { name: "nodejs", version: "13.13.0", date: "2020-04-14", lts: false, security: false }, { name: "nodejs", version: "13.14.0", date: "2020-04-29", lts: false, security: false }, { name: "nodejs", version: "14.0.0", date: "2020-04-21", lts: false, security: false }, { name: "nodejs", version: "14.1.0", date: "2020-04-29", lts: false, security: false }, { name: "nodejs", version: "14.2.0", date: "2020-05-05", lts: false, security: false }, { name: "nodejs", version: "14.3.0", date: "2020-05-19", lts: false, security: false }, { name: "nodejs", version: "14.4.0", date: "2020-06-02", lts: false, security: true }, { name: "nodejs", version: "14.5.0", date: "2020-06-30", lts: false, security: false }, { name: "nodejs", version: "14.6.0", date: "2020-07-20", lts: false, security: false }, { name: "nodejs", version: "14.7.0", date: "2020-07-29", lts: false, security: false }, { name: "nodejs", version: "14.8.0", date: "2020-08-11", lts: false, security: false }, { name: "nodejs", version: "14.9.0", date: "2020-08-27", lts: false, security: false }, { name: "nodejs", version: "14.10.0", date: "2020-09-08", lts: false, security: false }, { name: "nodejs", version: "14.11.0", date: "2020-09-15", lts: false, security: true }, { name: "nodejs", version: "14.12.0", date: "2020-09-22", lts: false, security: false }, { name: "nodejs", version: "14.13.0", date: "2020-09-29", lts: false, security: false }, { name: "nodejs", version: "14.14.0", date: "2020-10-15", lts: false, security: false }, { name: "nodejs", version: "14.15.0", date: "2020-10-27", lts: "Fermium", security: false }, { name: "nodejs", version: "14.16.0", date: "2021-02-23", lts: "Fermium", security: true }, { name: "nodejs", version: "14.17.0", date: "2021-05-11", lts: "Fermium", security: false }, { name: "nodejs", version: "14.18.0", date: "2021-09-28", lts: "Fermium", security: false }, { name: "nodejs", version: "14.19.0", date: "2022-02-01", lts: "Fermium", security: false }, { name: "nodejs", version: "14.20.0", date: "2022-07-07", lts: "Fermium", security: true }, { name: "nodejs", version: "15.0.0", date: "2020-10-20", lts: false, security: false }, { name: "nodejs", version: "15.1.0", date: "2020-11-04", lts: false, security: false }, { name: "nodejs", version: "15.2.0", date: "2020-11-10", lts: false, security: false }, { name: "nodejs", version: "15.3.0", date: "2020-11-24", lts: false, security: false }, { name: "nodejs", version: "15.4.0", date: "2020-12-09", lts: false, security: false }, { name: "nodejs", version: "15.5.0", date: "2020-12-22", lts: false, security: false }, { name: "nodejs", version: "15.6.0", date: "2021-01-14", lts: false, security: false }, { name: "nodejs", version: "15.7.0", date: "2021-01-25", lts: false, security: false }, { name: "nodejs", version: "15.8.0", date: "2021-02-02", lts: false, security: false }, { name: "nodejs", version: "15.9.0", date: "2021-02-18", lts: false, security: false }, { name: "nodejs", version: "15.10.0", date: "2021-02-23", lts: false, security: true }, { name: "nodejs", version: "15.11.0", date: "2021-03-03", lts: false, security: false }, { name: "nodejs", version: "15.12.0", date: "2021-03-17", lts: false, security: false }, { name: "nodejs", version: "15.13.0", date: "2021-03-31", lts: false, security: false }, { name: "nodejs", version: "15.14.0", date: "2021-04-06", lts: false, security: false }, { name: "nodejs", version: "16.0.0", date: "2021-04-20", lts: false, security: false }, { name: "nodejs", version: "16.1.0", date: "2021-05-04", lts: false, security: false }, { name: "nodejs", version: "16.2.0", date: "2021-05-19", lts: false, security: false }, { name: "nodejs", version: "16.3.0", date: "2021-06-03", lts: false, security: false }, { name: "nodejs", version: "16.4.0", date: "2021-06-23", lts: false, security: false }, { name: "nodejs", version: "16.5.0", date: "2021-07-14", lts: false, security: false }, { name: "nodejs", version: "16.6.0", date: "2021-07-29", lts: false, security: true }, { name: "nodejs", version: "16.7.0", date: "2021-08-18", lts: false, security: false }, { name: "nodejs", version: "16.8.0", date: "2021-08-25", lts: false, security: false }, { name: "nodejs", version: "16.9.0", date: "2021-09-07", lts: false, security: false }, { name: "nodejs", version: "16.10.0", date: "2021-09-22", lts: false, security: false }, { name: "nodejs", version: "16.11.0", date: "2021-10-08", lts: false, security: false }, { name: "nodejs", version: "16.12.0", date: "2021-10-20", lts: false, security: false }, { name: "nodejs", version: "16.13.0", date: "2021-10-26", lts: "Gallium", security: false }, { name: "nodejs", version: "16.14.0", date: "2022-02-08", lts: "Gallium", security: false }, { name: "nodejs", version: "16.15.0", date: "2022-04-26", lts: "Gallium", security: false }, { name: "nodejs", version: "16.16.0", date: "2022-07-07", lts: "Gallium", security: true }, { name: "nodejs", version: "17.0.0", date: "2021-10-19", lts: false, security: false }, { name: "nodejs", version: "17.1.0", date: "2021-11-09", lts: false, security: false }, { name: "nodejs", version: "17.2.0", date: "2021-11-30", lts: false, security: false }, { name: "nodejs", version: "17.3.0", date: "2021-12-17", lts: false, security: false }, { name: "nodejs", version: "17.4.0", date: "2022-01-18", lts: false, security: false }, { name: "nodejs", version: "17.5.0", date: "2022-02-10", lts: false, security: false }, { name: "nodejs", version: "17.6.0", date: "2022-02-22", lts: false, security: false }, { name: "nodejs", version: "17.7.0", date: "2022-03-09", lts: false, security: false }, { name: "nodejs", version: "17.8.0", date: "2022-03-22", lts: false, security: false }, { name: "nodejs", version: "17.9.0", date: "2022-04-07", lts: false, security: false }, { name: "nodejs", version: "18.0.0", date: "2022-04-18", lts: false, security: false }, { name: "nodejs", version: "18.1.0", date: "2022-05-03", lts: false, security: false }, { name: "nodejs", version: "18.2.0", date: "2022-05-17", lts: false, security: false }, { name: "nodejs", version: "18.3.0", date: "2022-06-02", lts: false, security: false }, { name: "nodejs", version: "18.4.0", date: "2022-06-16", lts: false, security: false }, { name: "nodejs", version: "18.5.0", date: "2022-07-06", lts: false, security: true }];
  }
});
var require_browsers = __commonJS({
  "../../node_modules/caniuse-lite/data/browsers.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: "ie", B: "edge", C: "firefox", D: "chrome", E: "safari", F: "opera", G: "ios_saf", H: "op_mini", I: "android", J: "bb", K: "op_mob", L: "and_chr", M: "and_ff", N: "ie_mob", O: "and_uc", P: "samsung", Q: "and_qq", R: "baidu", S: "kaios" };
  }
});
var require_browsers2 = __commonJS({
  "../../node_modules/caniuse-lite/dist/unpacker/browsers.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports.browsers = require_browsers();
  }
});
var require_browserVersions = __commonJS({
  "../../node_modules/caniuse-lite/data/browserVersions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { "0": "29", "1": "30", "2": "31", "3": "32", "4": "33", "5": "34", "6": "35", "7": "36", "8": "37", "9": "38", A: "10", B: "11", C: "12", D: "7", E: "8", F: "9", G: "15", H: "105", I: "4", J: "6", K: "13", L: "14", M: "16", N: "17", O: "18", P: "79", Q: "80", R: "81", S: "83", T: "84", U: "85", V: "86", W: "87", X: "88", Y: "89", Z: "90", a: "91", b: "104", c: "64", d: "92", e: "93", f: "94", g: "95", h: "96", i: "97", j: "98", k: "99", l: "100", m: "101", n: "102", o: "103", p: "5", q: "19", r: "20", s: "21", t: "22", u: "23", v: "24", w: "25", x: "26", y: "27", z: "28", AB: "39", BB: "40", CB: "41", DB: "42", EB: "43", FB: "44", GB: "45", HB: "46", IB: "47", JB: "48", KB: "49", LB: "50", MB: "51", NB: "52", OB: "53", PB: "54", QB: "55", RB: "56", SB: "57", TB: "58", UB: "60", VB: "62", WB: "63", XB: "65", YB: "66", ZB: "67", aB: "68", bB: "69", cB: "70", dB: "71", eB: "72", fB: "73", gB: "74", hB: "75", iB: "76", jB: "77", kB: "78", lB: "11.1", mB: "12.1", nB: "16.0", oB: "3", pB: "59", qB: "61", rB: "82", sB: "106", tB: "107", uB: "3.2", vB: "10.1", wB: "13.1", xB: "15.2-15.3", yB: "15.4", zB: "15.5", "0B": "15.6", "1B": "16.1", "2B": "11.5", "3B": "4.2-4.3", "4B": "5.5", "5B": "2", "6B": "3.5", "7B": "3.6", "8B": "108", "9B": "109", AC: "3.1", BC: "5.1", CC: "6.1", DC: "7.1", EC: "9.1", FC: "14.1", GC: "15.1", HC: "TP", IC: "9.5-9.6", JC: "10.0-10.1", KC: "10.5", LC: "10.6", MC: "11.6", NC: "4.0-4.1", OC: "5.0-5.1", PC: "6.0-6.1", QC: "7.0-7.1", RC: "8.1-8.4", SC: "9.0-9.2", TC: "9.3", UC: "10.0-10.2", VC: "10.3", WC: "11.0-11.2", XC: "11.3-11.4", YC: "12.0-12.1", ZC: "12.2-12.5", aC: "13.0-13.1", bC: "13.2", cC: "13.3", dC: "13.4-13.7", eC: "14.0-14.4", fC: "14.5-14.8", gC: "15.0-15.1", hC: "all", iC: "2.1", jC: "2.2", kC: "2.3", lC: "4.1", mC: "4.4", nC: "4.4.3-4.4.4", oC: "13.4", pC: "5.0-5.4", qC: "6.2-6.4", rC: "7.2-7.4", sC: "8.2", tC: "9.2", uC: "11.1-11.2", vC: "12.0", wC: "13.0", xC: "14.0", yC: "15.0", zC: "17.0", "0C": "18.0", "1C": "13.18", "2C": "2.5" };
  }
});
var require_browserVersions2 = __commonJS({
  "../../node_modules/caniuse-lite/dist/unpacker/browserVersions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports.browserVersions = require_browserVersions();
  }
});
var require_agents = __commonJS({
  "../../node_modules/caniuse-lite/data/agents.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { J: 0.0131217, D: 621152e-8, E: 0.0360158, F: 0.086438, A: 720317e-8, B: 0.475409, "4B": 9298e-6 }, B: "ms", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "4B", "J", "D", "E", "F", "A", "B", "", "", ""], E: "IE", F: { "4B": 962323200, J: 998870400, D: 1161129600, E: 1237420800, F: 1300060800, A: 1346716800, B: 1381968e3 } }, B: { A: { C: 7858e-6, K: 4267e-6, L: 4268e-6, G: 3929e-6, M: 3702e-6, N: 7858e-6, O: 0.023574, P: 0, Q: 4298e-6, R: 944e-5, S: 4043e-6, T: 7858e-6, U: 7858e-6, V: 3929e-6, W: 3929e-6, X: 4318e-6, Y: 3929e-6, Z: 4118e-6, a: 3939e-6, d: 7858e-6, e: 4118e-6, f: 3939e-6, g: 3801e-6, h: 3929e-6, i: 3855e-6, j: 3929e-6, k: 3929e-6, l: 7858e-6, m: 0.019645, n: 0.015716, o: 0.055006, b: 0.652214, H: 3.4143 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "C", "K", "L", "G", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "b", "H", "", "", ""], E: "Edge", F: { C: 1438128e3, K: 1447286400, L: 1470096e3, G: 1491868800, M: 1508198400, N: 1525046400, O: 1542067200, P: 1579046400, Q: 1581033600, R: 1586736e3, S: 1590019200, T: 1594857600, U: 1598486400, V: 1602201600, W: 1605830400, X: 161136e4, Y: 1614816e3, Z: 1618358400, a: 1622073600, d: 1626912e3, e: 1630627200, f: 1632441600, g: 1634774400, h: 1637539200, i: 1641427200, j: 1643932800, k: 1646265600, l: 1649635200, m: 1651190400, n: 1653955200, o: 1655942400, b: 1659657600, H: 1661990400 }, D: { C: "ms", K: "ms", L: "ms", G: "ms", M: "ms", N: "ms", O: "ms" } }, C: { A: { "0": 8834e-6, "1": 8322e-6, "2": 8928e-6, "3": 4471e-6, "4": 9284e-6, "5": 4707e-6, "6": 9076e-6, "7": 7858e-6, "8": 4783e-6, "9": 3929e-6, "5B": 4118e-6, oB: 4271e-6, I: 0.019645, p: 4879e-6, J: 0.020136, D: 5725e-6, E: 4525e-6, F: 533e-5, A: 4283e-6, B: 7858e-6, C: 4471e-6, K: 4486e-6, L: 453e-5, G: 8322e-6, M: 4417e-6, N: 4425e-6, O: 4161e-6, q: 4443e-6, r: 4283e-6, s: 8322e-6, t: 0.013698, u: 4161e-6, v: 8786e-6, w: 4118e-6, x: 4317e-6, y: 4393e-6, z: 4418e-6, AB: 4783e-6, BB: 487e-5, CB: 5029e-6, DB: 47e-4, EB: 0.011787, FB: 7858e-6, GB: 3867e-6, HB: 4525e-6, IB: 4293e-6, JB: 3702e-6, KB: 4538e-6, LB: 8282e-6, MB: 0.011601, NB: 0.055006, OB: 0.011601, PB: 3929e-6, QB: 7858e-6, RB: 3929e-6, SB: 0.011601, TB: 3939e-6, pB: 3855e-6, UB: 3929e-6, qB: 4356e-6, VB: 4425e-6, WB: 8322e-6, c: 415e-5, XB: 4267e-6, YB: 3801e-6, ZB: 4267e-6, aB: 7858e-6, bB: 415e-5, cB: 4293e-6, dB: 4425e-6, eB: 3929e-6, fB: 415e-5, gB: 415e-5, hB: 4318e-6, iB: 4356e-6, jB: 3929e-6, kB: 0.03929, P: 7858e-6, Q: 7858e-6, R: 7858e-6, rB: 7858e-6, S: 7858e-6, T: 3929e-6, U: 4268e-6, V: 3801e-6, W: 0.011787, X: 7858e-6, Y: 3929e-6, Z: 3929e-6, a: 0.070722, d: 3801e-6, e: 3855e-6, f: 0.019645, g: 7858e-6, h: 3929e-6, i: 7858e-6, j: 7858e-6, k: 0.011787, l: 0.011787, m: 0.011787, n: 0.051077, o: 0.141444, b: 1.60303, H: 0.542202, sB: 7858e-6, tB: 0, "6B": 8786e-6, "7B": 487e-5 }, B: "moz", C: ["5B", "oB", "6B", "7B", "I", "p", "J", "D", "E", "F", "A", "B", "C", "K", "L", "G", "M", "N", "O", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "pB", "UB", "qB", "VB", "WB", "c", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "P", "Q", "R", "rB", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "b", "H", "sB", "tB", ""], E: "Firefox", F: { "0": 1398729600, "1": 1402358400, "2": 1405987200, "3": 1409616e3, "4": 1413244800, "5": 1417392e3, "6": 1421107200, "7": 1424736e3, "8": 1428278400, "9": 1431475200, "5B": 1161648e3, oB: 1213660800, "6B": 124632e4, "7B": 1264032e3, I: 1300752e3, p: 1308614400, J: 1313452800, D: 1317081600, E: 1317081600, F: 1320710400, A: 1324339200, B: 1327968e3, C: 1331596800, K: 1335225600, L: 1338854400, G: 1342483200, M: 1346112e3, N: 1349740800, O: 1353628800, q: 1357603200, r: 1361232e3, s: 1364860800, t: 1368489600, u: 1372118400, v: 1375747200, w: 1379376e3, x: 1386633600, y: 1391472e3, z: 1395100800, AB: 1435881600, BB: 1439251200, CB: 144288e4, DB: 1446508800, EB: 1450137600, FB: 1453852800, GB: 1457395200, HB: 1461628800, IB: 1465257600, JB: 1470096e3, KB: 1474329600, LB: 1479168e3, MB: 1485216e3, NB: 1488844800, OB: 149256e4, PB: 1497312e3, QB: 1502150400, RB: 1506556800, SB: 1510617600, TB: 1516665600, pB: 1520985600, UB: 1525824e3, qB: 1529971200, VB: 1536105600, WB: 1540252800, c: 1544486400, XB: 154872e4, YB: 1552953600, ZB: 1558396800, aB: 1562630400, bB: 1567468800, cB: 1571788800, dB: 1575331200, eB: 1578355200, fB: 1581379200, gB: 1583798400, hB: 1586304e3, iB: 1588636800, jB: 1591056e3, kB: 1593475200, P: 1595894400, Q: 1598313600, R: 1600732800, rB: 1603152e3, S: 1605571200, T: 1607990400, U: 1611619200, V: 1614038400, W: 1616457600, X: 1618790400, Y: 1622505600, Z: 1626134400, a: 1628553600, d: 1630972800, e: 1633392e3, f: 1635811200, g: 1638835200, h: 1641859200, i: 1644364800, j: 1646697600, k: 1649116800, l: 1651536e3, m: 1653955200, n: 1656374400, o: 1658793600, b: 1661212800, H: 1663632e3, sB: null, tB: null } }, D: { A: { "0": 4538e-6, "1": 8322e-6, "2": 8596e-6, "3": 4566e-6, "4": 4118e-6, "5": 7858e-6, "6": 3702e-6, "7": 4335e-6, "8": 4464e-6, "9": 0.015716, I: 4706e-6, p: 4879e-6, J: 4879e-6, D: 5591e-6, E: 5591e-6, F: 5591e-6, A: 4534e-6, B: 4464e-6, C: 0.010424, K: 83e-4, L: 4706e-6, G: 0.015087, M: 4393e-6, N: 4393e-6, O: 8652e-6, q: 8322e-6, r: 4393e-6, s: 4317e-6, t: 3929e-6, u: 8786e-6, v: 3939e-6, w: 4461e-6, x: 4141e-6, y: 4326e-6, z: 47e-4, AB: 3867e-6, BB: 0.015716, CB: 7858e-6, DB: 3929e-6, EB: 7858e-6, FB: 7858e-6, GB: 7858e-6, HB: 3867e-6, IB: 7858e-6, JB: 0.019645, KB: 0.047148, LB: 3867e-6, MB: 3929e-6, NB: 3929e-6, OB: 7858e-6, PB: 3867e-6, QB: 3929e-6, RB: 0.03929, SB: 3929e-6, TB: 3702e-6, pB: 3702e-6, UB: 0.011787, qB: 7858e-6, VB: 3929e-6, WB: 0.011787, c: 3929e-6, XB: 0.011787, YB: 0.027503, ZB: 0.011787, aB: 7858e-6, bB: 0.047148, cB: 0.023574, dB: 0.015716, eB: 0.023574, fB: 7858e-6, gB: 0.031432, hB: 0.047148, iB: 0.03929, jB: 0.015716, kB: 0.035361, P: 0.113941, Q: 0.043219, R: 0.03929, S: 0.082509, T: 0.086438, U: 0.121799, V: 0.11787, W: 0.121799, X: 0.023574, Y: 0.043219, Z: 0.023574, a: 0.062864, d: 0.051077, e: 0.047148, f: 0.03929, g: 0.023574, h: 0.082509, i: 0.066793, j: 0.062864, k: 0.066793, l: 0.113941, m: 0.110012, n: 0.208237, o: 0.664001, b: 4.8091, H: 16.604, sB: 0.294675, tB: 0.019645, "8B": 0.011787, "9B": 0 }, B: "webkit", C: ["", "", "", "", "I", "p", "J", "D", "E", "F", "A", "B", "C", "K", "L", "G", "M", "N", "O", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "pB", "UB", "qB", "VB", "WB", "c", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "b", "H", "sB", "tB", "8B", "9B"], E: "Chrome", F: { "0": 1374105600, "1": 1376956800, "2": 1384214400, "3": 1389657600, "4": 1392940800, "5": 1397001600, "6": 1400544e3, "7": 1405468800, "8": 1409011200, "9": 141264e4, I: 1264377600, p: 1274745600, J: 1283385600, D: 1287619200, E: 1291248e3, F: 1296777600, A: 1299542400, B: 1303862400, C: 1307404800, K: 1312243200, L: 1316131200, G: 1316131200, M: 1319500800, N: 1323734400, O: 1328659200, q: 1332892800, r: 133704e4, s: 1340668800, t: 1343692800, u: 1348531200, v: 1352246400, w: 1357862400, x: 1361404800, y: 1364428800, z: 1369094400, AB: 1416268800, BB: 1421798400, CB: 1425513600, DB: 1429401600, EB: 143208e4, FB: 1437523200, GB: 1441152e3, HB: 1444780800, IB: 1449014400, JB: 1453248e3, KB: 1456963200, LB: 1460592e3, MB: 1464134400, NB: 1469059200, OB: 1472601600, PB: 1476230400, QB: 1480550400, RB: 1485302400, SB: 1489017600, TB: 149256e4, pB: 1496707200, UB: 1500940800, qB: 1504569600, VB: 1508198400, WB: 1512518400, c: 1516752e3, XB: 1520294400, YB: 1523923200, ZB: 1527552e3, aB: 1532390400, bB: 1536019200, cB: 1539648e3, dB: 1543968e3, eB: 154872e4, fB: 1552348800, gB: 1555977600, hB: 1559606400, iB: 1564444800, jB: 1568073600, kB: 1571702400, P: 1575936e3, Q: 1580860800, R: 1586304e3, S: 1589846400, T: 1594684800, U: 1598313600, V: 1601942400, W: 1605571200, X: 1611014400, Y: 1614556800, Z: 1618272e3, a: 1621987200, d: 1626739200, e: 1630368e3, f: 1632268800, g: 1634601600, h: 1637020800, i: 1641340800, j: 1643673600, k: 1646092800, l: 1648512e3, m: 1650931200, n: 1653350400, o: 1655769600, b: 1659398400, H: 1661817600, sB: 1664236800, tB: null, "8B": null, "9B": null } }, E: { A: { I: 0, p: 8322e-6, J: 4656e-6, D: 4465e-6, E: 3929e-6, F: 3929e-6, A: 4425e-6, B: 4318e-6, C: 3801e-6, K: 0.027503, L: 0.11787, G: 0.027503, AC: 0, uB: 8692e-6, BC: 0.011787, CC: 456e-5, DC: 4283e-6, EC: 0.015716, vB: 7858e-6, lB: 0.019645, mB: 0.03929, wB: 0.259314, FC: 0.306462, GC: 0.051077, xB: 0.051077, yB: 0.141444, zB: 0.31432, "0B": 1.77984, nB: 0.184663, "1B": 0.011787, HC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AC", "uB", "I", "p", "BC", "J", "CC", "D", "DC", "E", "F", "EC", "A", "vB", "B", "lB", "C", "mB", "K", "wB", "L", "FC", "G", "GC", "xB", "yB", "zB", "0B", "nB", "1B", "HC", ""], E: "Safari", F: { AC: 1205798400, uB: 1226534400, I: 1244419200, p: 1275868800, BC: 131112e4, J: 1343174400, CC: 13824e5, D: 13824e5, DC: 1410998400, E: 1413417600, F: 1443657600, EC: 1458518400, A: 1474329600, vB: 1490572800, B: 1505779200, lB: 1522281600, C: 1537142400, mB: 1553472e3, K: 1568851200, wB: 1585008e3, L: 1600214400, FC: 1619395200, G: 1632096e3, GC: 1635292800, xB: 1639353600, yB: 1647216e3, zB: 1652745600, "0B": 1658275200, nB: 1662940800, "1B": null, HC: null } }, F: { A: { "0": 4879e-6, "1": 4879e-6, "2": 3929e-6, "3": 5152e-6, "4": 5014e-6, "5": 9758e-6, "6": 4879e-6, "7": 3929e-6, "8": 4283e-6, "9": 4367e-6, F: 82e-4, B: 0.016581, C: 4317e-6, G: 685e-5, M: 685e-5, N: 685e-5, O: 5014e-6, q: 6015e-6, r: 4879e-6, s: 6597e-6, t: 6597e-6, u: 0.013434, v: 6702e-6, w: 6015e-6, x: 5595e-6, y: 4393e-6, z: 7858e-6, AB: 4534e-6, BB: 7858e-6, CB: 4227e-6, DB: 4418e-6, EB: 4161e-6, FB: 4227e-6, GB: 4725e-6, HB: 0.011787, IB: 8942e-6, JB: 4707e-6, KB: 4827e-6, LB: 4707e-6, MB: 4707e-6, NB: 4326e-6, OB: 8922e-6, PB: 0.014349, QB: 4425e-6, RB: 472e-5, SB: 4425e-6, TB: 4425e-6, UB: 472e-5, VB: 4532e-6, WB: 4566e-6, c: 0.02283, XB: 867e-5, YB: 4656e-6, ZB: 4642e-6, aB: 3929e-6, bB: 944e-5, cB: 4293e-6, dB: 3929e-6, eB: 4298e-6, fB: 0.096692, gB: 4201e-6, hB: 4141e-6, iB: 4257e-6, jB: 3939e-6, kB: 8236e-6, P: 3855e-6, Q: 3939e-6, R: 8514e-6, rB: 3939e-6, S: 3939e-6, T: 3702e-6, U: 0.011787, V: 3855e-6, W: 3855e-6, X: 3929e-6, Y: 0.07858, Z: 0.887954, a: 0.035361, IC: 685e-5, JC: 0, KC: 8392e-6, LC: 4706e-6, lB: 6229e-6, "2B": 4879e-6, MC: 8786e-6, mB: 472e-5 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "F", "IC", "JC", "KC", "LC", "B", "lB", "2B", "MC", "C", "mB", "G", "M", "N", "O", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "c", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "P", "Q", "R", "rB", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "", "", ""], E: "Opera", F: { "0": 1430179200, "1": 1433808e3, "2": 1438646400, "3": 1442448e3, "4": 1445904e3, "5": 1449100800, "6": 1454371200, "7": 1457308800, "8": 146232e4, "9": 1465344e3, F: 1150761600, IC: 1223424e3, JC: 1251763200, KC: 1267488e3, LC: 1277942400, B: 1292457600, lB: 1302566400, "2B": 1309219200, MC: 1323129600, C: 1323129600, mB: 1352073600, G: 1372723200, M: 1377561600, N: 1381104e3, O: 1386288e3, q: 1390867200, r: 1393891200, s: 1399334400, t: 1401753600, u: 1405987200, v: 1409616e3, w: 1413331200, x: 1417132800, y: 1422316800, z: 1425945600, AB: 1470096e3, BB: 1474329600, CB: 1477267200, DB: 1481587200, EB: 1486425600, FB: 1490054400, GB: 1494374400, HB: 1498003200, IB: 1502236800, JB: 1506470400, KB: 1510099200, LB: 1515024e3, MB: 1517961600, NB: 1521676800, OB: 1525910400, PB: 1530144e3, QB: 1534982400, RB: 1537833600, SB: 1543363200, TB: 1548201600, UB: 1554768e3, VB: 1561593600, WB: 1566259200, c: 1570406400, XB: 1573689600, YB: 1578441600, ZB: 1583971200, aB: 1587513600, bB: 1592956800, cB: 1595894400, dB: 1600128e3, eB: 1603238400, fB: 161352e4, gB: 1612224e3, hB: 1616544e3, iB: 1619568e3, jB: 1623715200, kB: 1627948800, P: 1631577600, Q: 1633392e3, R: 1635984e3, rB: 1638403200, S: 1642550400, T: 1644969600, U: 1647993600, V: 1650412800, W: 1652745600, X: 1654646400, Y: 1657152e3, Z: 1660780800, a: 1663113600 }, D: { F: "o", B: "o", C: "o", IC: "o", JC: "o", KC: "o", LC: "o", lB: "o", "2B": "o", MC: "o", mB: "o" } }, G: { A: { E: 0, uB: 0, NC: 0, "3B": 30538e-7, OC: 458069e-8, PC: 458069e-8, QC: 0.015269, RC: 916139e-8, SC: 0.0198497, TC: 0.0641297, UC: 458069e-8, VC: 0.074818, WC: 0.030538, XC: 0.0244304, YC: 0.0290111, ZC: 0.427531, aC: 0.0198497, bC: 0.0106883, cC: 0.04428, dC: 0.140475, eC: 0.432112, fC: 0.916139, gC: 0.230562, xB: 0.322175, yB: 0.426004, zB: 1.04134, "0B": 8.71401, nB: 1.9132, "1B": 0.0244304 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "uB", "NC", "3B", "OC", "PC", "QC", "E", "RC", "SC", "TC", "UC", "VC", "WC", "XC", "YC", "ZC", "aC", "bC", "cC", "dC", "eC", "fC", "gC", "xB", "yB", "zB", "0B", "nB", "1B", "", ""], E: "Safari on iOS", F: { uB: 1270252800, NC: 1283904e3, "3B": 1299628800, OC: 1331078400, PC: 1359331200, QC: 1394409600, E: 1410912e3, RC: 1413763200, SC: 1442361600, TC: 1458518400, UC: 1473724800, VC: 1490572800, WC: 1505779200, XC: 1522281600, YC: 1537142400, ZC: 1553472e3, aC: 1568851200, bC: 1572220800, cC: 1580169600, dC: 1585008e3, eC: 1600214400, fC: 1619395200, gC: 1632096e3, xB: 1639353600, yB: 1647216e3, zB: 1652659200, "0B": 1658275200, nB: 1662940800, "1B": null } }, H: { A: { hC: 1.06906 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "hC", "", "", ""], E: "Opera Mini", F: { hC: 1426464e3 } }, I: { A: { oB: 0, I: 0.024284, H: 0, iC: 0, jC: 6071e-6, kC: 0, lC: 0.024284, "3B": 0.078923, mC: 0, nC: 0.309621 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "iC", "jC", "kC", "oB", "I", "lC", "3B", "mC", "nC", "H", "", "", ""], E: "Android Browser", F: { iC: 1256515200, jC: 1274313600, kC: 1291593600, oB: 1298332800, I: 1318896e3, lC: 1341792e3, "3B": 1374624e3, mC: 1386547200, nC: 1401667200, H: 1662336e3 } }, J: { A: { D: 0, A: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "D", "A", "", "", ""], E: "Blackberry Browser", F: { D: 1325376e3, A: 1359504e3 } }, K: { A: { A: 0, B: 0, C: 0, c: 0.0111391, lB: 0, "2B": 0, mB: 0 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "lB", "2B", "C", "mB", "c", "", "", ""], E: "Opera Mobile", F: { A: 1287100800, B: 1300752e3, lB: 1314835200, "2B": 1318291200, C: 1330300800, mB: 1349740800, c: 1613433600 }, D: { c: "webkit" } }, L: { A: { H: 41.2317 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "H", "", "", ""], E: "Chrome for Android", F: { H: 1662336e3 } }, M: { A: { b: 0.297479 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "b", "", "", ""], E: "Firefox for Android", F: { b: 1661212800 } }, N: { A: { A: 0.0115934, B: 0.022664 }, B: "ms", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "", "", ""], E: "IE Mobile", F: { A: 1340150400, B: 1353456e3 } }, O: { A: { oC: 0.710307 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "oC", "", "", ""], E: "UC Browser for Android", F: { oC: 1634688e3 }, D: { oC: "webkit" } }, P: { A: { I: 0.166875, pC: 0.0103543, qC: 0.010304, rC: 0.062578, sC: 0.0103584, tC: 0.0104443, vB: 0.0105043, uC: 0.031289, vC: 0.0208593, wC: 0.062578, xC: 0.062578, yC: 0.062578, nB: 0.114726, zC: 0.239882, "0C": 2.02336 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "I", "pC", "qC", "rC", "sC", "tC", "vB", "uC", "vC", "wC", "xC", "yC", "nB", "zC", "0C", "", "", ""], E: "Samsung Internet", F: { I: 1461024e3, pC: 1481846400, qC: 1509408e3, rC: 1528329600, sC: 1546128e3, tC: 1554163200, vB: 1567900800, uC: 1582588800, vC: 1593475200, wC: 1605657600, xC: 1618531200, yC: 1629072e3, nB: 1640736e3, zC: 1651708800, "0C": 1659657600 } }, Q: { A: { wB: 0.139633 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "wB", "", "", ""], E: "QQ Browser", F: { wB: 1663718400 } }, R: { A: { "1C": 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1C", "", "", ""], E: "Baidu Browser", F: { "1C": 1663027200 } }, S: { A: { "2C": 0.024284 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2C", "", "", ""], E: "KaiOS Browser", F: { "2C": 1527811200 } } };
  }
});
var require_agents2 = __commonJS({
  "../../node_modules/caniuse-lite/dist/unpacker/agents.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var agentsData = require_agents();
    function unpackBrowserVersions(versionsData) {
      return Object.keys(versionsData).reduce((usage, version) => {
        usage[versions[version]] = versionsData[version];
        return usage;
      }, {});
    }
    module.exports.agents = Object.keys(agentsData).reduce((map, key) => {
      let versionsData = agentsData[key];
      map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {
        if (entry === "A") {
          data.usage_global = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "C") {
          data.versions = versionsData[entry].reduce((list2, version) => {
            if (version === "") {
              list2.push(null);
            } else {
              list2.push(versions[version]);
            }
            return list2;
          }, []);
        } else if (entry === "D") {
          data.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "E") {
          data.browser = versionsData[entry];
        } else if (entry === "F") {
          data.release_date = Object.keys(versionsData[entry]).reduce(
            (map2, key2) => {
              map2[versions[key2]] = versionsData[entry][key2];
              return map2;
            },
            {}
          );
        } else {
          data.prefix = versionsData[entry];
        }
        return data;
      }, {});
      return map;
    }, {});
  }
});
var require_release_schedule = __commonJS({
  "../../node_modules/node-releases/data/release-schedule/release-schedule.json"(exports, module) {
    module.exports = { "v0.8": { start: "2012-06-25", end: "2014-07-31" }, "v0.10": { start: "2013-03-11", end: "2016-10-31" }, "v0.12": { start: "2015-02-06", end: "2016-12-31" }, v4: { start: "2015-09-08", lts: "2015-10-12", maintenance: "2017-04-01", end: "2018-04-30", codename: "Argon" }, v5: { start: "2015-10-29", maintenance: "2016-04-30", end: "2016-06-30" }, v6: { start: "2016-04-26", lts: "2016-10-18", maintenance: "2018-04-30", end: "2019-04-30", codename: "Boron" }, v7: { start: "2016-10-25", maintenance: "2017-04-30", end: "2017-06-30" }, v8: { start: "2017-05-30", lts: "2017-10-31", maintenance: "2019-01-01", end: "2019-12-31", codename: "Carbon" }, v9: { start: "2017-10-01", maintenance: "2018-04-01", end: "2018-06-30" }, v10: { start: "2018-04-24", lts: "2018-10-30", maintenance: "2020-05-19", end: "2021-04-30", codename: "Dubnium" }, v11: { start: "2018-10-23", maintenance: "2019-04-22", end: "2019-06-01" }, v12: { start: "2019-04-23", lts: "2019-10-21", maintenance: "2020-11-30", end: "2022-04-30", codename: "Erbium" }, v13: { start: "2019-10-22", maintenance: "2020-04-01", end: "2020-06-01" }, v14: { start: "2020-04-21", lts: "2020-10-27", maintenance: "2021-10-19", end: "2023-04-30", codename: "Fermium" }, v15: { start: "2020-10-20", maintenance: "2021-04-01", end: "2021-06-01" }, v16: { start: "2021-04-20", lts: "2021-10-26", maintenance: "2022-10-18", end: "2023-09-11", codename: "Gallium" }, v17: { start: "2021-10-19", maintenance: "2022-04-01", end: "2022-06-01" }, v18: { start: "2022-04-19", lts: "2022-10-25", maintenance: "2023-10-18", end: "2025-04-30", codename: "" }, v19: { start: "2022-10-18", maintenance: "2023-04-01", end: "2023-06-01" }, v20: { start: "2023-04-18", lts: "2023-10-24", maintenance: "2024-10-22", end: "2026-04-30", codename: "" } };
  }
});
var require_versions = __commonJS({
  "../../node_modules/electron-to-chromium/versions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = {
      "0.20": "39",
      "0.21": "41",
      "0.22": "41",
      "0.23": "41",
      "0.24": "41",
      "0.25": "42",
      "0.26": "42",
      "0.27": "43",
      "0.28": "43",
      "0.29": "43",
      "0.30": "44",
      "0.31": "45",
      "0.32": "45",
      "0.33": "45",
      "0.34": "45",
      "0.35": "45",
      "0.36": "47",
      "0.37": "49",
      "1.0": "49",
      "1.1": "50",
      "1.2": "51",
      "1.3": "52",
      "1.4": "53",
      "1.5": "54",
      "1.6": "56",
      "1.7": "58",
      "1.8": "59",
      "2.0": "61",
      "2.1": "61",
      "3.0": "66",
      "3.1": "66",
      "4.0": "69",
      "4.1": "69",
      "4.2": "69",
      "5.0": "73",
      "6.0": "76",
      "6.1": "76",
      "7.0": "78",
      "7.1": "78",
      "7.2": "78",
      "7.3": "78",
      "8.0": "80",
      "8.1": "80",
      "8.2": "80",
      "8.3": "80",
      "8.4": "80",
      "8.5": "80",
      "9.0": "83",
      "9.1": "83",
      "9.2": "83",
      "9.3": "83",
      "9.4": "83",
      "10.0": "85",
      "10.1": "85",
      "10.2": "85",
      "10.3": "85",
      "10.4": "85",
      "11.0": "87",
      "11.1": "87",
      "11.2": "87",
      "11.3": "87",
      "11.4": "87",
      "11.5": "87",
      "12.0": "89",
      "12.1": "89",
      "12.2": "89",
      "13.0": "91",
      "13.1": "91",
      "13.2": "91",
      "13.3": "91",
      "13.4": "91",
      "13.5": "91",
      "13.6": "91",
      "14.0": "93",
      "14.1": "93",
      "14.2": "93",
      "15.0": "94",
      "15.1": "94",
      "15.2": "94",
      "15.3": "94",
      "15.4": "94",
      "15.5": "94",
      "16.0": "96",
      "16.1": "96",
      "16.2": "96",
      "17.0": "98",
      "17.1": "98",
      "17.2": "98",
      "17.3": "98",
      "17.4": "98",
      "18.0": "100",
      "18.1": "100",
      "18.2": "100",
      "18.3": "100",
      "19.0": "102",
      "19.1": "102",
      "20.0": "104",
      "20.1": "104",
      "20.2": "104",
      "20.3": "104",
      "21.0": "106",
      "22.0": "107"
    };
  }
});
var require_error = __commonJS({
  "../../node_modules/browserslist/error.js"(exports, module) {
    init_process();
    init_buffer();
    function BrowserslistError(message) {
      this.name = "BrowserslistError";
      this.message = message;
      this.browserslist = true;
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, BrowserslistError);
      }
    }
    BrowserslistError.prototype = Error.prototype;
    module.exports = BrowserslistError;
  }
});
var require_parse = __commonJS({
  "../../node_modules/browserslist/parse.js"(exports, module) {
    init_process();
    init_buffer();
    var AND_REGEXP = /^\s+and\s+(.*)/i;
    var OR_REGEXP = /^(?:,\s*|\s+or\s+)(.*)/i;
    function flatten(array) {
      if (!Array.isArray(array))
        return [array];
      return array.reduce(function(a, b) {
        return a.concat(flatten(b));
      }, []);
    }
    function find(string, predicate) {
      for (var n = 1, max = string.length; n <= max; n++) {
        var parsed = string.substr(-n, n);
        if (predicate(parsed, n, max)) {
          return string.slice(0, -n);
        }
      }
      return "";
    }
    function matchQuery(all, query) {
      var node = { query };
      if (query.indexOf("not ") === 0) {
        node.not = true;
        query = query.slice(4);
      }
      for (var name in all) {
        var type = all[name];
        var match = query.match(type.regexp);
        if (match) {
          node.type = name;
          for (var i = 0; i < type.matches.length; i++) {
            node[type.matches[i]] = match[i + 1];
          }
          return node;
        }
      }
      node.type = "unknown";
      return node;
    }
    function matchBlock(all, string, qs) {
      var node;
      return find(string, function(parsed, n, max) {
        if (AND_REGEXP.test(parsed)) {
          node = matchQuery(all, parsed.match(AND_REGEXP)[1]);
          node.compose = "and";
          qs.unshift(node);
          return true;
        } else if (OR_REGEXP.test(parsed)) {
          node = matchQuery(all, parsed.match(OR_REGEXP)[1]);
          node.compose = "or";
          qs.unshift(node);
          return true;
        } else if (n === max) {
          node = matchQuery(all, parsed.trim());
          node.compose = "or";
          qs.unshift(node);
          return true;
        }
        return false;
      });
    }
    module.exports = function parse2(all, queries) {
      if (!Array.isArray(queries))
        queries = [queries];
      return flatten(
        queries.map(function(block) {
          var qs = [];
          do {
            block = matchBlock(all, block, qs);
          } while (block);
          return qs;
        })
      );
    };
  }
});
var require_browser2 = __commonJS({
  "../../node_modules/browserslist/browser.js"(exports, module) {
    init_process();
    init_buffer();
    var BrowserslistError = require_error();
    function noop() {
    }
    module.exports = {
      loadQueries: function loadQueries() {
        throw new BrowserslistError(
          "Sharable configs are not supported in client-side build of Browserslist"
        );
      },
      getStat: function getStat(opts) {
        return opts.stats;
      },
      loadConfig: function loadConfig(opts) {
        if (opts.config) {
          throw new BrowserslistError(
            "Browserslist config are not supported in client-side build"
          );
        }
      },
      loadCountry: function loadCountry() {
        throw new BrowserslistError(
          "Country statistics are not supported in client-side build of Browserslist"
        );
      },
      loadFeature: function loadFeature() {
        throw new BrowserslistError(
          "Supports queries are not available in client-side build of Browserslist"
        );
      },
      currentNode: function currentNode(resolve, context) {
        return resolve(["maintained node versions"], context)[0];
      },
      parseConfig: noop,
      readConfig: noop,
      findConfig: noop,
      clearCaches: noop,
      oldDataWarning: noop
    };
  }
});
var require_browserslist = __commonJS({
  "../../node_modules/browserslist/index.js"(exports, module) {
    init_process();
    init_buffer();
    var jsReleases = require_envs();
    var agents = require_agents2().agents;
    var jsEOL = require_release_schedule();
    var path = require_path_browserify();
    var e2c = require_versions();
    var BrowserslistError = require_error();
    var parse2 = require_parse();
    var env = require_browser2();
    var YEAR = 365.259641 * 24 * 60 * 60 * 1e3;
    var ANDROID_EVERGREEN_FIRST = 37;
    function isVersionsMatch(versionA, versionB) {
      return (versionA + ".").indexOf(versionB + ".") === 0;
    }
    function isEolReleased(name) {
      var version = name.slice(1);
      return browserslist.nodeVersions.some(function(i) {
        return isVersionsMatch(i, version);
      });
    }
    function normalize(versions) {
      return versions.filter(function(version) {
        return typeof version === "string";
      });
    }
    function normalizeElectron(version) {
      var versionToUse = version;
      if (version.split(".").length === 3) {
        versionToUse = version.split(".").slice(0, -1).join(".");
      }
      return versionToUse;
    }
    function nameMapper(name) {
      return function mapName(version) {
        return name + " " + version;
      };
    }
    function getMajor(version) {
      return parseInt(version.split(".")[0]);
    }
    function getMajorVersions(released, number) {
      if (released.length === 0)
        return [];
      var majorVersions = uniq(released.map(getMajor));
      var minimum = majorVersions[majorVersions.length - number];
      if (!minimum) {
        return released;
      }
      var selected = [];
      for (var i = released.length - 1; i >= 0; i--) {
        if (minimum > getMajor(released[i]))
          break;
        selected.unshift(released[i]);
      }
      return selected;
    }
    function uniq(array) {
      var filtered = [];
      for (var i = 0; i < array.length; i++) {
        if (filtered.indexOf(array[i]) === -1)
          filtered.push(array[i]);
      }
      return filtered;
    }
    function fillUsage(result, name, data) {
      for (var i in data) {
        result[name + " " + i] = data[i];
      }
    }
    function generateFilter(sign, version) {
      version = parseFloat(version);
      if (sign === ">") {
        return function(v) {
          return parseFloat(v) > version;
        };
      } else if (sign === ">=") {
        return function(v) {
          return parseFloat(v) >= version;
        };
      } else if (sign === "<") {
        return function(v) {
          return parseFloat(v) < version;
        };
      } else {
        return function(v) {
          return parseFloat(v) <= version;
        };
      }
    }
    function generateSemverFilter(sign, version) {
      version = version.split(".").map(parseSimpleInt);
      version[1] = version[1] || 0;
      version[2] = version[2] || 0;
      if (sign === ">") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(v, version) > 0;
        };
      } else if (sign === ">=") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(v, version) >= 0;
        };
      } else if (sign === "<") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(version, v) > 0;
        };
      } else {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(version, v) >= 0;
        };
      }
    }
    function parseSimpleInt(x) {
      return parseInt(x);
    }
    function compare(a, b) {
      if (a < b)
        return -1;
      if (a > b)
        return 1;
      return 0;
    }
    function compareSemver(a, b) {
      return compare(parseInt(a[0]), parseInt(b[0])) || compare(parseInt(a[1] || "0"), parseInt(b[1] || "0")) || compare(parseInt(a[2] || "0"), parseInt(b[2] || "0"));
    }
    function semverFilterLoose(operator, range) {
      range = range.split(".").map(parseSimpleInt);
      if (typeof range[1] === "undefined") {
        range[1] = "x";
      }
      switch (operator) {
        case "<=":
          return function(version) {
            version = version.split(".").map(parseSimpleInt);
            return compareSemverLoose(version, range) <= 0;
          };
        case ">=":
        default:
          return function(version) {
            version = version.split(".").map(parseSimpleInt);
            return compareSemverLoose(version, range) >= 0;
          };
      }
    }
    function compareSemverLoose(version, range) {
      if (version[0] !== range[0]) {
        return version[0] < range[0] ? -1 : 1;
      }
      if (range[1] === "x") {
        return 0;
      }
      if (version[1] !== range[1]) {
        return version[1] < range[1] ? -1 : 1;
      }
      return 0;
    }
    function resolveVersion(data, version) {
      if (data.versions.indexOf(version) !== -1) {
        return version;
      } else if (browserslist.versionAliases[data.name][version]) {
        return browserslist.versionAliases[data.name][version];
      } else {
        return false;
      }
    }
    function normalizeVersion(data, version) {
      var resolved = resolveVersion(data, version);
      if (resolved) {
        return resolved;
      } else if (data.versions.length === 1) {
        return data.versions[0];
      } else {
        return false;
      }
    }
    function filterByYear(since, context) {
      since = since / 1e3;
      return Object.keys(agents).reduce(function(selected, name) {
        var data = byName(name, context);
        if (!data)
          return selected;
        var versions = Object.keys(data.releaseDate).filter(function(v) {
          var date = data.releaseDate[v];
          return date !== null && date >= since;
        });
        return selected.concat(versions.map(nameMapper(data.name)));
      }, []);
    }
    function cloneData(data) {
      return {
        name: data.name,
        versions: data.versions,
        released: data.released,
        releaseDate: data.releaseDate
      };
    }
    function mapVersions(data, map) {
      data.versions = data.versions.map(function(i2) {
        return map[i2] || i2;
      });
      data.released = data.released.map(function(i2) {
        return map[i2] || i2;
      });
      var fixedDate = {};
      for (var i in data.releaseDate) {
        fixedDate[map[i] || i] = data.releaseDate[i];
      }
      data.releaseDate = fixedDate;
      return data;
    }
    function byName(name, context) {
      name = name.toLowerCase();
      name = browserslist.aliases[name] || name;
      if (context.mobileToDesktop && browserslist.desktopNames[name]) {
        var desktop = browserslist.data[browserslist.desktopNames[name]];
        if (name === "android") {
          return normalizeAndroidData(cloneData(browserslist.data[name]), desktop);
        } else {
          var cloned = cloneData(desktop);
          cloned.name = name;
          if (name === "op_mob") {
            cloned = mapVersions(cloned, { "10.0-10.1": "10" });
          }
          return cloned;
        }
      }
      return browserslist.data[name];
    }
    function normalizeAndroidVersions(androidVersions, chromeVersions) {
      var firstEvergreen = ANDROID_EVERGREEN_FIRST;
      var last = chromeVersions[chromeVersions.length - 1];
      return androidVersions.filter(function(version) {
        return /^(?:[2-4]\.|[34]$)/.test(version);
      }).concat(chromeVersions.slice(firstEvergreen - last - 1));
    }
    function normalizeAndroidData(android, chrome) {
      android.released = normalizeAndroidVersions(android.released, chrome.released);
      android.versions = normalizeAndroidVersions(android.versions, chrome.versions);
      return android;
    }
    function checkName(name, context) {
      var data = byName(name, context);
      if (!data)
        throw new BrowserslistError("Unknown browser " + name);
      return data;
    }
    function unknownQuery(query) {
      return new BrowserslistError(
        "Unknown browser query `" + query + "`. Maybe you are using old Browserslist or made typo in query."
      );
    }
    function filterAndroid(list2, versions, context) {
      if (context.mobileToDesktop)
        return list2;
      var released = browserslist.data.android.released;
      var last = released[released.length - 1];
      var diff = last - ANDROID_EVERGREEN_FIRST - versions;
      if (diff > 0) {
        return list2.slice(-1);
      } else {
        return list2.slice(diff - 1);
      }
    }
    function resolve(queries, context) {
      return parse2(QUERIES, queries).reduce(function(result, node, index) {
        if (node.not && index === 0) {
          throw new BrowserslistError(
            "Write any browsers query (for instance, `defaults`) before `" + node.query + "`"
          );
        }
        var type = QUERIES[node.type];
        var array = type.select.call(browserslist, context, node).map(function(j) {
          var parts = j.split(" ");
          if (parts[1] === "0") {
            return parts[0] + " " + byName(parts[0], context).versions[0];
          } else {
            return j;
          }
        });
        if (node.compose === "and") {
          if (node.not) {
            return result.filter(function(j) {
              return array.indexOf(j) === -1;
            });
          } else {
            return result.filter(function(j) {
              return array.indexOf(j) !== -1;
            });
          }
        } else {
          if (node.not) {
            var filter = {};
            array.forEach(function(j) {
              filter[j] = true;
            });
            return result.filter(function(j) {
              return !filter[j];
            });
          }
          return result.concat(array);
        }
      }, []);
    }
    function prepareOpts(opts) {
      if (typeof opts === "undefined")
        opts = {};
      if (typeof opts.path === "undefined") {
        opts.path = path.resolve ? path.resolve(".") : ".";
      }
      return opts;
    }
    function prepareQueries(queries, opts) {
      if (typeof queries === "undefined" || queries === null) {
        var config = browserslist.loadConfig(opts);
        if (config) {
          queries = config;
        } else {
          queries = browserslist.defaults;
        }
      }
      return queries;
    }
    function checkQueries(queries) {
      if (!(typeof queries === "string" || Array.isArray(queries))) {
        throw new BrowserslistError(
          "Browser queries must be an array or string. Got " + typeof queries + "."
        );
      }
    }
    var cache = {};
    function browserslist(queries, opts) {
      opts = prepareOpts(opts);
      queries = prepareQueries(queries, opts);
      checkQueries(queries);
      var context = {
        ignoreUnknownVersions: opts.ignoreUnknownVersions,
        dangerousExtend: opts.dangerousExtend,
        mobileToDesktop: opts.mobileToDesktop,
        path: opts.path,
        env: opts.env
      };
      env.oldDataWarning(browserslist.data);
      var stats = env.getStat(opts, browserslist.data);
      if (stats) {
        context.customUsage = {};
        for (var browser in stats) {
          fillUsage(context.customUsage, browser, stats[browser]);
        }
      }
      var cacheKey = JSON.stringify([queries, context]);
      if (cache[cacheKey])
        return cache[cacheKey];
      var result = uniq(resolve(queries, context)).sort(function(name1, name2) {
        name1 = name1.split(" ");
        name2 = name2.split(" ");
        if (name1[0] === name2[0]) {
          var version1 = name1[1].split("-")[0];
          var version2 = name2[1].split("-")[0];
          return compareSemver(version2.split("."), version1.split("."));
        } else {
          return compare(name1[0], name2[0]);
        }
      });
      if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
        cache[cacheKey] = result;
      }
      return result;
    }
    browserslist.parse = function(queries, opts) {
      opts = prepareOpts(opts);
      queries = prepareQueries(queries, opts);
      checkQueries(queries);
      return parse2(QUERIES, queries);
    };
    browserslist.cache = {};
    browserslist.data = {};
    browserslist.usage = {
      global: {},
      custom: null
    };
    browserslist.defaults = ["> 0.5%", "last 2 versions", "Firefox ESR", "not dead"];
    browserslist.aliases = {
      fx: "firefox",
      ff: "firefox",
      ios: "ios_saf",
      explorer: "ie",
      blackberry: "bb",
      explorermobile: "ie_mob",
      operamini: "op_mini",
      operamobile: "op_mob",
      chromeandroid: "and_chr",
      firefoxandroid: "and_ff",
      ucandroid: "and_uc",
      qqandroid: "and_qq"
    };
    browserslist.desktopNames = {
      and_chr: "chrome",
      and_ff: "firefox",
      ie_mob: "ie",
      op_mob: "opera",
      android: "chrome"
    };
    browserslist.versionAliases = {};
    browserslist.clearCaches = env.clearCaches;
    browserslist.parseConfig = env.parseConfig;
    browserslist.readConfig = env.readConfig;
    browserslist.findConfig = env.findConfig;
    browserslist.loadConfig = env.loadConfig;
    browserslist.coverage = function(browsers, stats) {
      var data;
      if (typeof stats === "undefined") {
        data = browserslist.usage.global;
      } else if (stats === "my stats") {
        var opts = {};
        opts.path = path.resolve ? path.resolve(".") : ".";
        var customStats = env.getStat(opts);
        if (!customStats) {
          throw new BrowserslistError("Custom usage statistics was not provided");
        }
        data = {};
        for (var browser in customStats) {
          fillUsage(data, browser, customStats[browser]);
        }
      } else if (typeof stats === "string") {
        if (stats.length > 2) {
          stats = stats.toLowerCase();
        } else {
          stats = stats.toUpperCase();
        }
        env.loadCountry(browserslist.usage, stats, browserslist.data);
        data = browserslist.usage[stats];
      } else {
        if ("dataByBrowser" in stats) {
          stats = stats.dataByBrowser;
        }
        data = {};
        for (var name in stats) {
          for (var version in stats[name]) {
            data[name + " " + version] = stats[name][version];
          }
        }
      }
      return browsers.reduce(function(all, i) {
        var usage = data[i];
        if (usage === void 0) {
          usage = data[i.replace(/ \S+$/, " 0")];
        }
        return all + (usage || 0);
      }, 0);
    };
    function nodeQuery(context, node) {
      var matched = browserslist.nodeVersions.filter(function(i) {
        return isVersionsMatch(i, node.version);
      });
      if (matched.length === 0) {
        if (context.ignoreUnknownVersions) {
          return [];
        } else {
          throw new BrowserslistError(
            "Unknown version " + node.version + " of Node.js"
          );
        }
      }
      return ["node " + matched[matched.length - 1]];
    }
    function sinceQuery(context, node) {
      var year = parseInt(node.year);
      var month = parseInt(node.month || "01") - 1;
      var day = parseInt(node.day || "01");
      return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context);
    }
    function coverQuery(context, node) {
      var coverage = parseFloat(node.coverage);
      var usage = browserslist.usage.global;
      if (node.place) {
        if (node.place.match(/^my\s+stats$/i)) {
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          usage = context.customUsage;
        } else {
          var place;
          if (node.place.length === 2) {
            place = node.place.toUpperCase();
          } else {
            place = node.place.toLowerCase();
          }
          env.loadCountry(browserslist.usage, place, browserslist.data);
          usage = browserslist.usage[place];
        }
      }
      var versions = Object.keys(usage).sort(function(a, b) {
        return usage[b] - usage[a];
      });
      var coveraged = 0;
      var result = [];
      var version;
      for (var i = 0; i < versions.length; i++) {
        version = versions[i];
        if (usage[version] === 0)
          break;
        coveraged += usage[version];
        result.push(version);
        if (coveraged >= coverage)
          break;
      }
      return result;
    }
    var QUERIES = {
      last_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list2 = getMajorVersions(data.released, node.versions);
            list2 = list2.map(nameMapper(data.name));
            if (data.name === "android") {
              list2 = filterAndroid(list2, node.versions, context);
            }
            return selected.concat(list2);
          }, []);
        }
      },
      last_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list2 = data.released.slice(-node.versions);
            list2 = list2.map(nameMapper(data.name));
            if (data.name === "android") {
              list2 = filterAndroid(list2, node.versions, context);
            }
            return selected.concat(list2);
          }, []);
        }
      },
      last_electron_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
        select: function(context, node) {
          var validVersions = getMajorVersions(Object.keys(e2c), node.versions);
          return validVersions.map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      last_node_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+node\s+major\s+versions?$/i,
        select: function(context, node) {
          return getMajorVersions(browserslist.nodeVersions, node.versions).map(
            function(version) {
              return "node " + version;
            }
          );
        }
      },
      last_browser_major_versions: {
        matches: ["versions", "browser"],
        regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var validVersions = getMajorVersions(data.released, node.versions);
          var list2 = validVersions.map(nameMapper(data.name));
          if (data.name === "android") {
            list2 = filterAndroid(list2, node.versions, context);
          }
          return list2;
        }
      },
      last_electron_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(e2c).slice(-node.versions).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      last_node_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+node\s+versions?$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.slice(-node.versions).map(function(version) {
            return "node " + version;
          });
        }
      },
      last_browser_versions: {
        matches: ["versions", "browser"],
        regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var list2 = data.released.slice(-node.versions).map(nameMapper(data.name));
          if (data.name === "android") {
            list2 = filterAndroid(list2, node.versions, context);
          }
          return list2;
        }
      },
      unreleased_versions: {
        matches: [],
        regexp: /^unreleased\s+versions$/i,
        select: function(context) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list2 = data.versions.filter(function(v) {
              return data.released.indexOf(v) === -1;
            });
            list2 = list2.map(nameMapper(data.name));
            return selected.concat(list2);
          }, []);
        }
      },
      unreleased_electron_versions: {
        matches: [],
        regexp: /^unreleased\s+electron\s+versions?$/i,
        select: function() {
          return [];
        }
      },
      unreleased_browser_versions: {
        matches: ["browser"],
        regexp: /^unreleased\s+(\w+)\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          return data.versions.filter(function(v) {
            return data.released.indexOf(v) === -1;
          }).map(nameMapper(data.name));
        }
      },
      last_years: {
        matches: ["years"],
        regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
        select: function(context, node) {
          return filterByYear(Date.now() - YEAR * node.years, context);
        }
      },
      since_y: {
        matches: ["year"],
        regexp: /^since (\d+)$/i,
        select: sinceQuery
      },
      since_y_m: {
        matches: ["year", "month"],
        regexp: /^since (\d+)-(\d+)$/i,
        select: sinceQuery
      },
      since_y_m_d: {
        matches: ["year", "month", "day"],
        regexp: /^since (\d+)-(\d+)-(\d+)$/i,
        select: sinceQuery
      },
      popularity: {
        matches: ["sign", "popularity"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var usage = browserslist.usage.global;
          return Object.keys(usage).reduce(function(result, version) {
            if (node.sign === ">") {
              if (usage[version] > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (usage[version] < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (usage[version] <= popularity) {
                result.push(version);
              }
            } else if (usage[version] >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_my_stats: {
        matches: ["sign", "popularity"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          var usage = context.customUsage;
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_config_stats: {
        matches: ["sign", "popularity", "config"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var stats = env.loadStat(context, node.config, browserslist.data);
          if (stats) {
            context.customUsage = {};
            for (var browser in stats) {
              fillUsage(context.customUsage, browser, stats[browser]);
            }
          }
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          var usage = context.customUsage;
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_place: {
        matches: ["sign", "popularity", "place"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var place = node.place;
          if (place.length === 2) {
            place = place.toUpperCase();
          } else {
            place = place.toLowerCase();
          }
          env.loadCountry(browserslist.usage, place, browserslist.data);
          var usage = browserslist.usage[place];
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      cover: {
        matches: ["coverage"],
        regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/i,
        select: coverQuery
      },
      cover_in: {
        matches: ["coverage", "place"],
        regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/i,
        select: coverQuery
      },
      supports: {
        matches: ["feature"],
        regexp: /^supports\s+([\w-]+)$/,
        select: function(context, node) {
          env.loadFeature(browserslist.cache, node.feature);
          var features = browserslist.cache[node.feature];
          return Object.keys(features).reduce(function(result, version) {
            var flags = features[version];
            if (flags.indexOf("y") >= 0 || flags.indexOf("a") >= 0) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      electron_range: {
        matches: ["from", "to"],
        regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          var fromToUse = normalizeElectron(node.from);
          var toToUse = normalizeElectron(node.to);
          var from = parseFloat(node.from);
          var to = parseFloat(node.to);
          if (!e2c[fromToUse]) {
            throw new BrowserslistError("Unknown version " + from + " of electron");
          }
          if (!e2c[toToUse]) {
            throw new BrowserslistError("Unknown version " + to + " of electron");
          }
          return Object.keys(e2c).filter(function(i) {
            var parsed = parseFloat(i);
            return parsed >= from && parsed <= to;
          }).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      node_range: {
        matches: ["from", "to"],
        regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.filter(semverFilterLoose(">=", node.from)).filter(semverFilterLoose("<=", node.to)).map(function(v) {
            return "node " + v;
          });
        }
      },
      browser_range: {
        matches: ["browser", "from", "to"],
        regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var from = parseFloat(normalizeVersion(data, node.from) || node.from);
          var to = parseFloat(normalizeVersion(data, node.to) || node.to);
          function filter(v) {
            var parsed = parseFloat(v);
            return parsed >= from && parsed <= to;
          }
          return data.released.filter(filter).map(nameMapper(data.name));
        }
      },
      electron_ray: {
        matches: ["sign", "version"],
        regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
        select: function(context, node) {
          var versionToUse = normalizeElectron(node.version);
          return Object.keys(e2c).filter(generateFilter(node.sign, versionToUse)).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      node_ray: {
        matches: ["sign", "version"],
        regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.filter(generateSemverFilter(node.sign, node.version)).map(function(v) {
            return "node " + v;
          });
        }
      },
      browser_ray: {
        matches: ["browser", "sign", "version"],
        regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
        select: function(context, node) {
          var version = node.version;
          var data = checkName(node.browser, context);
          var alias = browserslist.versionAliases[data.name][version];
          if (alias)
            version = alias;
          return data.released.filter(generateFilter(node.sign, version)).map(function(v) {
            return data.name + " " + v;
          });
        }
      },
      firefox_esr: {
        matches: [],
        regexp: /^(firefox|ff|fx)\s+esr$/i,
        select: function() {
          return ["firefox 102"];
        }
      },
      opera_mini_all: {
        matches: [],
        regexp: /(operamini|op_mini)\s+all/i,
        select: function() {
          return ["op_mini all"];
        }
      },
      electron_version: {
        matches: ["version"],
        regexp: /^electron\s+([\d.]+)$/i,
        select: function(context, node) {
          var versionToUse = normalizeElectron(node.version);
          var chrome = e2c[versionToUse];
          if (!chrome) {
            throw new BrowserslistError(
              "Unknown version " + node.version + " of electron"
            );
          }
          return ["chrome " + chrome];
        }
      },
      node_major_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+)$/i,
        select: nodeQuery
      },
      node_minor_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+\.\d+)$/i,
        select: nodeQuery
      },
      node_patch_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+\.\d+\.\d+)$/i,
        select: nodeQuery
      },
      current_node: {
        matches: [],
        regexp: /^current\s+node$/i,
        select: function(context) {
          return [env.currentNode(resolve, context)];
        }
      },
      maintained_node: {
        matches: [],
        regexp: /^maintained\s+node\s+versions$/i,
        select: function(context) {
          var now = Date.now();
          var queries = Object.keys(jsEOL).filter(function(key) {
            return now < Date.parse(jsEOL[key].end) && now > Date.parse(jsEOL[key].start) && isEolReleased(key);
          }).map(function(key) {
            return "node " + key.slice(1);
          });
          return resolve(queries, context);
        }
      },
      phantomjs_1_9: {
        matches: [],
        regexp: /^phantomjs\s+1.9$/i,
        select: function() {
          return ["safari 5"];
        }
      },
      phantomjs_2_1: {
        matches: [],
        regexp: /^phantomjs\s+2.1$/i,
        select: function() {
          return ["safari 6"];
        }
      },
      browser_version: {
        matches: ["browser", "version"],
        regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
        select: function(context, node) {
          var version = node.version;
          if (/^tp$/i.test(version))
            version = "TP";
          var data = checkName(node.browser, context);
          var alias = normalizeVersion(data, version);
          if (alias) {
            version = alias;
          } else {
            if (version.indexOf(".") === -1) {
              alias = version + ".0";
            } else {
              alias = version.replace(/\.0$/, "");
            }
            alias = normalizeVersion(data, alias);
            if (alias) {
              version = alias;
            } else if (context.ignoreUnknownVersions) {
              return [];
            } else {
              throw new BrowserslistError(
                "Unknown version " + version + " of " + node.browser
              );
            }
          }
          return [data.name + " " + version];
        }
      },
      browserslist_config: {
        matches: [],
        regexp: /^browserslist config$/i,
        select: function(context) {
          return browserslist(void 0, context);
        }
      },
      extends: {
        matches: ["config"],
        regexp: /^extends (.+)$/i,
        select: function(context, node) {
          return resolve(env.loadQueries(context, node.config), context);
        }
      },
      defaults: {
        matches: [],
        regexp: /^defaults$/i,
        select: function(context) {
          return resolve(browserslist.defaults, context);
        }
      },
      dead: {
        matches: [],
        regexp: /^dead$/i,
        select: function(context) {
          var dead = [
            "Baidu >= 0",
            "ie <= 11",
            "ie_mob <= 11",
            "bb <= 10",
            "op_mob <= 12.1",
            "samsung 4"
          ];
          return resolve(dead, context);
        }
      },
      unknown: {
        matches: [],
        regexp: /^(\w+)$/i,
        select: function(context, node) {
          if (byName(node.query, context)) {
            throw new BrowserslistError(
              "Specify versions in Browserslist query for browser " + node.query
            );
          } else {
            throw unknownQuery(node.query);
          }
        }
      }
    };
    (function() {
      for (var name in agents) {
        var browser = agents[name];
        browserslist.data[name] = {
          name,
          versions: normalize(agents[name].versions),
          released: normalize(agents[name].versions.slice(0, -3)),
          releaseDate: agents[name].release_date
        };
        fillUsage(browserslist.usage.global, name, browser.usage_global);
        browserslist.versionAliases[name] = {};
        for (var i = 0; i < browser.versions.length; i++) {
          var full = browser.versions[i];
          if (!full)
            continue;
          if (full.indexOf("-") !== -1) {
            var interval = full.split("-");
            for (var j = 0; j < interval.length; j++) {
              browserslist.versionAliases[name][interval[j]] = full;
            }
          }
        }
      }
      browserslist.versionAliases.op_mob["59"] = "58";
      browserslist.nodeVersions = jsReleases.map(function(release) {
        return release.version;
      });
    })();
    module.exports = browserslist;
  }
});
var require_statuses = __commonJS({
  "../../node_modules/caniuse-lite/dist/lib/statuses.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = {
      1: "ls",
      2: "rec",
      3: "pr",
      4: "cr",
      5: "wd",
      6: "other",
      7: "unoff"
    };
  }
});
var require_supported = __commonJS({
  "../../node_modules/caniuse-lite/dist/lib/supported.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = {
      y: 1 << 0,
      n: 1 << 1,
      a: 1 << 2,
      p: 1 << 3,
      u: 1 << 4,
      x: 1 << 5,
      d: 1 << 6
    };
  }
});
var require_feature = __commonJS({
  "../../node_modules/caniuse-lite/dist/unpacker/feature.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var statuses = require_statuses();
    var supported = require_supported();
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var MATH2LOG = Math.log(2);
    function unpackSupport(cipher) {
      let stats = Object.keys(supported).reduce((list2, support) => {
        if (cipher & supported[support])
          list2.push(support);
        return list2;
      }, []);
      let notes = cipher >> 7;
      let notesArray = [];
      while (notes) {
        let note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
        notesArray.unshift(`#${note}`);
        notes -= Math.pow(2, note - 1);
      }
      return stats.concat(notesArray).join(" ");
    }
    function unpackFeature(packed) {
      let unpacked = { status: statuses[packed.B], title: packed.C };
      unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {
        let browser = packed.A[key];
        browserStats[browsers[key]] = Object.keys(browser).reduce(
          (stats, support) => {
            let packedVersions = browser[support].split(" ");
            let unpacked2 = unpackSupport(support);
            packedVersions.forEach((v) => stats[versions[v]] = unpacked2);
            return stats;
          },
          {}
        );
        return browserStats;
      }, {});
      return unpacked;
    }
    module.exports = unpackFeature;
    module.exports.default = unpackFeature;
  }
});
var require_aac = __commonJS({
  "../../node_modules/caniuse-lite/data/features/aac.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B", "132": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F", "16": "A B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "132": "b" }, N: { "1": "A", "2": "B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "132": "2C" } }, B: 6, C: "AAC audio file format" };
  }
});
var require_abortcontroller = __commonJS({
  "../../node_modules/caniuse-lite/data/features/abortcontroller.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G" }, C: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB 6B 7B" }, D: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB", "130": "C lB" }, F: { "1": "OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "AbortController & AbortSignal" };
  }
});
var require_ac3_ec3 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ac3-ec3.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O", "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC", "132": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D", "132": "A" }, K: { "2": "A B C c lB 2B", "132": "mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "AC-3 (Dolby Digital) and EC-3 (Dolby Digital Plus) codecs" };
  }
});
var require_accelerometer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/accelerometer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "194": "TB pB UB qB VB WB c XB YB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "Accelerometer" };
  }
});
var require_addeventlistener = __commonJS({
  "../../node_modules/caniuse-lite/data/features/addeventlistener.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "130": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "257": "5B oB I p J 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "EventTarget.addEventListener()" };
  }
});
var require_alternate_stylesheet = __commonJS({
  "../../node_modules/caniuse-lite/data/features/alternate-stylesheet.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "2": "J D 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "F B C IC JC KC LC lB 2B MC mB", "16": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "16": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "2": "c", "16": "A B C lB 2B mB" }, L: { "16": "H" }, M: { "16": "b" }, N: { "16": "A B" }, O: { "16": "oC" }, P: { "16": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "16": "1C" }, S: { "1": "2C" } }, B: 1, C: "Alternate stylesheet" };
  }
});
var require_ambient_light = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ambient-light.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K", "132": "L G M N O", "322": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B", "132": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB", "194": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "322": "TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB IC JC KC LC lB 2B MC mB", "322": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "132": "2C" } }, B: 4, C: "Ambient Light Sensor" };
  }
});
var require_apng = __commonJS({
  "../../node_modules/caniuse-lite/data/features/apng.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B" }, D: { "1": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB" }, E: { "1": "E F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC DC" }, F: { "1": "B C HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "0 1 2 3 4 5 6 7 8 9 F G M N O q r s t u v w x y z AB BB CB DB EB FB GB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 7, C: "Animated PNG (APNG)" };
  }
});
var require_array_find_index = __commonJS({
  "../../node_modules/caniuse-lite/data/features/array-find-index.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v 6B 7B" }, D: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB" }, E: { "1": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC" }, F: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "16": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Array.prototype.findIndex" };
  }
});
var require_array_find = __commonJS({
  "../../node_modules/caniuse-lite/data/features/array-find.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "16": "C K L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v 6B 7B" }, D: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB" }, E: { "1": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC" }, F: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "16": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Array.prototype.find" };
  }
});
var require_array_flat = __commonJS({
  "../../node_modules/caniuse-lite/data/features/array-flat.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB 6B 7B" }, D: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB" }, E: { "1": "C K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB lB" }, F: { "1": "RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB IC JC KC LC lB 2B MC mB" }, G: { "1": "YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "flat & flatMap array methods" };
  }
});
var require_array_includes = __commonJS({
  "../../node_modules/caniuse-lite/data/features/array-includes.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 6B 7B" }, D: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Array.prototype.includes" };
  }
});
var require_arrow_functions = __commonJS({
  "../../node_modules/caniuse-lite/data/features/arrow-functions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B" }, D: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Arrow functions" };
  }
});
var require_asmjs = __commonJS({
  "../../node_modules/caniuse-lite/data/features/asmjs.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O", "132": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "322": "C" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B" }, D: { "2": "I p J D E F A B C K L G M N O q r s t u v w x y", "132": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "132": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "132": "c" }, L: { "132": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "132": "oC" }, P: { "2": "I", "132": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "132": "wB" }, R: { "132": "1C" }, S: { "1": "2C" } }, B: 6, C: "asm.js" };
  }
});
var require_async_clipboard = __commonJS({
  "../../node_modules/caniuse-lite/data/features/async-clipboard.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 6B 7B", "132": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "66": "TB pB UB qB" }, E: { "1": "L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC", "260": "eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "260": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "260": "c" }, L: { "1": "H" }, M: { "132": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC", "260": "tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Asynchronous Clipboard API" };
  }
});
var require_async_functions = __commonJS({
  "../../node_modules/caniuse-lite/data/features/async-functions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K", "194": "L" }, C: { "1": "NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 6B 7B" }, D: { "1": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC", "514": "vB" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC", "514": "VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "Async functions" };
  }
});
var require_atob_btoa = __commonJS({
  "../../node_modules/caniuse-lite/data/features/atob-btoa.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "2": "F IC JC", "16": "KC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "16": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Base64 encoding and decoding" };
  }
});
var require_audio_api = __commonJS({
  "../../node_modules/caniuse-lite/data/features/audio-api.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v 6B 7B" }, D: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K", "33": "0 1 2 3 4 L G M N O q r s t u v w x y z" }, E: { "1": "G FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "33": "J D E F A B C K L CC DC EC vB lB mB wB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "G M N O q r s" }, G: { "1": "fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Web Audio API" };
  }
});
var require_audio = __commonJS({
  "../../node_modules/caniuse-lite/data/features/audio.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "132": "I p J D E F A B C K L G M N O q 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F", "4": "IC JC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "2": "iC jC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Audio element" };
  }
});
var require_audiotracks = __commonJS({
  "../../node_modules/caniuse-lite/data/features/audiotracks.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O", "322": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB", "322": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC" }, F: { "2": "0 1 2 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "322": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "322": "H" }, M: { "2": "b" }, N: { "1": "A B" }, O: { "322": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "322": "wB" }, R: { "322": "1C" }, S: { "194": "2C" } }, B: 1, C: "Audio Tracks" };
  }
});
var require_autofocus = __commonJS({
  "../../node_modules/caniuse-lite/data/features/autofocus.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Autofocus attribute" };
  }
});
var require_auxclick = __commonJS({
  "../../node_modules/caniuse-lite/data/features/auxclick.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 6B 7B", "129": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Auxclick" };
  }
});
var require_av1 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/av1.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N", "194": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB 6B 7B", "66": "QB RB SB TB pB UB qB VB WB c", "260": "XB", "516": "YB" }, D: { "1": "cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB", "66": "ZB aB bB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1090": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "AV1 video format" };
  }
});
var require_avif = __commonJS({
  "../../node_modules/caniuse-lite/data/features/avif.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB 6B 7B", "194": "jB kB P Q R rB S T U V W X Y Z a d", "257": "e f g h i j k l m n o b H sB tB" }, D: { "1": "U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB", "516": "1B HC" }, F: { "1": "dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB IC JC KC LC lB 2B MC mB" }, G: { "1": "1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B", "257": "nB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "AVIF image format" };
  }
});
var require_background_attachment = __commonJS({
  "../../node_modules/caniuse-lite/data/features/background-attachment.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "132": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "132": "5B oB I p J D E F A B C K L G M N O q r s t u v 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F A B C BC CC DC EC vB lB mB yB zB 0B nB 1B HC", "132": "I K AC uB wB", "2050": "L G FC GC xB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "132": "F IC JC" }, G: { "2": "uB NC 3B", "772": "E OC PC QC RC SC TC UC VC WC XC YC ZC", "2050": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC mC nC", "132": "lC 3B" }, J: { "260": "D A" }, K: { "1": "B C lB 2B mB", "2": "c", "132": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "2": "I", "1028": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS background-attachment" };
  }
});
var require_background_clip_text = __commonJS({
  "../../node_modules/caniuse-lite/data/features/background-clip-text.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O", "33": "C K L P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 6B 7B" }, D: { "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "L G FC GC xB yB zB 0B nB 1B HC", "16": "AC uB", "33": "I p J D E F A B C K BC CC DC EC vB lB mB wB" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC", "33": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC" }, H: { "2": "hC" }, I: { "16": "oB iC jC kC", "33": "I H lC 3B mC nC" }, J: { "33": "D A" }, K: { "16": "A B C lB 2B mB", "33": "c" }, L: { "33": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "33": "oC" }, P: { "33": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "33": "wB" }, R: { "33": "1C" }, S: { "1": "2C" } }, B: 7, C: "Background-clip: text" };
  }
});
var require_background_img_opts = __commonJS({
  "../../node_modules/caniuse-lite/data/features/background-img-opts.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B", "36": "7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "516": "I p J D E F A B C K L" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "772": "I p J AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC", "36": "JC" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "4": "uB NC 3B PC", "516": "OC" }, H: { "132": "hC" }, I: { "1": "H mC nC", "36": "iC", "516": "oB I lC 3B", "548": "jC kC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 Background-image options" };
  }
});
var require_background_position_x_y = __commonJS({
  "../../node_modules/caniuse-lite/data/features/background-position-x-y.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "background-position-x & background-position-y" };
  }
});
var require_background_repeat_round_space = __commonJS({
  "../../node_modules/caniuse-lite/data/features/background-repeat-round-space.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E 4B", "132": "F" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 6B 7B" }, D: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F G M N O IC JC" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS background-repeat round and space" };
  }
});
var require_background_sync = __commonJS({
  "../../node_modules/caniuse-lite/data/features/background-sync.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H 6B 7B", "16": "sB tB" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "Background Sync API" };
  }
});
var require_battery_status = __commonJS({
  "../../node_modules/caniuse-lite/data/features/battery-status.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "EB FB GB HB IB JB KB LB MB", "2": "5B oB I p J D E F NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "132": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB", "164": "A B C K L G" }, D: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z", "66": "8" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Battery Status API" };
  }
});
var require_beacon = __commonJS({
  "../../node_modules/caniuse-lite/data/features/beacon.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Beacon API" };
  }
});
var require_beforeafterprint = __commonJS({
  "../../node_modules/caniuse-lite/data/features/beforeafterprint.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "16": "4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B" }, D: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB mB" }, F: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB IC JC KC LC lB 2B MC mB" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "16": "A B" }, O: { "1": "oC" }, P: { "2": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "16": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Printing Events" };
  }
});
var require_bigint = __commonJS({
  "../../node_modules/caniuse-lite/data/features/bigint.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c 6B 7B", "194": "XB YB ZB" }, D: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB" }, E: { "1": "L G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB wB" }, F: { "1": "PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB IC JC KC LC lB 2B MC mB" }, G: { "1": "eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "BigInt" };
  }
});
var require_blobbuilder = __commonJS({
  "../../node_modules/caniuse-lite/data/features/blobbuilder.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B", "36": "J D E F A B C" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D", "36": "E F A B C K L G M N O q" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B C IC JC KC LC lB 2B MC" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC" }, H: { "2": "hC" }, I: { "1": "H", "2": "iC jC kC", "36": "oB I lC 3B mC nC" }, J: { "1": "A", "2": "D" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Blob constructing" };
  }
});
var require_bloburls = __commonJS({
  "../../node_modules/caniuse-lite/data/features/bloburls.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "129": "A B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "C K L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D", "33": "E F A B C K L G M N O q r s t" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "33": "J" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB iC jC kC", "33": "I lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Blob URLs" };
  }
});
var require_border_image = __commonJS({
  "../../node_modules/caniuse-lite/data/features/border-image.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "C K" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "260": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB", "804": "I p J D E F A B C K L 6B 7B" }, D: { "1": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "260": "MB NB OB PB QB", "388": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB", "1412": "0 G M N O q r s t u v w x y z", "1956": "I p J D E F A B C K L" }, E: { "1": "yB zB 0B nB 1B HC", "129": "A B C K L G EC vB lB mB wB FC GC xB", "1412": "J D E F CC DC", "1956": "I p AC uB BC" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F IC JC", "260": "9 AB BB CB DB", "388": "0 1 2 3 4 5 6 7 8 G M N O q r s t u v w x y z", "1796": "KC LC", "1828": "B C lB 2B MC mB" }, G: { "1": "yB zB 0B nB 1B", "129": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB", "1412": "E PC QC RC SC", "1956": "uB NC 3B OC" }, H: { "1828": "hC" }, I: { "1": "H", "388": "mC nC", "1956": "oB I iC jC kC lC 3B" }, J: { "1412": "A", "1924": "D" }, K: { "1": "c", "2": "A", "1828": "B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "260": "pC qC", "388": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "260": "2C" } }, B: 4, C: "CSS3 Border images" };
  }
});
var require_border_radius = __commonJS({
  "../../node_modules/caniuse-lite/data/features/border-radius.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "257": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB", "289": "oB 6B 7B", "292": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "I" }, E: { "1": "p D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "I AC uB", "129": "J BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "33": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H jC kC lC 3B mC nC", "33": "iC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "257": "2C" } }, B: 4, C: "CSS3 Border-radius (rounded corners)" };
  }
});
var require_broadcastchannel = __commonJS({
  "../../node_modules/caniuse-lite/data/features/broadcastchannel.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB IC JC KC LC lB 2B MC mB" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "BroadcastChannel" };
  }
});
var require_brotli = __commonJS({
  "../../node_modules/caniuse-lite/data/features/brotli.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L" }, C: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 6B 7B" }, D: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB", "194": "KB", "257": "LB" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "513": "B C lB mB" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "7 8" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Brotli Accept-Encoding/Content-Encoding" };
  }
});
var require_calc = __commonJS({
  "../../node_modules/caniuse-lite/data/features/calc.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "260": "F", "516": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "33": "I p J D E F A B C K L G" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O", "33": "q r s t u v w" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "33": "J" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "PC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B", "132": "mC nC" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "calc() as CSS unit value" };
  }
});
var require_canvas_blending = __commonJS({
  "../../node_modules/caniuse-lite/data/features/canvas-blending.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q 6B 7B" }, D: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Canvas blend modes" };
  }
});
var require_canvas_text = __commonJS({
  "../../node_modules/caniuse-lite/data/features/canvas-text.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "4B", "8": "J D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "8": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "8": "F IC JC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "8": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Text API for Canvas" };
  }
});
var require_canvas = __commonJS({
  "../../node_modules/caniuse-lite/data/features/canvas.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "4B", "8": "J D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "132": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "132": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "260": "hC" }, I: { "1": "oB I H lC 3B mC nC", "132": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Canvas (basic support)" };
  }
});
var require_ch_unit = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ch-unit.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "132": "F A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w x" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "ch (character) unit" };
  }
});
var require_chacha20_poly1305 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/chacha20-poly1305.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 I p J D E F A B C K L G M N O q r s t u v w x y z", "129": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC", "16": "nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "ChaCha20-Poly1305 cipher suites for TLS" };
  }
});
var require_channel_messaging = __commonJS({
  "../../node_modules/caniuse-lite/data/features/channel-messaging.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w 6B 7B", "194": "0 1 2 3 4 5 6 7 8 9 x y z AB BB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "2": "F IC JC", "16": "KC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Channel messaging" };
  }
});
var require_childnode_remove = __commonJS({
  "../../node_modules/caniuse-lite/data/features/childnode-remove.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "16": "C" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "16": "J" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "ChildNode.remove()" };
  }
});
var require_classlist = __commonJS({
  "../../node_modules/caniuse-lite/data/features/classlist.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "8": "J D E F 4B", "1924": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "5B oB 6B", "516": "v w", "772": "I p J D E F A B C K L G M N O q r s t u 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "8": "I p J D", "516": "v w x y", "772": "u", "900": "E F A B C K L G M N O q r s t" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I p AC uB", "900": "J BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "8": "F B IC JC KC LC lB", "900": "C 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "uB NC 3B", "900": "OC PC" }, H: { "900": "hC" }, I: { "1": "H mC nC", "8": "iC jC kC", "900": "oB I lC 3B" }, J: { "1": "A", "900": "D" }, K: { "1": "c", "8": "A B", "900": "C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "900": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "classList (DOMTokenList)" };
  }
});
var require_client_hints_dpr_width_viewport = __commonJS({
  "../../node_modules/caniuse-lite/data/features/client-hints-dpr-width-viewport.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "Client Hints: DPR, Width, Viewport-Width" };
  }
});
var require_clipboard = __commonJS({
  "../../node_modules/caniuse-lite/data/features/clipboard.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2436": "J D E F A B 4B" }, B: { "260": "N O", "2436": "C K L G M", "8196": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B", "772": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB", "4100": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "I p J D E F A B C", "2564": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB", "8196": "TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "10244": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, E: { "1": "C K L G mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC uB", "2308": "A B vB lB", "2820": "I p J D E F BC CC DC EC" }, F: { "2": "F B IC JC KC LC lB 2B MC", "16": "C", "516": "mB", "2564": "0 G M N O q r s t u v w x y z", "8196": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "10244": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB" }, G: { "1": "YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B", "2820": "E OC PC QC RC SC TC UC VC WC XC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "260": "H", "2308": "mC nC" }, J: { "2": "D", "2308": "A" }, K: { "2": "A B C lB 2B", "16": "mB", "260": "c" }, L: { "8196": "H" }, M: { "1028": "b" }, N: { "2": "A B" }, O: { "8196": "oC" }, P: { "2052": "pC qC", "2308": "I", "8196": "rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "8196": "wB" }, R: { "8196": "1C" }, S: { "4100": "2C" } }, B: 5, C: "Synchronous Clipboard API" };
  }
});
var require_colr_v1 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/colr-v1.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "j k l m n o b H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i 6B 7B", "258": "j k l m n o b", "578": "H sB tB" }, D: { "1": "j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y", "194": "Z a d e f g h i" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "16": "A B" }, O: { "2": "oC" }, P: { "1": "0C", "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "COLR/CPAL(v1) Font Formats" };
  }
});
var require_colr = __commonJS({
  "../../node_modules/caniuse-lite/data/features/colr.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "257": "F A B" }, B: { "1": "C K L G M N O", "513": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB", "513": "dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "L G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "129": "B C K lB mB wB" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB IC JC KC LC lB 2B MC mB", "513": "TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "16": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "COLR/CPAL(v0) Font Formats" };
  }
});
var require_comparedocumentposition = __commonJS({
  "../../node_modules/caniuse-lite/data/features/comparedocumentposition.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B oB 6B 7B" }, D: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L", "132": "0 G M N O q r s t u v w x y z" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p J AC uB", "132": "D E F CC DC EC", "260": "BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "16": "F B IC JC KC LC lB 2B", "132": "G M" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB", "132": "E NC 3B OC PC QC RC SC TC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "16": "iC jC", "132": "oB I kC lC 3B" }, J: { "132": "D A" }, K: { "1": "C c mB", "16": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Node.compareDocumentPosition()" };
  }
});
var require_console_basic = __commonJS({
  "../../node_modules/caniuse-lite/data/features/console-basic.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D 4B", "132": "E F" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F IC JC KC LC" }, G: { "1": "uB NC 3B OC", "513": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "4097": "hC" }, I: { "1025": "oB I H iC jC kC lC 3B mC nC" }, J: { "258": "D A" }, K: { "2": "A", "258": "B C lB 2B mB", "1025": "c" }, L: { "1025": "H" }, M: { "2049": "b" }, N: { "258": "A B" }, O: { "258": "oC" }, P: { "1025": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1025": "1C" }, S: { "1": "2C" } }, B: 1, C: "Basic console logging functions" };
  }
});
var require_console_time = __commonJS({
  "../../node_modules/caniuse-lite/data/features/console-time.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F IC JC KC LC", "16": "B" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "c", "16": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "console.time and console.timeEnd" };
  }
});
var require_const = __commonJS({
  "../../node_modules/caniuse-lite/data/features/const.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "2052": "B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "132": "5B oB I p J D E F A B C 6B 7B", "260": "0 1 2 3 4 5 6 K L G M N O q r s t u v w x y z" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "260": "I p J D E F A B C K L G M N O q r", "772": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB", "1028": "CB DB EB FB GB HB IB JB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "260": "I p A AC uB vB", "772": "J D E F BC CC DC EC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F IC", "132": "B JC KC LC lB 2B", "644": "C MC mB", "772": "G M N O q r s t u v w x y", "1028": "0 1 2 3 4 5 6 z" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "260": "uB NC 3B UC VC", "772": "E OC PC QC RC SC TC" }, H: { "644": "hC" }, I: { "1": "H", "16": "iC jC", "260": "kC", "772": "oB I lC 3B mC nC" }, J: { "772": "D A" }, K: { "1": "c", "132": "A B lB 2B", "644": "C mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "1028": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "const" };
  }
});
var require_constraint_validation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/constraint-validation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "900": "A B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "388": "L G M", "900": "C K" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "260": "KB LB", "388": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB", "900": "I p J D E F A B C K L G M N O q r s t u v w x y z" }, D: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L", "388": "0 1 2 3 4 5 6 7 8 9 w x y z AB", "900": "G M N O q r s t u v" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB", "388": "E F DC EC", "900": "J D BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F B IC JC KC LC lB 2B", "388": "G M N O q r s t u v w x", "900": "C MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B", "388": "E QC RC SC TC", "900": "OC PC" }, H: { "2": "hC" }, I: { "1": "H", "16": "oB iC jC kC", "388": "mC nC", "900": "I lC 3B" }, J: { "16": "D", "388": "A" }, K: { "1": "c", "16": "A B lB 2B", "900": "C mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "900": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "388": "2C" } }, B: 1, C: "Constraint Validation API" };
  }
});
var require_contenteditable = __commonJS({
  "../../node_modules/caniuse-lite/data/features/contenteditable.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B", "4": "oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "contenteditable attribute (basic support)" };
  }
});
var require_contentsecuritypolicy = __commonJS({
  "../../node_modules/caniuse-lite/data/features/contentsecuritypolicy.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "132": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "129": "I p J D E F A B C K L G M N O q r s t" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K", "257": "L G M N O q r s t u v" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB", "257": "J CC", "260": "BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B", "257": "PC", "260": "OC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D", "257": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Content Security Policy 1.0" };
  }
});
var require_contentsecuritypolicy2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/contentsecuritypolicy2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L", "4100": "G M N O" }, C: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "132": "2 3 4 5", "260": "6", "516": "7 8 9 AB BB CB DB EB FB" }, D: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z", "1028": "7 8 9", "2052": "AB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t IC JC KC LC lB 2B MC mB", "1028": "u v w", "2052": "x" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Content Security Policy Level 2" };
  }
});
var require_cookie_store_api = __commonJS({
  "../../node_modules/caniuse-lite/data/features/cookie-store-api.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "194": "P Q R S T U V" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB", "194": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB IC JC KC LC lB 2B MC mB", "194": "MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "Cookie Store API" };
  }
});
var require_cors = __commonJS({
  "../../node_modules/caniuse-lite/data/features/cors.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D 4B", "132": "A", "260": "E F" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB", "1025": "qB VB WB c XB YB ZB aB bB cB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "I p J D E F A B C" }, E: { "2": "AC uB", "513": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "644": "I p BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC" }, G: { "513": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "644": "uB NC 3B OC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "132": "oB I iC jC kC lC 3B" }, J: { "1": "A", "132": "D" }, K: { "1": "C c mB", "2": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "132": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Cross-Origin Resource Sharing" };
  }
});
var require_createimagebitmap = __commonJS({
  "../../node_modules/caniuse-lite/data/features/createimagebitmap.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB 6B 7B", "1028": "e f g h i j k l m n o b H sB tB", "3076": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d" }, D: { "1": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB", "132": "LB MB", "260": "NB OB", "516": "PB QB RB SB TB" }, E: { "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB FC", "4100": "G GC xB yB zB 0B nB 1B HC" }, F: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "132": "8 9", "260": "AB BB", "516": "CB DB EB FB GB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC", "4100": "gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1028": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "16": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "3076": "2C" } }, B: 1, C: "createImageBitmap" };
  }
});
var require_credential_management = __commonJS({
  "../../node_modules/caniuse-lite/data/features/credential-management.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB", "66": "JB KB LB", "129": "MB NB OB PB QB RB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB IC JC KC LC lB 2B MC mB" }, G: { "1": "eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Credential Management API" };
  }
});
var require_cryptography = __commonJS({
  "../../node_modules/caniuse-lite/data/features/cryptography.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E F A", "164": "B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "513": "C K L G M N O" }, C: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "0 1 2 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "66": "3 4" }, D: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "8": "0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I p J D AC uB BC CC", "289": "E F A DC EC vB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "8": "F B C G M N O q r s t u IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "uB NC 3B OC PC QC", "289": "E RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "8": "oB I iC jC kC lC 3B mC nC" }, J: { "8": "D A" }, K: { "1": "c", "8": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "8": "A", "164": "B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Web Cryptography" };
  }
});
var require_css_all = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-all.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x 6B 7B" }, D: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u IC JC KC LC lB 2B MC mB" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC" }, H: { "2": "hC" }, I: { "1": "H nC", "2": "oB I iC jC kC lC 3B mC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS all property" };
  }
});
var require_css_animation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-animation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I 6B 7B", "33": "p J D E F A B C K L G" }, D: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB", "33": "J D E BC CC DC", "292": "I p" }, F: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC", "33": "0 C G M N O q r s t u v w x y z" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "33": "E PC QC RC", "164": "uB NC 3B OC" }, H: { "2": "hC" }, I: { "1": "H", "33": "I lC 3B mC nC", "164": "oB iC jC kC" }, J: { "33": "D A" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "CSS Animation" };
  }
});
var require_css_any_link = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-any-link.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B", "33": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB 6B 7B" }, D: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p J AC uB BC", "33": "D E CC DC" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC", "33": "E PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "16": "oB I iC jC kC lC 3B", "33": "mC nC" }, J: { "16": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "16": "I", "33": "pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "33": "2C" } }, B: 5, C: "CSS :any-link selector" };
  }
});
var require_css_appearance = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-appearance.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H", "33": "S", "164": "P Q R", "388": "C K L G M N O" }, C: { "1": "Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "164": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P", "676": "0 1 2 3 4 5 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "S", "164": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R" }, E: { "1": "yB zB 0B nB 1B HC", "164": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB" }, F: { "1": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "cB dB eB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB" }, G: { "1": "yB zB 0B nB 1B", "164": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "164": "oB I iC jC kC lC 3B mC nC" }, J: { "164": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A", "388": "B" }, O: { "164": "oC" }, P: { "164": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "164": "wB" }, R: { "1": "1C" }, S: { "164": "2C" } }, B: 5, C: "CSS Appearance" };
  }
});
var require_css_at_counter_style = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-at-counter-style.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z", "132": "a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "132": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z", "132": "a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB IC JC KC LC lB 2B MC mB", "132": "jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "132": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "132": "c" }, L: { "132": "H" }, M: { "132": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC", "132": "nB zC 0C" }, Q: { "2": "wB" }, R: { "132": "1C" }, S: { "132": "2C" } }, B: 4, C: "CSS Counter Styles" };
  }
});
var require_css_autofill = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-autofill.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U 6B 7B" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, K: { "2": "A B C lB 2B mB", "33": "c" }, E: { "1": "G GC xB yB zB 0B nB 1B", "2": "HC", "33": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB FC" }, G: { "1": "gC xB yB zB 0B nB 1B", "33": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC" }, P: { "33": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, I: { "2": "oB I iC jC kC lC 3B", "33": "H mC nC" } }, B: 6, C: ":autofill CSS pseudo-class" };
  }
});
var require_css_backdrop_filter = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-backdrop-filter.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M", "257": "N O" }, C: { "1": "o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB 6B 7B", "578": "cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n" }, D: { "1": "iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB", "194": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB" }, E: { "2": "I p J D E AC uB BC CC DC", "33": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "2": "E uB NC 3B OC PC QC RC", "33": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vC wC xC yC nB zC 0C", "2": "I", "194": "pC qC rC sC tC vB uC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS Backdrop Filter" };
  }
});
var require_css_background_offsets = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-background-offsets.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS background-position edge offsets" };
  }
});
var require_css_backgroundblendmode = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-backgroundblendmode.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "6 7 8 9 AB BB CB DB EB FB GB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 I p J D E F A B C K L G M N O q r s t u v w x y z", "260": "HB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC", "132": "E F A DC EC" }, F: { "1": "0 1 2 3 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s IC JC KC LC lB 2B MC mB", "260": "4" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "132": "E RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS background-blend-mode" };
  }
});
var require_css_boxdecorationbreak = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-boxdecorationbreak.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "164": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "2": "I p J D E F A B C K L G M N O q r s", "164": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J AC uB BC", "164": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F IC JC KC LC", "129": "B C lB 2B MC mB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "uB NC 3B OC PC", "164": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "132": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "164": "H mC nC" }, J: { "2": "D", "164": "A" }, K: { "2": "A", "129": "B C lB 2B mB", "164": "c" }, L: { "164": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "164": "oC" }, P: { "164": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "164": "wB" }, R: { "164": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS box-decoration-break" };
  }
});
var require_css_boxshadow = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-boxshadow.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "33": "6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "I p J D E F" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "p", "164": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "33": "NC 3B", "164": "uB" }, H: { "2": "hC" }, I: { "1": "I H lC 3B mC nC", "164": "oB iC jC kC" }, J: { "1": "A", "33": "D" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 Box-shadow" };
  }
});
var require_css_canvas = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-canvas.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB" }, E: { "2": "AC uB", "33": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "6 7 8 9 F B C AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 G M N O q r s t u v w x y z" }, G: { "33": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "H", "33": "oB I iC jC kC lC 3B mC nC" }, J: { "33": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "33": "I" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS Canvas Drawings" };
  }
});
var require_css_caret_color = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-caret-color.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 6B 7B" }, D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "CSS caret-color" };
  }
});
var require_css_cascade_layers = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-cascade-layers.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "k l m n o b H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g", "322": "h i j" }, C: { "1": "i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e 6B 7B", "194": "f g h" }, D: { "1": "k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g", "322": "h i j" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB" }, F: { "1": "V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U IC JC KC LC lB 2B MC mB" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "0C", "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS Cascade Layers" };
  }
});
var require_css_case_insensitive = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-case-insensitive.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Case-insensitive CSS attribute selectors" };
  }
});
var require_css_clip_path = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-clip-path.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N", "260": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "3138": "O" }, C: { "1": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "132": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 6B 7B", "644": "IB JB KB LB MB NB OB" }, D: { "2": "I p J D E F A B C K L G M N O q r s t u", "260": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "292": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, E: { "2": "I p J AC uB BC CC", "260": "L G wB FC GC xB yB zB 0B nB 1B HC", "292": "D E F A B C K DC EC vB lB mB" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "260": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "292": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB" }, G: { "2": "uB NC 3B OC PC", "260": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "292": "E QC RC SC TC UC VC WC XC YC ZC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "260": "H", "292": "mC nC" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "260": "c" }, L: { "260": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "260": "oC" }, P: { "292": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "260": "wB" }, R: { "260": "1C" }, S: { "644": "2C" } }, B: 4, C: "CSS clip-path property (for HTML)" };
  }
});
var require_css_color_adjust = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-color-adjust.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 6B 7B" }, D: { "16": "I p J D E F A B C K L G M N O", "33": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p AC uB BC", "33": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "16": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "16": "oB I iC jC kC lC 3B mC nC", "33": "H" }, J: { "16": "D A" }, K: { "2": "A B C lB 2B mB", "33": "c" }, L: { "16": "H" }, M: { "1": "b" }, N: { "16": "A B" }, O: { "16": "oC" }, P: { "16": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "33": "wB" }, R: { "16": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS print-color-adjust" };
  }
});
var require_css_color_function = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-color-function.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "G GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC", "132": "B C K L vB lB mB wB FC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC", "132": "VC WC XC YC ZC aC bC cC dC eC fC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS color() function" };
  }
});
var require_css_conic_gradients = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-conic-gradients.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB 6B 7B", "578": "hB iB jB kB P Q R rB" }, D: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB", "194": "pB UB qB VB WB c XB YB ZB aB" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB IC JC KC LC lB 2B MC mB", "194": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Conical Gradients" };
  }
});
var require_css_container_queries = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-container-queries.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b", "516": "H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a", "194": "e f g h i j k l m n o b", "450": "d", "516": "H" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB IC JC KC LC lB 2B MC mB", "194": "P Q R rB S T U V W X Y Z", "516": "a" }, G: { "1": "nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "516": "H" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "516": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Container Queries (Size)" };
  }
});
var require_css_container_query_units = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-container-query-units.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d", "194": "m n o b", "450": "e f g h i j k l" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "1": "a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB IC JC KC LC lB 2B MC mB", "194": "P Q R rB S T U V W X Y Z" }, G: { "1": "nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Container Query Units" };
  }
});
var require_css_containment = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-containment.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB 6B 7B", "194": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB" }, D: { "1": "NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "66": "MB" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "66": "9 AB" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "194": "2C" } }, B: 2, C: "CSS Containment" };
  }
});
var require_css_content_visibility = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-content-visibility.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O P Q R S T" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS content-visibility" };
  }
});
var require_css_counters = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-counters.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "2": "J D 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS Counters" };
  }
});
var require_css_crisp_edges = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-crisp-edges.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J 4B", "2340": "D E F A B" }, B: { "2": "C K L G M N O", "1025": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "e f g h i j k l m n o b H sB tB", "2": "5B oB 6B", "513": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d", "545": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB", "1025": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "164": "J", "4644": "D E F CC DC EC" }, F: { "2": "F B G M N O q r s t u v w x y IC JC KC LC lB 2B", "545": "C MC mB", "1025": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B", "4260": "OC PC", "4644": "E QC RC SC TC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "1025": "H" }, J: { "2": "D", "4260": "A" }, K: { "2": "A B lB 2B", "545": "C mB", "1025": "c" }, L: { "1025": "H" }, M: { "1": "b" }, N: { "2340": "A B" }, O: { "1025": "oC" }, P: { "1025": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1025": "wB" }, R: { "1025": "1C" }, S: { "4097": "2C" } }, B: 4, C: "Crisp edges/pixelated images" };
  }
});
var require_css_cross_fade = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-cross-fade.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "I p J D E F A B C K L G M", "33": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB", "33": "J D E F BC CC DC EC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B", "33": "E OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "33": "H mC nC" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "33": "c" }, L: { "33": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "33": "oC" }, P: { "33": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "33": "wB" }, R: { "33": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS Cross-Fade Function" };
  }
});
var require_css_default_pseudo = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-default-pseudo.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B oB 6B 7B" }, D: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB", "132": "J D E F A BC CC DC EC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F B IC JC KC LC lB 2B", "132": "0 1 2 3 4 5 6 7 8 G M N O q r s t u v w x y z", "260": "C MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC PC", "132": "E QC RC SC TC UC" }, H: { "260": "hC" }, I: { "1": "H", "16": "oB iC jC kC", "132": "I lC 3B mC nC" }, J: { "16": "D", "132": "A" }, K: { "1": "c", "16": "A B C lB 2B", "260": "mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "132": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: ":default CSS pseudo-class" };
  }
});
var require_css_descendant_gtgt = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-descendant-gtgt.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "16": "P" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "B", "2": "I p J D E F A C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Explicit descendant combinator >>" };
  }
});
var require_css_deviceadaptation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-deviceadaptation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "164": "A B" }, B: { "66": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "164": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "I p J D E F A B C K L G M N O q r s t u v w x y z", "66": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB IC JC KC LC lB 2B MC mB", "66": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "292": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A c", "292": "B C lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "164": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "66": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Device Adaptation" };
  }
});
var require_css_dir_pseudo = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-dir-pseudo.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b", "194": "H" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z", "194": "a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z IC JC KC LC lB 2B MC mB", "194": "a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "33": "2C" } }, B: 5, C: ":dir() CSS pseudo-class" };
  }
});
var require_css_display_contents = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-display-contents.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "132": "P Q R S T U V W X", "260": "Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "132": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB", "260": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "132": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X", "194": "TB pB UB qB VB WB c", "260": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B AC uB BC CC DC EC vB", "132": "C K L G lB mB wB FC GC xB yB zB 0B", "516": "1B HC", "772": "nB" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB IC JC KC LC lB 2B MC mB", "132": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB", "260": "iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC", "132": "XC YC ZC aC bC cC", "260": "dC eC fC gC xB yB zB 0B", "772": "nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "260": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "260": "c" }, L: { "260": "H" }, M: { "260": "b" }, N: { "2": "A B" }, O: { "132": "oC" }, P: { "2": "I pC qC rC sC", "132": "tC vB uC vC wC xC", "260": "yC nB zC 0C" }, Q: { "132": "wB" }, R: { "260": "1C" }, S: { "132": "2C" } }, B: 4, C: "CSS display: contents" };
  }
});
var require_css_element_function = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-element-function.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "164": "5B oB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "33": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "33": "2C" } }, B: 5, C: "CSS element() function" };
  }
});
var require_css_env_function = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-env-function.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c 6B 7B" }, D: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "132": "B" }, F: { "1": "RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "132": "WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS Environment Variables env()" };
  }
});
var require_css_exclusions = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-exclusions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "33": "A B" }, B: { "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "33": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "33": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Exclusions Level 1" };
  }
});
var require_css_featurequeries = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-featurequeries.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w x y" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B C IC JC KC LC lB 2B MC" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS Feature Queries" };
  }
});
var require_css_file_selector_button = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-file-selector-button.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "1": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X" }, L: { "1": "H" }, B: { "1": "Y Z a d e f g h i j k l m n o b H", "33": "C K L G M N O P Q R S T U V W X" }, C: { "1": "rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R 6B 7B" }, M: { "1": "b" }, A: { "2": "J D E F 4B", "33": "A B" }, F: { "1": "hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB" }, K: { "1": "c", "2": "A B C lB 2B mB" }, E: { "1": "G FC GC xB yB zB 0B nB 1B", "2": "HC", "33": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB" }, G: { "1": "fC gC xB yB zB 0B nB 1B", "33": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC" }, P: { "1": "yC nB zC 0C", "33": "I pC qC rC sC tC vB uC vC wC xC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B", "33": "mC nC" } }, B: 6, C: "::file-selector-button CSS pseudo-element" };
  }
});
var require_css_filter_function = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-filter-function.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC", "33": "F" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC", "33": "SC TC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS filter() function" };
  }
});
var require_css_filters = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-filters.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "1028": "K L G M N O", "1346": "C" }, C: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B", "196": "5", "516": "0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z 7B" }, D: { "1": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N", "33": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "33": "J D E F CC DC" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "E PC QC RC SC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B", "33": "mC nC" }, J: { "2": "D", "33": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "33": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "CSS Filter Effects" };
  }
});
var require_css_first_letter = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-first-letter.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "16": "4B", "516": "E", "1540": "J D" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "132": "oB", "260": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "p J D E", "132": "I" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "p AC", "132": "I uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "16": "F IC", "260": "B JC KC LC lB 2B" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "oB I H lC 3B mC nC", "16": "iC jC", "132": "kC" }, J: { "1": "D A" }, K: { "1": "C c mB", "260": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "::first-letter CSS pseudo-element selector" };
  }
});
var require_css_first_line = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-first-line.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "132": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS first-line pseudo-element" };
  }
});
var require_css_fixed = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-fixed.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "D E F A B", "2": "4B", "8": "J" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "1025": "EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B", "132": "OC PC QC" }, H: { "2": "hC" }, I: { "1": "oB H mC nC", "260": "iC jC kC", "513": "I lC 3B" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS position:fixed" };
  }
});
var require_css_focus_visible = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-focus-visible.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "328": "P Q R S T U" }, C: { "1": "U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "161": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T" }, D: { "1": "V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB", "328": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB FC", "578": "G GC xB" }, F: { "1": "eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB IC JC KC LC lB 2B MC mB", "328": "YB ZB aB bB cB dB" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC", "578": "gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "161": "2C" } }, B: 5, C: ":focus-visible CSS pseudo-class" };
  }
});
var require_css_focus_within = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-focus-within.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 6B 7B" }, D: { "1": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB", "194": "pB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB IC JC KC LC lB 2B MC mB", "194": "HB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: ":focus-within CSS pseudo-class" };
  }
});
var require_css_font_palette = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-font-palette.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB" }, F: { "1": "W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V IC JC KC LC lB 2B MC mB" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS font-palette" };
  }
});
var require_css_font_rendering_controls = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-font-rendering-controls.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB 6B 7B", "194": "HB IB JB KB LB MB NB OB PB QB RB SB" }, D: { "1": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB", "66": "KB LB MB NB OB PB QB RB SB TB pB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "66": "7 8 9 AB BB CB DB EB FB GB HB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "66": "pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "194": "2C" } }, B: 5, C: "CSS font-display" };
  }
});
var require_css_font_stretch = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-font-stretch.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E 6B 7B" }, D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB" }, F: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS font-stretch" };
  }
});
var require_css_gencontent = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-gencontent.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D 4B", "132": "E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS Generated content for pseudo-elements" };
  }
});
var require_css_gradients = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-gradients.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B", "260": "0 1 2 3 4 5 6 M N O q r s t u v w x y z", "292": "I p J D E F A B C K L G 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "A B C K L G M N O q r s t u v w", "548": "I p J D E F" }, E: { "1": "yB zB 0B nB 1B HC", "2": "AC uB", "260": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB", "292": "J BC", "804": "I p" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC", "33": "C MC", "164": "lB 2B" }, G: { "1": "yB zB 0B nB 1B", "260": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB", "292": "OC PC", "804": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "33": "I lC 3B", "548": "oB iC jC kC" }, J: { "1": "A", "548": "D" }, K: { "1": "c mB", "2": "A B", "33": "C", "164": "lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS Gradients" };
  }
});
var require_css_grid_animation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-grid-animation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS Grid animation" };
  }
});
var require_css_grid = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-grid.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "8": "F", "292": "A B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "292": "C K L G" }, C: { "1": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O 6B 7B", "8": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB", "584": "BB CB DB EB FB GB HB IB JB KB LB MB", "1025": "NB OB" }, D: { "1": "TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v", "8": "w x y z", "200": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "1025": "SB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "8": "J D E F A CC DC EC" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y IC JC KC LC lB 2B MC mB", "200": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "8": "E PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC", "8": "3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "292": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "pC", "8": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS Grid Layout (level 1)" };
  }
});
var require_css_hanging_punctuation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-hanging-punctuation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS hanging-punctuation" };
  }
});
var require_css_has = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-has.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n 6B 7B", "322": "o b H sB tB" }, D: { "1": "H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l", "194": "m n o b" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB" }, F: { "1": "a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z IC JC KC LC lB 2B MC mB" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: ":has() CSS relational pseudo-class" };
  }
});
var require_css_hyphens = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-hyphens.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "33": "A B" }, B: { "1": "H", "33": "C K L G M N O", "132": "P Q R S T U V W", "260": "X Y Z a d e f g h i j k l m n o b" }, C: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB" }, D: { "1": "X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB", "132": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W" }, E: { "2": "I p AC uB", "33": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB IC JC KC LC lB 2B MC mB", "132": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z" }, G: { "2": "uB NC", "33": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "4": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "132": "pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS Hyphenation" };
  }
});
var require_css_image_orientation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-image-orientation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O P Q", "257": "R S T U V W X" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w 6B 7B" }, D: { "1": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q", "257": "R S T U V W X" }, E: { "1": "L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB" }, F: { "1": "jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB IC JC KC LC lB 2B MC mB", "257": "aB bB cB dB eB fB gB hB iB" }, G: { "1": "eC fC gC xB yB zB 0B nB 1B", "132": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC", "257": "wC xC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 image-orientation" };
  }
});
var require_css_image_set = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-image-set.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "164": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U 6B 7B", "66": "V W", "257": "Y Z a d e f g h i j k l m n o b H sB tB", "772": "X" }, D: { "2": "I p J D E F A B C K L G M N O q r", "164": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p AC uB BC", "132": "A B C K vB lB mB wB", "164": "J D E F CC DC EC", "516": "L G FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "uB NC 3B OC", "132": "UC VC WC XC YC ZC aC bC cC dC", "164": "E PC QC RC SC TC", "516": "eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "164": "H mC nC" }, J: { "2": "D", "164": "A" }, K: { "2": "A B C lB 2B mB", "164": "c" }, L: { "164": "H" }, M: { "257": "b" }, N: { "2": "A B" }, O: { "164": "oC" }, P: { "164": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "164": "wB" }, R: { "164": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS image-set" };
  }
});
var require_css_in_out_of_range = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-in-out-of-range.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C", "260": "K L G M N O" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "516": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB" }, D: { "1": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I", "16": "p J D E F A B C K L", "260": "NB", "772": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "16": "p", "772": "J D E F A BC CC DC EC" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F IC", "260": "B C AB JC KC LC lB 2B MC mB", "772": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B", "772": "E OC PC QC RC SC TC UC" }, H: { "132": "hC" }, I: { "1": "H", "2": "oB iC jC kC", "260": "I lC 3B mC nC" }, J: { "2": "D", "260": "A" }, K: { "1": "c", "260": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "260": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "516": "2C" } }, B: 5, C: ":in-range and :out-of-range CSS pseudo-classes" };
  }
});
var require_css_indeterminate_pseudo = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-indeterminate-pseudo.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "132": "A B", "388": "F" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "132": "C K L G M N O" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B oB 6B 7B", "132": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "388": "I p" }, D: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p J AC uB", "132": "D E F A CC DC EC", "388": "BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F B IC JC KC LC lB 2B", "132": "G M N O q r s t u v w", "516": "C MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC PC", "132": "E QC RC SC TC UC" }, H: { "516": "hC" }, I: { "1": "H", "16": "oB iC jC kC nC", "132": "mC", "388": "I lC 3B" }, J: { "16": "D", "132": "A" }, K: { "1": "c", "16": "A B C lB 2B", "516": "mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "132": "2C" } }, B: 5, C: ":indeterminate CSS pseudo-class" };
  }
});
var require_css_initial_letter = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-initial-letter.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E AC uB BC CC DC", "4": "F", "164": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC", "164": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Initial Letter" };
  }
});
var require_css_initial_value = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-initial-value.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "33": "I p J D E F A B C K L G M N O 6B 7B", "164": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS initial value" };
  }
});
var require_css_lch_lab = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-lch-lab.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "G GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB FC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "LCH and Lab color values" };
  }
});
var require_css_letter_spacing = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-letter-spacing.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "16": "4B", "132": "J D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "0 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC", "132": "I p J uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F IC", "132": "B C G M JC KC LC lB 2B MC mB" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "2": "hC" }, I: { "1": "H mC nC", "16": "iC jC", "132": "oB I kC lC 3B" }, J: { "132": "D A" }, K: { "1": "c", "132": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "letter-spacing CSS property" };
  }
});
var require_css_line_clamp = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-line-clamp.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB 6B 7B", "33": "aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "16": "I p J D E F A B C K", "33": "0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I AC uB", "33": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "uB NC 3B", "33": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "16": "iC jC", "33": "oB I H kC lC 3B mC nC" }, J: { "33": "D A" }, K: { "2": "A B C lB 2B mB", "33": "c" }, L: { "33": "H" }, M: { "33": "b" }, N: { "2": "A B" }, O: { "33": "oC" }, P: { "33": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "33": "wB" }, R: { "33": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS line-clamp" };
  }
});
var require_css_logical_props = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-logical-props.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "1028": "W X", "1540": "P Q R S T U V" }, C: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B", "164": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB 6B 7B", "1540": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB" }, D: { "1": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "292": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB", "1028": "W X", "1540": "bB cB dB eB fB gB hB iB jB kB P Q R S T U V" }, E: { "1": "G GC xB yB zB 0B nB 1B HC", "292": "I p J D E F A B C AC uB BC CC DC EC vB lB", "1028": "FC", "1540": "K L mB wB" }, F: { "1": "iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "292": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB", "1028": "gB hB", "1540": "RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB" }, G: { "1": "gC xB yB zB 0B nB 1B", "292": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC", "1028": "fC", "1540": "ZC aC bC cC dC eC" }, H: { "2": "hC" }, I: { "1": "H", "292": "oB I iC jC kC lC 3B mC nC" }, J: { "292": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "292": "oC" }, P: { "1": "yC nB zC 0C", "292": "I pC qC rC sC tC", "1540": "vB uC vC wC xC" }, Q: { "1540": "wB" }, R: { "1": "1C" }, S: { "1540": "2C" } }, B: 5, C: "CSS Logical Properties" };
  }
});
var require_css_marker_pseudo = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-marker-pseudo.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O P Q R S T U" }, C: { "1": "aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB 6B 7B" }, D: { "1": "V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U" }, E: { "1": "HC", "2": "I p J D E F A B AC uB BC CC DC EC vB", "129": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B" }, F: { "1": "eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS ::marker pseudo-element" };
  }
});
var require_css_masks = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-masks.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M", "164": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "3138": "N", "12292": "O" }, C: { "1": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "260": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 6B 7B" }, D: { "164": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "yB zB 0B nB 1B HC", "2": "AC uB", "164": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "yB zB 0B nB 1B", "164": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "164": "H mC nC", "676": "oB I iC jC kC lC 3B" }, J: { "164": "D A" }, K: { "2": "A B C lB 2B mB", "164": "c" }, L: { "164": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "164": "oC" }, P: { "164": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "164": "wB" }, R: { "164": "1C" }, S: { "260": "2C" } }, B: 4, C: "CSS Masks" };
  }
});
var require_css_matches_pseudo = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-matches-pseudo.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "1220": "P Q R S T U V W" }, C: { "1": "kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B oB 6B 7B", "548": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, D: { "1": "X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L", "164": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c", "196": "XB YB ZB", "1220": "aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W" }, E: { "1": "L G FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "16": "p", "164": "J D E BC CC DC", "260": "F A B C K EC vB lB mB wB" }, F: { "1": "hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB", "196": "NB OB PB", "1220": "QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB" }, G: { "1": "eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC PC", "164": "E QC RC", "260": "SC TC UC VC WC XC YC ZC aC bC cC dC" }, H: { "2": "hC" }, I: { "1": "H", "16": "oB iC jC kC", "164": "I lC 3B mC nC" }, J: { "16": "D", "164": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "164": "oC" }, P: { "1": "yC nB zC 0C", "164": "I pC qC rC sC tC vB uC vC wC xC" }, Q: { "1220": "wB" }, R: { "1": "1C" }, S: { "548": "2C" } }, B: 5, C: ":is() CSS pseudo-class" };
  }
});
var require_css_math_functions = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-math-functions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB 6B 7B" }, D: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB" }, E: { "1": "L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB", "132": "C K lB mB" }, F: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB IC JC KC LC lB 2B MC mB" }, G: { "1": "dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC", "132": "XC YC ZC aC bC cC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS math functions min(), max() and clamp()" };
  }
});
var require_css_media_interaction = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-media-interaction.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB 6B 7B" }, D: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "Media Queries: interaction media features" };
  }
});
var require_css_media_range_syntax = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-media-range-syntax.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "b H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o" }, C: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 6B 7B" }, D: { "1": "b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "Media Queries: Range Syntax" };
  }
});
var require_css_media_resolution = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-media-resolution.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "132": "F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "1028": "C K L G M N O" }, C: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "260": "I p J D E F A B C K L G 6B 7B", "1028": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB" }, D: { "1": "aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "548": "I p J D E F A B C K L G M N O q r s t u v w x y z", "1028": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB" }, E: { "1": "nB 1B HC", "2": "AC uB", "548": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "1": "QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F", "548": "B C IC JC KC LC lB 2B MC", "1028": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, G: { "1": "nB 1B", "16": "uB", "548": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "132": "hC" }, I: { "1": "H", "16": "iC jC", "548": "oB I kC lC 3B", "1028": "mC nC" }, J: { "548": "D A" }, K: { "1": "c mB", "548": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "1028": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Media Queries: resolution feature" };
  }
});
var require_css_media_scripting = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-media-scripting.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "Media Queries: scripting media feature" };
  }
});
var require_css_mediaqueries = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-mediaqueries.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "8": "J D E 4B", "129": "F A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "129": "I p J D E F A B C K L G M N O q r s t u v w" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "129": "I p J BC", "388": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "129": "uB NC 3B OC PC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "129": "oB I iC jC kC lC 3B" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "129": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS3 Media Queries" };
  }
});
var require_css_mixblendmode = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-mixblendmode.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w x y z", "194": "0 1 2 3 4 5 6 7 8 9 AB BB" }, E: { "2": "I p J D AC uB BC CC", "260": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "2": "uB NC 3B OC PC QC", "260": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Blending of HTML/SVG elements" };
  }
});
var require_css_motion_paths = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-motion-paths.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB 6B 7B" }, D: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB", "194": "EB FB GB" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "1 2 3" }, G: { "1": "nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Motion Path" };
  }
});
var require_css_namespaces = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-namespaces.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS namespaces" };
  }
});
var require_css_nesting = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-nesting.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Nesting" };
  }
});
var require_css_not_sel_list = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-not-sel-list.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O Q R S T U V W", "16": "P" }, C: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S 6B 7B" }, D: { "1": "X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC xC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "selector list argument of :not()" };
  }
});
var require_css_nth_child_of = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-nth-child-of.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "selector list argument of :nth-child and :nth-last-child CSS pseudo-classes" };
  }
});
var require_css_opacity = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-opacity.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "4": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS3 Opacity" };
  }
});
var require_css_optional_pseudo = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-optional-pseudo.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F IC", "132": "B C JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "132": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "c", "132": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: ":optional CSS pseudo-class" };
  }
});
var require_css_overflow_anchor = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-overflow-anchor.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB 6B 7B" }, D: { "1": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS overflow-anchor (Scroll Anchoring)" };
  }
});
var require_css_overflow_overlay = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-overflow-overlay.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "I p J D E F A B BC CC DC EC vB lB", "16": "AC uB", "130": "C K L G mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC", "16": "uB", "130": "YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS overflow: overlay" };
  }
});
var require_css_overflow = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-overflow.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "388": "J D E F A B 4B" }, B: { "1": "Z a d e f g h i j k l m n o b H", "260": "P Q R S T U V W X Y", "388": "C K L G M N O" }, C: { "1": "R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "260": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q", "388": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB 6B 7B" }, D: { "1": "Z a d e f g h i j k l m n o b H sB tB 8B 9B", "260": "aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y", "388": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB" }, E: { "1": "nB 1B HC", "260": "L G wB FC GC xB yB zB 0B", "388": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB" }, F: { "1": "iB jB kB P Q R rB S T U V W X Y Z a", "260": "QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB", "388": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB IC JC KC LC lB 2B MC mB" }, G: { "1": "nB 1B", "260": "dC eC fC gC xB yB zB 0B", "388": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC" }, H: { "388": "hC" }, I: { "1": "H", "388": "oB I iC jC kC lC 3B mC nC" }, J: { "388": "D A" }, K: { "1": "c", "388": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "388": "A B" }, O: { "388": "oC" }, P: { "1": "yC nB zC 0C", "388": "I pC qC rC sC tC vB uC vC wC xC" }, Q: { "388": "wB" }, R: { "1": "1C" }, S: { "388": "2C" } }, B: 5, C: "CSS overflow property" };
  }
});
var require_css_overscroll_behavior = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-overscroll-behavior.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "132": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "132": "C K L G M N", "516": "O" }, C: { "1": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB 6B 7B" }, D: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB", "260": "WB c" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB", "1090": "G FC GC xB yB zB 0B" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB IC JC KC LC lB 2B MC mB", "260": "LB MB" }, G: { "1": "nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC", "1090": "fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS overscroll-behavior" };
  }
});
var require_css_page_break = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-page-break.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "388": "A B", "900": "J D E F 4B" }, B: { "388": "C K L G M N O", "900": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "772": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "900": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c 6B 7B" }, D: { "900": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "772": "A", "900": "I p J D E F B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "16": "F IC", "129": "B C JC KC LC lB 2B MC mB", "900": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "900": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "129": "hC" }, I: { "900": "oB I H iC jC kC lC 3B mC nC" }, J: { "900": "D A" }, K: { "129": "A B C lB 2B mB", "900": "c" }, L: { "900": "H" }, M: { "772": "b" }, N: { "388": "A B" }, O: { "900": "oC" }, P: { "900": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "900": "wB" }, R: { "900": "1C" }, S: { "900": "2C" } }, B: 2, C: "CSS page-break properties" };
  }
});
var require_css_paged_media = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-paged-media.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D 4B", "132": "E F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "132": "C K L G M N O" }, C: { "2": "5B oB I p J D E F A B C K L G M N O 6B 7B", "132": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "132": "F B C IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "16": "hC" }, I: { "16": "oB I H iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "16": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "132": "b" }, N: { "258": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "132": "2C" } }, B: 5, C: "CSS Paged Media (@page)" };
  }
});
var require_css_paint_api = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-paint-api.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c" }, E: { "2": "I p J D E F A B C AC uB BC CC DC EC vB lB", "194": "K L G mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS Paint API" };
  }
});
var require_css_placeholder_shown = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-placeholder-shown.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "292": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "164": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB" }, D: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "164": "2C" } }, B: 5, C: ":placeholder-shown CSS pseudo-class" };
  }
});
var require_css_placeholder = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-placeholder.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "36": "C K L G M N O" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB" }, D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "36": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "36": "p J D E F A BC CC DC EC" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "36": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC", "36": "E 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "36": "oB I iC jC kC lC 3B mC nC" }, J: { "36": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "36": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "36": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "33": "2C" } }, B: 5, C: "::placeholder CSS pseudo-element" };
  }
});
var require_css_print_color_adjust = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-print-color-adjust.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "2": "I p J D E F A B C K L G M", "33": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 6B 7B", "33": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, K: { "2": "A B C lB 2B mB", "33": "c" }, E: { "1": "yB zB 0B nB 1B", "2": "I p AC uB BC HC", "33": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB" }, G: { "1": "yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, P: { "33": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, I: { "2": "oB I iC jC kC lC 3B", "33": "H mC nC" } }, B: 6, C: "print-color-adjust property" };
  }
});
var require_css_read_only_write = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-read-only-write.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B", "33": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB 6B 7B" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L", "132": "0 1 2 3 4 5 6 G M N O q r s t u v w x y z" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC uB", "132": "I p J D E BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F B IC JC KC LC lB", "132": "C G M N O q r s t 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC", "132": "E 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "16": "iC jC", "132": "oB I kC lC 3B mC nC" }, J: { "1": "A", "132": "D" }, K: { "1": "c", "2": "A B lB", "132": "C 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "33": "2C" } }, B: 1, C: "CSS :read-only and :read-write selectors" };
  }
});
var require_css_rebeccapurple = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-rebeccapurple.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "132": "B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC", "16": "CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v IC JC KC LC lB 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Rebeccapurple color" };
  }
});
var require_css_reflections = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-reflections.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "AC uB", "33": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "33": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "33": "oB I H iC jC kC lC 3B mC nC" }, J: { "33": "D A" }, K: { "2": "A B C lB 2B mB", "33": "c" }, L: { "33": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "33": "oC" }, P: { "33": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "33": "wB" }, R: { "33": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS Reflections" };
  }
});
var require_css_regions = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-regions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "420": "A B" }, B: { "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "420": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "6 7 8 9 I p J D E F A B C K L AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "36": "G M N O", "66": "0 1 2 3 4 5 q r s t u v w x y z" }, E: { "2": "I p J C K L G AC uB BC lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "D E F A B CC DC EC vB" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "uB NC 3B OC PC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "33": "E QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "420": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Regions" };
  }
});
var require_css_repeating_gradients = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-repeating-gradients.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B", "33": "I p J D E F A B C K L G 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F", "33": "A B C K L G M N O q r s t u v w" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB", "33": "J BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC", "33": "C MC", "36": "lB 2B" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B", "33": "OC PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB iC jC kC", "33": "I lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c mB", "2": "A B", "33": "C", "36": "lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS Repeating Gradients" };
  }
});
var require_css_resize = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-resize.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "33": "I" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC", "132": "mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "CSS resize property" };
  }
});
var require_css_revert_value = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-revert-value.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O P Q R S" }, C: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB 6B 7B" }, D: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC" }, F: { "1": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB IC JC KC LC lB 2B MC mB" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS revert value" };
  }
});
var require_css_rrggbbaa = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-rrggbbaa.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 6B 7B" }, D: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB", "194": "NB OB PB QB RB SB TB pB UB qB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "AB BB CB DB EB FB GB HB IB JB KB LB MB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "194": "pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "#rrggbbaa hex color notation" };
  }
});
var require_css_scroll_behavior = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-scroll-behavior.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "129": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB", "129": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "450": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB wB", "578": "L G FC GC xB" }, F: { "2": "F B C G M N O q r s t u v w x y IC JC KC LC lB 2B MC mB", "129": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "450": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC", "578": "fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "129": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "129": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Scroll-behavior" };
  }
});
var require_css_scroll_timeline = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-scroll-timeline.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y", "194": "Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T", "194": "X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "322": "U V W" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB IC JC KC LC lB 2B MC mB", "194": "hB iB jB kB P Q R rB S T U V W X Y Z a", "322": "fB gB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS @scroll-timeline" };
  }
});
var require_css_scrollbar = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-scrollbar.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "132": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "292": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 6B 7B", "3074": "WB", "4100": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "292": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "16": "I p AC uB", "292": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "292": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC PC", "292": "QC", "804": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC" }, H: { "2": "hC" }, I: { "16": "iC jC", "292": "oB I H kC lC 3B mC nC" }, J: { "292": "D A" }, K: { "2": "A B C lB 2B mB", "292": "c" }, L: { "292": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "292": "oC" }, P: { "292": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "292": "wB" }, R: { "292": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS scrollbar styling" };
  }
});
var require_css_sel2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-sel2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "D E F A B", "2": "4B", "8": "J" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS 2.1 selectors" };
  }
});
var require_css_sel3 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-sel3.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "4B", "8": "J", "132": "D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS3 selectors" };
  }
});
var require_css_selection = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-selection.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "33": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "C c 2B mB", "16": "A B lB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "33": "2C" } }, B: 5, C: "::selection CSS pseudo-element" };
  }
});
var require_css_shapes = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-shapes.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 6B 7B", "322": "MB NB OB PB QB RB SB TB pB UB qB" }, D: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z", "194": "5 6 7" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC", "33": "E F A DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "33": "E RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS Shapes Level 1" };
  }
});
var require_css_snappoints = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-snappoints.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "6308": "A", "6436": "B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "6436": "C K L G M N O" }, C: { "1": "aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "2052": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB" }, D: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB", "8258": "YB ZB aB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC", "3108": "F A EC vB" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB IC JC KC LC lB 2B MC mB", "8258": "PB QB RB SB TB UB VB WB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC", "3108": "SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2052": "2C" } }, B: 4, C: "CSS Scroll Snap" };
  }
});
var require_css_sticky = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-sticky.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "a d e f g h i j k l m n o b H", "2": "C K L G", "1028": "P Q R S T U V W X Y Z", "4100": "M N O" }, C: { "1": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w 6B 7B", "194": "0 1 2 x y z", "516": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB" }, D: { "1": "a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "8 9 I p J D E F A B C K L G M N O q r s t AB BB CB DB EB FB GB HB IB JB KB LB MB", "322": "0 1 2 3 4 5 6 7 u v w x y z NB OB PB QB", "1028": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC", "33": "E F A B C DC EC vB lB mB", "2084": "D CC" }, F: { "1": "kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "322": "AB BB CB", "1028": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "E RC SC TC UC VC WC XC YC ZC", "2084": "PC QC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1028": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "1028": "wB" }, R: { "1": "1C" }, S: { "516": "2C" } }, B: 5, C: "CSS position:sticky" };
  }
});
var require_css_subgrid = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-subgrid.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS Subgrid" };
  }
});
var require_css_supports_api = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-supports-api.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G M N O" }, C: { "1": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q 6B 7B", "66": "r s", "260": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, D: { "1": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w x y", "260": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC", "132": "mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "132": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B", "132": "mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS.supports() API" };
  }
});
var require_css_table = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-table.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "2": "J D 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "132": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS Table display" };
  }
});
var require_css_text_align_last = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-text-align-last.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "132": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "4": "C K L G M N O" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB" }, D: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 I p J D E F A B C K L G M N O q r s t u v w x y z", "322": "6 7 8 9 AB BB CB DB EB FB GB HB" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s IC JC KC LC lB 2B MC mB", "578": "0 1 2 3 4 t u v w x y z" }, G: { "1": "nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "33": "2C" } }, B: 4, C: "CSS3 text-align-last" };
  }
});
var require_css_text_indent = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-text-indent.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "132": "J D E F A B 4B" }, B: { "132": "C K L G M N O", "388": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "132": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "132": "0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z", "388": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "nB 1B HC", "132": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "132": "F B C G M N O q r s t u v IC JC KC LC lB 2B MC mB", "388": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "nB 1B", "132": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "132": "hC" }, I: { "132": "oB I iC jC kC lC 3B mC nC", "388": "H" }, J: { "132": "D A" }, K: { "132": "A B C lB 2B mB", "388": "c" }, L: { "388": "H" }, M: { "132": "b" }, N: { "132": "A B" }, O: { "388": "oC" }, P: { "132": "I", "388": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "388": "wB" }, R: { "388": "1C" }, S: { "132": "2C" } }, B: 4, C: "CSS text-indent" };
  }
});
var require_css_text_justify = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-text-justify.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "16": "J D 4B", "132": "E F A B" }, B: { "132": "C K L G M N O", "322": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB 6B 7B", "1025": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "1602": "PB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB", "322": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "322": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "322": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "322": "c" }, L: { "322": "H" }, M: { "1025": "b" }, N: { "132": "A B" }, O: { "322": "oC" }, P: { "2": "I", "322": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "322": "wB" }, R: { "322": "1C" }, S: { "2": "2C" } }, B: 4, C: "CSS text-justify" };
  }
});
var require_css_text_orientation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-text-orientation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "9 AB BB" }, D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB" }, E: { "1": "L G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC", "16": "A", "33": "B C K vB lB mB wB" }, F: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS text-orientation" };
  }
});
var require_css_text_spacing = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-text-spacing.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D 4B", "161": "E F A B" }, B: { "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "161": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "16": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS Text 4 text-spacing" };
  }
});
var require_css_textshadow = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-textshadow.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "129": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "260": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "4": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "A", "4": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "129": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 Text-shadow" };
  }
});
var require_css_touch_action = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-touch-action.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F 4B", "289": "A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB", "1025": "NB OB PB QB RB" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t IC JC KC LC lB 2B MC mB" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC", "516": "TC UC VC WC XC YC ZC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "289": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "194": "2C" } }, B: 2, C: "CSS touch-action property" };
  }
});
var require_css_transitions = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-transitions.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "33": "p J D E F A B C K L G", "164": "I" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "I p J D E F A B C K L G M N O q r s t u v w" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "J BC", "164": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F IC JC", "33": "C", "164": "B KC LC lB 2B MC" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "33": "PC", "164": "uB NC 3B OC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "33": "oB I iC jC kC lC 3B" }, J: { "1": "A", "33": "D" }, K: { "1": "c mB", "33": "C", "164": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "CSS3 Transitions" };
  }
});
var require_css_unicode_bidi = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-unicode-bidi.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "132": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "132": "C K L G M N O" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "33": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB", "132": "5B oB I p J D E F 6B 7B", "292": "A B C K L G M" }, D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "I p J D E F A B C K L G M", "548": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB" }, E: { "132": "I p J D E AC uB BC CC DC", "548": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "132": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "132": "E uB NC 3B OC PC QC RC", "548": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "16": "hC" }, I: { "1": "H", "16": "oB I iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "1": "c", "16": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "16": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "33": "2C" } }, B: 4, C: "CSS unicode-bidi property" };
  }
});
var require_css_unset_value = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-unset-value.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x 6B 7B" }, D: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y IC JC KC LC lB 2B MC mB" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS unset value" };
  }
});
var require_css_variables = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-variables.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L", "260": "G" }, C: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB", "194": "JB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC", "260": "EC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "6" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC", "260": "TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS Variables (Custom Properties)" };
  }
});
var require_css_when_else = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-when-else.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "CSS @when / @else conditional rules" };
  }
});
var require_css_widows_orphans = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-widows-orphans.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D 4B", "129": "E F" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "129": "F B IC JC KC LC lB 2B MC" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "2": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "CSS widows & orphans" };
  }
});
var require_css_width_stretch = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-width-stretch.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "2": "I p J D E F A B C K L G M N O q r s", "33": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B", "33": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, M: { "33": "b" }, A: { "2": "J D E F A B 4B" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, K: { "2": "A B C lB 2B mB", "33": "c" }, E: { "2": "I p J AC uB BC CC HC", "33": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B" }, G: { "2": "uB NC 3B OC PC", "33": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, P: { "2": "I", "33": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, I: { "2": "oB I iC jC kC lC 3B", "33": "H mC nC" } }, B: 6, C: "width: stretch property" };
  }
});
var require_css_writing_mode = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-writing-mode.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "132": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "322": "7 8 9 AB BB" }, D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J", "16": "D", "33": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "16": "p", "33": "J D E F A BC CC DC EC vB" }, F: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 G M N O q r s t u v w x y z" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B", "33": "E OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "iC jC kC", "33": "oB I lC 3B mC nC" }, J: { "33": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "36": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "33": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS writing-mode property" };
  }
});
var require_css_zoom = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css-zoom.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D 4B", "129": "E F A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "129": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS zoom" };
  }
});
var require_css3_attr = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css3-attr.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS3 attr() function for all properties" };
  }
});
var require_css3_boxsizing = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css3-boxsizing.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "8": "J D 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "33": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "I p J D E F" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "33": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "I H lC 3B mC nC", "33": "oB iC jC kC" }, J: { "1": "A", "33": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "CSS3 Box-sizing" };
  }
});
var require_css3_colors = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css3-colors.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "4": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "2": "F", "4": "IC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS3 Colors" };
  }
});
var require_css3_cursors_grab = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css3-cursors-grab.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "33": "5B oB I p J D E F A B C K L G M N O q r s t u v w x 6B 7B" }, D: { "1": "aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "I p J D E F A AC uB BC CC DC EC vB" }, F: { "1": "C QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F B IC JC KC LC lB 2B", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "33": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "CSS grab & grabbing cursors" };
  }
});
var require_css3_cursors_newer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css3-cursors-newer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "33": "5B oB I p J D E F A B C K L G M N O q r s t u 6B 7B" }, D: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "I p J D E AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F B IC JC KC LC lB 2B", "33": "G M N O q r s t u" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "33": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "CSS3 Cursors: zoom-in & zoom-out" };
  }
});
var require_css3_cursors = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css3-cursors.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "132": "J D E 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "4": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "I" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "4": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "260": "F B C IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "16": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "CSS3 Cursors (original values)" };
  }
});
var require_css3_tabsize = __commonJS({
  "../../node_modules/caniuse-lite/data/features/css3-tabsize.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "33": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z", "164": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB" }, D: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r", "132": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB" }, E: { "1": "L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC", "132": "D E F A B C K CC DC EC vB lB mB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F IC JC KC", "132": "G M N O q r s t u v w x y z", "164": "B C LC lB 2B MC mB" }, G: { "1": "dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC", "132": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC" }, H: { "164": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B", "132": "mC nC" }, J: { "132": "D A" }, K: { "1": "c", "2": "A", "164": "B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "164": "2C" } }, B: 4, C: "CSS3 tab-size" };
  }
});
var require_currentcolor = __commonJS({
  "../../node_modules/caniuse-lite/data/features/currentcolor.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS currentColor value" };
  }
});
var require_custom_elements = __commonJS({
  "../../node_modules/caniuse-lite/data/features/custom-elements.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "8": "A B" }, B: { "1": "P", "2": "Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "8": "C K L G M N O" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s t pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "66": "0 u v w x y z", "72": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P", "2": "I p J D E F A B C K L G M N O q r s t u v w x Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "66": "0 1 2 3 y z" }, E: { "2": "I p AC uB BC", "8": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB", "2": "F B C ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "66": "G M N O q" }, G: { "2": "uB NC 3B OC PC", "8": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "nC", "2": "oB I H iC jC kC lC 3B mC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC", "2": "wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "72": "2C" } }, B: 7, C: "Custom Elements (deprecated V0 spec)" };
  }
});
var require_custom_elementsv1 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/custom-elementsv1.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "8": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "8": "C K L G M N O" }, C: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "8": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB", "456": "LB MB NB OB PB QB RB SB TB", "712": "pB UB qB VB" }, D: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB", "8": "NB OB", "132": "PB QB RB SB TB pB UB qB VB WB c XB YB" }, E: { "2": "I p J D AC uB BC CC DC", "8": "E F A EC", "132": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB IC JC KC LC lB 2B MC mB", "132": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC", "132": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "132": "pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "8": "2C" } }, B: 1, C: "Custom Elements (V1)" };
  }
});
var require_customevent = __commonJS({
  "../../node_modules/caniuse-lite/data/features/customevent.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "132": "F A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B", "132": "J D E F A" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I", "16": "p J D E K L", "388": "F A B C" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "16": "p J", "388": "BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F IC JC KC LC", "132": "B lB 2B" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "NC", "16": "uB 3B", "388": "OC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "iC jC kC", "388": "oB I lC 3B" }, J: { "1": "A", "388": "D" }, K: { "1": "C c mB", "2": "A", "132": "B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "CustomEvent" };
  }
});
var require_datalist = __commonJS({
  "../../node_modules/caniuse-lite/data/features/datalist.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E F", "260": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G", "1284": "M N O" }, C: { "8": "5B oB 6B 7B", "516": "n o b H sB tB", "4612": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m" }, D: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "8": "I p J D E F A B C K L G M N O q", "132": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I p J D E F A B C AC uB BC CC DC EC vB lB" }, F: { "1": "F B C c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "8": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC", "2049": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H nC", "8": "oB I iC jC kC lC 3B mC" }, J: { "1": "A", "8": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "516": "b" }, N: { "8": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Datalist element" };
  }
});
var require_dataset = __commonJS({
  "../../node_modules/caniuse-lite/data/features/dataset.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "4": "J D E F A 4B" }, B: { "1": "C K L G M", "129": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "4": "5B oB I p 6B 7B", "129": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "GB HB IB JB KB LB MB NB OB PB", "4": "I p J", "129": "0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "4": "I p AC uB", "129": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "3 4 5 6 7 8 9 C AB BB CB lB 2B MC mB", "4": "F B IC JC KC LC", "129": "0 1 2 G M N O q r s t u v w x y z DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "4": "uB NC 3B", "129": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "4": "hC" }, I: { "4": "iC jC kC", "129": "oB I H lC 3B mC nC" }, J: { "129": "D A" }, K: { "1": "C lB 2B mB", "4": "A B", "129": "c" }, L: { "129": "H" }, M: { "129": "b" }, N: { "1": "B", "4": "A" }, O: { "129": "oC" }, P: { "129": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "129": "wB" }, R: { "129": "1C" }, S: { "1": "2C" } }, B: 1, C: "dataset & data-* attributes" };
  }
});
var require_datauri = __commonJS({
  "../../node_modules/caniuse-lite/data/features/datauri.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D 4B", "132": "E", "260": "F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K G M N O", "772": "L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "260": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Data URIs" };
  }
});
var require_date_tolocaledatestring = __commonJS({
  "../../node_modules/caniuse-lite/data/features/date-tolocaledatestring.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "16": "4B", "132": "J D E F A B" }, B: { "1": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "132": "C K L G M N" }, C: { "1": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "132": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "260": "NB OB PB QB", "772": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB" }, D: { "1": "cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "I p J D E F A B C K L G M N O q r s t u", "260": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB", "772": "0 1 2 3 4 5 6 7 8 v w x y z" }, E: { "1": "C K L G mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB", "132": "J D E F A BC CC DC EC", "260": "B vB lB" }, F: { "1": "SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F B C IC JC KC LC lB 2B MC", "132": "mB", "260": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "772": "G M N O q r s t u v" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC", "132": "E PC QC RC SC TC UC" }, H: { "132": "hC" }, I: { "1": "H", "16": "oB iC jC kC", "132": "I lC 3B", "772": "mC nC" }, J: { "132": "D A" }, K: { "1": "c", "16": "A B C lB 2B", "132": "mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "260": "I pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "132": "2C" } }, B: 6, C: "Date.prototype.toLocaleDateString" };
  }
});
var require_declarative_shadow_dom = __commonJS({
  "../../node_modules/caniuse-lite/data/features/declarative-shadow-dom.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "Z a d e f g h i j k l m n o b H", "2": "C K L G M N O P Q R S T U V W X Y" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T", "66": "U V W X Y" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B", "16": "HC" }, F: { "1": "jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC xC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "Declarative Shadow DOM" };
  }
});
var require_decorators = __commonJS({
  "../../node_modules/caniuse-lite/data/features/decorators.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Decorators" };
  }
});
var require_details = __commonJS({
  "../../node_modules/caniuse-lite/data/features/details.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "F A B 4B", "8": "J D E" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B", "8": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 6B 7B", "194": "IB JB" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "8": "I p J D E F A B", "257": "0 1 2 3 4 5 6 q r s t u v w x y z", "769": "C K L G M N O" }, E: { "1": "C K L G mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I p AC uB BC", "257": "J D E F A CC DC EC", "1025": "B vB lB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "C lB 2B MC mB", "8": "F B IC JC KC LC" }, G: { "1": "E PC QC RC SC TC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "uB NC 3B OC", "1025": "UC VC WC" }, H: { "8": "hC" }, I: { "1": "I H lC 3B mC nC", "8": "oB iC jC kC" }, J: { "1": "A", "8": "D" }, K: { "1": "c", "8": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Details & Summary elements" };
  }
});
var require_deviceorientation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/deviceorientation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "132": "B" }, B: { "1": "C K L G M N O", "4": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB 6B", "4": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "I p 7B" }, D: { "2": "I p J", "4": "0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "4": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "uB NC", "4": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "iC jC kC", "4": "oB I H lC 3B mC nC" }, J: { "2": "D", "4": "A" }, K: { "1": "C mB", "2": "A B lB 2B", "4": "c" }, L: { "4": "H" }, M: { "4": "b" }, N: { "1": "B", "2": "A" }, O: { "4": "oC" }, P: { "4": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "4": "wB" }, R: { "4": "1C" }, S: { "4": "2C" } }, B: 4, C: "DeviceOrientation & DeviceMotion events" };
  }
});
var require_devicepixelratio = __commonJS({
  "../../node_modules/caniuse-lite/data/features/devicepixelratio.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F B IC JC KC LC lB 2B" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "C c mB", "2": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Window.devicePixelRatio" };
  }
});
var require_dialog = __commonJS({
  "../../node_modules/caniuse-lite/data/features/dialog.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 6B 7B", "194": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P", "1218": "Q R rB S T U V W X Y Z a d e f g h i" }, D: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z", "322": "3 4 5 6 7" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O IC JC KC LC lB 2B MC mB", "578": "q r s t u" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Dialog element" };
  }
});
var require_dispatchevent = __commonJS({
  "../../node_modules/caniuse-lite/data/features/dispatchevent.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "16": "4B", "129": "F A", "130": "J D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "16": "F" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "129": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "EventTarget.dispatchEvent" };
  }
});
var require_dnssec = __commonJS({
  "../../node_modules/caniuse-lite/data/features/dnssec.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "132": "J D E F A B 4B" }, B: { "132": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "132": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "132": "2 3 4 5 6 7 8 9 I p AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "388": "0 1 J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "132": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "132": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "132": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "132": "hC" }, I: { "132": "oB I H iC jC kC lC 3B mC nC" }, J: { "132": "D A" }, K: { "132": "A B C c lB 2B mB" }, L: { "132": "H" }, M: { "132": "b" }, N: { "132": "A B" }, O: { "132": "oC" }, P: { "132": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "132": "wB" }, R: { "132": "1C" }, S: { "132": "2C" } }, B: 6, C: "DNSSEC and DANE" };
  }
});
var require_do_not_track = __commonJS({
  "../../node_modules/caniuse-lite/data/features/do-not-track.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "164": "F A", "260": "B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G M" }, C: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E 6B 7B", "516": "0 1 2 F A B C K L G M N O q r s t u v w x y z" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t" }, E: { "1": "J A B C BC EC vB lB", "2": "I p K L G AC uB mB wB FC GC xB yB zB 0B nB 1B HC", "1028": "D E F CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC" }, G: { "1": "SC TC UC VC WC XC YC", "2": "uB NC 3B OC PC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "1028": "E QC RC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "16": "D", "1028": "A" }, K: { "1": "c mB", "16": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "164": "A", "260": "B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 7, C: "Do Not Track API" };
  }
});
var require_document_currentscript = __commonJS({
  "../../node_modules/caniuse-lite/data/features/document-currentscript.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "E F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G IC JC KC LC lB 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "document.currentScript" };
  }
});
var require_document_evaluate_xpath = __commonJS({
  "../../node_modules/caniuse-lite/data/features/document-evaluate-xpath.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "16": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "16": "F" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 7, C: "document.evaluate & XPath" };
  }
});
var require_document_execcommand = __commonJS({
  "../../node_modules/caniuse-lite/data/features/document-execcommand.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "16": "F IC" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC", "16": "3B OC PC" }, H: { "2": "hC" }, I: { "1": "H lC 3B mC nC", "2": "oB I iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 7, C: "Document.execCommand()" };
  }
});
var require_document_policy = __commonJS({
  "../../node_modules/caniuse-lite/data/features/document-policy.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T", "132": "U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T", "132": "U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB IC JC KC LC lB 2B MC mB", "132": "dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "132": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "132": "c" }, L: { "132": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "132": "1C" }, S: { "2": "2C" } }, B: 7, C: "Document Policy" };
  }
});
var require_document_scrollingelement = __commonJS({
  "../../node_modules/caniuse-lite/data/features/document-scrollingelement.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "16": "C K" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 6B 7B" }, D: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "document.scrollingElement" };
  }
});
var require_documenthead = __commonJS({
  "../../node_modules/caniuse-lite/data/features/documenthead.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "16": "p" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F IC JC KC LC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "document.head" };
  }
});
var require_dom_manip_convenience = __commonJS({
  "../../node_modules/caniuse-lite/data/features/dom-manip-convenience.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 6B 7B" }, D: { "1": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB", "194": "NB OB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB IC JC KC LC lB 2B MC mB", "194": "BB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "DOM manipulation convenience methods" };
  }
});
var require_dom_range = __commonJS({
  "../../node_modules/caniuse-lite/data/features/dom-range.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "4B", "8": "J D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Document Object Model Range" };
  }
});
var require_domcontentloaded = __commonJS({
  "../../node_modules/caniuse-lite/data/features/domcontentloaded.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "DOMContentLoaded" };
  }
});
var require_dommatrix = __commonJS({
  "../../node_modules/caniuse-lite/data/features/dommatrix.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "132": "A B" }, B: { "132": "C K L G M N O", "1028": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "1028": "bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2564": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB", "3076": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB" }, D: { "16": "I p J D", "132": "0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB", "388": "E", "1028": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "16": "I AC uB", "132": "p J D E F A BC CC DC EC vB", "1028": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB", "1028": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "16": "uB NC 3B", "132": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "132": "I lC 3B mC nC", "292": "oB iC jC kC", "1028": "H" }, J: { "16": "D", "132": "A" }, K: { "2": "A B C lB 2B mB", "1028": "c" }, L: { "1028": "H" }, M: { "1028": "b" }, N: { "132": "A B" }, O: { "1028": "oC" }, P: { "132": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1028": "wB" }, R: { "1028": "1C" }, S: { "2564": "2C" } }, B: 4, C: "DOMMatrix" };
  }
});
var require_download = __commonJS({
  "../../node_modules/caniuse-lite/data/features/download.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Download attribute" };
  }
});
var require_dragndrop = __commonJS({
  "../../node_modules/caniuse-lite/data/features/dragndrop.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "644": "J D E F 4B", "772": "A B" }, B: { "1": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G M N" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "8": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "8": "F B IC JC KC LC lB 2B MC" }, G: { "1": "gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "1025": "H" }, J: { "2": "D A" }, K: { "1": "mB", "8": "A B C lB 2B", "1025": "c" }, L: { "1025": "H" }, M: { "2": "b" }, N: { "1": "A B" }, O: { "1025": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 1, C: "Drag and Drop" };
  }
});
var require_element_closest = __commonJS({
  "../../node_modules/caniuse-lite/data/features/element-closest.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L" }, C: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Element.closest()" };
  }
});
var require_element_from_point = __commonJS({
  "../../node_modules/caniuse-lite/data/features/element-from-point.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "16": "4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "16": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "16": "F IC JC KC LC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "C c mB", "16": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "document.elementFromPoint()" };
  }
});
var require_element_scroll_methods = __commonJS({
  "../../node_modules/caniuse-lite/data/features/element-scroll-methods.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB" }, E: { "1": "L G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC", "132": "A B C K vB lB mB wB" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB IC JC KC LC lB 2B MC mB" }, G: { "1": "fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC", "132": "UC VC WC XC YC ZC aC bC cC dC eC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Scroll methods on elements (scroll, scrollTo, scrollBy)" };
  }
});
var require_eme = __commonJS({
  "../../node_modules/caniuse-lite/data/features/eme.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "164": "B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 I p J D E F A B C K L G M N O q r s t u v w x y z", "132": "6 7 8 9 AB BB CB" }, E: { "1": "C K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC", "164": "D E F A B DC EC vB lB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s IC JC KC LC lB 2B MC mB", "132": "t u v w x y z" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Encrypted Media Extensions" };
  }
});
var require_eot = __commonJS({
  "../../node_modules/caniuse-lite/data/features/eot.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "2": "4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "EOT - Embedded OpenType fonts" };
  }
});
var require_es5 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/es5.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D 4B", "260": "F", "1026": "E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "4": "5B oB 6B 7B", "132": "I p J D E F A B C K L G M N O q r" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "I p J D E F A B C K L G M N O", "132": "q r s t" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "4": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "4": "F B C IC JC KC LC lB 2B MC", "132": "mB" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "4": "uB NC 3B OC" }, H: { "132": "hC" }, I: { "1": "H mC nC", "4": "oB iC jC kC", "132": "lC 3B", "900": "I" }, J: { "1": "A", "4": "D" }, K: { "1": "c", "4": "A B C lB 2B", "132": "mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "ECMAScript 5" };
  }
});
var require_es6_class = __commonJS({
  "../../node_modules/caniuse-lite/data/features/es6-class.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB", "132": "DB EB FB GB HB IB JB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "132": "0 1 2 3 4 5 6" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "ES6 classes" };
  }
});
var require_es6_generators = __commonJS({
  "../../node_modules/caniuse-lite/data/features/es6-generators.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w 6B 7B" }, D: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "ES6 Generators" };
  }
});
var require_es6_module_dynamic_import = __commonJS({
  "../../node_modules/caniuse-lite/data/features/es6-module-dynamic-import.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB 6B 7B", "194": "YB" }, D: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "JavaScript modules: dynamic import()" };
  }
});
var require_es6_module = __commonJS({
  "../../node_modules/caniuse-lite/data/features/es6-module.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L", "4097": "M N O", "4290": "G" }, C: { "1": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB 6B 7B", "322": "PB QB RB SB TB pB" }, D: { "1": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB", "194": "UB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC", "3076": "vB" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IC JC KC LC lB 2B MC mB", "194": "IB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC", "3076": "VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "JavaScript modules via script tag" };
  }
});
var require_es6_number = __commonJS({
  "../../node_modules/caniuse-lite/data/features/es6-number.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G 6B 7B", "132": "M N O q r s t u v", "260": "0 1 w x y z", "516": "2" }, D: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O", "1028": "0 1 2 3 4 q r s t u v w x y z" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "1028": "G M N O q r" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC", "1028": "lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "ES6 Number" };
  }
});
var require_es6_string_includes = __commonJS({
  "../../node_modules/caniuse-lite/data/features/es6-string-includes.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB 6B 7B" }, D: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "String.prototype.includes" };
  }
});
var require_es6 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/es6.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "388": "B" }, B: { "257": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L", "769": "G M N O" }, C: { "2": "5B oB I p 6B 7B", "4": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "257": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "I p J D E F A B C K L G M N O q r", "4": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "257": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC", "4": "E F DC EC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "4": "0 1 2 3 4 5 6 7 8 G M N O q r s t u v w x y z", "257": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC", "4": "E QC RC SC TC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "4": "mC nC", "257": "H" }, J: { "2": "D", "4": "A" }, K: { "2": "A B C lB 2B mB", "257": "c" }, L: { "257": "H" }, M: { "257": "b" }, N: { "2": "A", "388": "B" }, O: { "257": "oC" }, P: { "4": "I", "257": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "257": "wB" }, R: { "257": "1C" }, S: { "4": "2C" } }, B: 6, C: "ECMAScript 2015 (ES6)" };
  }
});
var require_eventsource = __commonJS({
  "../../node_modules/caniuse-lite/data/features/eventsource.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "4": "F IC JC KC LC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "D A" }, K: { "1": "C c lB 2B mB", "4": "A B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Server-sent events" };
  }
});
var require_extended_system_fonts = __commonJS({
  "../../node_modules/caniuse-lite/data/features/extended-system-fonts.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "ui-serif, ui-sans-serif, ui-monospace and ui-rounded values for font-family" };
  }
});
var require_feature_policy = __commonJS({
  "../../node_modules/caniuse-lite/data/features/feature-policy.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W", "2": "C K L G M N O", "1025": "X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB 6B 7B", "260": "gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "gB hB iB jB kB P Q R S T U V W", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB", "132": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB", "1025": "X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B AC uB BC CC DC EC vB", "772": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IC JC KC LC lB 2B MC mB", "132": "IB JB KB LB MB NB OB PB QB RB SB TB UB", "1025": "hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC", "772": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1025": "H" }, M: { "260": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "uC vC wC xC yC nB zC 0C", "2": "I pC qC rC", "132": "sC tC vB" }, Q: { "132": "wB" }, R: { "1025": "1C" }, S: { "2": "2C" } }, B: 7, C: "Feature Policy" };
  }
});
var require_fetch = __commonJS({
  "../../node_modules/caniuse-lite/data/features/fetch.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "1025": "AB", "1218": "5 6 7 8 9" }, D: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB", "260": "BB", "772": "CB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x IC JC KC LC lB 2B MC mB", "260": "y", "772": "z" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Fetch" };
  }
});
var require_fieldset_disabled = __commonJS({
  "../../node_modules/caniuse-lite/data/features/fieldset-disabled.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "16": "4B", "132": "E F", "388": "J D A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G", "16": "M N O q" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "16": "F IC" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC" }, H: { "388": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A", "260": "B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "disabled attribute of the fieldset element" };
  }
});
var require_fileapi = __commonJS({
  "../../node_modules/caniuse-lite/data/features/fileapi.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "260": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B", "260": "I p J D E F A B C K L G M N O q r s t u v w x y 7B" }, D: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p", "260": "0 1 2 3 4 5 6 7 8 K L G M N O q r s t u v w x y z", "388": "J D E F A B C" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB", "260": "J D E F CC DC EC", "388": "BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B IC JC KC LC", "260": "C G M N O q r s t u v lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "260": "E PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H nC", "2": "iC jC kC", "260": "mC", "388": "oB I lC 3B" }, J: { "260": "A", "388": "D" }, K: { "1": "c", "2": "A B", "260": "C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A", "260": "B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "File API" };
  }
});
var require_filereader = __commonJS({
  "../../node_modules/caniuse-lite/data/features/filereader.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "132": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "2": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F B IC JC KC LC" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "C c lB 2B mB", "2": "A B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "FileReader API" };
  }
});
var require_filereadersync = __commonJS({
  "../../node_modules/caniuse-lite/data/features/filereadersync.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F IC JC", "16": "B KC LC lB 2B" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "C c 2B mB", "2": "A", "16": "B lB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "FileReaderSync" };
  }
});
var require_filesystem = __commonJS({
  "../../node_modules/caniuse-lite/data/features/filesystem.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "I p J D", "33": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "36": "E F A B C" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D", "33": "A" }, K: { "2": "A B C c lB 2B mB" }, L: { "33": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "33": "oC" }, P: { "2": "I", "33": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "33": "1C" }, S: { "2": "2C" } }, B: 7, C: "Filesystem & FileWriter API" };
  }
});
var require_flac = __commonJS({
  "../../node_modules/caniuse-lite/data/features/flac.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 6B 7B" }, D: { "1": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB", "16": "FB GB HB", "388": "IB JB KB LB MB NB OB PB QB" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "516": "B C lB mB" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "iC jC kC", "16": "oB I lC 3B mC nC" }, J: { "1": "A", "2": "D" }, K: { "1": "c mB", "16": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "129": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "FLAC audio format" };
  }
});
var require_flexbox_gap = __commonJS({
  "../../node_modules/caniuse-lite/data/features/flexbox-gap.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O P Q R S" }, C: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 6B 7B" }, D: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S" }, E: { "1": "G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB" }, F: { "1": "cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB IC JC KC LC lB 2B MC mB" }, G: { "1": "fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "gap property for Flexbox" };
  }
});
var require_flexbox = __commonJS({
  "../../node_modules/caniuse-lite/data/features/flexbox.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "1028": "B", "1316": "A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "164": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B", "516": "t u v w x y" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "s t u v w x y z", "164": "I p J D E F A B C K L G M N O q r" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "D E CC DC", "164": "I p J AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B C IC JC KC LC lB 2B MC", "33": "G M" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "33": "E QC RC", "164": "uB NC 3B OC PC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "164": "oB I iC jC kC lC 3B" }, J: { "1": "A", "164": "D" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "292": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS Flexible Box Layout Module" };
  }
});
var require_flow_root = __commonJS({
  "../../node_modules/caniuse-lite/data/features/flow-root.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 6B 7B" }, D: { "1": "TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB mB" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB IC JC KC LC lB 2B MC mB" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "display: flow-root" };
  }
});
var require_focusin_focusout_events = __commonJS({
  "../../node_modules/caniuse-lite/data/features/focusin-focusout-events.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "2": "4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F IC JC KC LC", "16": "B lB 2B" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "I H lC 3B mC nC", "2": "iC jC kC", "16": "oB" }, J: { "1": "D A" }, K: { "1": "C c mB", "2": "A", "16": "B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "focusin & focusout events" };
  }
});
var require_font_family_system_ui = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-family-system-ui.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 6B 7B", "132": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, D: { "1": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "260": "OB PB QB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC", "16": "F", "132": "A EC vB" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC", "132": "SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "132": "2C" } }, B: 5, C: "system-ui value for font-family" };
  }
});
var require_font_feature = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-feature.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "33": "0 1 2 3 4 G M N O q r s t u v w x y z", "164": "I p J D E F A B C K L" }, D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G", "33": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB", "292": "M N O q r" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "D E F AC uB CC DC", "4": "I p J BC" }, F: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 G M N O q r s t u v w x y z" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E QC RC SC", "4": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B", "33": "mC nC" }, J: { "2": "D", "33": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "33": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS font-feature-settings" };
  }
});
var require_font_kerning = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-kerning.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u 6B 7B", "194": "0 1 2 3 4 v w x y z" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w x y z", "33": "0 1 2 3" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC", "33": "D E F DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G IC JC KC LC lB 2B MC mB", "33": "M N O q" }, G: { "1": "YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "33": "E RC SC TC UC VC WC XC" }, H: { "2": "hC" }, I: { "1": "H nC", "2": "oB I iC jC kC lC 3B", "33": "mC" }, J: { "2": "D", "33": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 font-kerning" };
  }
});
var require_font_loading = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-loading.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "6 7 8 9 AB BB" }, D: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "CSS Font Loading" };
  }
});
var require_font_size_adjust = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-size-adjust.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "194": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB", "194": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "194": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 2, C: "CSS font-size-adjust" };
  }
});
var require_font_smooth = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-smooth.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "676": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s t u v 6B 7B", "804": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "I", "676": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "AC uB", "676": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "676": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "804": "2C" } }, B: 7, C: "CSS font-smooth" };
  }
});
var require_font_unicode_range = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-unicode-range.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "4": "F A B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "4": "C K L G M" }, C: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "7 8 9 AB BB CB DB EB" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "4": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "4": "G M N O q r s t" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "4": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "4": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "4": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "4": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "4": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Font unicode-range subsetting" };
  }
});
var require_font_variant_alternates = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-variant-alternates.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "130": "A B" }, B: { "130": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "130": "I p J D E F A B C K L G M N O q r s t u", "322": "0 1 2 3 4 v w x y z" }, D: { "2": "I p J D E F A B C K L G", "130": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "D E F AC uB CC DC", "130": "I p J BC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "130": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB QC RC SC", "130": "NC 3B OC PC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "130": "H mC nC" }, J: { "2": "D", "130": "A" }, K: { "2": "A B C lB 2B mB", "130": "c" }, L: { "130": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "130": "oC" }, P: { "130": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "130": "wB" }, R: { "130": "1C" }, S: { "1": "2C" } }, B: 5, C: "CSS font-variant-alternates" };
  }
});
var require_font_variant_numeric = __commonJS({
  "../../node_modules/caniuse-lite/data/features/font-variant-numeric.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC" }, F: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "16": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS font-variant-numeric" };
  }
});
var require_fontface = __commonJS({
  "../../node_modules/caniuse-lite/data/features/fontface.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "132": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "2": "F IC" }, G: { "1": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "260": "uB NC" }, H: { "2": "hC" }, I: { "1": "I H lC 3B mC nC", "2": "iC", "4": "oB jC kC" }, J: { "1": "A", "4": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "@font-face Web fonts" };
  }
});
var require_form_attribute = __commonJS({
  "../../node_modules/caniuse-lite/data/features/form-attribute.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "16": "p" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Form attribute" };
  }
});
var require_form_submit_attributes = __commonJS({
  "../../node_modules/caniuse-lite/data/features/form-submit-attributes.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "2": "F IC", "16": "JC KC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "I H lC 3B mC nC", "2": "iC jC kC", "16": "oB" }, J: { "1": "A", "2": "D" }, K: { "1": "B C c lB 2B mB", "16": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Attributes for form submission" };
  }
});
var require_form_validation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/form-validation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "132": "p J D E F A BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "2": "F IC" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB", "132": "E NC 3B OC PC QC RC SC TC UC" }, H: { "516": "hC" }, I: { "1": "H nC", "2": "oB iC jC kC", "132": "I lC 3B mC" }, J: { "1": "A", "132": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "260": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "132": "2C" } }, B: 1, C: "Form validation" };
  }
});
var require_forms = __commonJS({
  "../../node_modules/caniuse-lite/data/features/forms.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "4": "A B", "8": "J D E F" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "4": "C K L G" }, C: { "4": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "5B oB 6B 7B" }, D: { "1": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB" }, E: { "4": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "AC uB" }, F: { "1": "F B C NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "4": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB" }, G: { "2": "uB", "4": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B", "4": "mC nC" }, J: { "2": "D", "4": "A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "4": "b" }, N: { "4": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "4": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "4": "2C" } }, B: 1, C: "HTML5 form features" };
  }
});
var require_fullscreen = __commonJS({
  "../../node_modules/caniuse-lite/data/features/fullscreen.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "548": "B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "516": "C K L G M N O" }, C: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F 6B 7B", "676": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB", "1700": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB" }, D: { "1": "dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L", "676": "G M N O q", "804": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB" }, E: { "2": "I p AC uB", "548": "yB zB 0B nB 1B HC", "676": "BC", "804": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B C IC JC KC LC lB 2B MC", "804": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC", "2052": "YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D", "292": "A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A", "548": "B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "804": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Full Screen API" };
  }
});
var require_gamepad = __commonJS({
  "../../node_modules/caniuse-lite/data/features/gamepad.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r", "33": "s t u v" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Gamepad API" };
  }
});
var require_geolocation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/geolocation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "4B", "8": "J D E" }, B: { "1": "C K L G M N O", "129": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB 6B 7B", "8": "5B oB", "129": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB", "4": "I", "129": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I AC uB", "129": "A" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C M N O q r s t u v w x y z LC lB 2B MC mB", "2": "F G IC", "8": "JC KC", "129": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC", "129": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I iC jC kC lC 3B mC nC", "129": "H" }, J: { "1": "D A" }, K: { "1": "B C lB 2B mB", "8": "A", "129": "c" }, L: { "129": "H" }, M: { "129": "b" }, N: { "1": "A B" }, O: { "129": "oC" }, P: { "1": "I", "129": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "129": "wB" }, R: { "129": "1C" }, S: { "1": "2C" } }, B: 2, C: "Geolocation" };
  }
});
var require_getboundingclientrect = __commonJS({
  "../../node_modules/caniuse-lite/data/features/getboundingclientrect.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "644": "J D 4B", "2049": "F A B", "2692": "E" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2049": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B", "260": "I p J D E F A B", "1156": "oB", "1284": "6B", "1796": "7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "16": "F IC", "132": "JC KC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "132": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2049": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Element.getBoundingClientRect()" };
  }
});
var require_getcomputedstyle = __commonJS({
  "../../node_modules/caniuse-lite/data/features/getcomputedstyle.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B", "132": "oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "260": "I p J D E F A" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "260": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "260": "F IC JC KC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "260": "uB NC 3B" }, H: { "260": "hC" }, I: { "1": "I H lC 3B mC nC", "260": "oB iC jC kC" }, J: { "1": "A", "260": "D" }, K: { "1": "B C c lB 2B mB", "260": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "getComputedStyle" };
  }
});
var require_getelementsbyclassname = __commonJS({
  "../../node_modules/caniuse-lite/data/features/getelementsbyclassname.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "4B", "8": "J D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "8": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "getElementsByClassName" };
  }
});
var require_getrandomvalues = __commonJS({
  "../../node_modules/caniuse-lite/data/features/getrandomvalues.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "33": "B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A", "33": "B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "crypto.getRandomValues()" };
  }
});
var require_gyroscope = __commonJS({
  "../../node_modules/caniuse-lite/data/features/gyroscope.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "194": "TB pB UB qB VB WB c XB YB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "Gyroscope" };
  }
});
var require_hardwareconcurrency = __commonJS({
  "../../node_modules/caniuse-lite/data/features/hardwareconcurrency.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 6B 7B" }, D: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "2": "I p J D AC uB BC CC DC", "129": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "194": "E F A EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u IC JC KC LC lB 2B MC mB" }, G: { "2": "uB NC 3B OC PC QC", "129": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "194": "E RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "navigator.hardwareConcurrency" };
  }
});
var require_hashchange = __commonJS({
  "../../node_modules/caniuse-lite/data/features/hashchange.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "8": "J D 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "8": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "8": "I" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "8": "F IC JC KC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H jC kC lC 3B mC nC", "2": "iC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "8": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Hashchange event" };
  }
});
var require_heif = __commonJS({
  "../../node_modules/caniuse-lite/data/features/heif.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A AC uB BC CC DC EC vB", "130": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "130": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "HEIF/ISO Base Media File Format" };
  }
});
var require_hevc = __commonJS({
  "../../node_modules/caniuse-lite/data/features/hevc.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "132": "B" }, B: { "132": "C K L G M N O", "1028": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b", "2052": "H sB tB 8B 9B" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "516": "B C lB mB" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "258": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "258": "c" }, L: { "260": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I", "258": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "HEVC/H.265 video format" };
  }
});
var require_hidden = __commonJS({
  "../../node_modules/caniuse-lite/data/features/hidden.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F B IC JC KC LC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "I H lC 3B mC nC", "2": "oB iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "C c lB 2B mB", "2": "A B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "hidden attribute" };
  }
});
var require_high_resolution_time = __commonJS({
  "../../node_modules/caniuse-lite/data/features/high-resolution-time.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q", "33": "r s t u" }, E: { "1": "E F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "High Resolution Time API" };
  }
});
var require_history = __commonJS({
  "../../node_modules/caniuse-lite/data/features/history.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "4": "p BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a 2B MC mB", "2": "F B IC JC KC LC lB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC", "4": "3B" }, H: { "2": "hC" }, I: { "1": "H jC kC 3B mC nC", "2": "oB I iC lC" }, J: { "1": "D A" }, K: { "1": "C c lB 2B mB", "2": "A B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Session history management" };
  }
});
var require_html_media_capture = __commonJS({
  "../../node_modules/caniuse-lite/data/features/html-media-capture.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "uB NC 3B OC", "129": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC", "257": "jC kC" }, J: { "1": "A", "16": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "516": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "16": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "HTML Media Capture" };
  }
});
var require_html5semantic = __commonJS({
  "../../node_modules/caniuse-lite/data/features/html5semantic.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E", "260": "F A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B", "132": "oB 6B 7B", "260": "I p J D E F A B C K L G M N O q r" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "I p", "260": "J D E F A B C K L G M N O q r s t u v w" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "132": "I AC uB", "260": "p J BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "132": "F B IC JC KC LC", "260": "C lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "132": "uB", "260": "NC 3B OC PC" }, H: { "132": "hC" }, I: { "1": "H mC nC", "132": "iC", "260": "oB I jC kC lC 3B" }, J: { "260": "D A" }, K: { "1": "c", "132": "A", "260": "B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "260": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "HTML5 semantic elements" };
  }
});
var require_http_live_streaming = __commonJS({
  "../../node_modules/caniuse-lite/data/features/http-live-streaming.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O", "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "HTTP Live Streaming (HLS)" };
  }
});
var require_http2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/http2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "132": "B" }, B: { "1": "C K L G M N O", "513": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "2": "0 1 2 3 4 5 6 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "513": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "CB DB EB FB GB HB IB JB KB LB", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB", "513": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC", "260": "F A EC vB" }, F: { "1": "0 1 2 3 4 5 6 7 8 z", "2": "F B C G M N O q r s t u v w x y IC JC KC LC lB 2B MC mB", "513": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "513": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "513": "c" }, L: { "513": "H" }, M: { "513": "b" }, N: { "2": "A B" }, O: { "513": "oC" }, P: { "1": "I", "513": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "513": "wB" }, R: { "513": "1C" }, S: { "1": "2C" } }, B: 6, C: "HTTP/2 protocol" };
  }
});
var require_http3 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/http3.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "322": "P Q R S T", "578": "U V" }, C: { "1": "X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB 6B 7B", "194": "eB fB gB hB iB jB kB P Q R rB S T U V W" }, D: { "1": "W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB", "322": "P Q R S T", "578": "U V" }, E: { "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB wB", "1090": "L G FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB IC JC KC LC lB 2B MC mB", "578": "fB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC", "66": "eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "HTTP/3 protocol" };
  }
});
var require_iframe_sandbox = __commonJS({
  "../../node_modules/caniuse-lite/data/features/iframe-sandbox.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M 6B 7B", "4": "N O q r s t u v w x y" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC" }, H: { "2": "hC" }, I: { "1": "oB I H jC kC lC 3B mC nC", "2": "iC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "sandbox attribute for iframes" };
  }
});
var require_iframe_seamless = __commonJS({
  "../../node_modules/caniuse-lite/data/features/iframe-seamless.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "66": "r s t u v w x" }, E: { "2": "I p J E F A B C K L G AC uB BC CC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "130": "D DC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "130": "QC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "seamless attribute for iframes" };
  }
});
var require_iframe_srcdoc = __commonJS({
  "../../node_modules/caniuse-lite/data/features/iframe-srcdoc.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "8": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B", "8": "oB I p J D E F A B C K L G M N O q r s t u v 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K", "8": "L G M N O q" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB", "8": "I p BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B IC JC KC LC", "8": "C lB 2B MC mB" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB", "8": "NC 3B OC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "8": "oB I iC jC kC lC 3B" }, J: { "1": "A", "8": "D" }, K: { "1": "c", "2": "A B", "8": "C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "8": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "srcdoc attribute for iframes" };
  }
});
var require_imagecapture = __commonJS({
  "../../node_modules/caniuse-lite/data/features/imagecapture.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "322": "OB PB QB RB SB TB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB IC JC KC LC lB 2B MC mB", "322": "BB CB DB EB FB GB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "194": "2C" } }, B: 5, C: "ImageCapture API" };
  }
});
var require_ime = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ime.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "161": "B" }, B: { "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "161": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A", "161": "B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Input Method Editor API" };
  }
});
var require_img_naturalwidth_naturalheight = __commonJS({
  "../../node_modules/caniuse-lite/data/features/img-naturalwidth-naturalheight.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "naturalWidth & naturalHeight image properties" };
  }
});
var require_import_maps = __commonJS({
  "../../node_modules/caniuse-lite/data/features/import-maps.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "194": "P Q R S T U V W X" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m 6B 7B", "322": "n o b H sB tB" }, D: { "1": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB", "194": "gB hB iB jB kB P Q R S T U V W X" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB IC JC KC LC lB 2B MC mB", "194": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC xC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "Import maps" };
  }
});
var require_imports = __commonJS({
  "../../node_modules/caniuse-lite/data/features/imports.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "8": "A B" }, B: { "1": "P", "2": "Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "8": "C K L G M N O" }, C: { "2": "0 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "8": "1 2 RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "72": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P", "2": "0 I p J D E F A B C K L G M N O q r s t u v w x y z Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "66": "1 2 3 4 5", "72": "6" }, E: { "2": "I p AC uB BC", "8": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB", "2": "F B C G M ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "66": "N O q r s", "72": "t" }, G: { "2": "uB NC 3B OC PC", "8": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "8": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC", "2": "wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 5, C: "HTML Imports" };
  }
});
var require_indeterminate_checkbox = __commonJS({
  "../../node_modules/caniuse-lite/data/features/indeterminate-checkbox.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "16": "4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "2": "5B oB", "16": "6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w x y" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F B IC JC KC LC lB 2B" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "indeterminate checkbox" };
  }
});
var require_indexeddb = __commonJS({
  "../../node_modules/caniuse-lite/data/features/indexeddb.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "132": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "132": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "33": "A B C K L G", "36": "I p J D E F" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "A", "8": "I p J D E F", "33": "u", "36": "B C K L G M N O q r s t" }, E: { "1": "A B C K L G vB lB mB wB GC xB yB zB 0B nB 1B HC", "8": "I p J D AC uB BC CC", "260": "E F DC EC", "516": "FC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F IC JC", "8": "B C KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC gC xB yB zB 0B nB 1B", "8": "uB NC 3B OC PC QC", "260": "E RC SC TC", "516": "fC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "8": "oB I iC jC kC lC 3B" }, J: { "1": "A", "8": "D" }, K: { "1": "c", "2": "A", "8": "B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "IndexedDB" };
  }
});
var require_indexeddb2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/indexeddb2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 6B 7B", "132": "FB GB HB", "260": "IB JB KB LB" }, D: { "1": "TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB", "132": "JB KB LB MB", "260": "NB OB PB QB RB SB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "132": "6 7 8 9", "260": "AB BB CB DB EB FB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC", "16": "UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "260": "pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "260": "2C" } }, B: 2, C: "IndexedDB 2.0" };
  }
});
var require_inline_block = __commonJS({
  "../../node_modules/caniuse-lite/data/features/inline-block.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "4": "4B", "132": "J D" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "36": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS inline-block" };
  }
});
var require_innertext = __commonJS({
  "../../node_modules/caniuse-lite/data/features/innertext.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "16": "4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "16": "F" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "HTMLElement.innerText" };
  }
});
var require_input_autocomplete_onoff = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-autocomplete-onoff.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A 4B", "132": "B" }, B: { "132": "C K L G M N O", "260": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "516": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "N O q r s t u v w x", "2": "I p J D E F A B C K L G M", "132": "0 1 2 3 4 5 6 7 8 9 y z AB BB", "260": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "J BC CC", "2": "I p AC uB", "2052": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "uB NC 3B", "1025": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1025": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2052": "A B" }, O: { "1025": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "260": "wB" }, R: { "1": "1C" }, S: { "516": "2C" } }, B: 1, C: "autocomplete attribute: on & off values" };
  }
});
var require_input_color = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-color.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F G M IC JC KC LC" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC", "129": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Color input type" };
  }
});
var require_input_datetime = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-datetime.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "132": "C" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 6B 7B", "1090": "OB PB QB RB", "2052": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d", "4100": "e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q", "2052": "r s t u v" }, E: { "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB", "4100": "G FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "uB NC 3B", "260": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB iC jC kC", "514": "I lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "4100": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2052": "2C" } }, B: 1, C: "Date and time input types" };
  }
});
var require_input_email_tel_url = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-email-tel-url.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "132": "iC jC kC" }, J: { "1": "A", "132": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Email, telephone & URL input types" };
  }
});
var require_input_event = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-event.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "2561": "A B", "2692": "F" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2561": "C K L G M N O" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B", "1537": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 7B", "1796": "oB 6B" }, D: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L", "1025": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB", "1537": "0 1 2 3 4 5 G M N O q r s t u v w x y z" }, E: { "1": "L G wB FC GC xB yB zB 0B nB 1B HC", "16": "I p J AC uB", "1025": "D E F A B C CC DC EC vB lB", "1537": "BC", "4097": "K mB" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "16": "F B C IC JC KC LC lB 2B", "260": "MC", "1025": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB", "1537": "G M N O q r s" }, G: { "1": "bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B", "1025": "E RC SC TC UC VC WC XC YC", "1537": "OC PC QC", "4097": "ZC aC" }, H: { "2": "hC" }, I: { "16": "iC jC", "1025": "H nC", "1537": "oB I kC lC 3B mC" }, J: { "1025": "A", "1537": "D" }, K: { "1": "A B C lB 2B mB", "1025": "c" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2561": "A B" }, O: { "1": "oC" }, P: { "1025": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1537": "2C" } }, B: 1, C: "input event" };
  }
});
var require_input_file_accept = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-file-accept.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "132": "0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I", "16": "p J D E s t u v w", "132": "F A B C K L G M N O q r" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "132": "J D E F A B CC DC EC vB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "2": "PC QC", "132": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "514": "uB NC 3B OC" }, H: { "2": "hC" }, I: { "2": "iC jC kC", "260": "oB I lC 3B", "514": "H mC nC" }, J: { "132": "A", "260": "D" }, K: { "2": "A B C lB 2B mB", "514": "c" }, L: { "260": "H" }, M: { "2": "b" }, N: { "514": "A", "1028": "B" }, O: { "2": "oC" }, P: { "260": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "260": "wB" }, R: { "260": "1C" }, S: { "1": "2C" } }, B: 1, C: "accept attribute for file input" };
  }
});
var require_input_file_directory = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-file-directory.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB 6B 7B" }, D: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Directory selection from file input" };
  }
});
var require_input_file_multiple = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-file-multiple.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "2": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "2": "F IC JC KC" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC" }, H: { "130": "hC" }, I: { "130": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "130": "A B C c lB 2B mB" }, L: { "132": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "130": "oC" }, P: { "130": "I", "132": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "132": "wB" }, R: { "132": "1C" }, S: { "2": "2C" } }, B: 1, C: "Multiple file selection" };
  }
});
var require_input_inputmode = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-inputmode.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M 6B 7B", "4": "N O q r", "194": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f" }, D: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB", "66": "RB SB TB pB UB qB VB WB c XB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB IC JC KC LC lB 2B MC mB", "66": "EB FB GB HB IB JB KB LB MB NB" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "194": "2C" } }, B: 1, C: "inputmode attribute" };
  }
});
var require_input_minlength = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-minlength.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 6B 7B" }, D: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Minimum length attribute for input fields" };
  }
});
var require_input_number = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-number.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "129": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "C K", "1025": "L G M N O" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "513": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "388": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB iC jC kC", "388": "I H lC 3B mC nC" }, J: { "2": "D", "388": "A" }, K: { "1": "A B C lB 2B mB", "388": "c" }, L: { "388": "H" }, M: { "641": "b" }, N: { "388": "A B" }, O: { "388": "oC" }, P: { "388": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "388": "wB" }, R: { "388": "1C" }, S: { "513": "2C" } }, B: 1, C: "Number input type" };
  }
});
var require_input_pattern = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-pattern.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "16": "p", "388": "J D E F A BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B", "388": "E OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H nC", "2": "oB I iC jC kC lC 3B mC" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Pattern attribute for input fields" };
  }
});
var require_input_placeholder = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-placeholder.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "132": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a 2B MC mB", "2": "F IC JC KC LC", "132": "B lB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB H iC jC kC 3B mC nC", "4": "I lC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "input placeholder attribute" };
  }
});
var require_input_range = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-range.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "H 3B mC nC", "4": "oB I iC jC kC lC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Range input type" };
  }
});
var require_input_search = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-search.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "129": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "C K L G M N O" }, C: { "2": "5B oB 6B 7B", "129": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L s t u v w", "129": "G M N O q r" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F IC JC KC LC", "16": "B lB 2B" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B" }, H: { "129": "hC" }, I: { "1": "H mC nC", "16": "iC jC", "129": "oB I kC lC 3B" }, J: { "1": "D", "129": "A" }, K: { "1": "C c", "2": "A", "16": "B lB 2B", "129": "mB" }, L: { "1": "H" }, M: { "129": "b" }, N: { "129": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "129": "2C" } }, B: 1, C: "Search input type" };
  }
});
var require_input_selection = __commonJS({
  "../../node_modules/caniuse-lite/data/features/input-selection.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "16": "F IC JC KC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Selection controls for input & textarea" };
  }
});
var require_insert_adjacent = __commonJS({
  "../../node_modules/caniuse-lite/data/features/insert-adjacent.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "16": "4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "16": "F" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Element.insertAdjacentElement() & Element.insertAdjacentText()" };
  }
});
var require_insertadjacenthtml = __commonJS({
  "../../node_modules/caniuse-lite/data/features/insertadjacenthtml.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "16": "4B", "132": "J D E F" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "16": "F IC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Element.insertAdjacentHTML()" };
  }
});
var require_internationalization = __commonJS({
  "../../node_modules/caniuse-lite/data/features/internationalization.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "Internationalization API" };
  }
});
var require_intersectionobserver_v2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/intersectionobserver-v2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "IntersectionObserver V2" };
  }
});
var require_intersectionobserver = __commonJS({
  "../../node_modules/caniuse-lite/data/features/intersectionobserver.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O", "2": "C K L", "516": "G", "1025": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 6B 7B", "194": "NB OB PB" }, D: { "1": "TB pB UB qB VB WB c", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "516": "MB NB OB PB QB RB SB", "1025": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB", "2": "0 1 2 3 4 5 6 7 8 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "516": "9 AB BB CB DB EB FB", "1025": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "1025": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "1025": "c" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "516": "pC qC" }, Q: { "1025": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "IntersectionObserver" };
  }
});
var require_intl_pluralrules = __commonJS({
  "../../node_modules/caniuse-lite/data/features/intl-pluralrules.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N", "130": "O" }, C: { "1": "TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB 6B 7B" }, D: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB mB" }, F: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB IC JC KC LC lB 2B MC mB" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "Intl.PluralRules API" };
  }
});
var require_intrinsic_width = __commonJS({
  "../../node_modules/caniuse-lite/data/features/intrinsic-width.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "1537": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B", "932": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB 6B 7B", "2308": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "I p J D E F A B C K L G M N O q r s", "545": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB", "1537": "HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J AC uB BC", "516": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "548": "F A EC vB", "676": "D E CC DC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "513": "5", "545": "0 1 2 3 G M N O q r s t u v w x y z", "1537": "4 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "uB NC 3B OC PC", "516": "eC fC gC xB yB zB 0B nB 1B", "548": "SC TC UC VC WC XC YC ZC aC bC cC dC", "676": "E QC RC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "545": "mC nC", "1537": "H" }, J: { "2": "D", "545": "A" }, K: { "2": "A B C lB 2B mB", "1537": "c" }, L: { "1537": "H" }, M: { "2308": "b" }, N: { "2": "A B" }, O: { "1537": "oC" }, P: { "545": "I", "1537": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1537": "wB" }, R: { "1537": "1C" }, S: { "932": "2C" } }, B: 5, C: "Intrinsic & Extrinsic Sizing" };
  }
});
var require_jpeg2000 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/jpeg2000.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "129": "p BC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "JPEG 2000 image format" };
  }
});
var require_jpegxl = __commonJS({
  "../../node_modules/caniuse-lite/data/features/jpegxl.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z", "578": "a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y 6B 7B", "322": "Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z", "194": "a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB IC JC KC LC lB 2B MC mB", "194": "jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "JPEG XL image format" };
  }
});
var require_jpegxr = __commonJS({
  "../../node_modules/caniuse-lite/data/features/jpegxr.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O", "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "1": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "JPEG XR image format" };
  }
});
var require_js_regexp_lookbehind = __commonJS({
  "../../node_modules/caniuse-lite/data/features/js-regexp-lookbehind.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB 6B 7B" }, D: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "Lookbehind in JS regular expressions" };
  }
});
var require_json = __commonJS({
  "../../node_modules/caniuse-lite/data/features/json.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D 4B", "129": "E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "JSON parsing" };
  }
});
var require_justify_content_space_evenly = __commonJS({
  "../../node_modules/caniuse-lite/data/features/justify-content-space-evenly.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G", "132": "M N O" }, C: { "1": "NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 6B 7B" }, D: { "1": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "132": "SB TB pB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC", "132": "vB" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB IC JC KC LC lB 2B MC mB", "132": "FB GB HB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC", "132": "VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC", "132": "rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "132": "2C" } }, B: 5, C: "CSS justify-content: space-evenly" };
  }
});
var require_kerning_pairs_ligatures = __commonJS({
  "../../node_modules/caniuse-lite/data/features/kerning-pairs-ligatures.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "iC jC kC", "132": "oB I lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 7, C: "High-quality kerning pairs & ligatures" };
  }
});
var require_keyboardevent_charcode = __commonJS({
  "../../node_modules/caniuse-lite/data/features/keyboardevent-charcode.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "16": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC", "16": "C" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "c mB", "2": "A B lB 2B", "16": "C" }, L: { "1": "H" }, M: { "130": "b" }, N: { "130": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 7, C: "KeyboardEvent.charCode" };
  }
});
var require_keyboardevent_code = __commonJS({
  "../../node_modules/caniuse-lite/data/features/keyboardevent-code.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB", "194": "DB EB FB GB HB IB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "0 1 2 3 4 5" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "194": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I", "194": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "194": "1C" }, S: { "1": "2C" } }, B: 5, C: "KeyboardEvent.code" };
  }
});
var require_keyboardevent_getmodifierstate = __commonJS({
  "../../node_modules/caniuse-lite/data/features/keyboardevent-getmodifierstate.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B G M IC JC KC LC lB 2B MC", "16": "C" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c mB", "2": "A B lB 2B", "16": "C" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "KeyboardEvent.getModifierState()" };
  }
});
var require_keyboardevent_key = __commonJS({
  "../../node_modules/caniuse-lite/data/features/keyboardevent-key.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "260": "F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t 6B 7B", "132": "u v w x y z" }, D: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "0 1 2 3 4 5 6 7 8 F B G M N O q r s t u v w x y z IC JC KC LC lB 2B MC", "16": "C" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "1": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c mB", "2": "A B lB 2B", "16": "C" }, L: { "1": "H" }, M: { "1": "b" }, N: { "260": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "KeyboardEvent.key" };
  }
});
var require_keyboardevent_location = __commonJS({
  "../../node_modules/caniuse-lite/data/features/keyboardevent-location.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "0 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "J AC uB", "132": "I p BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC", "16": "C", "132": "G M" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B", "132": "OC PC QC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "16": "iC jC", "132": "oB I kC lC 3B" }, J: { "132": "D A" }, K: { "1": "c mB", "2": "A B lB 2B", "16": "C" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "KeyboardEvent.location" };
  }
});
var require_keyboardevent_which = __commonJS({
  "../../node_modules/caniuse-lite/data/features/keyboardevent-which.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "16": "p" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "16": "F IC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B", "16": "iC jC", "132": "mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "132": "H" }, M: { "132": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "2": "I", "132": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "132": "1C" }, S: { "1": "2C" } }, B: 7, C: "KeyboardEvent.which" };
  }
});
var require_lazyload = __commonJS({
  "../../node_modules/caniuse-lite/data/features/lazyload.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O", "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "1": "B", "2": "A" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Resource Hints: Lazyload" };
  }
});
var require_let = __commonJS({
  "../../node_modules/caniuse-lite/data/features/let.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "2052": "B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "194": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O", "322": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB", "516": "CB DB EB FB GB HB IB JB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC", "1028": "A vB" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "322": "G M N O q r s t u v w x y", "516": "0 1 2 3 4 5 6 z" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC", "1028": "UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "516": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "let" };
  }
});
var require_link_icon_png = __commonJS({
  "../../node_modules/caniuse-lite/data/features/link-icon-png.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "130": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC" }, H: { "130": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D", "130": "A" }, K: { "1": "c", "130": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "130": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "PNG favicons" };
  }
});
var require_link_icon_svg = __commonJS({
  "../../node_modules/caniuse-lite/data/features/link-icon-svg.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P", "1537": "Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB 6B 7B", "260": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB", "513": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P", "1537": "Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB PB QB RB SB TB UB VB WB c XB YB IC JC KC LC lB 2B MC mB", "1537": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "130": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC" }, H: { "130": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D", "130": "A" }, K: { "2": "c", "130": "A B C lB 2B mB" }, L: { "1537": "H" }, M: { "2": "b" }, N: { "130": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC", "1537": "wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "1537": "1C" }, S: { "513": "2C" } }, B: 1, C: "SVG favicons" };
  }
});
var require_link_rel_dns_prefetch = __commonJS({
  "../../node_modules/caniuse-lite/data/features/link-rel-dns-prefetch.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E 4B", "132": "F" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB", "260": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "16": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "16": "oB I H iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "16": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "16": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Resource Hints: dns-prefetch" };
  }
});
var require_link_rel_modulepreload = __commonJS({
  "../../node_modules/caniuse-lite/data/features/link-rel-modulepreload.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Resource Hints: modulepreload" };
  }
});
var require_link_rel_preconnect = __commonJS({
  "../../node_modules/caniuse-lite/data/features/link-rel-preconnect.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L", "260": "G M N O" }, C: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "129": "AB" }, D: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "16": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Resource Hints: preconnect" };
  }
});
var require_link_rel_prefetch = __commonJS({
  "../../node_modules/caniuse-lite/data/features/link-rel-prefetch.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D" }, E: { "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB", "194": "L G wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC", "194": "dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "I H mC nC", "2": "oB iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Resource Hints: prefetch" };
  }
});
var require_link_rel_preload = __commonJS({
  "../../node_modules/caniuse-lite/data/features/link-rel-preload.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M", "1028": "N O" }, C: { "1": "U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB 6B 7B", "132": "RB", "578": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T" }, D: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "322": "B" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "322": "WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "Resource Hints: preload" };
  }
});
var require_link_rel_prerender = __commonJS({
  "../../node_modules/caniuse-lite/data/features/link-rel-prerender.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Resource Hints: prerender" };
  }
});
var require_loading_lazy_attr = __commonJS({
  "../../node_modules/caniuse-lite/data/features/loading-lazy-attr.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB 6B 7B", "132": "hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB", "66": "hB iB" }, E: { "1": "HC", "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB", "322": "L G wB FC GC xB", "580": "yB zB 0B nB 1B" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB IC JC KC LC lB 2B MC mB", "66": "VB WB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC", "322": "dC eC fC gC xB", "580": "yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "132": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Lazy loading via attribute for images & iframes" };
  }
});
var require_localecompare = __commonJS({
  "../../node_modules/caniuse-lite/data/features/localecompare.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "16": "4B", "132": "J D E F A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "132": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "I p J D E F A B C K L G M N O q r s t u" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "132": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F B C IC JC KC LC lB 2B MC", "132": "mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "132": "E uB NC 3B OC PC QC RC SC TC" }, H: { "132": "hC" }, I: { "1": "H mC nC", "132": "oB I iC jC kC lC 3B" }, J: { "132": "D A" }, K: { "1": "c", "16": "A B C lB 2B", "132": "mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "132": "A" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "132": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "4": "2C" } }, B: 6, C: "localeCompare()" };
  }
});
var require_magnetometer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/magnetometer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "194": "TB pB UB qB VB WB c XB YB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "194": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "Magnetometer" };
  }
});
var require_matchesselector = __commonJS({
  "../../node_modules/caniuse-lite/data/features/matchesselector.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "36": "F A B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "36": "C K L" }, C: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B", "36": "0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z 7B" }, D: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "36": "0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "36": "p J D BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B IC JC KC LC lB", "36": "C G M N O q r 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB", "36": "NC 3B OC PC QC" }, H: { "2": "hC" }, I: { "1": "H", "2": "iC", "36": "oB I jC kC lC 3B mC nC" }, J: { "36": "D A" }, K: { "1": "c", "2": "A B", "36": "C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "36": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "36": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "matches() DOM method" };
  }
});
var require_matchmedia = __commonJS({
  "../../node_modules/caniuse-lite/data/features/matchmedia.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B C IC JC KC LC lB 2B MC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "matchMedia" };
  }
});
var require_mathml = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mathml.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "F A B 4B", "8": "J D E" }, B: { "2": "C K L G M N O", "8": "P Q R S T U V W X Y Z a d e f g h", "584": "i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "129": "5B oB 6B 7B" }, D: { "1": "v", "8": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h", "584": "i j k l m n o b H sB tB 8B 9B" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "260": "I p J D E F AC uB BC CC DC EC" }, F: { "2": "F", "8": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB", "584": "S T U V W X Y Z a", "2052": "B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "uB NC 3B" }, H: { "8": "hC" }, I: { "8": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "A", "8": "D" }, K: { "8": "A B C c lB 2B mB" }, L: { "8": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "8": "oC" }, P: { "8": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "8": "wB" }, R: { "8": "1C" }, S: { "1": "2C" } }, B: 2, C: "MathML" };
  }
});
var require_maxlength = __commonJS({
  "../../node_modules/caniuse-lite/data/features/maxlength.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "16": "4B", "900": "J D E F" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "1025": "C K L G M N O" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "900": "5B oB 6B 7B", "1025": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "p AC", "900": "I uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F", "132": "B C IC JC KC LC lB 2B MC mB" }, G: { "1": "NC 3B OC PC QC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB", "2052": "E RC" }, H: { "132": "hC" }, I: { "1": "oB I kC lC 3B mC nC", "16": "iC jC", "4097": "H" }, J: { "1": "D A" }, K: { "132": "A B C lB 2B mB", "4097": "c" }, L: { "4097": "H" }, M: { "4097": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "4097": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1025": "2C" } }, B: 1, C: "maxlength attribute for input and textarea elements" };
  }
});
var require_mdn_css_unicode_bidi_isolate_override = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, K: { "1": "c", "2": "A B C lB 2B mB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B", "2": "I p J AC uB BC CC HC", "33": "D E F A DC EC vB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC", "33": "E QC RC SC TC UC VC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" } }, B: 6, C: "isolate-override from unicode-bidi" };
  }
});
var require_mdn_css_unicode_bidi_isolate = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G", "33": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 G M N O q r s t u v w x y z" }, K: { "1": "c", "2": "A B C lB 2B mB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B", "2": "I p AC uB BC HC", "33": "J D E F A CC DC EC vB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "E PC QC RC SC TC UC VC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" } }, B: 6, C: "isolate from unicode-bidi" };
  }
});
var require_mdn_css_unicode_bidi_plaintext = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, K: { "1": "c", "2": "A B C lB 2B mB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B", "2": "I p AC uB BC HC", "33": "J D E F A CC DC EC vB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "E PC QC RC SC TC UC VC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" } }, B: 6, C: "plaintext from unicode-bidi" };
  }
});
var require_mdn_text_decoration_color = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mdn-text-decoration-color.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B", "33": "0 1 2 3 4 5 6 J D E F A B C K L G M N O q r s t u v w x y z" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB IC JC KC LC lB 2B MC mB" }, K: { "1": "c", "2": "A B C lB 2B mB" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B", "2": "I p J D AC uB BC CC DC HC", "33": "E F A B C EC vB lB" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "33": "E RC SC TC UC VC WC XC YC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" } }, B: 6, C: "text-decoration-color property" };
  }
});
var require_mdn_text_decoration_line = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mdn-text-decoration-line.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B", "33": "0 1 2 3 4 5 6 J D E F A B C K L G M N O q r s t u v w x y z" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB IC JC KC LC lB 2B MC mB" }, K: { "1": "c", "2": "A B C lB 2B mB" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B", "2": "I p J D AC uB BC CC DC HC", "33": "E F A B C EC vB lB" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "33": "E RC SC TC UC VC WC XC YC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" } }, B: 6, C: "text-decoration-line property" };
  }
});
var require_mdn_text_decoration_shorthand = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mdn-text-decoration-shorthand.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB IC JC KC LC lB 2B MC mB" }, K: { "1": "c", "2": "A B C lB 2B mB" }, E: { "2": "I p J D AC uB BC CC DC HC", "33": "E F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B" }, G: { "2": "uB NC 3B OC PC QC", "33": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" } }, B: 6, C: "text-decoration shorthand property" };
  }
});
var require_mdn_text_decoration_style = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mdn-text-decoration-style.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, L: { "1": "H" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B", "33": "0 1 2 3 4 5 6 J D E F A B C K L G M N O q r s t u v w x y z" }, M: { "1": "b" }, A: { "2": "J D E F A B 4B" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB IC JC KC LC lB 2B MC mB" }, K: { "1": "c", "2": "A B C lB 2B mB" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B", "2": "I p J D AC uB BC CC DC HC", "33": "E F A B C EC vB lB" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "33": "E RC SC TC UC VC WC XC YC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" } }, B: 6, C: "text-decoration-style property" };
  }
});
var require_media_fragments = __commonJS({
  "../../node_modules/caniuse-lite/data/features/media-fragments.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "132": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "132": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "I p J D E F A B C K L G M N", "132": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p AC uB BC", "132": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "uB NC 3B OC PC QC", "132": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "132": "H mC nC" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "132": "c" }, L: { "132": "H" }, M: { "132": "b" }, N: { "132": "A B" }, O: { "132": "oC" }, P: { "2": "I pC", "132": "qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "132": "wB" }, R: { "132": "1C" }, S: { "132": "2C" } }, B: 2, C: "Media Fragments" };
  }
});
var require_mediacapture_fromelement = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mediacapture-fromelement.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 6B 7B", "260": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "324": "MB NB OB PB QB RB SB TB pB UB qB" }, E: { "2": "I p J D E F A AC uB BC CC DC EC vB", "132": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "324": "7 8 9 AB BB CB DB EB FB GB HB IB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "260": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "132": "pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "260": "2C" } }, B: 5, C: "Media Capture from DOM Elements API" };
  }
});
var require_mediarecorder = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mediarecorder.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB", "194": "IB JB" }, E: { "1": "G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB", "322": "K L mB wB" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "5 6" }, G: { "1": "fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC", "578": "YC ZC aC bC cC dC eC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "MediaRecorder API" };
  }
});
var require_mediasource = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mediasource.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "132": "B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v 6B 7B", "66": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB" }, D: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M", "33": "0 1 u v w x y z", "66": "N O q r s t" }, E: { "1": "E F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC", "260": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H nC", "2": "oB I iC jC kC lC 3B mC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Media Source Extensions" };
  }
});
var require_menu = __commonJS({
  "../../node_modules/caniuse-lite/data/features/menu.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p J D 6B 7B", "132": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T", "450": "U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "66": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "66": "6 7 8 9 AB BB CB DB EB FB GB HB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "450": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Context menu item (menuitem element)" };
  }
});
var require_meta_theme_color = __commonJS({
  "../../node_modules/caniuse-lite/data/features/meta-theme-color.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z", "132": "fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "258": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB" }, E: { "1": "G GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB FC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "513": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "16": "pC" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 1, C: "theme-color Meta Tag" };
  }
});
var require_meter = __commonJS({
  "../../node_modules/caniuse-lite/data/features/meter.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F IC JC KC LC" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "meter element" };
  }
});
var require_midi = __commonJS({
  "../../node_modules/caniuse-lite/data/features/midi.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Web MIDI API" };
  }
});
var require_minmaxwh = __commonJS({
  "../../node_modules/caniuse-lite/data/features/minmaxwh.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "8": "J 4B", "129": "D", "257": "E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS min/max-width/height" };
  }
});
var require_mp3 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mp3.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "132": "I p J D E F A B C K L G M N O q r s 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "2": "iC jC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "MP3 audio format" };
  }
});
var require_mpeg_dash = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mpeg-dash.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O", "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "386": "s t" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "Dynamic Adaptive Streaming over HTTP (MPEG-DASH)" };
  }
});
var require_mpeg4 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mpeg4.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r 6B 7B", "4": "0 1 2 3 4 5 s t u v w x y z" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "4": "oB I iC jC lC 3B", "132": "kC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "260": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "MPEG-4/H.264 video format" };
  }
});
var require_multibackgrounds = __commonJS({
  "../../node_modules/caniuse-lite/data/features/multibackgrounds.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "2": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 Multiple backgrounds" };
  }
});
var require_multicolumn = __commonJS({
  "../../node_modules/caniuse-lite/data/features/multicolumn.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O", "516": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "132": "NB OB PB QB RB SB TB pB UB qB VB WB c", "164": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 6B 7B", "516": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "1028": "d e f g h i j k l m n o b H sB tB" }, D: { "420": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB", "516": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "132": "F EC", "164": "D E DC", "420": "I p J AC uB BC CC" }, F: { "1": "C lB 2B MC mB", "2": "F B IC JC KC LC", "420": "0 1 2 3 4 5 6 7 G M N O q r s t u v w x y z", "516": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "132": "SC TC", "164": "E QC RC", "420": "uB NC 3B OC PC" }, H: { "1": "hC" }, I: { "420": "oB I iC jC kC lC 3B mC nC", "516": "H" }, J: { "420": "D A" }, K: { "1": "C lB 2B mB", "2": "A B", "516": "c" }, L: { "516": "H" }, M: { "516": "b" }, N: { "1": "A B" }, O: { "516": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "420": "I" }, Q: { "516": "wB" }, R: { "516": "1C" }, S: { "164": "2C" } }, B: 4, C: "CSS3 Multiple column layout" };
  }
});
var require_mutation_events = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mutation-events.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "260": "F A B" }, B: { "132": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G M N O" }, C: { "2": "5B oB I p 6B 7B", "260": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "16": "I p J D E F A B C K L", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "16": "AC uB", "132": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "C MC mB", "2": "F IC JC KC LC", "16": "B lB 2B", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "16": "uB NC", "132": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "16": "iC jC", "132": "oB I H kC lC 3B mC nC" }, J: { "132": "D A" }, K: { "1": "C mB", "2": "A", "16": "B lB 2B", "132": "c" }, L: { "132": "H" }, M: { "260": "b" }, N: { "260": "A B" }, O: { "132": "oC" }, P: { "132": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "132": "wB" }, R: { "132": "1C" }, S: { "260": "2C" } }, B: 5, C: "Mutation events" };
  }
});
var require_mutationobserver = __commonJS({
  "../../node_modules/caniuse-lite/data/features/mutationobserver.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E 4B", "8": "F A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N", "33": "O q r s t u v w x" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "33": "J" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB iC jC kC", "8": "I lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "8": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Mutation Observer" };
  }
});
var require_namevalue_storage = __commonJS({
  "../../node_modules/caniuse-lite/data/features/namevalue-storage.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "2": "4B", "8": "J D" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "4": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Web Storage - name/value pairs" };
  }
});
var require_native_filesystem_api = __commonJS({
  "../../node_modules/caniuse-lite/data/features/native-filesystem-api.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "194": "P Q R S T U", "260": "V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB", "194": "gB hB iB jB kB P Q R S T U", "260": "V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC", "516": "xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB IC JC KC LC lB 2B MC mB", "194": "VB WB c XB YB ZB aB bB cB dB", "260": "eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC", "516": "xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "File System Access API" };
  }
});
var require_nav_timing = __commonJS({
  "../../node_modules/caniuse-lite/data/features/nav-timing.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p", "33": "J D E F A B C" }, E: { "1": "E F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "I H lC 3B mC nC", "2": "oB iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Navigation Timing API" };
  }
});
var require_netinfo = __commonJS({
  "../../node_modules/caniuse-lite/data/features/netinfo.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "1028": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB", "1028": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB IC JC KC LC lB 2B MC mB", "1028": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "iC mC nC", "132": "oB I jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "132": "I", "516": "pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "260": "2C" } }, B: 7, C: "Network Information API" };
  }
});
var require_notifications = __commonJS({
  "../../node_modules/caniuse-lite/data/features/notifications.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I", "36": "p J D E F A B C K L G M N O q r s" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "36": "H mC nC" }, J: { "1": "A", "2": "D" }, K: { "2": "A B C lB 2B mB", "36": "c" }, L: { "513": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "36": "I", "258": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "258": "1C" }, S: { "1": "2C" } }, B: 1, C: "Web Notifications" };
  }
});
var require_object_entries = __commonJS({
  "../../node_modules/caniuse-lite/data/features/object-entries.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 6B 7B" }, D: { "1": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "16": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Object.entries" };
  }
});
var require_object_fit = __commonJS({
  "../../node_modules/caniuse-lite/data/features/object-fit.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G", "260": "M N O" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC", "132": "E F DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F G M N O IC JC KC", "33": "B C LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "132": "E RC SC TC" }, H: { "33": "hC" }, I: { "1": "H nC", "2": "oB I iC jC kC lC 3B mC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A", "33": "B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 object-fit/object-position" };
  }
});
var require_object_observe = __commonJS({
  "../../node_modules/caniuse-lite/data/features/object-observe.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB", "2": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 u v w x y z", "2": "8 9 F B C G M N O q r s t AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "I", "2": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Object.observe data binding" };
  }
});
var require_object_values = __commonJS({
  "../../node_modules/caniuse-lite/data/features/object-values.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "8": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 6B 7B" }, D: { "1": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "8": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "8": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "8": "hC" }, I: { "1": "H", "8": "oB I iC jC kC lC 3B mC nC" }, J: { "8": "D A" }, K: { "1": "c", "8": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "8": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "8": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Object.values method" };
  }
});
var require_objectrtc = __commonJS({
  "../../node_modules/caniuse-lite/data/features/objectrtc.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O", "2": "C P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D", "130": "A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "Object RTC (ORTC) API for WebRTC" };
  }
});
var require_offline_apps = __commonJS({
  "../../node_modules/caniuse-lite/data/features/offline-apps.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "F 4B", "8": "J D E" }, B: { "1": "C K L G M N O P Q R S T", "2": "U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S 6B 7B", "2": "T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "4": "oB", "8": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T", "2": "U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB LC lB 2B MC mB", "2": "F fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC", "8": "JC KC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I iC jC kC lC 3B mC nC", "2": "H" }, J: { "1": "D A" }, K: { "1": "B C lB 2B mB", "2": "A c" }, L: { "2": "H" }, M: { "2": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 7, C: "Offline web applications" };
  }
});
var require_offscreencanvas = __commonJS({
  "../../node_modules/caniuse-lite/data/features/offscreencanvas.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 6B 7B", "194": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b" }, D: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "322": "TB pB UB qB VB WB c XB YB ZB aB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB IC JC KC LC lB 2B MC mB", "322": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "194": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "194": "2C" } }, B: 1, C: "OffscreenCanvas" };
  }
});
var require_ogg_vorbis = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ogg-vorbis.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB", "132": "G FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "A", "2": "D" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Ogg Vorbis audio format" };
  }
});
var require_ogv = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ogv.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "8": "F A B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "8": "C K L G M" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "8": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 6, C: "Ogg/Theora video format" };
  }
});
var require_ol_reversed = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ol-reversed.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G", "16": "M N O q" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "16": "J" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC", "16": "C" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Reversed attribute of ordered lists" };
  }
});
var require_once_event_listener = __commonJS({
  "../../node_modules/caniuse-lite/data/features/once-event-listener.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G" }, C: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB 6B 7B" }, D: { "1": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: '"once" event listener option' };
  }
});
var require_online_status = __commonJS({
  "../../node_modules/caniuse-lite/data/features/online-status.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D 4B", "260": "E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB", "516": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC", "4": "mB" }, G: { "1": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "A", "132": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Online/offline status" };
  }
});
var require_opus = __commonJS({
  "../../node_modules/caniuse-lite/data/features/opus.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "2": "I p J D E F A AC uB BC CC DC EC vB", "132": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "132": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Opus" };
  }
});
var require_orientation_sensor = __commonJS({
  "../../node_modules/caniuse-lite/data/features/orientation-sensor.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "194": "TB pB UB qB VB WB c XB YB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "Orientation Sensor" };
  }
});
var require_outline = __commonJS({
  "../../node_modules/caniuse-lite/data/features/outline.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D 4B", "260": "E", "388": "F A B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "388": "C K L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC", "129": "mB", "260": "F B IC JC KC LC lB 2B" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "C c mB", "260": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "388": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS outline properties" };
  }
});
var require_pad_start_end = __commonJS({
  "../../node_modules/caniuse-lite/data/features/pad-start-end.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 6B 7B" }, D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "String.prototype.padStart(), String.prototype.padEnd()" };
  }
});
var require_page_transition_events = __commonJS({
  "../../node_modules/caniuse-lite/data/features/page-transition-events.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "PageTransitionEvent" };
  }
});
var require_pagevisibility = __commonJS({
  "../../node_modules/caniuse-lite/data/features/pagevisibility.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F 6B 7B", "33": "A B C K L G M N" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K", "33": "0 1 2 3 L G M N O q r s t u v w x y z" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B C IC JC KC LC lB 2B MC", "33": "G M N O q" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B", "33": "mC nC" }, J: { "1": "A", "2": "D" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "33": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Page Visibility" };
  }
});
var require_passive_event_listener = __commonJS({
  "../../node_modules/caniuse-lite/data/features/passive-event-listener.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 6B 7B" }, D: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Passive event listeners" };
  }
});
var require_passwordrules = __commonJS({
  "../../node_modules/caniuse-lite/data/features/passwordrules.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "16": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H 6B 7B", "16": "sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB", "16": "tB 8B 9B" }, E: { "1": "C K mB", "2": "I p J D E F A B AC uB BC CC DC EC vB lB", "16": "L G wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB IC JC KC LC lB 2B MC mB", "16": "OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "16": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "16": "H" }, J: { "2": "D", "16": "A" }, K: { "2": "A B C lB 2B mB", "16": "c" }, L: { "16": "H" }, M: { "16": "b" }, N: { "2": "A", "16": "B" }, O: { "16": "oC" }, P: { "2": "I pC qC", "16": "rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "16": "wB" }, R: { "16": "1C" }, S: { "2": "2C" } }, B: 1, C: "Password Rules" };
  }
});
var require_path2d = __commonJS({
  "../../node_modules/caniuse-lite/data/features/path2d.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K", "132": "L G M N O" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "132": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB" }, D: { "1": "aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z", "132": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC", "132": "E F DC" }, F: { "1": "QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t IC JC KC LC lB 2B MC mB", "132": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "16": "E", "132": "RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "132": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Path2D" };
  }
});
var require_payment_request = __commonJS({
  "../../node_modules/caniuse-lite/data/features/payment-request.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K", "322": "L", "8196": "G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB 6B 7B", "4162": "QB RB SB TB pB UB qB VB WB c XB", "16452": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "194": "OB PB QB RB SB TB", "1090": "pB UB", "8196": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC", "514": "A B vB", "8196": "C lB" }, F: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB IC JC KC LC lB 2B MC mB", "194": "BB CB DB EB FB GB HB IB", "8196": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC", "514": "UC VC WC", "8196": "XC YC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "2049": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "vC wC xC yC nB zC 0C", "2": "I", "8196": "pC qC rC sC tC vB uC" }, Q: { "8196": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 2, C: "Payment Request API" };
  }
});
var require_pdf_viewer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/pdf-viewer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "132": "B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "16": "C K L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "16": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "Built-in PDF viewer" };
  }
});
var require_permissions_api = __commonJS({
  "../../node_modules/caniuse-lite/data/features/permissions-api.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB 6B 7B" }, D: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Permissions API" };
  }
});
var require_permissions_policy = __commonJS({
  "../../node_modules/caniuse-lite/data/features/permissions-policy.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "258": "P Q R S T U", "322": "V W", "388": "X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB 6B 7B", "258": "gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB", "258": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U", "322": "V W", "388": "X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B AC uB BC CC DC EC vB", "258": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IC JC KC LC lB 2B MC mB", "258": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB", "322": "eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC", "258": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "258": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "258": "c" }, L: { "388": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC", "258": "sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "258": "wB" }, R: { "388": "1C" }, S: { "2": "2C" } }, B: 5, C: "Permissions Policy" };
  }
});
var require_picture_in_picture = __commonJS({
  "../../node_modules/caniuse-lite/data/features/picture-in-picture.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB 6B 7B", "132": "eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "1090": "ZB", "1412": "dB", "1668": "aB bB cB" }, D: { "1": "cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB", "2114": "bB" }, E: { "1": "L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC", "4100": "A B C K vB lB mB" }, F: { "1": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "8196": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB" }, G: { "1": "eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC", "4100": "SC TC UC VC WC XC YC ZC aC bC cC dC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "16388": "H" }, M: { "16388": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "Picture-in-Picture" };
  }
});
var require_picture = __commonJS({
  "../../node_modules/caniuse-lite/data/features/picture.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "578": "5 6 7 8" }, D: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 I p J D E F A B C K L G M N O q r s t u v w x y z", "194": "8" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u IC JC KC LC lB 2B MC mB", "322": "v" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Picture element" };
  }
});
var require_ping = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ping.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M" }, C: { "2": "5B", "194": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "194": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "194": "2C" } }, B: 1, C: "Ping attribute" };
  }
});
var require_png_alpha = __commonJS({
  "../../node_modules/caniuse-lite/data/features/png-alpha.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "D E F A B", "2": "4B", "8": "J" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "PNG alpha transparency" };
  }
});
var require_pointer_events = __commonJS({
  "../../node_modules/caniuse-lite/data/features/pointer-events.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "2": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 7, C: "CSS pointer-events (for HTML)" };
  }
});
var require_pointer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/pointer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F 4B", "164": "A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B", "8": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB", "328": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB" }, D: { "1": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s", "8": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB", "584": "NB OB PB" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC", "8": "D E F A B C CC DC EC vB lB", "1096": "mB" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "8": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z", "584": "AB BB CB" }, G: { "1": "bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC", "6148": "aC" }, H: { "2": "hC" }, I: { "1": "H", "8": "oB I iC jC kC lC 3B mC nC" }, J: { "8": "D A" }, K: { "1": "c", "2": "A", "8": "B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "36": "A" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "pC", "8": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "328": "2C" } }, B: 2, C: "Pointer events" };
  }
});
var require_pointerlock = __commonJS({
  "../../node_modules/caniuse-lite/data/features/pointerlock.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C" }, C: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 L G M N O q r s t u v w x y z AB BB" }, D: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G", "33": "0 1 2 3 4 5 6 7 t u v w x y z", "66": "M N O q r s" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "G M N O q r s t u" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Pointer Lock API" };
  }
});
var require_portals = __commonJS({
  "../../node_modules/caniuse-lite/data/features/portals.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T", "322": "Z a d e f g h i j k l m n o b H", "450": "U V W X Y" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB", "194": "hB iB jB kB P Q R S T", "322": "V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "450": "U" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB IC JC KC LC lB 2B MC mB", "194": "VB WB c XB YB ZB aB bB cB dB eB", "322": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "450": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Portals" };
  }
});
var require_prefers_color_scheme = __commonJS({
  "../../node_modules/caniuse-lite/data/features/prefers-color-scheme.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB 6B 7B" }, D: { "1": "iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB" }, E: { "1": "K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB" }, F: { "1": "VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB IC JC KC LC lB 2B MC mB" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "prefers-color-scheme media query" };
  }
});
var require_prefers_reduced_motion = __commonJS({
  "../../node_modules/caniuse-lite/data/features/prefers-reduced-motion.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 6B 7B" }, D: { "1": "gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "prefers-reduced-motion media query" };
  }
});
var require_progress = __commonJS({
  "../../node_modules/caniuse-lite/data/features/progress.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F IC JC KC LC" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC", "132": "QC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "progress element" };
  }
});
var require_promise_finally = __commonJS({
  "../../node_modules/caniuse-lite/data/features/promise-finally.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N" }, C: { "1": "TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB 6B 7B" }, D: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "Promise.prototype.finally" };
  }
});
var require_promises = __commonJS({
  "../../node_modules/caniuse-lite/data/features/promises.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "8": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "4": "y z", "8": "5B oB I p J D E F A B C K L G M N O q r s t u v w x 6B 7B" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "3", "8": "0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I p J D AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "4": "q", "8": "F B C G M N O IC JC KC LC lB 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "uB NC 3B OC PC QC" }, H: { "8": "hC" }, I: { "1": "H nC", "8": "oB I iC jC kC lC 3B mC" }, J: { "8": "D A" }, K: { "1": "c", "8": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "8": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Promises" };
  }
});
var require_proximity = __commonJS({
  "../../node_modules/caniuse-lite/data/features/proximity.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 4, C: "Proximity API" };
  }
});
var require_proxy = __commonJS({
  "../../node_modules/caniuse-lite/data/features/proxy.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "9 I p J D E F A B C K L G M N O AB BB CB DB EB FB GB HB IB JB", "66": "0 1 2 3 4 5 6 7 8 q r s t u v w x y z" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C w x y z IC JC KC LC lB 2B MC mB", "66": "G M N O q r s t u v" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Proxy object" };
  }
});
var require_publickeypinning = __commonJS({
  "../../node_modules/caniuse-lite/data/features/publickeypinning.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB", "2": "0 1 2 3 4 5 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB", "2": "0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB", "2": "F B C G M N O q YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "4": "u", "16": "r s t v" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "I pC qC rC sC tC vB", "2": "uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 6, C: "HTTP Public Key Pinning" };
  }
});
var require_push_api = __commonJS({
  "../../node_modules/caniuse-lite/data/features/push-api.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O", "2": "C K L G M", "257": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB 6B 7B", "257": "FB HB IB JB KB LB MB OB PB QB RB SB TB pB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "1281": "GB NB UB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB", "257": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "388": "FB GB HB IB JB KB" }, E: { "2": "I p J D E F AC uB BC CC DC", "514": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB", "4612": "1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "16": "8 9 AB BB CB", "257": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "257": "2C" } }, B: 5, C: "Push API" };
  }
});
var require_queryselector = __commonJS({
  "../../node_modules/caniuse-lite/data/features/queryselector.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "4B", "8": "J D", "132": "E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "8": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "8": "F IC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "querySelector/querySelectorAll" };
  }
});
var require_readonly_attr = __commonJS({
  "../../node_modules/caniuse-lite/data/features/readonly-attr.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "16": "4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L G M N O q r s t u v w" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F IC", "132": "B C JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC PC" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "c", "132": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "257": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "readonly attribute of input and textarea elements" };
  }
});
var require_referrer_policy = __commonJS({
  "../../node_modules/caniuse-lite/data/features/referrer-policy.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "132": "B" }, B: { "1": "P Q R S", "132": "C K L G M N O", "513": "T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V", "2": "0 1 2 3 4 5 6 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "513": "W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T", "2": "I p J D E F A B C K L G M N O q r", "260": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB", "513": "U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "C lB mB", "2": "I p J D AC uB BC CC", "132": "E F A B DC EC vB", "1025": "K L G wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB", "2": "F B C IC JC KC LC lB 2B MC mB", "513": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "YC ZC aC bC", "2": "uB NC 3B OC PC QC", "132": "E RC SC TC UC VC WC XC", "1025": "cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "513": "H" }, M: { "513": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "513": "1C" }, S: { "1": "2C" } }, B: 4, C: "Referrer Policy" };
  }
});
var require_registerprotocolhandler = __commonJS({
  "../../node_modules/caniuse-lite/data/features/registerprotocolhandler.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "129": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B" }, D: { "2": "I p J D E F A B C", "129": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B IC JC KC LC lB 2B", "129": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D", "129": "A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 1, C: "Custom protocol handling" };
  }
});
var require_rel_noopener = __commonJS({
  "../../node_modules/caniuse-lite/data/features/rel-noopener.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "rel=noopener" };
  }
});
var require_rel_noreferrer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/rel-noreferrer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "132": "B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "16": "C" }, C: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L G" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: 'Link type "noreferrer"' };
  }
});
var require_rellist = __commonJS({
  "../../node_modules/caniuse-lite/data/features/rellist.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M", "132": "N" }, C: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB", "132": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E AC uB BC CC DC" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "132": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "2": "I", "132": "pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "relList (DOMTokenList)" };
  }
});
var require_rem = __commonJS({
  "../../node_modules/caniuse-lite/data/features/rem.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E 4B", "132": "F A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "2": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F B IC JC KC LC lB 2B" }, G: { "1": "E NC 3B PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB", "260": "OC" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "C c mB", "2": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "rem (root em) units" };
  }
});
var require_requestanimationframe = __commonJS({
  "../../node_modules/caniuse-lite/data/features/requestanimationframe.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "33": "B C K L G M N O q r s t", "164": "I p J D E F A" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F", "33": "t u", "164": "O q r s", "420": "A B C K L G M N" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "33": "J" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "33": "PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "requestAnimationFrame" };
  }
});
var require_requestidlecallback = __commonJS({
  "../../node_modules/caniuse-lite/data/features/requestidlecallback.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 6B 7B", "194": "OB PB" }, D: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB" }, E: { "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB", "322": "L G wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC", "322": "dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "requestIdleCallback" };
  }
});
var require_resizeobserver = __commonJS({
  "../../node_modules/caniuse-lite/data/features/resizeobserver.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB 6B 7B" }, D: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "194": "PB QB RB SB TB pB UB qB VB WB" }, E: { "1": "L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB mB", "66": "K" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB IC JC KC LC lB 2B MC mB", "194": "CB DB EB FB GB HB IB JB KB LB MB" }, G: { "1": "dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Resize Observer" };
  }
});
var require_resource_timing = __commonJS({
  "../../node_modules/caniuse-lite/data/features/resource-timing.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "2 3 4 5" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "260": "B" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Resource Timing" };
  }
});
var require_rest_parameters = __commonJS({
  "../../node_modules/caniuse-lite/data/features/rest-parameters.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB", "194": "FB GB HB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "194": "2 3 4" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Rest parameters" };
  }
});
var require_rtcpeerconnection = __commonJS({
  "../../node_modules/caniuse-lite/data/features/rtcpeerconnection.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L", "516": "G M N O" }, C: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B", "33": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB" }, D: { "1": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t", "33": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "130": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "33": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "WebRTC Peer-to-peer connections" };
  }
});
var require_ruby = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ruby.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "4": "J D E F A B 4B" }, B: { "4": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "0 1 2 3 4 5 6 7 8 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "4": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "8": "I" }, E: { "4": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I AC uB" }, F: { "4": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "8": "F B C IC JC KC LC lB 2B MC mB" }, G: { "4": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "uB NC 3B" }, H: { "8": "hC" }, I: { "4": "oB I H lC 3B mC nC", "8": "iC jC kC" }, J: { "4": "A", "8": "D" }, K: { "4": "c", "8": "A B C lB 2B mB" }, L: { "4": "H" }, M: { "1": "b" }, N: { "4": "A B" }, O: { "4": "oC" }, P: { "4": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "4": "wB" }, R: { "4": "1C" }, S: { "1": "2C" } }, B: 1, C: "Ruby annotation" };
  }
});
var require_run_in = __commonJS({
  "../../node_modules/caniuse-lite/data/features/run-in.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "2": "J D 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 I p J D E F A B C K L G M N O q r s t u v w x y z", "2": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J BC", "2": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "CC", "129": "I AC uB" }, F: { "1": "F B C G M N O IC JC KC LC lB 2B MC mB", "2": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "NC 3B OC PC QC", "2": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "129": "uB" }, H: { "1": "hC" }, I: { "1": "oB I iC jC kC lC 3B mC", "2": "H nC" }, J: { "1": "D A" }, K: { "1": "A B C lB 2B mB", "2": "c" }, L: { "2": "H" }, M: { "2": "b" }, N: { "1": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "display: run-in" };
  }
});
var require_same_site_cookie_attribute = __commonJS({
  "../../node_modules/caniuse-lite/data/features/same-site-cookie-attribute.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "388": "B" }, B: { "1": "O P Q R S T U", "2": "C K L G", "129": "M N", "513": "V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB 6B 7B" }, D: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "513": "Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB lB", "2052": "L", "3076": "C K mB wB" }, F: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "513": "dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC", "2052": "YC ZC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "513": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "16": "wB" }, R: { "513": "1C" }, S: { "2": "2C" } }, B: 6, C: "'SameSite' cookie attribute" };
  }
});
var require_screen_orientation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/screen-orientation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "164": "B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "36": "C K L G M N O" }, C: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N 6B 7B", "36": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB" }, D: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A", "36": "B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "16": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "Screen Orientation" };
  }
});
var require_script_async = __commonJS({
  "../../node_modules/caniuse-lite/data/features/script-async.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "2": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "132": "p" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "async attribute for external scripts" };
  }
});
var require_script_defer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/script-defer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "132": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "257": "0 1 I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "defer attribute for external scripts" };
  }
});
var require_scrollintoview = __commonJS({
  "../../node_modules/caniuse-lite/data/features/scrollintoview.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D 4B", "132": "E F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "132": "C K L G M N O" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "132": "0 1 2 3 4 5 6 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB" }, E: { "1": "nB 1B HC", "2": "I p AC uB", "132": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F IC JC KC LC", "16": "B lB 2B", "132": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB MC mB" }, G: { "1": "nB 1B", "16": "uB NC 3B", "132": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "1": "H", "16": "iC jC", "132": "oB I kC lC 3B mC nC" }, J: { "132": "D A" }, K: { "1": "c", "132": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "132": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "scrollIntoView" };
  }
});
var require_scrollintoviewifneeded = __commonJS({
  "../../node_modules/caniuse-lite/data/features/scrollintoviewifneeded.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "Element.scrollIntoViewIfNeeded()" };
  }
});
var require_sdch = __commonJS({
  "../../node_modules/caniuse-lite/data/features/sdch.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB", "2": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB", "2": "F B C fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "SDCH Accept-Encoding/Content-Encoding" };
  }
});
var require_selection_api = __commonJS({
  "../../node_modules/caniuse-lite/data/features/selection-api.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "16": "4B", "260": "J D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "132": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 6B 7B", "2180": "EB FB GB HB IB JB KB LB MB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "132": "F B C IC JC KC LC lB 2B MC mB" }, G: { "16": "3B", "132": "uB NC", "516": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "16": "oB I iC jC kC lC", "1025": "3B" }, J: { "1": "A", "16": "D" }, K: { "1": "c", "16": "A B C lB 2B", "132": "mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "16": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2180": "2C" } }, B: 5, C: "Selection API" };
  }
});
var require_server_timing = __commonJS({
  "../../node_modules/caniuse-lite/data/features/server-timing.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB 6B 7B" }, D: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB", "196": "UB qB VB WB", "324": "c" }, E: { "2": "I p J D E F A B C AC uB BC CC DC EC vB lB", "516": "K L G mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Server Timing" };
  }
});
var require_serviceworkers = __commonJS({
  "../../node_modules/caniuse-lite/data/features/serviceworkers.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L", "322": "G M" }, C: { "1": "FB HB IB JB KB LB MB OB PB QB RB SB TB pB qB VB WB c XB YB ZB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "4 5 6 7 8 9 AB BB CB DB EB", "513": "GB NB UB aB" }, D: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB", "4": "BB CB DB EB FB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B AC uB BC CC DC EC vB" }, F: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x IC JC KC LC lB 2B MC mB", "4": "0 1 2 y z" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "4": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "4": "c" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "Service Workers" };
  }
});
var require_setimmediate = __commonJS({
  "../../node_modules/caniuse-lite/data/features/setimmediate.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O", "2": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "1": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Efficient Script Yielding: setImmediate()" };
  }
});
var require_shadowdom = __commonJS({
  "../../node_modules/caniuse-lite/data/features/shadowdom.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P", "2": "C K L G M N O Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "66": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB" }, D: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P", "2": "I p J D E F A B C K L G M N O q r s t u v Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "0 1 2 3 4 5 w x y z" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB", "2": "F B C ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "33": "G M N O q r s" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B", "33": "mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC", "2": "wC xC yC nB zC 0C", "33": "I" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 7, C: "Shadow DOM (deprecated V0 spec)" };
  }
});
var require_shadowdomv1 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/shadowdomv1.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB 6B 7B", "322": "TB", "578": "pB UB qB VB" }, D: { "1": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB" }, E: { "1": "A B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC", "132": "UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "4": "pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Shadow DOM (V1)" };
  }
});
var require_sharedarraybuffer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/sharedarraybuffer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z", "2": "C K L G", "194": "M N O", "513": "a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB 6B 7B", "194": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB", "450": "gB hB iB jB kB", "513": "P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB", "194": "UB qB VB WB c XB YB ZB", "513": "a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A AC uB BC CC DC EC", "194": "B C K L G vB lB mB wB FC GC", "513": "xB yB zB 0B nB 1B HC" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IC JC KC LC lB 2B MC mB", "194": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC", "194": "VC WC XC YC ZC aC bC cC dC eC fC gC", "513": "xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "513": "H" }, M: { "513": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "513": "1C" }, S: { "2": "2C" } }, B: 6, C: "Shared Array Buffer" };
  }
});
var require_sharedworkers = __commonJS({
  "../../node_modules/caniuse-lite/data/features/sharedworkers.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "p J BC nB 1B HC", "2": "I D E F A B C K L G AC uB CC DC EC vB lB mB wB FC GC xB yB zB 0B" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "2": "F IC JC KC" }, G: { "1": "OC PC nB 1B", "2": "E uB NC 3B QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "B C lB 2B mB", "2": "c", "16": "A" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "I", "2": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 1, C: "Shared Web Workers" };
  }
});
var require_sni = __commonJS({
  "../../node_modules/caniuse-lite/data/features/sni.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J 4B", "132": "D E" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Server Name Indication" };
  }
});
var require_spdy = __commonJS({
  "../../node_modules/caniuse-lite/data/features/spdy.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F A 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "2": "5B oB I p J D E F A B C MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "2": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "E F A B C EC vB lB", "2": "I p J D AC uB BC CC DC", "129": "K L G mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB DB FB mB", "2": "F B C BB CB EB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC" }, G: { "1": "E RC SC TC UC VC WC XC YC", "2": "uB NC 3B OC PC QC", "257": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I lC 3B mC nC", "2": "H iC jC kC" }, J: { "2": "D A" }, K: { "1": "mB", "2": "A B C c lB 2B" }, L: { "2": "H" }, M: { "2": "b" }, N: { "1": "B", "2": "A" }, O: { "2": "oC" }, P: { "1": "I", "2": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 7, C: "SPDY protocol" };
  }
});
var require_speech_recognition = __commonJS({
  "../../node_modules/caniuse-lite/data/features/speech-recognition.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "1026": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B", "322": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "I p J D E F A B C K L G M N O q r s t u v", "164": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L AC uB BC CC DC EC vB lB mB wB", "2084": "G FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C G M N O q r s t u v w x IC JC KC LC lB 2B MC mB", "1026": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC", "2084": "fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "164": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "164": "oC" }, P: { "164": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "164": "wB" }, R: { "164": "1C" }, S: { "322": "2C" } }, B: 7, C: "Speech Recognition API" };
  }
});
var require_speech_synthesis = __commonJS({
  "../../node_modules/caniuse-lite/data/features/speech-synthesis.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O", "2": "C K", "257": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB", "2": "0 1 2 3 I p J D E F A B C K L G M N O q r s t u v w x y z", "257": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB", "2": "F B C G M N O q r s t u v w x IC JC KC LC lB 2B MC mB", "257": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 7, C: "Speech Synthesis API" };
  }
});
var require_spellcheck_attribute = __commonJS({
  "../../node_modules/caniuse-lite/data/features/spellcheck-attribute.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "4": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "4": "hC" }, I: { "4": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "A", "4": "D" }, K: { "4": "A B C c lB 2B mB" }, L: { "4": "H" }, M: { "4": "b" }, N: { "4": "A B" }, O: { "4": "oC" }, P: { "4": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "4": "1C" }, S: { "2": "2C" } }, B: 1, C: "Spellcheck attribute" };
  }
});
var require_sql_storage = __commonJS({
  "../../node_modules/caniuse-lite/data/features/sql-storage.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b", "2": "C K L G M N O", "129": "H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b", "129": "H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C AC uB BC CC DC EC vB lB mB", "2": "K L G wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z KC LC lB 2B MC mB", "2": "F IC JC", "129": "a" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC", "2": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I iC jC kC lC 3B mC nC", "129": "H" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "129": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "Web SQL Database" };
  }
});
var require_srcset = __commonJS({
  "../../node_modules/caniuse-lite/data/features/srcset.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C", "514": "K L G" }, C: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "3 4 5 6 7 8" }, D: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 I p J D E F A B C K L G M N O q r s t u v w x y z", "260": "5 6 7 8" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC CC", "260": "E DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r IC JC KC LC lB 2B MC mB", "260": "s t u v" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "260": "E RC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Srcset and sizes attributes" };
  }
});
var require_stream = __commonJS({
  "../../node_modules/caniuse-lite/data/features/stream.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M 6B 7B", "129": "7 8 9 AB BB CB", "420": "0 1 2 3 4 5 6 N O q r s t u v w x y z" }, D: { "1": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r", "420": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B G M N IC JC KC LC lB 2B MC", "420": "0 1 2 3 4 5 6 7 8 9 C O q r s t u v w x y z AB mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "513": "dC eC fC gC xB yB zB 0B nB 1B", "1537": "WC XC YC ZC aC bC cC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "420": "A" }, K: { "1": "c", "2": "A B lB 2B", "420": "C mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "420": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "getUserMedia/Stream API" };
  }
});
var require_streams = __commonJS({
  "../../node_modules/caniuse-lite/data/features/streams.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "130": "B" }, B: { "1": "Y Z a d e f g h i j k l m n o b H", "16": "C K", "260": "L G", "1028": "P Q R S T U V W X", "5124": "M N O" }, C: { "1": "n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB 6B 7B", "5124": "l m", "7172": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k", "7746": "SB TB pB UB qB VB WB c" }, D: { "1": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB", "260": "NB OB PB QB RB SB TB", "1028": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X" }, E: { "2": "I p J D E F AC uB BC CC DC EC", "1028": "G FC GC xB yB zB 0B nB 1B HC", "3076": "A B C K L vB lB mB wB" }, F: { "1": "iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "260": "AB BB CB DB EB FB GB", "1028": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC", "16": "UC", "1028": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1028": "oC" }, P: { "1": "yC nB zC 0C", "2": "I pC qC", "1028": "rC sC tC vB uC vC wC xC" }, Q: { "1028": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "Streams" };
  }
});
var require_stricttransportsecurity = __commonJS({
  "../../node_modules/caniuse-lite/data/features/stricttransportsecurity.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A 4B", "129": "B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Strict Transport Security" };
  }
});
var require_style_scoped = __commonJS({
  "../../node_modules/caniuse-lite/data/features/style-scoped.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB", "2": "5B oB I p J D E F A B C K L G M N O q r qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "322": "QB RB SB TB pB UB" }, D: { "2": "8 9 I p J D E F A B C K L G M N O q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "194": "0 1 2 3 4 5 6 7 r s t u v w x y z" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "1": "2C" } }, B: 7, C: "Scoped CSS" };
  }
});
var require_subresource_bundling = __commonJS({
  "../../node_modules/caniuse-lite/data/features/subresource-bundling.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "b H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Subresource Loading with Web Bundles" };
  }
});
var require_subresource_integrity = __commonJS({
  "../../node_modules/caniuse-lite/data/features/subresource-integrity.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M" }, C: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB 6B 7B" }, D: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB" }, F: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "194": "WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Subresource Integrity" };
  }
});
var require_svg_css = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg-css.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "516": "C K L G" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "260": "I p J D E F A B C K L G M N O q r s t u" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "I" }, E: { "1": "p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC", "132": "I uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "132": "uB NC" }, H: { "260": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "c", "260": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "SVG in CSS backgrounds" };
  }
});
var require_svg_filters = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg-filters.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I", "4": "p J D" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "SVG filters" };
  }
});
var require_svg_fonts = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg-fonts.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "F A B 4B", "8": "J D E" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z", "2": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "130": "9 AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC" }, F: { "1": "F B C G M N O q r s t u v IC JC KC LC lB 2B MC mB", "2": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "130": "0 1 2 3 4 5 6 7 w x y z" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "258": "hC" }, I: { "1": "oB I lC 3B mC nC", "2": "H iC jC kC" }, J: { "1": "D A" }, K: { "1": "A B C lB 2B mB", "2": "c" }, L: { "130": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "I", "130": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "130": "1C" }, S: { "2": "2C" } }, B: 2, C: "SVG fonts" };
  }
});
var require_svg_fragment = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg-fragment.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "260": "F A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "1": "LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z", "132": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB" }, E: { "1": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D F A B AC uB BC CC EC vB", "132": "E DC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "G M N O q r s t", "4": "B C JC KC LC lB 2B MC", "16": "F IC", "132": "0 1 2 3 4 5 6 7 u v w x y z" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC SC TC UC VC WC", "132": "E RC" }, H: { "1": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D", "132": "A" }, K: { "1": "c mB", "4": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "132": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "SVG fragment identifiers" };
  }
});
var require_svg_html = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg-html.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "388": "F A B" }, B: { "4": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B", "4": "oB" }, D: { "4": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "AC uB", "4": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "4": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "4": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "4": "H mC nC" }, J: { "1": "A", "2": "D" }, K: { "4": "A B C c lB 2B mB" }, L: { "4": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "4": "oC" }, P: { "4": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "4": "wB" }, R: { "4": "1C" }, S: { "1": "2C" } }, B: 2, C: "SVG effects for HTML" };
  }
});
var require_svg_html5 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg-html5.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E", "129": "F A B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "C K L G M" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "8": "I p J" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "I p AC uB", "129": "J D E BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "B LC lB 2B", "8": "F IC JC KC" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "8": "uB NC 3B", "129": "E OC PC QC RC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "iC jC kC", "129": "oB I lC 3B" }, J: { "1": "A", "129": "D" }, K: { "1": "C c mB", "8": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "129": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Inline SVG in HTML5" };
  }
});
var require_svg_img = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg-img.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "I p J D E F A B C K L G M N O q r s t u v w x y" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC", "4": "uB", "132": "I p J D E BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "132": "E uB NC 3B OC PC QC RC" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "iC jC kC", "132": "oB I lC 3B" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "SVG in HTML img element" };
  }
});
var require_svg_smil = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg-smil.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "8": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "I" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "AC uB", "132": "I p BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "132": "uB NC 3B OC" }, H: { "2": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "8": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "SVG SMIL animation" };
  }
});
var require_svg = __commonJS({
  "../../node_modules/caniuse-lite/data/features/svg.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E", "772": "F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "513": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "4": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "4": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "H mC nC", "2": "iC jC kC", "132": "oB I lC 3B" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "257": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "SVG (basic support)" };
  }
});
var require_sxg = __commonJS({
  "../../node_modules/caniuse-lite/data/features/sxg.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB", "132": "dB eB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "Signed HTTP Exchanges (SXG)" };
  }
});
var require_tabindex_attr = __commonJS({
  "../../node_modules/caniuse-lite/data/features/tabindex-attr.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "D E F A B", "16": "J 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "16": "5B oB 6B 7B", "129": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "16": "I p AC uB", "257": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "16": "F" }, G: { "769": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "16": "hC" }, I: { "16": "oB I H iC jC kC lC 3B mC nC" }, J: { "16": "D A" }, K: { "16": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "16": "A B" }, O: { "1": "oC" }, P: { "16": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "129": "2C" } }, B: 1, C: "tabindex global attribute" };
  }
});
var require_template_literals = __commonJS({
  "../../node_modules/caniuse-lite/data/features/template-literals.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "16": "C" }, C: { "1": "5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB" }, E: { "1": "A B K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC", "129": "C" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "SC TC UC VC WC XC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC", "129": "YC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "ES6 Template Literals (Template Strings)" };
  }
});
var require_template = __commonJS({
  "../../node_modules/caniuse-lite/data/features/template.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C", "388": "K L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s 6B 7B" }, D: { "1": "6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w", "132": "0 1 2 3 4 5 x y z" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D AC uB BC", "388": "E DC", "514": "CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "132": "G M N O q r s" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC", "388": "E RC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "HTML templates" };
  }
});
var require_temporal = __commonJS({
  "../../node_modules/caniuse-lite/data/features/temporal.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 6, C: "Temporal" };
  }
});
var require_testfeat = __commonJS({
  "../../node_modules/caniuse-lite/data/features/testfeat.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E A B 4B", "16": "F" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "16": "I p" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "B C" }, E: { "2": "I J AC uB BC", "16": "p D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC 2B MC mB", "16": "lB" }, G: { "2": "uB NC 3B OC PC", "16": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC lC 3B mC nC", "16": "kC" }, J: { "2": "A", "16": "D" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Test feature - updated" };
  }
});
var require_text_decoration = __commonJS({
  "../../node_modules/caniuse-lite/data/features/text-decoration.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "2052": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p 6B 7B", "1028": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "1060": "0 1 2 3 4 5 6 J D E F A B C K L G M N O q r s t u v w x y z" }, D: { "2": "I p J D E F A B C K L G M N O q r s t u v w", "226": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "2052": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D AC uB BC CC", "772": "K L G mB wB FC GC xB yB zB 0B nB 1B HC", "804": "E F A B C EC vB lB", "1316": "DC" }, F: { "2": "0 1 2 3 4 5 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "226": "6 7 8 9 AB BB CB DB EB", "2052": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "uB NC 3B OC PC QC", "292": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "2052": "H" }, M: { "1028": "b" }, N: { "2": "A B" }, O: { "2052": "oC" }, P: { "2": "I pC qC", "2052": "rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2052": "wB" }, R: { "2052": "1C" }, S: { "1028": "2C" } }, B: 4, C: "text-decoration styling" };
  }
});
var require_text_emphasis = __commonJS({
  "../../node_modules/caniuse-lite/data/features/text-emphasis.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "k l m n o b H", "2": "C K L G M N O", "164": "P Q R S T U V W X Y Z a d e f g h i j" }, C: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB 6B 7B", "322": "GB" }, D: { "1": "k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v", "164": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j" }, E: { "1": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC", "164": "D CC" }, F: { "1": "V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "164": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B", "164": "mC nC" }, J: { "2": "D", "164": "A" }, K: { "2": "A B C lB 2B mB", "164": "c" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "164": "oC" }, P: { "1": "0C", "164": "I pC qC rC sC tC vB uC vC wC xC yC nB zC" }, Q: { "164": "wB" }, R: { "164": "1C" }, S: { "1": "2C" } }, B: 4, C: "text-emphasis styling" };
  }
});
var require_text_overflow = __commonJS({
  "../../node_modules/caniuse-lite/data/features/text-overflow.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B", "2": "4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "8": "5B oB I p J 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "33": "F IC JC KC LC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "c mB", "33": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "CSS3 Text-overflow" };
  }
});
var require_text_size_adjust = __commonJS({
  "../../node_modules/caniuse-lite/data/features/text-size-adjust.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "33": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "258": "x" }, E: { "2": "I p J D E F A B C K L G AC uB CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "258": "BC" }, F: { "1": "EB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB FB IC JC KC LC lB 2B MC mB" }, G: { "2": "uB NC 3B", "33": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "33": "b" }, N: { "161": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS text-size-adjust" };
  }
});
var require_text_stroke = __commonJS({
  "../../node_modules/caniuse-lite/data/features/text-stroke.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L", "33": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "161": "G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB 6B 7B", "161": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "450": "JB" }, D: { "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "33": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "33": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "36": "uB" }, H: { "2": "hC" }, I: { "2": "oB", "33": "I H iC jC kC lC 3B mC nC" }, J: { "33": "D A" }, K: { "2": "A B C lB 2B mB", "33": "c" }, L: { "33": "H" }, M: { "161": "b" }, N: { "2": "A B" }, O: { "33": "oC" }, P: { "33": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "33": "wB" }, R: { "33": "1C" }, S: { "161": "2C" } }, B: 7, C: "CSS text-stroke and text-fill" };
  }
});
var require_textcontent = __commonJS({
  "../../node_modules/caniuse-lite/data/features/textcontent.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "16": "F" }, G: { "1": "E NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Node.textContent" };
  }
});
var require_textencoder = __commonJS({
  "../../node_modules/caniuse-lite/data/features/textencoder.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O 6B 7B", "132": "q" }, D: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u v IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "TextEncoder & TextDecoder" };
  }
});
var require_tls1_1 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/tls1-1.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D 4B", "66": "E F A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB", "2": "5B oB I p J D E F A B C K L G M N O q r s t 6B 7B", "66": "u", "129": "aB bB cB dB eB fB gB hB iB jB", "388": "kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T", "2": "I p J D E F A B C K L G M N O q r s", "1540": "U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "D E F A B C K DC EC vB lB mB", "2": "I p J AC uB BC CC", "513": "L G wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB mB", "2": "F B C IC JC KC LC lB 2B MC", "1540": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "1": "A", "2": "D" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "129": "b" }, N: { "1": "B", "66": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "TLS 1.1" };
  }
});
var require_tls1_2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/tls1-2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D 4B", "66": "E F A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u 6B 7B", "66": "v w x" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F G IC", "66": "B C JC KC LC lB 2B MC mB" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "1": "A", "2": "D" }, K: { "1": "c mB", "2": "A B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "66": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "TLS 1.2" };
  }
});
var require_tls1_3 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/tls1-3.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 6B 7B", "132": "UB qB VB", "450": "MB NB OB PB QB RB SB TB pB" }, D: { "1": "cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "706": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB" }, E: { "1": "L G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB", "1028": "K mB wB" }, F: { "1": "SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB IC JC KC LC lB 2B MC mB", "706": "PB QB RB" }, G: { "1": "ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC sC tC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 6, C: "TLS 1.3" };
  }
});
var require_touch = __commonJS({
  "../../node_modules/caniuse-lite/data/features/touch.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "8": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "578": "C K L G M N O" }, C: { "1": "O q r s t u v NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "4": "I p J D E F A B C K L G M N", "194": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "8": "A", "260": "B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "Touch events" };
  }
});
var require_transforms2d = __commonJS({
  "../../node_modules/caniuse-lite/data/features/transforms2d.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E", "129": "A B", "161": "F" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "C K L G M" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "33": "I p J D E F A B C K L G 6B 7B" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "33": "I p J D E AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F IC JC", "33": "B C G M N O q r s t KC LC lB 2B MC" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "33": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "33": "oB I iC jC kC lC 3B mC nC" }, J: { "33": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 2D Transforms" };
  }
});
var require_transforms3d = __commonJS({
  "../../node_modules/caniuse-lite/data/features/transforms3d.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "132": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F 6B 7B", "33": "A B C K L G" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B", "33": "0 1 2 3 4 5 6 C K L G M N O q r s t u v w x y z" }, E: { "1": "yB zB 0B nB 1B HC", "2": "AC uB", "33": "I p J D E BC CC DC", "257": "F A B C K L G EC vB lB mB wB FC GC xB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "G M N O q r s t" }, G: { "1": "yB zB 0B nB 1B", "33": "E uB NC 3B OC PC QC RC", "257": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "1": "H", "2": "iC jC kC", "33": "oB I lC 3B mC nC" }, J: { "33": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 5, C: "CSS3 3D Transforms" };
  }
});
var require_trusted_types = __commonJS({
  "../../node_modules/caniuse-lite/data/features/trusted-types.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O P Q R" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "Trusted Types for DOM manipulation" };
  }
});
var require_ttf = __commonJS({
  "../../node_modules/caniuse-lite/data/features/ttf.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "132": "F A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a JC KC LC lB 2B MC mB", "2": "F IC" }, G: { "1": "E 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC" }, H: { "2": "hC" }, I: { "1": "oB I H jC kC lC 3B mC nC", "2": "iC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "TTF/OTF - TrueType and OpenType font support" };
  }
});
var require_typedarrays = __commonJS({
  "../../node_modules/caniuse-lite/data/features/typedarrays.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "B", "2": "J D E F 4B", "132": "A" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB", "260": "BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F B IC JC KC LC lB 2B" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC", "260": "3B" }, H: { "1": "hC" }, I: { "1": "I H lC 3B mC nC", "2": "oB iC jC kC" }, J: { "1": "A", "2": "D" }, K: { "1": "C c mB", "2": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Typed Arrays" };
  }
});
var require_u2f = __commonJS({
  "../../node_modules/caniuse-lite/data/features/u2f.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "513": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 6B 7B", "322": "IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB" }, D: { "2": "0 1 2 3 4 5 6 7 8 I p J D E F A B C K L G M N O q r s t u v w x y z sB tB 8B 9B", "130": "9 AB BB", "513": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i", "578": "j k l m n o b H" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB mB" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB CB IC JC KC LC lB 2B MC mB", "513": "BB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "322": "2C" } }, B: 7, C: "FIDO U2F API" };
  }
});
var require_unhandledrejection = __commonJS({
  "../../node_modules/caniuse-lite/data/features/unhandledrejection.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB 6B 7B" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "16": "WC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 1, C: "unhandledrejection/rejectionhandled events" };
  }
});
var require_upgradeinsecurerequests = __commonJS({
  "../../node_modules/caniuse-lite/data/features/upgradeinsecurerequests.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M" }, C: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB 6B 7B" }, D: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Upgrade Insecure Requests" };
  }
});
var require_url_scroll_to_text_fragment = __commonJS({
  "../../node_modules/caniuse-lite/data/features/url-scroll-to-text-fragment.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "66": "P Q R" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB", "66": "gB hB iB jB kB P Q" }, E: { "1": "1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB IC JC KC LC lB 2B MC mB", "66": "YB ZB" }, G: { "1": "1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "wC xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "URL Scroll-To-Text Fragment" };
  }
});
var require_url = __commonJS({
  "../../node_modules/caniuse-lite/data/features/url.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w 6B 7B" }, D: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t", "130": "0 1 2 u v w x y z" }, E: { "1": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC CC", "130": "D" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "130": "G M N O" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC", "130": "QC" }, H: { "2": "hC" }, I: { "1": "H nC", "2": "oB I iC jC kC lC 3B", "130": "mC" }, J: { "2": "D", "130": "A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "URL API" };
  }
});
var require_urlsearchparams = __commonJS({
  "../../node_modules/caniuse-lite/data/features/urlsearchparams.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M" }, C: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "132": "0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "B C K L G vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB" }, G: { "1": "VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "URLSearchParams" };
  }
});
var require_use_strict = __commonJS({
  "../../node_modules/caniuse-lite/data/features/use-strict.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "132": "p BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F B IC JC KC LC lB 2B" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "oB I H lC 3B mC nC", "2": "iC jC kC" }, J: { "1": "D A" }, K: { "1": "C c 2B mB", "2": "A B lB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "ECMAScript 5 Strict Mode" };
  }
});
var require_user_select_none = __commonJS({
  "../../node_modules/caniuse-lite/data/features/user-select-none.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "33": "A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "33": "C K L G M N O" }, C: { "1": "bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "33": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB 6B 7B" }, D: { "1": "PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "33": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "HC", "33": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "33": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB" }, G: { "33": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "33": "oB I iC jC kC lC 3B mC nC" }, J: { "33": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "33": "A B" }, O: { "1": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "33": "I pC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "33": "2C" } }, B: 5, C: "CSS user-select: none" };
  }
});
var require_user_timing = __commonJS({
  "../../node_modules/caniuse-lite/data/features/user-timing.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q r s t u v" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "User Timing API" };
  }
});
var require_variable_fonts = __commonJS({
  "../../node_modules/caniuse-lite/data/features/variable-fonts.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 6B 7B", "4609": "VB WB c XB YB ZB aB bB cB", "4674": "qB", "5698": "UB", "7490": "OB PB QB RB SB", "7746": "TB pB", "8705": "dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB", "4097": "YB", "4290": "pB UB qB", "6148": "VB WB c XB" }, E: { "1": "G GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "4609": "B C lB mB", "8193": "K L wB FC" }, F: { "1": "PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB IC JC KC LC lB 2B MC mB", "4097": "OB", "6148": "KB LB MB NB" }, G: { "1": "aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "4097": "WC XC YC ZC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "4097": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "2": "I pC qC rC", "4097": "sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Variable fonts" };
  }
});
var require_vector_effect = __commonJS({
  "../../node_modules/caniuse-lite/data/features/vector-effect.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "2": "F B IC JC KC LC lB 2B" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "H mC nC", "16": "oB I iC jC kC lC 3B" }, J: { "16": "D A" }, K: { "1": "C c mB", "2": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "SVG vector-effect: non-scaling-stroke" };
  }
});
var require_vibration = __commonJS({
  "../../node_modules/caniuse-lite/data/features/vibration.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A 6B 7B", "33": "B C K L G" }, D: { "1": "1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "Vibration API" };
  }
});
var require_video = __commonJS({
  "../../node_modules/caniuse-lite/data/features/video.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "260": "I p J D E F A B C K L G M N O q 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A BC CC DC EC vB", "2": "AC uB", "513": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC", "513": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "132": "iC jC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Video element" };
  }
});
var require_videotracks = __commonJS({
  "../../node_modules/caniuse-lite/data/features/videotracks.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O", "322": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB", "322": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J AC uB BC" }, F: { "2": "0 1 2 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "322": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "322": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "322": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "322": "wB" }, R: { "322": "1C" }, S: { "194": "2C" } }, B: 1, C: "Video Tracks" };
  }
});
var require_viewport_unit_variants = __commonJS({
  "../../node_modules/caniuse-lite/data/features/viewport-unit-variants.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b", "194": "H" }, C: { "1": "m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l 6B 7B" }, D: { "1": "8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k", "194": "l m n o b H sB tB" }, E: { "1": "yB zB 0B nB 1B HC", "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z IC JC KC LC lB 2B MC mB", "194": "a" }, G: { "1": "yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "Large, Small, and Dynamic viewport units" };
  }
});
var require_viewport_units = __commonJS({
  "../../node_modules/caniuse-lite/data/features/viewport-units.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "132": "F", "260": "A B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "260": "C K L G" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N O q", "260": "r s t u v w" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC", "260": "J" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC", "516": "QC", "772": "PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "260": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "Viewport units: vw, vh, vmin, vmax" };
  }
});
var require_wai_aria = __commonJS({
  "../../node_modules/caniuse-lite/data/features/wai-aria.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D 4B", "4": "E F A B" }, B: { "4": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "4": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "4": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "AC uB", "4": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F", "4": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "4": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "4": "hC" }, I: { "2": "oB I iC jC kC lC 3B", "4": "H mC nC" }, J: { "2": "D A" }, K: { "4": "A B C c lB 2B mB" }, L: { "4": "H" }, M: { "4": "b" }, N: { "4": "A B" }, O: { "4": "oC" }, P: { "4": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "4": "wB" }, R: { "4": "1C" }, S: { "4": "2C" } }, B: 2, C: "WAI-ARIA Accessibility features" };
  }
});
var require_wake_lock = __commonJS({
  "../../node_modules/caniuse-lite/data/features/wake-lock.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "194": "P Q R S T U V W X Y" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB", "194": "dB eB fB gB hB iB jB kB P Q R S T" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB IC JC KC LC lB 2B MC mB", "194": "TB UB VB WB c XB YB ZB aB bB cB dB eB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "xC yC nB zC 0C", "2": "I pC qC rC sC tC vB uC vC wC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 4, C: "Screen Wake Lock API" };
  }
});
var require_wasm = __commonJS({
  "../../node_modules/caniuse-lite/data/features/wasm.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L", "578": "G" }, C: { "1": "OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB 6B 7B", "194": "IB JB KB LB MB", "1025": "NB" }, D: { "1": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB", "322": "MB NB OB PB QB RB" }, E: { "1": "B C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "322": "9 AB BB CB DB EB" }, G: { "1": "WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "194": "2C" } }, B: 6, C: "WebAssembly" };
  }
});
var require_wav = __commonJS({
  "../../node_modules/caniuse-lite/data/features/wav.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a KC LC lB 2B MC mB", "2": "F IC JC" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "16": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "Wav audio format" };
  }
});
var require_wbr_element = __commonJS({
  "../../node_modules/caniuse-lite/data/features/wbr-element.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D 4B", "2": "E F A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "AC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "16": "F" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B" }, H: { "1": "hC" }, I: { "1": "oB I H kC lC 3B mC nC", "16": "iC jC" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "wbr (word break opportunity) element" };
  }
});
var require_web_animation = __commonJS({
  "../../node_modules/caniuse-lite/data/features/web-animation.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "260": "P Q R S" }, C: { "1": "R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "260": "pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB", "516": "IB JB KB LB MB NB OB PB QB RB SB TB", "580": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB", "2049": "hB iB jB kB P Q" }, D: { "1": "T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z", "132": "7 8 9", "260": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S" }, E: { "1": "G GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC vB", "1090": "B C K lB mB", "2049": "L wB FC" }, F: { "1": "dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t IC JC KC LC lB 2B MC mB", "132": "u v w", "260": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC", "1090": "WC XC YC ZC aC bC cC", "2049": "dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "260": "oC" }, P: { "260": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "260": "wB" }, R: { "1": "1C" }, S: { "516": "2C" } }, B: 5, C: "Web Animations API" };
  }
});
var require_web_app_manifest = __commonJS({
  "../../node_modules/caniuse-lite/data/features/web-app-manifest.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M", "130": "N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "578": "iB jB kB P Q R rB S T U" }, D: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC", "260": "XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "Add to home screen (A2HS)" };
  }
});
var require_web_bluetooth = __commonJS({
  "../../node_modules/caniuse-lite/data/features/web-bluetooth.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "1025": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB", "194": "GB HB IB JB KB LB MB NB", "706": "OB PB QB", "1025": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 F B C G M N O q r s t u v w x y z IC JC KC LC lB 2B MC mB", "450": "7 8 9 AB", "706": "BB CB DB", "1025": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC nC", "1025": "H" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "1025": "c" }, L: { "1025": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1025": "oC" }, P: { "1": "qC rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC" }, Q: { "2": "wB" }, R: { "1025": "1C" }, S: { "2": "2C" } }, B: 7, C: "Web Bluetooth" };
  }
});
var require_web_serial = __commonJS({
  "../../node_modules/caniuse-lite/data/features/web-serial.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "66": "P Q R S T U V W X" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB", "66": "kB P Q R S T U V W X" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c IC JC KC LC lB 2B MC mB", "66": "XB YB ZB aB bB cB dB eB fB gB hB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "Web Serial API" };
  }
});
var require_web_share = __commonJS({
  "../../node_modules/caniuse-lite/data/features/web-share.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "g h i j k l m n o b H", "2": "C K L G M N O P Q", "516": "R S T U V W X Y Z a d e f" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X", "130": "O q r s t u v", "1028": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "L G FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB", "2049": "K mB wB" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC", "2049": "ZC aC bC cC dC" }, H: { "2": "hC" }, I: { "2": "oB I iC jC kC lC 3B mC", "258": "H nC" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "258": "c" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I", "258": "pC qC rC" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "Web Share API" };
  }
});
var require_webauthn = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webauthn.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C", "226": "K L G M N" }, C: { "1": "UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB 6B 7B" }, D: { "1": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB" }, E: { "1": "K L G wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A B C AC uB BC CC DC EC vB lB", "322": "mB" }, F: { "1": "PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB IC JC KC LC lB 2B MC mB" }, G: { "1": "fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC", "578": "bC", "2052": "eC", "3076": "cC dC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "zC 0C", "2": "I pC qC rC sC tC vB uC vC wC xC yC nB" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 2, C: "Web Authentication API" };
  }
});
var require_webcodecs = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webcodecs.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "f g h i j k l m n o b H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "zC 0C", "2": "I pC qC rC sC tC vB uC vC wC xC yC nB" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "WebCodecs API" };
  }
});
var require_webgl = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webgl.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "4B", "8": "J D E F A", "129": "B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "129": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "129": "I p J D E F A B C K L G M N O q r s t u" }, D: { "1": "4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D", "129": "0 1 2 3 E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "E F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB", "129": "J D BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B IC JC KC LC lB 2B MC", "129": "C G M N O mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC QC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "1": "A", "2": "D" }, K: { "1": "C c mB", "2": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "8": "A", "129": "B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "129": "2C" } }, B: 6, C: "WebGL - 3D Canvas graphics" };
  }
});
var require_webgl2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webgl2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v 6B 7B", "194": "DB EB FB", "450": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB", "2242": "GB HB IB JB KB LB" }, D: { "1": "RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB", "578": "EB FB GB HB IB JB KB LB MB NB OB PB QB" }, E: { "1": "G GC xB yB zB 0B nB 1B HC", "2": "I p J D E F A AC uB BC CC DC EC", "1090": "B C K L vB lB mB wB FC" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB IC JC KC LC lB 2B MC mB" }, G: { "1": "gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC", "1090": "YC ZC aC bC cC dC eC fC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "rC sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "2242": "2C" } }, B: 6, C: "WebGL 2.0" };
  }
});
var require_webgpu = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webgpu.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P", "578": "Q R S T U V W X Y Z a d e", "1602": "f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB 6B 7B", "194": "WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P", "578": "Q R S T U V W X Y Z a d e", "1602": "f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B AC uB BC CC DC EC vB", "322": "C K L G lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB IC JC KC LC lB 2B MC mB", "578": "fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "194": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 5, C: "WebGPU" };
  }
});
var require_webhid = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webhid.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O", "66": "P Q R S T U V W X" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB", "66": "kB P Q R S T U V W X" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB IC JC KC LC lB 2B MC mB", "66": "YB ZB aB bB cB dB eB fB gB hB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "WebHID API" };
  }
});
var require_webkit_user_drag = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webkit-user-drag.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "132": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "16": "I p J D E F A B C K L G", "132": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "F B C IC JC KC LC lB 2B MC mB", "132": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "CSS -webkit-user-drag property" };
  }
});
var require_webm = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webm.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E 4B", "520": "F A B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "8": "C K", "388": "L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "132": "I p J D E F A B C K L G M N O q r s t u v w x y" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p", "132": "J D E F A B C K L G M N O q r s t u v" }, E: { "1": "nB 1B HC", "2": "AC", "8": "I p uB BC", "520": "J D E F A B C CC DC EC vB lB", "1028": "K mB wB", "7172": "L", "8196": "G FC GC xB yB zB 0B" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F IC JC KC", "132": "B C G LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC", "1028": "ZC aC bC cC dC", "3076": "eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "iC jC", "132": "oB I kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "8": "A B" }, O: { "1": "oC" }, P: { "1": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C", "132": "I" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 6, C: "WebM video format" };
  }
});
var require_webnfc = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webnfc.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O P Y Z a d e f g h i j k l m n o b H", "450": "Q R S T U V W X" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "450": "Q R S T U V W X" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB IC JC KC LC lB 2B MC mB", "450": "ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "257": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "Web NFC" };
  }
});
var require_webp = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webp.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N" }, C: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "8": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c" }, D: { "1": "3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p", "8": "J D E", "132": "F A B C K L G M N O q r s t", "260": "0 1 2 u v w x y z" }, E: { "1": "nB 1B HC", "2": "I p J D E F A B C K AC uB BC CC DC EC vB lB mB wB", "516": "L G FC GC xB yB zB 0B" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F IC JC KC", "8": "B LC", "132": "lB 2B MC", "260": "C G M N O mB" }, G: { "1": "eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC" }, H: { "1": "hC" }, I: { "1": "H 3B mC nC", "2": "oB iC jC kC", "132": "I lC" }, J: { "2": "D A" }, K: { "1": "C c lB 2B mB", "2": "A", "132": "B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "8": "2C" } }, B: 6, C: "WebP image format" };
  }
});
var require_websockets = __commonJS({
  "../../node_modules/caniuse-lite/data/features/websockets.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB 6B 7B", "132": "I p", "292": "J D E F A" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "I p J D E F A B C K L", "260": "G" }, E: { "1": "D E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "132": "p BC", "260": "J CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F IC JC KC LC", "132": "B C lB 2B MC" }, G: { "1": "E PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC", "132": "3B OC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "129": "D" }, K: { "1": "c mB", "2": "A", "132": "B C lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Web Sockets" };
  }
});
var require_webtransport = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webtransport.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "j k l m n o b H", "2": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z g h", "66": "a d e f" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB IC JC KC LC lB 2B MC mB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "1": "0C", "2": "I pC qC rC sC tC vB uC vC wC xC yC nB zC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 5, C: "WebTransport" };
  }
});
var require_webusb = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webusb.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "66": "PB QB RB SB TB pB UB" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB IC JC KC LC lB 2B MC mB", "66": "CB DB EB FB GB HB IB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "sC tC vB uC vC wC xC yC nB zC 0C", "2": "I pC qC rC" }, Q: { "2": "wB" }, R: { "1": "1C" }, S: { "2": "2C" } }, B: 7, C: "WebUSB" };
  }
});
var require_webvr = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webvr.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "66": "P", "257": "G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB 6B 7B", "129": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "194": "PB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "66": "SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P" }, E: { "2": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "66": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C c lB 2B mB" }, L: { "2": "H" }, M: { "2": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "513": "I", "516": "pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 7, C: "WebVR API" };
  }
});
var require_webvtt = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webvtt.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "5B oB I p J D E F A B C K L G M N O q r s t u 6B 7B", "66": "0 1 v w x y z", "129": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB", "257": "QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I p J D E F A B C K L G M N" }, E: { "1": "J D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB I iC jC kC lC 3B" }, J: { "1": "A", "2": "D" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "B", "2": "A" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "129": "2C" } }, B: 4, C: "WebVTT - Web Video Text Tracks" };
  }
});
var require_webworkers = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webworkers.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "2": "4B", "8": "J D E F" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "8": "5B oB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "8": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a LC lB 2B MC mB", "2": "F IC", "8": "JC KC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "H iC mC nC", "2": "oB I jC kC lC 3B" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "8": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Web Workers" };
  }
});
var require_webxr = __commonJS({
  "../../node_modules/caniuse-lite/data/features/webxr.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "2": "C K L G M N O", "132": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB 6B 7B", "322": "jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c", "66": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB", "132": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "2": "I p J D E F A B C AC uB BC CC DC EC vB lB mB", "578": "K L G wB FC GC xB yB zB 0B nB 1B HC" }, F: { "2": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB IC JC KC LC lB 2B MC mB", "66": "NB OB PB QB RB SB TB UB VB WB c XB", "132": "YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a" }, G: { "2": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "2": "hC" }, I: { "2": "oB I H iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "2": "A B C lB 2B mB", "132": "c" }, L: { "132": "H" }, M: { "322": "b" }, N: { "2": "A B" }, O: { "2": "oC" }, P: { "2": "I pC qC rC sC tC vB uC", "132": "vC wC xC yC nB zC 0C" }, Q: { "2": "wB" }, R: { "2": "1C" }, S: { "2": "2C" } }, B: 4, C: "WebXR Device API" };
  }
});
var require_will_change = __commonJS({
  "../../node_modules/caniuse-lite/data/features/will-change.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K L G M N O" }, C: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B", "194": "0 1 2 3 4 5 6" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t u IC JC KC LC lB 2B MC mB" }, G: { "1": "TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS will-change property" };
  }
});
var require_woff = __commonJS({
  "../../node_modules/caniuse-lite/data/features/woff.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 7B", "2": "5B oB 6B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "I" }, E: { "1": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a lB 2B MC mB", "2": "F B IC JC KC LC" }, G: { "1": "E OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B" }, H: { "2": "hC" }, I: { "1": "H mC nC", "2": "oB iC jC kC lC 3B", "130": "I" }, J: { "1": "D A" }, K: { "1": "B C c lB 2B mB", "2": "A" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "WOFF - Web Open Font Format" };
  }
});
var require_woff2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/woff2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F A B 4B" }, B: { "1": "L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "2": "C K" }, C: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z 6B 7B" }, D: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "2": "0 1 2 3 4 5 6 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "C K L G mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I p J D E F AC uB BC CC DC EC", "132": "A B vB lB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C G M N O q r s t IC JC KC LC lB 2B MC mB" }, G: { "1": "UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "E uB NC 3B OC PC QC RC SC TC" }, H: { "2": "hC" }, I: { "1": "H", "2": "oB I iC jC kC lC 3B mC nC" }, J: { "2": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "2": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 2, C: "WOFF 2.0 - Web Open Font Format" };
  }
});
var require_word_break = __commonJS({
  "../../node_modules/caniuse-lite/data/features/word-break.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "J D E F A B 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB I p J D E F A B C K L 6B 7B" }, D: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB" }, E: { "1": "F A B C K L G EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "4": "I p J D E AC uB BC CC DC" }, F: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "2": "F B C IC JC KC LC lB 2B MC mB", "4": "0 1 G M N O q r s t u v w x y z" }, G: { "1": "SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "4": "E uB NC 3B OC PC QC RC" }, H: { "2": "hC" }, I: { "1": "H", "4": "oB I iC jC kC lC 3B mC nC" }, J: { "4": "D A" }, K: { "1": "c", "2": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "CSS3 word-break" };
  }
});
var require_wordwrap = __commonJS({
  "../../node_modules/caniuse-lite/data/features/wordwrap.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "4": "J D E F A B 4B" }, B: { "1": "O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H", "4": "C K L G M N" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "4": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "4": "I p J D E F A B C K L G M N O q r s t" }, E: { "1": "D E F A B C K L G CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "4": "I p J AC uB BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F IC JC", "4": "B C KC LC lB 2B MC" }, G: { "1": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "4": "uB NC 3B OC PC" }, H: { "4": "hC" }, I: { "1": "H mC nC", "4": "oB I iC jC kC lC 3B" }, J: { "1": "A", "4": "D" }, K: { "1": "c", "4": "A B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "4": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "4": "2C" } }, B: 4, C: "CSS3 Overflow-wrap" };
  }
});
var require_x_doc_messaging = __commonJS({
  "../../node_modules/caniuse-lite/data/features/x-doc-messaging.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D 4B", "132": "E F", "260": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B", "2": "5B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "AC uB" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB", "2": "F" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "4": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "Cross-document messaging" };
  }
});
var require_x_frame_options = __commonJS({
  "../../node_modules/caniuse-lite/data/features/x-frame-options.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "E F A B", "2": "J D 4B" }, B: { "1": "C K L G M N O", "4": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB", "4": "I p J D E F A B C K L G M N cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "16": "5B oB 6B 7B" }, D: { "4": "0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J D E F A B C K L G M N O q r s t u v w" }, E: { "4": "J D E F A B C K L G BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "16": "I p AC uB" }, F: { "4": "0 1 2 3 4 5 6 7 8 9 C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a MC mB", "16": "F B IC JC KC LC lB 2B" }, G: { "4": "E QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "16": "uB NC 3B OC PC" }, H: { "2": "hC" }, I: { "4": "I H lC 3B mC nC", "16": "oB iC jC kC" }, J: { "4": "D A" }, K: { "4": "c mB", "16": "A B C lB 2B" }, L: { "4": "H" }, M: { "4": "b" }, N: { "1": "A B" }, O: { "4": "oC" }, P: { "4": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "4": "wB" }, R: { "4": "1C" }, S: { "1": "2C" } }, B: 6, C: "X-Frame-Options HTTP header" };
  }
});
var require_xhr2 = __commonJS({
  "../../node_modules/caniuse-lite/data/features/xhr2.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "J D E F 4B", "132": "A B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "2": "5B oB", "260": "A B", "388": "J D E F", "900": "I p 6B 7B" }, D: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "16": "I p J", "132": "0 1", "388": "D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "2": "I AC uB", "132": "D CC", "388": "p J BC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 C O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a mB", "2": "F B IC JC KC LC lB 2B MC", "132": "G M N" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "2": "uB NC 3B", "132": "QC", "388": "OC PC" }, H: { "2": "hC" }, I: { "1": "H nC", "2": "iC jC kC", "388": "mC", "900": "oB I lC 3B" }, J: { "132": "A", "388": "D" }, K: { "1": "C c mB", "2": "A B lB 2B" }, L: { "1": "H" }, M: { "1": "b" }, N: { "132": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "XMLHttpRequest advanced features" };
  }
});
var require_xhtml = __commonJS({
  "../../node_modules/caniuse-lite/data/features/xhtml.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "F A B", "2": "J D E 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "1": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "1": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "1": "hC" }, I: { "1": "oB I H iC jC kC lC 3B mC nC" }, J: { "1": "D A" }, K: { "1": "A B C c lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 1, C: "XHTML served as application/xhtml+xml" };
  }
});
var require_xhtmlsmil = __commonJS({
  "../../node_modules/caniuse-lite/data/features/xhtmlsmil.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "2": "F A B 4B", "4": "J D E" }, B: { "2": "C K L G M N O", "8": "P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "8": "0 1 2 3 4 5 6 7 8 9 5B oB I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 6B 7B" }, D: { "8": "0 1 2 3 4 5 6 7 8 9 I p J D E F A B C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B" }, E: { "8": "I p J D E F A B C K L G AC uB BC CC DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC" }, F: { "8": "0 1 2 3 4 5 6 7 8 9 F B C G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a IC JC KC LC lB 2B MC mB" }, G: { "8": "E uB NC 3B OC PC QC RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B" }, H: { "8": "hC" }, I: { "8": "oB I H iC jC kC lC 3B mC nC" }, J: { "8": "D A" }, K: { "8": "A B C c lB 2B mB" }, L: { "8": "H" }, M: { "8": "b" }, N: { "2": "A B" }, O: { "8": "oC" }, P: { "8": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "8": "wB" }, R: { "8": "1C" }, S: { "8": "2C" } }, B: 7, C: "XHTML+SMIL animation" };
  }
});
var require_xml_serializer = __commonJS({
  "../../node_modules/caniuse-lite/data/features/xml-serializer.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { A: { A: { "1": "A B", "260": "J D E F 4B" }, B: { "1": "C K L G M N O P Q R S T U V W X Y Z a d e f g h i j k l m n o b H" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 C K L G M N O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a d e f g h i j k l m n o b H sB tB", "132": "B", "260": "5B oB I p J D 6B 7B", "516": "E F A" }, D: { "1": "2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB pB UB qB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R S T U V W X Y Z a d e f g h i j k l m n o b H sB tB 8B 9B", "132": "0 1 I p J D E F A B C K L G M N O q r s t u v w x y z" }, E: { "1": "E F A B C K L G DC EC vB lB mB wB FC GC xB yB zB 0B nB 1B HC", "132": "I p J D AC uB BC CC" }, F: { "1": "0 1 2 3 4 5 6 7 8 9 O q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB c XB YB ZB aB bB cB dB eB fB gB hB iB jB kB P Q R rB S T U V W X Y Z a", "16": "F IC", "132": "B C G M N JC KC LC lB 2B MC mB" }, G: { "1": "E RC SC TC UC VC WC XC YC ZC aC bC cC dC eC fC gC xB yB zB 0B nB 1B", "132": "uB NC 3B OC PC QC" }, H: { "132": "hC" }, I: { "1": "H mC nC", "132": "oB I iC jC kC lC 3B" }, J: { "132": "D A" }, K: { "1": "c", "16": "A", "132": "B C lB 2B mB" }, L: { "1": "H" }, M: { "1": "b" }, N: { "1": "A B" }, O: { "1": "oC" }, P: { "1": "I pC qC rC sC tC vB uC vC wC xC yC nB zC 0C" }, Q: { "1": "wB" }, R: { "1": "1C" }, S: { "1": "2C" } }, B: 4, C: "DOM Parsing and Serialization" };
  }
});
var require_features = __commonJS({
  "../../node_modules/caniuse-lite/data/features.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = { "aac": require_aac(), "abortcontroller": require_abortcontroller(), "ac3-ec3": require_ac3_ec3(), "accelerometer": require_accelerometer(), "addeventlistener": require_addeventlistener(), "alternate-stylesheet": require_alternate_stylesheet(), "ambient-light": require_ambient_light(), "apng": require_apng(), "array-find-index": require_array_find_index(), "array-find": require_array_find(), "array-flat": require_array_flat(), "array-includes": require_array_includes(), "arrow-functions": require_arrow_functions(), "asmjs": require_asmjs(), "async-clipboard": require_async_clipboard(), "async-functions": require_async_functions(), "atob-btoa": require_atob_btoa(), "audio-api": require_audio_api(), "audio": require_audio(), "audiotracks": require_audiotracks(), "autofocus": require_autofocus(), "auxclick": require_auxclick(), "av1": require_av1(), "avif": require_avif(), "background-attachment": require_background_attachment(), "background-clip-text": require_background_clip_text(), "background-img-opts": require_background_img_opts(), "background-position-x-y": require_background_position_x_y(), "background-repeat-round-space": require_background_repeat_round_space(), "background-sync": require_background_sync(), "battery-status": require_battery_status(), "beacon": require_beacon(), "beforeafterprint": require_beforeafterprint(), "bigint": require_bigint(), "blobbuilder": require_blobbuilder(), "bloburls": require_bloburls(), "border-image": require_border_image(), "border-radius": require_border_radius(), "broadcastchannel": require_broadcastchannel(), "brotli": require_brotli(), "calc": require_calc(), "canvas-blending": require_canvas_blending(), "canvas-text": require_canvas_text(), "canvas": require_canvas(), "ch-unit": require_ch_unit(), "chacha20-poly1305": require_chacha20_poly1305(), "channel-messaging": require_channel_messaging(), "childnode-remove": require_childnode_remove(), "classlist": require_classlist(), "client-hints-dpr-width-viewport": require_client_hints_dpr_width_viewport(), "clipboard": require_clipboard(), "colr-v1": require_colr_v1(), "colr": require_colr(), "comparedocumentposition": require_comparedocumentposition(), "console-basic": require_console_basic(), "console-time": require_console_time(), "const": require_const(), "constraint-validation": require_constraint_validation(), "contenteditable": require_contenteditable(), "contentsecuritypolicy": require_contentsecuritypolicy(), "contentsecuritypolicy2": require_contentsecuritypolicy2(), "cookie-store-api": require_cookie_store_api(), "cors": require_cors(), "createimagebitmap": require_createimagebitmap(), "credential-management": require_credential_management(), "cryptography": require_cryptography(), "css-all": require_css_all(), "css-animation": require_css_animation(), "css-any-link": require_css_any_link(), "css-appearance": require_css_appearance(), "css-at-counter-style": require_css_at_counter_style(), "css-autofill": require_css_autofill(), "css-backdrop-filter": require_css_backdrop_filter(), "css-background-offsets": require_css_background_offsets(), "css-backgroundblendmode": require_css_backgroundblendmode(), "css-boxdecorationbreak": require_css_boxdecorationbreak(), "css-boxshadow": require_css_boxshadow(), "css-canvas": require_css_canvas(), "css-caret-color": require_css_caret_color(), "css-cascade-layers": require_css_cascade_layers(), "css-case-insensitive": require_css_case_insensitive(), "css-clip-path": require_css_clip_path(), "css-color-adjust": require_css_color_adjust(), "css-color-function": require_css_color_function(), "css-conic-gradients": require_css_conic_gradients(), "css-container-queries": require_css_container_queries(), "css-container-query-units": require_css_container_query_units(), "css-containment": require_css_containment(), "css-content-visibility": require_css_content_visibility(), "css-counters": require_css_counters(), "css-crisp-edges": require_css_crisp_edges(), "css-cross-fade": require_css_cross_fade(), "css-default-pseudo": require_css_default_pseudo(), "css-descendant-gtgt": require_css_descendant_gtgt(), "css-deviceadaptation": require_css_deviceadaptation(), "css-dir-pseudo": require_css_dir_pseudo(), "css-display-contents": require_css_display_contents(), "css-element-function": require_css_element_function(), "css-env-function": require_css_env_function(), "css-exclusions": require_css_exclusions(), "css-featurequeries": require_css_featurequeries(), "css-file-selector-button": require_css_file_selector_button(), "css-filter-function": require_css_filter_function(), "css-filters": require_css_filters(), "css-first-letter": require_css_first_letter(), "css-first-line": require_css_first_line(), "css-fixed": require_css_fixed(), "css-focus-visible": require_css_focus_visible(), "css-focus-within": require_css_focus_within(), "css-font-palette": require_css_font_palette(), "css-font-rendering-controls": require_css_font_rendering_controls(), "css-font-stretch": require_css_font_stretch(), "css-gencontent": require_css_gencontent(), "css-gradients": require_css_gradients(), "css-grid-animation": require_css_grid_animation(), "css-grid": require_css_grid(), "css-hanging-punctuation": require_css_hanging_punctuation(), "css-has": require_css_has(), "css-hyphens": require_css_hyphens(), "css-image-orientation": require_css_image_orientation(), "css-image-set": require_css_image_set(), "css-in-out-of-range": require_css_in_out_of_range(), "css-indeterminate-pseudo": require_css_indeterminate_pseudo(), "css-initial-letter": require_css_initial_letter(), "css-initial-value": require_css_initial_value(), "css-lch-lab": require_css_lch_lab(), "css-letter-spacing": require_css_letter_spacing(), "css-line-clamp": require_css_line_clamp(), "css-logical-props": require_css_logical_props(), "css-marker-pseudo": require_css_marker_pseudo(), "css-masks": require_css_masks(), "css-matches-pseudo": require_css_matches_pseudo(), "css-math-functions": require_css_math_functions(), "css-media-interaction": require_css_media_interaction(), "css-media-range-syntax": require_css_media_range_syntax(), "css-media-resolution": require_css_media_resolution(), "css-media-scripting": require_css_media_scripting(), "css-mediaqueries": require_css_mediaqueries(), "css-mixblendmode": require_css_mixblendmode(), "css-motion-paths": require_css_motion_paths(), "css-namespaces": require_css_namespaces(), "css-nesting": require_css_nesting(), "css-not-sel-list": require_css_not_sel_list(), "css-nth-child-of": require_css_nth_child_of(), "css-opacity": require_css_opacity(), "css-optional-pseudo": require_css_optional_pseudo(), "css-overflow-anchor": require_css_overflow_anchor(), "css-overflow-overlay": require_css_overflow_overlay(), "css-overflow": require_css_overflow(), "css-overscroll-behavior": require_css_overscroll_behavior(), "css-page-break": require_css_page_break(), "css-paged-media": require_css_paged_media(), "css-paint-api": require_css_paint_api(), "css-placeholder-shown": require_css_placeholder_shown(), "css-placeholder": require_css_placeholder(), "css-print-color-adjust": require_css_print_color_adjust(), "css-read-only-write": require_css_read_only_write(), "css-rebeccapurple": require_css_rebeccapurple(), "css-reflections": require_css_reflections(), "css-regions": require_css_regions(), "css-repeating-gradients": require_css_repeating_gradients(), "css-resize": require_css_resize(), "css-revert-value": require_css_revert_value(), "css-rrggbbaa": require_css_rrggbbaa(), "css-scroll-behavior": require_css_scroll_behavior(), "css-scroll-timeline": require_css_scroll_timeline(), "css-scrollbar": require_css_scrollbar(), "css-sel2": require_css_sel2(), "css-sel3": require_css_sel3(), "css-selection": require_css_selection(), "css-shapes": require_css_shapes(), "css-snappoints": require_css_snappoints(), "css-sticky": require_css_sticky(), "css-subgrid": require_css_subgrid(), "css-supports-api": require_css_supports_api(), "css-table": require_css_table(), "css-text-align-last": require_css_text_align_last(), "css-text-indent": require_css_text_indent(), "css-text-justify": require_css_text_justify(), "css-text-orientation": require_css_text_orientation(), "css-text-spacing": require_css_text_spacing(), "css-textshadow": require_css_textshadow(), "css-touch-action": require_css_touch_action(), "css-transitions": require_css_transitions(), "css-unicode-bidi": require_css_unicode_bidi(), "css-unset-value": require_css_unset_value(), "css-variables": require_css_variables(), "css-when-else": require_css_when_else(), "css-widows-orphans": require_css_widows_orphans(), "css-width-stretch": require_css_width_stretch(), "css-writing-mode": require_css_writing_mode(), "css-zoom": require_css_zoom(), "css3-attr": require_css3_attr(), "css3-boxsizing": require_css3_boxsizing(), "css3-colors": require_css3_colors(), "css3-cursors-grab": require_css3_cursors_grab(), "css3-cursors-newer": require_css3_cursors_newer(), "css3-cursors": require_css3_cursors(), "css3-tabsize": require_css3_tabsize(), "currentcolor": require_currentcolor(), "custom-elements": require_custom_elements(), "custom-elementsv1": require_custom_elementsv1(), "customevent": require_customevent(), "datalist": require_datalist(), "dataset": require_dataset(), "datauri": require_datauri(), "date-tolocaledatestring": require_date_tolocaledatestring(), "declarative-shadow-dom": require_declarative_shadow_dom(), "decorators": require_decorators(), "details": require_details(), "deviceorientation": require_deviceorientation(), "devicepixelratio": require_devicepixelratio(), "dialog": require_dialog(), "dispatchevent": require_dispatchevent(), "dnssec": require_dnssec(), "do-not-track": require_do_not_track(), "document-currentscript": require_document_currentscript(), "document-evaluate-xpath": require_document_evaluate_xpath(), "document-execcommand": require_document_execcommand(), "document-policy": require_document_policy(), "document-scrollingelement": require_document_scrollingelement(), "documenthead": require_documenthead(), "dom-manip-convenience": require_dom_manip_convenience(), "dom-range": require_dom_range(), "domcontentloaded": require_domcontentloaded(), "dommatrix": require_dommatrix(), "download": require_download(), "dragndrop": require_dragndrop(), "element-closest": require_element_closest(), "element-from-point": require_element_from_point(), "element-scroll-methods": require_element_scroll_methods(), "eme": require_eme(), "eot": require_eot(), "es5": require_es5(), "es6-class": require_es6_class(), "es6-generators": require_es6_generators(), "es6-module-dynamic-import": require_es6_module_dynamic_import(), "es6-module": require_es6_module(), "es6-number": require_es6_number(), "es6-string-includes": require_es6_string_includes(), "es6": require_es6(), "eventsource": require_eventsource(), "extended-system-fonts": require_extended_system_fonts(), "feature-policy": require_feature_policy(), "fetch": require_fetch(), "fieldset-disabled": require_fieldset_disabled(), "fileapi": require_fileapi(), "filereader": require_filereader(), "filereadersync": require_filereadersync(), "filesystem": require_filesystem(), "flac": require_flac(), "flexbox-gap": require_flexbox_gap(), "flexbox": require_flexbox(), "flow-root": require_flow_root(), "focusin-focusout-events": require_focusin_focusout_events(), "font-family-system-ui": require_font_family_system_ui(), "font-feature": require_font_feature(), "font-kerning": require_font_kerning(), "font-loading": require_font_loading(), "font-size-adjust": require_font_size_adjust(), "font-smooth": require_font_smooth(), "font-unicode-range": require_font_unicode_range(), "font-variant-alternates": require_font_variant_alternates(), "font-variant-numeric": require_font_variant_numeric(), "fontface": require_fontface(), "form-attribute": require_form_attribute(), "form-submit-attributes": require_form_submit_attributes(), "form-validation": require_form_validation(), "forms": require_forms(), "fullscreen": require_fullscreen(), "gamepad": require_gamepad(), "geolocation": require_geolocation(), "getboundingclientrect": require_getboundingclientrect(), "getcomputedstyle": require_getcomputedstyle(), "getelementsbyclassname": require_getelementsbyclassname(), "getrandomvalues": require_getrandomvalues(), "gyroscope": require_gyroscope(), "hardwareconcurrency": require_hardwareconcurrency(), "hashchange": require_hashchange(), "heif": require_heif(), "hevc": require_hevc(), "hidden": require_hidden(), "high-resolution-time": require_high_resolution_time(), "history": require_history(), "html-media-capture": require_html_media_capture(), "html5semantic": require_html5semantic(), "http-live-streaming": require_http_live_streaming(), "http2": require_http2(), "http3": require_http3(), "iframe-sandbox": require_iframe_sandbox(), "iframe-seamless": require_iframe_seamless(), "iframe-srcdoc": require_iframe_srcdoc(), "imagecapture": require_imagecapture(), "ime": require_ime(), "img-naturalwidth-naturalheight": require_img_naturalwidth_naturalheight(), "import-maps": require_import_maps(), "imports": require_imports(), "indeterminate-checkbox": require_indeterminate_checkbox(), "indexeddb": require_indexeddb(), "indexeddb2": require_indexeddb2(), "inline-block": require_inline_block(), "innertext": require_innertext(), "input-autocomplete-onoff": require_input_autocomplete_onoff(), "input-color": require_input_color(), "input-datetime": require_input_datetime(), "input-email-tel-url": require_input_email_tel_url(), "input-event": require_input_event(), "input-file-accept": require_input_file_accept(), "input-file-directory": require_input_file_directory(), "input-file-multiple": require_input_file_multiple(), "input-inputmode": require_input_inputmode(), "input-minlength": require_input_minlength(), "input-number": require_input_number(), "input-pattern": require_input_pattern(), "input-placeholder": require_input_placeholder(), "input-range": require_input_range(), "input-search": require_input_search(), "input-selection": require_input_selection(), "insert-adjacent": require_insert_adjacent(), "insertadjacenthtml": require_insertadjacenthtml(), "internationalization": require_internationalization(), "intersectionobserver-v2": require_intersectionobserver_v2(), "intersectionobserver": require_intersectionobserver(), "intl-pluralrules": require_intl_pluralrules(), "intrinsic-width": require_intrinsic_width(), "jpeg2000": require_jpeg2000(), "jpegxl": require_jpegxl(), "jpegxr": require_jpegxr(), "js-regexp-lookbehind": require_js_regexp_lookbehind(), "json": require_json(), "justify-content-space-evenly": require_justify_content_space_evenly(), "kerning-pairs-ligatures": require_kerning_pairs_ligatures(), "keyboardevent-charcode": require_keyboardevent_charcode(), "keyboardevent-code": require_keyboardevent_code(), "keyboardevent-getmodifierstate": require_keyboardevent_getmodifierstate(), "keyboardevent-key": require_keyboardevent_key(), "keyboardevent-location": require_keyboardevent_location(), "keyboardevent-which": require_keyboardevent_which(), "lazyload": require_lazyload(), "let": require_let(), "link-icon-png": require_link_icon_png(), "link-icon-svg": require_link_icon_svg(), "link-rel-dns-prefetch": require_link_rel_dns_prefetch(), "link-rel-modulepreload": require_link_rel_modulepreload(), "link-rel-preconnect": require_link_rel_preconnect(), "link-rel-prefetch": require_link_rel_prefetch(), "link-rel-preload": require_link_rel_preload(), "link-rel-prerender": require_link_rel_prerender(), "loading-lazy-attr": require_loading_lazy_attr(), "localecompare": require_localecompare(), "magnetometer": require_magnetometer(), "matchesselector": require_matchesselector(), "matchmedia": require_matchmedia(), "mathml": require_mathml(), "maxlength": require_maxlength(), "mdn-css-unicode-bidi-isolate-override": require_mdn_css_unicode_bidi_isolate_override(), "mdn-css-unicode-bidi-isolate": require_mdn_css_unicode_bidi_isolate(), "mdn-css-unicode-bidi-plaintext": require_mdn_css_unicode_bidi_plaintext(), "mdn-text-decoration-color": require_mdn_text_decoration_color(), "mdn-text-decoration-line": require_mdn_text_decoration_line(), "mdn-text-decoration-shorthand": require_mdn_text_decoration_shorthand(), "mdn-text-decoration-style": require_mdn_text_decoration_style(), "media-fragments": require_media_fragments(), "mediacapture-fromelement": require_mediacapture_fromelement(), "mediarecorder": require_mediarecorder(), "mediasource": require_mediasource(), "menu": require_menu(), "meta-theme-color": require_meta_theme_color(), "meter": require_meter(), "midi": require_midi(), "minmaxwh": require_minmaxwh(), "mp3": require_mp3(), "mpeg-dash": require_mpeg_dash(), "mpeg4": require_mpeg4(), "multibackgrounds": require_multibackgrounds(), "multicolumn": require_multicolumn(), "mutation-events": require_mutation_events(), "mutationobserver": require_mutationobserver(), "namevalue-storage": require_namevalue_storage(), "native-filesystem-api": require_native_filesystem_api(), "nav-timing": require_nav_timing(), "netinfo": require_netinfo(), "notifications": require_notifications(), "object-entries": require_object_entries(), "object-fit": require_object_fit(), "object-observe": require_object_observe(), "object-values": require_object_values(), "objectrtc": require_objectrtc(), "offline-apps": require_offline_apps(), "offscreencanvas": require_offscreencanvas(), "ogg-vorbis": require_ogg_vorbis(), "ogv": require_ogv(), "ol-reversed": require_ol_reversed(), "once-event-listener": require_once_event_listener(), "online-status": require_online_status(), "opus": require_opus(), "orientation-sensor": require_orientation_sensor(), "outline": require_outline(), "pad-start-end": require_pad_start_end(), "page-transition-events": require_page_transition_events(), "pagevisibility": require_pagevisibility(), "passive-event-listener": require_passive_event_listener(), "passwordrules": require_passwordrules(), "path2d": require_path2d(), "payment-request": require_payment_request(), "pdf-viewer": require_pdf_viewer(), "permissions-api": require_permissions_api(), "permissions-policy": require_permissions_policy(), "picture-in-picture": require_picture_in_picture(), "picture": require_picture(), "ping": require_ping(), "png-alpha": require_png_alpha(), "pointer-events": require_pointer_events(), "pointer": require_pointer(), "pointerlock": require_pointerlock(), "portals": require_portals(), "prefers-color-scheme": require_prefers_color_scheme(), "prefers-reduced-motion": require_prefers_reduced_motion(), "progress": require_progress(), "promise-finally": require_promise_finally(), "promises": require_promises(), "proximity": require_proximity(), "proxy": require_proxy(), "publickeypinning": require_publickeypinning(), "push-api": require_push_api(), "queryselector": require_queryselector(), "readonly-attr": require_readonly_attr(), "referrer-policy": require_referrer_policy(), "registerprotocolhandler": require_registerprotocolhandler(), "rel-noopener": require_rel_noopener(), "rel-noreferrer": require_rel_noreferrer(), "rellist": require_rellist(), "rem": require_rem(), "requestanimationframe": require_requestanimationframe(), "requestidlecallback": require_requestidlecallback(), "resizeobserver": require_resizeobserver(), "resource-timing": require_resource_timing(), "rest-parameters": require_rest_parameters(), "rtcpeerconnection": require_rtcpeerconnection(), "ruby": require_ruby(), "run-in": require_run_in(), "same-site-cookie-attribute": require_same_site_cookie_attribute(), "screen-orientation": require_screen_orientation(), "script-async": require_script_async(), "script-defer": require_script_defer(), "scrollintoview": require_scrollintoview(), "scrollintoviewifneeded": require_scrollintoviewifneeded(), "sdch": require_sdch(), "selection-api": require_selection_api(), "server-timing": require_server_timing(), "serviceworkers": require_serviceworkers(), "setimmediate": require_setimmediate(), "shadowdom": require_shadowdom(), "shadowdomv1": require_shadowdomv1(), "sharedarraybuffer": require_sharedarraybuffer(), "sharedworkers": require_sharedworkers(), "sni": require_sni(), "spdy": require_spdy(), "speech-recognition": require_speech_recognition(), "speech-synthesis": require_speech_synthesis(), "spellcheck-attribute": require_spellcheck_attribute(), "sql-storage": require_sql_storage(), "srcset": require_srcset(), "stream": require_stream(), "streams": require_streams(), "stricttransportsecurity": require_stricttransportsecurity(), "style-scoped": require_style_scoped(), "subresource-bundling": require_subresource_bundling(), "subresource-integrity": require_subresource_integrity(), "svg-css": require_svg_css(), "svg-filters": require_svg_filters(), "svg-fonts": require_svg_fonts(), "svg-fragment": require_svg_fragment(), "svg-html": require_svg_html(), "svg-html5": require_svg_html5(), "svg-img": require_svg_img(), "svg-smil": require_svg_smil(), "svg": require_svg(), "sxg": require_sxg(), "tabindex-attr": require_tabindex_attr(), "template-literals": require_template_literals(), "template": require_template(), "temporal": require_temporal(), "testfeat": require_testfeat(), "text-decoration": require_text_decoration(), "text-emphasis": require_text_emphasis(), "text-overflow": require_text_overflow(), "text-size-adjust": require_text_size_adjust(), "text-stroke": require_text_stroke(), "textcontent": require_textcontent(), "textencoder": require_textencoder(), "tls1-1": require_tls1_1(), "tls1-2": require_tls1_2(), "tls1-3": require_tls1_3(), "touch": require_touch(), "transforms2d": require_transforms2d(), "transforms3d": require_transforms3d(), "trusted-types": require_trusted_types(), "ttf": require_ttf(), "typedarrays": require_typedarrays(), "u2f": require_u2f(), "unhandledrejection": require_unhandledrejection(), "upgradeinsecurerequests": require_upgradeinsecurerequests(), "url-scroll-to-text-fragment": require_url_scroll_to_text_fragment(), "url": require_url(), "urlsearchparams": require_urlsearchparams(), "use-strict": require_use_strict(), "user-select-none": require_user_select_none(), "user-timing": require_user_timing(), "variable-fonts": require_variable_fonts(), "vector-effect": require_vector_effect(), "vibration": require_vibration(), "video": require_video(), "videotracks": require_videotracks(), "viewport-unit-variants": require_viewport_unit_variants(), "viewport-units": require_viewport_units(), "wai-aria": require_wai_aria(), "wake-lock": require_wake_lock(), "wasm": require_wasm(), "wav": require_wav(), "wbr-element": require_wbr_element(), "web-animation": require_web_animation(), "web-app-manifest": require_web_app_manifest(), "web-bluetooth": require_web_bluetooth(), "web-serial": require_web_serial(), "web-share": require_web_share(), "webauthn": require_webauthn(), "webcodecs": require_webcodecs(), "webgl": require_webgl(), "webgl2": require_webgl2(), "webgpu": require_webgpu(), "webhid": require_webhid(), "webkit-user-drag": require_webkit_user_drag(), "webm": require_webm(), "webnfc": require_webnfc(), "webp": require_webp(), "websockets": require_websockets(), "webtransport": require_webtransport(), "webusb": require_webusb(), "webvr": require_webvr(), "webvtt": require_webvtt(), "webworkers": require_webworkers(), "webxr": require_webxr(), "will-change": require_will_change(), "woff": require_woff(), "woff2": require_woff2(), "word-break": require_word_break(), "wordwrap": require_wordwrap(), "x-doc-messaging": require_x_doc_messaging(), "x-frame-options": require_x_frame_options(), "xhr2": require_xhr2(), "xhtml": require_xhtml(), "xhtmlsmil": require_xhtmlsmil(), "xml-serializer": require_xml_serializer() };
  }
});
var require_features2 = __commonJS({
  "../../node_modules/caniuse-lite/dist/unpacker/features.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports.features = require_features();
  }
});
var require_region = __commonJS({
  "../../node_modules/caniuse-lite/dist/unpacker/region.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var browsers = require_browsers2().browsers;
    function unpackRegion(packed) {
      return Object.keys(packed).reduce((list2, browser) => {
        let data = packed[browser];
        list2[browsers[browser]] = Object.keys(data).reduce((memo, key) => {
          let stats = data[key];
          if (key === "_") {
            stats.split(" ").forEach((version) => memo[version] = null);
          } else {
            memo[key] = stats;
          }
          return memo;
        }, {});
        return list2;
      }, {});
    }
    module.exports = unpackRegion;
    module.exports.default = unpackRegion;
  }
});
var require_unpacker = __commonJS({
  "../../node_modules/caniuse-lite/dist/unpacker/index.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports.agents = require_agents2().agents;
    module.exports.feature = require_feature();
    module.exports.features = require_features2().features;
    module.exports.region = require_region();
  }
});
var require_picocolors_browser = __commonJS({
  "../../node_modules/picocolors/picocolors.browser.js"(exports, module) {
    init_process();
    init_buffer();
    var x = String;
    var create = function() {
      return { isColorSupported: false, reset: x, bold: x, dim: x, italic: x, underline: x, inverse: x, hidden: x, strikethrough: x, black: x, red: x, green: x, yellow: x, blue: x, magenta: x, cyan: x, white: x, gray: x, bgBlack: x, bgRed: x, bgGreen: x, bgYellow: x, bgBlue: x, bgMagenta: x, bgCyan: x, bgWhite: x };
    };
    module.exports = create();
    module.exports.createColors = create;
  }
});
var require_terminal_highlight = __commonJS({
  "(disabled):../../node_modules/postcss/lib/terminal-highlight"() {
    init_process();
    init_buffer();
  }
});
var require_css_syntax_error = __commonJS({
  "../../node_modules/postcss/lib/css-syntax-error.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var pico = require_picocolors_browser();
    var terminalHighlight = require_terminal_highlight();
    var CssSyntaxError2 = class extends Error {
      constructor(message, line, column, source, file, plugin2) {
        super(message);
        this.name = "CssSyntaxError";
        this.reason = message;
        if (file) {
          this.file = file;
        }
        if (source) {
          this.source = source;
        }
        if (plugin2) {
          this.plugin = plugin2;
        }
        if (typeof line !== "undefined" && typeof column !== "undefined") {
          if (typeof line === "number") {
            this.line = line;
            this.column = column;
          } else {
            this.line = line.line;
            this.column = line.column;
            this.endLine = column.line;
            this.endColumn = column.column;
          }
        }
        this.setMessage();
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, CssSyntaxError2);
        }
      }
      setMessage() {
        this.message = this.plugin ? this.plugin + ": " : "";
        this.message += this.file ? this.file : "<css input>";
        if (typeof this.line !== "undefined") {
          this.message += ":" + this.line + ":" + this.column;
        }
        this.message += ": " + this.reason;
      }
      showSourceCode(color) {
        if (!this.source)
          return "";
        let css = this.source;
        if (color == null)
          color = pico.isColorSupported;
        if (terminalHighlight) {
          if (color)
            css = terminalHighlight(css);
        }
        let lines = css.split(/\r?\n/);
        let start = Math.max(this.line - 3, 0);
        let end = Math.min(this.line + 2, lines.length);
        let maxWidth = String(end).length;
        let mark, aside;
        if (color) {
          let { bold, red, gray } = pico.createColors(true);
          mark = (text) => bold(red(text));
          aside = (text) => gray(text);
        } else {
          mark = aside = (str) => str;
        }
        return lines.slice(start, end).map((line, index) => {
          let number = start + 1 + index;
          let gutter = " " + (" " + number).slice(-maxWidth) + " | ";
          if (number === this.line) {
            let spacing = aside(gutter.replace(/\d/g, " ")) + line.slice(0, this.column - 1).replace(/[^\t]/g, " ");
            return mark(">") + aside(gutter) + line + "\n " + spacing + mark("^");
          }
          return " " + aside(gutter) + line;
        }).join("\n");
      }
      toString() {
        let code = this.showSourceCode();
        if (code) {
          code = "\n\n" + code + "\n";
        }
        return this.name + ": " + this.message + code;
      }
    };
    module.exports = CssSyntaxError2;
    CssSyntaxError2.default = CssSyntaxError2;
  }
});
var require_symbols = __commonJS({
  "../../node_modules/postcss/lib/symbols.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    module.exports.isClean = Symbol("isClean");
    module.exports.my = Symbol("my");
  }
});
var require_stringifier = __commonJS({
  "../../node_modules/postcss/lib/stringifier.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var DEFAULT_RAW = {
      colon: ": ",
      indent: "    ",
      beforeDecl: "\n",
      beforeRule: "\n",
      beforeOpen: " ",
      beforeClose: "\n",
      beforeComment: "\n",
      after: "\n",
      emptyBody: "",
      commentLeft: " ",
      commentRight: " ",
      semicolon: false
    };
    function capitalize(str) {
      return str[0].toUpperCase() + str.slice(1);
    }
    var Stringifier = class {
      constructor(builder) {
        this.builder = builder;
      }
      stringify(node, semicolon) {
        if (!this[node.type]) {
          throw new Error(
            "Unknown AST node type " + node.type + ". Maybe you need to change PostCSS stringifier."
          );
        }
        this[node.type](node, semicolon);
      }
      document(node) {
        this.body(node);
      }
      root(node) {
        this.body(node);
        if (node.raws.after)
          this.builder(node.raws.after);
      }
      comment(node) {
        let left = this.raw(node, "left", "commentLeft");
        let right = this.raw(node, "right", "commentRight");
        this.builder("/*" + left + node.text + right + "*/", node);
      }
      decl(node, semicolon) {
        let between = this.raw(node, "between", "colon");
        let string = node.prop + between + this.rawValue(node, "value");
        if (node.important) {
          string += node.raws.important || " !important";
        }
        if (semicolon)
          string += ";";
        this.builder(string, node);
      }
      rule(node) {
        this.block(node, this.rawValue(node, "selector"));
        if (node.raws.ownSemicolon) {
          this.builder(node.raws.ownSemicolon, node, "end");
        }
      }
      atrule(node, semicolon) {
        let name = "@" + node.name;
        let params = node.params ? this.rawValue(node, "params") : "";
        if (typeof node.raws.afterName !== "undefined") {
          name += node.raws.afterName;
        } else if (params) {
          name += " ";
        }
        if (node.nodes) {
          this.block(node, name + params);
        } else {
          let end = (node.raws.between || "") + (semicolon ? ";" : "");
          this.builder(name + params + end, node);
        }
      }
      body(node) {
        let last = node.nodes.length - 1;
        while (last > 0) {
          if (node.nodes[last].type !== "comment")
            break;
          last -= 1;
        }
        let semicolon = this.raw(node, "semicolon");
        for (let i = 0; i < node.nodes.length; i++) {
          let child = node.nodes[i];
          let before = this.raw(child, "before");
          if (before)
            this.builder(before);
          this.stringify(child, last !== i || semicolon);
        }
      }
      block(node, start) {
        let between = this.raw(node, "between", "beforeOpen");
        this.builder(start + between + "{", node, "start");
        let after;
        if (node.nodes && node.nodes.length) {
          this.body(node);
          after = this.raw(node, "after");
        } else {
          after = this.raw(node, "after", "emptyBody");
        }
        if (after)
          this.builder(after);
        this.builder("}", node, "end");
      }
      raw(node, own, detect) {
        let value;
        if (!detect)
          detect = own;
        if (own) {
          value = node.raws[own];
          if (typeof value !== "undefined")
            return value;
        }
        let parent = node.parent;
        if (detect === "before") {
          if (!parent || parent.type === "root" && parent.first === node) {
            return "";
          }
          if (parent && parent.type === "document") {
            return "";
          }
        }
        if (!parent)
          return DEFAULT_RAW[detect];
        let root2 = node.root();
        if (!root2.rawCache)
          root2.rawCache = {};
        if (typeof root2.rawCache[detect] !== "undefined") {
          return root2.rawCache[detect];
        }
        if (detect === "before" || detect === "after") {
          return this.beforeAfter(node, detect);
        } else {
          let method = "raw" + capitalize(detect);
          if (this[method]) {
            value = this[method](root2, node);
          } else {
            root2.walk((i) => {
              value = i.raws[own];
              if (typeof value !== "undefined")
                return false;
            });
          }
        }
        if (typeof value === "undefined")
          value = DEFAULT_RAW[detect];
        root2.rawCache[detect] = value;
        return value;
      }
      rawSemicolon(root2) {
        let value;
        root2.walk((i) => {
          if (i.nodes && i.nodes.length && i.last.type === "decl") {
            value = i.raws.semicolon;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawEmptyBody(root2) {
        let value;
        root2.walk((i) => {
          if (i.nodes && i.nodes.length === 0) {
            value = i.raws.after;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawIndent(root2) {
        if (root2.raws.indent)
          return root2.raws.indent;
        let value;
        root2.walk((i) => {
          let p = i.parent;
          if (p && p !== root2 && p.parent && p.parent === root2) {
            if (typeof i.raws.before !== "undefined") {
              let parts = i.raws.before.split("\n");
              value = parts[parts.length - 1];
              value = value.replace(/\S/g, "");
              return false;
            }
          }
        });
        return value;
      }
      rawBeforeComment(root2, node) {
        let value;
        root2.walkComments((i) => {
          if (typeof i.raws.before !== "undefined") {
            value = i.raws.before;
            if (value.includes("\n")) {
              value = value.replace(/[^\n]+$/, "");
            }
            return false;
          }
        });
        if (typeof value === "undefined") {
          value = this.raw(node, null, "beforeDecl");
        } else if (value) {
          value = value.replace(/\S/g, "");
        }
        return value;
      }
      rawBeforeDecl(root2, node) {
        let value;
        root2.walkDecls((i) => {
          if (typeof i.raws.before !== "undefined") {
            value = i.raws.before;
            if (value.includes("\n")) {
              value = value.replace(/[^\n]+$/, "");
            }
            return false;
          }
        });
        if (typeof value === "undefined") {
          value = this.raw(node, null, "beforeRule");
        } else if (value) {
          value = value.replace(/\S/g, "");
        }
        return value;
      }
      rawBeforeRule(root2) {
        let value;
        root2.walk((i) => {
          if (i.nodes && (i.parent !== root2 || root2.first !== i)) {
            if (typeof i.raws.before !== "undefined") {
              value = i.raws.before;
              if (value.includes("\n")) {
                value = value.replace(/[^\n]+$/, "");
              }
              return false;
            }
          }
        });
        if (value)
          value = value.replace(/\S/g, "");
        return value;
      }
      rawBeforeClose(root2) {
        let value;
        root2.walk((i) => {
          if (i.nodes && i.nodes.length > 0) {
            if (typeof i.raws.after !== "undefined") {
              value = i.raws.after;
              if (value.includes("\n")) {
                value = value.replace(/[^\n]+$/, "");
              }
              return false;
            }
          }
        });
        if (value)
          value = value.replace(/\S/g, "");
        return value;
      }
      rawBeforeOpen(root2) {
        let value;
        root2.walk((i) => {
          if (i.type !== "decl") {
            value = i.raws.between;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawColon(root2) {
        let value;
        root2.walkDecls((i) => {
          if (typeof i.raws.between !== "undefined") {
            value = i.raws.between.replace(/[^\s:]/g, "");
            return false;
          }
        });
        return value;
      }
      beforeAfter(node, detect) {
        let value;
        if (node.type === "decl") {
          value = this.raw(node, null, "beforeDecl");
        } else if (node.type === "comment") {
          value = this.raw(node, null, "beforeComment");
        } else if (detect === "before") {
          value = this.raw(node, null, "beforeRule");
        } else {
          value = this.raw(node, null, "beforeClose");
        }
        let buf = node.parent;
        let depth = 0;
        while (buf && buf.type !== "root") {
          depth += 1;
          buf = buf.parent;
        }
        if (value.includes("\n")) {
          let indent = this.raw(node, null, "indent");
          if (indent.length) {
            for (let step = 0; step < depth; step++)
              value += indent;
          }
        }
        return value;
      }
      rawValue(node, prop) {
        let value = node[prop];
        let raw = node.raws[prop];
        if (raw && raw.value === value) {
          return raw.raw;
        }
        return value;
      }
    };
    module.exports = Stringifier;
    Stringifier.default = Stringifier;
  }
});
var require_stringify = __commonJS({
  "../../node_modules/postcss/lib/stringify.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Stringifier = require_stringifier();
    function stringify2(node, builder) {
      let str = new Stringifier(builder);
      str.stringify(node);
    }
    module.exports = stringify2;
    stringify2.default = stringify2;
  }
});
var require_node = __commonJS({
  "../../node_modules/postcss/lib/node.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var { isClean, my } = require_symbols();
    var CssSyntaxError2 = require_css_syntax_error();
    var Stringifier = require_stringifier();
    var stringify2 = require_stringify();
    function cloneNode(obj, parent) {
      let cloned = new obj.constructor();
      for (let i in obj) {
        if (!Object.prototype.hasOwnProperty.call(obj, i)) {
          continue;
        }
        if (i === "proxyCache")
          continue;
        let value = obj[i];
        let type = typeof value;
        if (i === "parent" && type === "object") {
          if (parent)
            cloned[i] = parent;
        } else if (i === "source") {
          cloned[i] = value;
        } else if (Array.isArray(value)) {
          cloned[i] = value.map((j) => cloneNode(j, cloned));
        } else {
          if (type === "object" && value !== null)
            value = cloneNode(value);
          cloned[i] = value;
        }
      }
      return cloned;
    }
    var Node2 = class {
      constructor(defaults = {}) {
        this.raws = {};
        this[isClean] = false;
        this[my] = true;
        for (let name in defaults) {
          if (name === "nodes") {
            this.nodes = [];
            for (let node of defaults[name]) {
              if (typeof node.clone === "function") {
                this.append(node.clone());
              } else {
                this.append(node);
              }
            }
          } else {
            this[name] = defaults[name];
          }
        }
      }
      error(message, opts = {}) {
        if (this.source) {
          let { start, end } = this.rangeBy(opts);
          return this.source.input.error(
            message,
            { line: start.line, column: start.column },
            { line: end.line, column: end.column },
            opts
          );
        }
        return new CssSyntaxError2(message);
      }
      warn(result, text, opts) {
        let data = { node: this };
        for (let i in opts)
          data[i] = opts[i];
        return result.warn(text, data);
      }
      remove() {
        if (this.parent) {
          this.parent.removeChild(this);
        }
        this.parent = void 0;
        return this;
      }
      toString(stringifier = stringify2) {
        if (stringifier.stringify)
          stringifier = stringifier.stringify;
        let result = "";
        stringifier(this, (i) => {
          result += i;
        });
        return result;
      }
      assign(overrides = {}) {
        for (let name in overrides) {
          this[name] = overrides[name];
        }
        return this;
      }
      clone(overrides = {}) {
        let cloned = cloneNode(this);
        for (let name in overrides) {
          cloned[name] = overrides[name];
        }
        return cloned;
      }
      cloneBefore(overrides = {}) {
        let cloned = this.clone(overrides);
        this.parent.insertBefore(this, cloned);
        return cloned;
      }
      cloneAfter(overrides = {}) {
        let cloned = this.clone(overrides);
        this.parent.insertAfter(this, cloned);
        return cloned;
      }
      replaceWith(...nodes) {
        if (this.parent) {
          let bookmark = this;
          let foundSelf = false;
          for (let node of nodes) {
            if (node === this) {
              foundSelf = true;
            } else if (foundSelf) {
              this.parent.insertAfter(bookmark, node);
              bookmark = node;
            } else {
              this.parent.insertBefore(bookmark, node);
            }
          }
          if (!foundSelf) {
            this.remove();
          }
        }
        return this;
      }
      next() {
        if (!this.parent)
          return void 0;
        let index = this.parent.index(this);
        return this.parent.nodes[index + 1];
      }
      prev() {
        if (!this.parent)
          return void 0;
        let index = this.parent.index(this);
        return this.parent.nodes[index - 1];
      }
      before(add) {
        this.parent.insertBefore(this, add);
        return this;
      }
      after(add) {
        this.parent.insertAfter(this, add);
        return this;
      }
      root() {
        let result = this;
        while (result.parent && result.parent.type !== "document") {
          result = result.parent;
        }
        return result;
      }
      raw(prop, defaultType) {
        let str = new Stringifier();
        return str.raw(this, prop, defaultType);
      }
      cleanRaws(keepBetween) {
        delete this.raws.before;
        delete this.raws.after;
        if (!keepBetween)
          delete this.raws.between;
      }
      toJSON(_, inputs) {
        let fixed = {};
        let emitInputs = inputs == null;
        inputs = inputs || /* @__PURE__ */ new Map();
        let inputsNextIndex = 0;
        for (let name in this) {
          if (!Object.prototype.hasOwnProperty.call(this, name)) {
            continue;
          }
          if (name === "parent" || name === "proxyCache")
            continue;
          let value = this[name];
          if (Array.isArray(value)) {
            fixed[name] = value.map((i) => {
              if (typeof i === "object" && i.toJSON) {
                return i.toJSON(null, inputs);
              } else {
                return i;
              }
            });
          } else if (typeof value === "object" && value.toJSON) {
            fixed[name] = value.toJSON(null, inputs);
          } else if (name === "source") {
            let inputId = inputs.get(value.input);
            if (inputId == null) {
              inputId = inputsNextIndex;
              inputs.set(value.input, inputsNextIndex);
              inputsNextIndex++;
            }
            fixed[name] = {
              inputId,
              start: value.start,
              end: value.end
            };
          } else {
            fixed[name] = value;
          }
        }
        if (emitInputs) {
          fixed.inputs = [...inputs.keys()].map((input) => input.toJSON());
        }
        return fixed;
      }
      positionInside(index) {
        let string = this.toString();
        let column = this.source.start.column;
        let line = this.source.start.line;
        for (let i = 0; i < index; i++) {
          if (string[i] === "\n") {
            column = 1;
            line += 1;
          } else {
            column += 1;
          }
        }
        return { line, column };
      }
      positionBy(opts) {
        let pos = this.source.start;
        if (opts.index) {
          pos = this.positionInside(opts.index);
        } else if (opts.word) {
          let index = this.toString().indexOf(opts.word);
          if (index !== -1)
            pos = this.positionInside(index);
        }
        return pos;
      }
      rangeBy(opts) {
        let start = {
          line: this.source.start.line,
          column: this.source.start.column
        };
        let end = this.source.end ? {
          line: this.source.end.line,
          column: this.source.end.column + 1
        } : {
          line: start.line,
          column: start.column + 1
        };
        if (opts.word) {
          let index = this.toString().indexOf(opts.word);
          if (index !== -1) {
            start = this.positionInside(index);
            end = this.positionInside(index + opts.word.length);
          }
        } else {
          if (opts.start) {
            start = {
              line: opts.start.line,
              column: opts.start.column
            };
          } else if (opts.index) {
            start = this.positionInside(opts.index);
          }
          if (opts.end) {
            end = {
              line: opts.end.line,
              column: opts.end.column
            };
          } else if (opts.endIndex) {
            end = this.positionInside(opts.endIndex);
          } else if (opts.index) {
            end = this.positionInside(opts.index + 1);
          }
        }
        if (end.line < start.line || end.line === start.line && end.column <= start.column) {
          end = { line: start.line, column: start.column + 1 };
        }
        return { start, end };
      }
      getProxyProcessor() {
        return {
          set(node, prop, value) {
            if (node[prop] === value)
              return true;
            node[prop] = value;
            if (prop === "prop" || prop === "value" || prop === "name" || prop === "params" || prop === "important" || prop === "text") {
              node.markDirty();
            }
            return true;
          },
          get(node, prop) {
            if (prop === "proxyOf") {
              return node;
            } else if (prop === "root") {
              return () => node.root().toProxy();
            } else {
              return node[prop];
            }
          }
        };
      }
      toProxy() {
        if (!this.proxyCache) {
          this.proxyCache = new Proxy(this, this.getProxyProcessor());
        }
        return this.proxyCache;
      }
      addToError(error) {
        error.postcssNode = this;
        if (error.stack && this.source && /\n\s{4}at /.test(error.stack)) {
          let s = this.source;
          error.stack = error.stack.replace(
            /\n\s{4}at /,
            `$&${s.input.from}:${s.start.line}:${s.start.column}$&`
          );
        }
        return error;
      }
      markDirty() {
        if (this[isClean]) {
          this[isClean] = false;
          let next = this;
          while (next = next.parent) {
            next[isClean] = false;
          }
        }
      }
      get proxyOf() {
        return this;
      }
    };
    module.exports = Node2;
    Node2.default = Node2;
  }
});
var require_declaration = __commonJS({
  "../../node_modules/postcss/lib/declaration.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Node2 = require_node();
    var Declaration3 = class extends Node2 {
      constructor(defaults) {
        if (defaults && typeof defaults.value !== "undefined" && typeof defaults.value !== "string") {
          defaults = { ...defaults, value: String(defaults.value) };
        }
        super(defaults);
        this.type = "decl";
      }
      get variable() {
        return this.prop.startsWith("--") || this.prop[0] === "$";
      }
    };
    module.exports = Declaration3;
    Declaration3.default = Declaration3;
  }
});
var require_source_map = __commonJS({
  "(disabled):../../node_modules/source-map-js/source-map.js"() {
    init_process();
    init_buffer();
  }
});
var require_punycode = __commonJS({
  "../../node_modules/url/node_modules/punycode/punycode.js"(exports, module) {
    init_process();
    init_buffer();
    (function(root2) {
      var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
      var freeModule = typeof module == "object" && module && !module.nodeType && module;
      var freeGlobal = typeof globalThis == "object" && globalThis;
      if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
        root2 = freeGlobal;
      }
      var punycode, maxInt = 2147483647, base = 36, tMin = 1, tMax = 26, skew = 38, damp = 700, initialBias = 72, initialN = 128, delimiter = "-", regexPunycode = /^xn--/, regexNonASCII = /[^\x20-\x7E]/, regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, errors = {
        "overflow": "Overflow: input needs wider integers to process",
        "not-basic": "Illegal input >= 0x80 (not a basic code point)",
        "invalid-input": "Invalid input"
      }, baseMinusTMin = base - tMin, floor = Math.floor, stringFromCharCode = String.fromCharCode, key;
      function error(type) {
        throw RangeError(errors[type]);
      }
      function map(array, fn) {
        var length = array.length;
        var result = [];
        while (length--) {
          result[length] = fn(array[length]);
        }
        return result;
      }
      function mapDomain(string, fn) {
        var parts = string.split("@");
        var result = "";
        if (parts.length > 1) {
          result = parts[0] + "@";
          string = parts[1];
        }
        string = string.replace(regexSeparators, ".");
        var labels = string.split(".");
        var encoded = map(labels, fn).join(".");
        return result + encoded;
      }
      function ucs2decode(string) {
        var output = [], counter = 0, length = string.length, value, extra;
        while (counter < length) {
          value = string.charCodeAt(counter++);
          if (value >= 55296 && value <= 56319 && counter < length) {
            extra = string.charCodeAt(counter++);
            if ((extra & 64512) == 56320) {
              output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
            } else {
              output.push(value);
              counter--;
            }
          } else {
            output.push(value);
          }
        }
        return output;
      }
      function ucs2encode(array) {
        return map(array, function(value) {
          var output = "";
          if (value > 65535) {
            value -= 65536;
            output += stringFromCharCode(value >>> 10 & 1023 | 55296);
            value = 56320 | value & 1023;
          }
          output += stringFromCharCode(value);
          return output;
        }).join("");
      }
      function basicToDigit(codePoint) {
        if (codePoint - 48 < 10) {
          return codePoint - 22;
        }
        if (codePoint - 65 < 26) {
          return codePoint - 65;
        }
        if (codePoint - 97 < 26) {
          return codePoint - 97;
        }
        return base;
      }
      function digitToBasic(digit, flag) {
        return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
      }
      function adapt(delta, numPoints, firstTime) {
        var k = 0;
        delta = firstTime ? floor(delta / damp) : delta >> 1;
        delta += floor(delta / numPoints);
        for (; delta > baseMinusTMin * tMax >> 1; k += base) {
          delta = floor(delta / baseMinusTMin);
        }
        return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
      }
      function decode(input) {
        var output = [], inputLength = input.length, out, i = 0, n = initialN, bias = initialBias, basic, j, index, oldi, w, k, digit, t, baseMinusT;
        basic = input.lastIndexOf(delimiter);
        if (basic < 0) {
          basic = 0;
        }
        for (j = 0; j < basic; ++j) {
          if (input.charCodeAt(j) >= 128) {
            error("not-basic");
          }
          output.push(input.charCodeAt(j));
        }
        for (index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {
          for (oldi = i, w = 1, k = base; ; k += base) {
            if (index >= inputLength) {
              error("invalid-input");
            }
            digit = basicToDigit(input.charCodeAt(index++));
            if (digit >= base || digit > floor((maxInt - i) / w)) {
              error("overflow");
            }
            i += digit * w;
            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
            if (digit < t) {
              break;
            }
            baseMinusT = base - t;
            if (w > floor(maxInt / baseMinusT)) {
              error("overflow");
            }
            w *= baseMinusT;
          }
          out = output.length + 1;
          bias = adapt(i - oldi, out, oldi == 0);
          if (floor(i / out) > maxInt - n) {
            error("overflow");
          }
          n += floor(i / out);
          i %= out;
          output.splice(i++, 0, n);
        }
        return ucs2encode(output);
      }
      function encode(input) {
        var n, delta, handledCPCount, basicLength, bias, j, m, q, k, t, currentValue, output = [], inputLength, handledCPCountPlusOne, baseMinusT, qMinusT;
        input = ucs2decode(input);
        inputLength = input.length;
        n = initialN;
        delta = 0;
        bias = initialBias;
        for (j = 0; j < inputLength; ++j) {
          currentValue = input[j];
          if (currentValue < 128) {
            output.push(stringFromCharCode(currentValue));
          }
        }
        handledCPCount = basicLength = output.length;
        if (basicLength) {
          output.push(delimiter);
        }
        while (handledCPCount < inputLength) {
          for (m = maxInt, j = 0; j < inputLength; ++j) {
            currentValue = input[j];
            if (currentValue >= n && currentValue < m) {
              m = currentValue;
            }
          }
          handledCPCountPlusOne = handledCPCount + 1;
          if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
            error("overflow");
          }
          delta += (m - n) * handledCPCountPlusOne;
          n = m;
          for (j = 0; j < inputLength; ++j) {
            currentValue = input[j];
            if (currentValue < n && ++delta > maxInt) {
              error("overflow");
            }
            if (currentValue == n) {
              for (q = delta, k = base; ; k += base) {
                t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                if (q < t) {
                  break;
                }
                qMinusT = q - t;
                baseMinusT = base - t;
                output.push(
                  stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
                );
                q = floor(qMinusT / baseMinusT);
              }
              output.push(stringFromCharCode(digitToBasic(q, 0)));
              bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
              delta = 0;
              ++handledCPCount;
            }
          }
          ++delta;
          ++n;
        }
        return output.join("");
      }
      function toUnicode(input) {
        return mapDomain(input, function(string) {
          return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
        });
      }
      function toASCII(input) {
        return mapDomain(input, function(string) {
          return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
        });
      }
      punycode = {
        "version": "1.3.2",
        "ucs2": {
          "decode": ucs2decode,
          "encode": ucs2encode
        },
        "decode": decode,
        "encode": encode,
        "toASCII": toASCII,
        "toUnicode": toUnicode
      };
      if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        define("punycode", function() {
          return punycode;
        });
      } else if (freeExports && freeModule) {
        if (module.exports == freeExports) {
          freeModule.exports = punycode;
        } else {
          for (key in punycode) {
            punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
          }
        }
      } else {
        root2.punycode = punycode;
      }
    })(exports);
  }
});
var require_util = __commonJS({
  "../../node_modules/url/util.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    module.exports = {
      isString: function(arg) {
        return typeof arg === "string";
      },
      isObject: function(arg) {
        return typeof arg === "object" && arg !== null;
      },
      isNull: function(arg) {
        return arg === null;
      },
      isNullOrUndefined: function(arg) {
        return arg == null;
      }
    };
  }
});
var require_decode = __commonJS({
  "../../node_modules/querystring/decode.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    function hasOwnProperty(obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    }
    module.exports = function(qs, sep, eq, options) {
      sep = sep || "&";
      eq = eq || "=";
      var obj = {};
      if (typeof qs !== "string" || qs.length === 0) {
        return obj;
      }
      var regexp = /\+/g;
      qs = qs.split(sep);
      var maxKeys = 1e3;
      if (options && typeof options.maxKeys === "number") {
        maxKeys = options.maxKeys;
      }
      var len = qs.length;
      if (maxKeys > 0 && len > maxKeys) {
        len = maxKeys;
      }
      for (var i = 0; i < len; ++i) {
        var x = qs[i].replace(regexp, "%20"), idx = x.indexOf(eq), kstr, vstr, k, v;
        if (idx >= 0) {
          kstr = x.substr(0, idx);
          vstr = x.substr(idx + 1);
        } else {
          kstr = x;
          vstr = "";
        }
        k = decodeURIComponent(kstr);
        v = decodeURIComponent(vstr);
        if (!hasOwnProperty(obj, k)) {
          obj[k] = v;
        } else if (Array.isArray(obj[k])) {
          obj[k].push(v);
        } else {
          obj[k] = [obj[k], v];
        }
      }
      return obj;
    };
  }
});
var require_encode = __commonJS({
  "../../node_modules/querystring/encode.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var stringifyPrimitive = function(v) {
      switch (typeof v) {
        case "string":
          return v;
        case "boolean":
          return v ? "true" : "false";
        case "number":
          return isFinite(v) ? v : "";
        default:
          return "";
      }
    };
    module.exports = function(obj, sep, eq, name) {
      sep = sep || "&";
      eq = eq || "=";
      if (obj === null) {
        obj = void 0;
      }
      if (typeof obj === "object") {
        return Object.keys(obj).map(function(k) {
          var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
          if (Array.isArray(obj[k])) {
            return obj[k].map(function(v) {
              return ks + encodeURIComponent(stringifyPrimitive(v));
            }).join(sep);
          } else {
            return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
          }
        }).join(sep);
      }
      if (!name)
        return "";
      return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
    };
  }
});
var require_querystring = __commonJS({
  "../../node_modules/querystring/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.decode = exports.parse = require_decode();
    exports.encode = exports.stringify = require_encode();
  }
});
var require_url2 = __commonJS({
  "../../node_modules/url/url.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var punycode = require_punycode();
    var util = require_util();
    exports.parse = urlParse;
    exports.resolve = urlResolve;
    exports.resolveObject = urlResolveObject;
    exports.format = urlFormat;
    exports.Url = Url;
    function Url() {
      this.protocol = null;
      this.slashes = null;
      this.auth = null;
      this.host = null;
      this.port = null;
      this.hostname = null;
      this.hash = null;
      this.search = null;
      this.query = null;
      this.pathname = null;
      this.path = null;
      this.href = null;
    }
    var protocolPattern = /^([a-z0-9.+-]+:)/i;
    var portPattern = /:[0-9]*$/;
    var simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/;
    var delims = ["<", ">", '"', "`", " ", "\r", "\n", "	"];
    var unwise = ["{", "}", "|", "\\", "^", "`"].concat(delims);
    var autoEscape = ["'"].concat(unwise);
    var nonHostChars = ["%", "/", "?", ";", "#"].concat(autoEscape);
    var hostEndingChars = ["/", "?", "#"];
    var hostnameMaxLen = 255;
    var hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/;
    var hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/;
    var unsafeProtocol = {
      "javascript": true,
      "javascript:": true
    };
    var hostlessProtocol = {
      "javascript": true,
      "javascript:": true
    };
    var slashedProtocol = {
      "http": true,
      "https": true,
      "ftp": true,
      "gopher": true,
      "file": true,
      "http:": true,
      "https:": true,
      "ftp:": true,
      "gopher:": true,
      "file:": true
    };
    var querystring = require_querystring();
    function urlParse(url, parseQueryString, slashesDenoteHost) {
      if (url && util.isObject(url) && url instanceof Url)
        return url;
      var u = new Url();
      u.parse(url, parseQueryString, slashesDenoteHost);
      return u;
    }
    Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
      if (!util.isString(url)) {
        throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
      }
      var queryIndex = url.indexOf("?"), splitter = queryIndex !== -1 && queryIndex < url.indexOf("#") ? "?" : "#", uSplit = url.split(splitter), slashRegex = /\\/g;
      uSplit[0] = uSplit[0].replace(slashRegex, "/");
      url = uSplit.join(splitter);
      var rest = url;
      rest = rest.trim();
      if (!slashesDenoteHost && url.split("#").length === 1) {
        var simplePath = simplePathPattern.exec(rest);
        if (simplePath) {
          this.path = rest;
          this.href = rest;
          this.pathname = simplePath[1];
          if (simplePath[2]) {
            this.search = simplePath[2];
            if (parseQueryString) {
              this.query = querystring.parse(this.search.substr(1));
            } else {
              this.query = this.search.substr(1);
            }
          } else if (parseQueryString) {
            this.search = "";
            this.query = {};
          }
          return this;
        }
      }
      var proto = protocolPattern.exec(rest);
      if (proto) {
        proto = proto[0];
        var lowerProto = proto.toLowerCase();
        this.protocol = lowerProto;
        rest = rest.substr(proto.length);
      }
      if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
        var slashes = rest.substr(0, 2) === "//";
        if (slashes && !(proto && hostlessProtocol[proto])) {
          rest = rest.substr(2);
          this.slashes = true;
        }
      }
      if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
        var hostEnd = -1;
        for (var i = 0; i < hostEndingChars.length; i++) {
          var hec = rest.indexOf(hostEndingChars[i]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
            hostEnd = hec;
        }
        var auth, atSign;
        if (hostEnd === -1) {
          atSign = rest.lastIndexOf("@");
        } else {
          atSign = rest.lastIndexOf("@", hostEnd);
        }
        if (atSign !== -1) {
          auth = rest.slice(0, atSign);
          rest = rest.slice(atSign + 1);
          this.auth = decodeURIComponent(auth);
        }
        hostEnd = -1;
        for (var i = 0; i < nonHostChars.length; i++) {
          var hec = rest.indexOf(nonHostChars[i]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
            hostEnd = hec;
        }
        if (hostEnd === -1)
          hostEnd = rest.length;
        this.host = rest.slice(0, hostEnd);
        rest = rest.slice(hostEnd);
        this.parseHost();
        this.hostname = this.hostname || "";
        var ipv6Hostname = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
        if (!ipv6Hostname) {
          var hostparts = this.hostname.split(/\./);
          for (var i = 0, l = hostparts.length; i < l; i++) {
            var part = hostparts[i];
            if (!part)
              continue;
            if (!part.match(hostnamePartPattern)) {
              var newpart = "";
              for (var j = 0, k = part.length; j < k; j++) {
                if (part.charCodeAt(j) > 127) {
                  newpart += "x";
                } else {
                  newpart += part[j];
                }
              }
              if (!newpart.match(hostnamePartPattern)) {
                var validParts = hostparts.slice(0, i);
                var notHost = hostparts.slice(i + 1);
                var bit = part.match(hostnamePartStart);
                if (bit) {
                  validParts.push(bit[1]);
                  notHost.unshift(bit[2]);
                }
                if (notHost.length) {
                  rest = "/" + notHost.join(".") + rest;
                }
                this.hostname = validParts.join(".");
                break;
              }
            }
          }
        }
        if (this.hostname.length > hostnameMaxLen) {
          this.hostname = "";
        } else {
          this.hostname = this.hostname.toLowerCase();
        }
        if (!ipv6Hostname) {
          this.hostname = punycode.toASCII(this.hostname);
        }
        var p = this.port ? ":" + this.port : "";
        var h = this.hostname || "";
        this.host = h + p;
        this.href += this.host;
        if (ipv6Hostname) {
          this.hostname = this.hostname.substr(1, this.hostname.length - 2);
          if (rest[0] !== "/") {
            rest = "/" + rest;
          }
        }
      }
      if (!unsafeProtocol[lowerProto]) {
        for (var i = 0, l = autoEscape.length; i < l; i++) {
          var ae = autoEscape[i];
          if (rest.indexOf(ae) === -1)
            continue;
          var esc = encodeURIComponent(ae);
          if (esc === ae) {
            esc = escape(ae);
          }
          rest = rest.split(ae).join(esc);
        }
      }
      var hash = rest.indexOf("#");
      if (hash !== -1) {
        this.hash = rest.substr(hash);
        rest = rest.slice(0, hash);
      }
      var qm = rest.indexOf("?");
      if (qm !== -1) {
        this.search = rest.substr(qm);
        this.query = rest.substr(qm + 1);
        if (parseQueryString) {
          this.query = querystring.parse(this.query);
        }
        rest = rest.slice(0, qm);
      } else if (parseQueryString) {
        this.search = "";
        this.query = {};
      }
      if (rest)
        this.pathname = rest;
      if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
        this.pathname = "/";
      }
      if (this.pathname || this.search) {
        var p = this.pathname || "";
        var s = this.search || "";
        this.path = p + s;
      }
      this.href = this.format();
      return this;
    };
    function urlFormat(obj) {
      if (util.isString(obj))
        obj = urlParse(obj);
      if (!(obj instanceof Url))
        return Url.prototype.format.call(obj);
      return obj.format();
    }
    Url.prototype.format = function() {
      var auth = this.auth || "";
      if (auth) {
        auth = encodeURIComponent(auth);
        auth = auth.replace(/%3A/i, ":");
        auth += "@";
      }
      var protocol = this.protocol || "", pathname = this.pathname || "", hash = this.hash || "", host = false, query = "";
      if (this.host) {
        host = auth + this.host;
      } else if (this.hostname) {
        host = auth + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]");
        if (this.port) {
          host += ":" + this.port;
        }
      }
      if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {
        query = querystring.stringify(this.query);
      }
      var search = this.search || query && "?" + query || "";
      if (protocol && protocol.substr(-1) !== ":")
        protocol += ":";
      if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
        host = "//" + (host || "");
        if (pathname && pathname.charAt(0) !== "/")
          pathname = "/" + pathname;
      } else if (!host) {
        host = "";
      }
      if (hash && hash.charAt(0) !== "#")
        hash = "#" + hash;
      if (search && search.charAt(0) !== "?")
        search = "?" + search;
      pathname = pathname.replace(/[?#]/g, function(match) {
        return encodeURIComponent(match);
      });
      search = search.replace("#", "%23");
      return protocol + host + pathname + search + hash;
    };
    function urlResolve(source, relative) {
      return urlParse(source, false, true).resolve(relative);
    }
    Url.prototype.resolve = function(relative) {
      return this.resolveObject(urlParse(relative, false, true)).format();
    };
    function urlResolveObject(source, relative) {
      if (!source)
        return relative;
      return urlParse(source, false, true).resolveObject(relative);
    }
    Url.prototype.resolveObject = function(relative) {
      if (util.isString(relative)) {
        var rel = new Url();
        rel.parse(relative, false, true);
        relative = rel;
      }
      var result = new Url();
      var tkeys = Object.keys(this);
      for (var tk = 0; tk < tkeys.length; tk++) {
        var tkey = tkeys[tk];
        result[tkey] = this[tkey];
      }
      result.hash = relative.hash;
      if (relative.href === "") {
        result.href = result.format();
        return result;
      }
      if (relative.slashes && !relative.protocol) {
        var rkeys = Object.keys(relative);
        for (var rk = 0; rk < rkeys.length; rk++) {
          var rkey = rkeys[rk];
          if (rkey !== "protocol")
            result[rkey] = relative[rkey];
        }
        if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
          result.path = result.pathname = "/";
        }
        result.href = result.format();
        return result;
      }
      if (relative.protocol && relative.protocol !== result.protocol) {
        if (!slashedProtocol[relative.protocol]) {
          var keys = Object.keys(relative);
          for (var v = 0; v < keys.length; v++) {
            var k = keys[v];
            result[k] = relative[k];
          }
          result.href = result.format();
          return result;
        }
        result.protocol = relative.protocol;
        if (!relative.host && !hostlessProtocol[relative.protocol]) {
          var relPath = (relative.pathname || "").split("/");
          while (relPath.length && !(relative.host = relPath.shift()))
            ;
          if (!relative.host)
            relative.host = "";
          if (!relative.hostname)
            relative.hostname = "";
          if (relPath[0] !== "")
            relPath.unshift("");
          if (relPath.length < 2)
            relPath.unshift("");
          result.pathname = relPath.join("/");
        } else {
          result.pathname = relative.pathname;
        }
        result.search = relative.search;
        result.query = relative.query;
        result.host = relative.host || "";
        result.auth = relative.auth;
        result.hostname = relative.hostname || relative.host;
        result.port = relative.port;
        if (result.pathname || result.search) {
          var p = result.pathname || "";
          var s = result.search || "";
          result.path = p + s;
        }
        result.slashes = result.slashes || relative.slashes;
        result.href = result.format();
        return result;
      }
      var isSourceAbs = result.pathname && result.pathname.charAt(0) === "/", isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === "/", mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname, removeAllDots = mustEndAbs, srcPath = result.pathname && result.pathname.split("/") || [], relPath = relative.pathname && relative.pathname.split("/") || [], psychotic = result.protocol && !slashedProtocol[result.protocol];
      if (psychotic) {
        result.hostname = "";
        result.port = null;
        if (result.host) {
          if (srcPath[0] === "")
            srcPath[0] = result.host;
          else
            srcPath.unshift(result.host);
        }
        result.host = "";
        if (relative.protocol) {
          relative.hostname = null;
          relative.port = null;
          if (relative.host) {
            if (relPath[0] === "")
              relPath[0] = relative.host;
            else
              relPath.unshift(relative.host);
          }
          relative.host = null;
        }
        mustEndAbs = mustEndAbs && (relPath[0] === "" || srcPath[0] === "");
      }
      if (isRelAbs) {
        result.host = relative.host || relative.host === "" ? relative.host : result.host;
        result.hostname = relative.hostname || relative.hostname === "" ? relative.hostname : result.hostname;
        result.search = relative.search;
        result.query = relative.query;
        srcPath = relPath;
      } else if (relPath.length) {
        if (!srcPath)
          srcPath = [];
        srcPath.pop();
        srcPath = srcPath.concat(relPath);
        result.search = relative.search;
        result.query = relative.query;
      } else if (!util.isNullOrUndefined(relative.search)) {
        if (psychotic) {
          result.hostname = result.host = srcPath.shift();
          var authInHost = result.host && result.host.indexOf("@") > 0 ? result.host.split("@") : false;
          if (authInHost) {
            result.auth = authInHost.shift();
            result.host = result.hostname = authInHost.shift();
          }
        }
        result.search = relative.search;
        result.query = relative.query;
        if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
          result.path = (result.pathname ? result.pathname : "") + (result.search ? result.search : "");
        }
        result.href = result.format();
        return result;
      }
      if (!srcPath.length) {
        result.pathname = null;
        if (result.search) {
          result.path = "/" + result.search;
        } else {
          result.path = null;
        }
        result.href = result.format();
        return result;
      }
      var last = srcPath.slice(-1)[0];
      var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === "." || last === "..") || last === "";
      var up = 0;
      for (var i = srcPath.length; i >= 0; i--) {
        last = srcPath[i];
        if (last === ".") {
          srcPath.splice(i, 1);
        } else if (last === "..") {
          srcPath.splice(i, 1);
          up++;
        } else if (up) {
          srcPath.splice(i, 1);
          up--;
        }
      }
      if (!mustEndAbs && !removeAllDots) {
        for (; up--; up) {
          srcPath.unshift("..");
        }
      }
      if (mustEndAbs && srcPath[0] !== "" && (!srcPath[0] || srcPath[0].charAt(0) !== "/")) {
        srcPath.unshift("");
      }
      if (hasTrailingSlash && srcPath.join("/").substr(-1) !== "/") {
        srcPath.push("");
      }
      var isAbsolute = srcPath[0] === "" || srcPath[0] && srcPath[0].charAt(0) === "/";
      if (psychotic) {
        result.hostname = result.host = isAbsolute ? "" : srcPath.length ? srcPath.shift() : "";
        var authInHost = result.host && result.host.indexOf("@") > 0 ? result.host.split("@") : false;
        if (authInHost) {
          result.auth = authInHost.shift();
          result.host = result.hostname = authInHost.shift();
        }
      }
      mustEndAbs = mustEndAbs || result.host && srcPath.length;
      if (mustEndAbs && !isAbsolute) {
        srcPath.unshift("");
      }
      if (!srcPath.length) {
        result.pathname = null;
        result.path = null;
      } else {
        result.pathname = srcPath.join("/");
      }
      if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
        result.path = (result.pathname ? result.pathname : "") + (result.search ? result.search : "");
      }
      result.auth = relative.auth || result.auth;
      result.slashes = result.slashes || relative.slashes;
      result.href = result.format();
      return result;
    };
    Url.prototype.parseHost = function() {
      var host = this.host;
      var port = portPattern.exec(host);
      if (port) {
        port = port[0];
        if (port !== ":") {
          this.port = port.substr(1);
        }
        host = host.substr(0, host.length - port.length);
      }
      if (host)
        this.hostname = host;
    };
  }
});
var require_non_secure = __commonJS({
  "../../node_modules/nanoid/non-secure/index.cjs"(exports, module) {
    init_process();
    init_buffer();
    var urlAlphabet = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
    var customAlphabet = (alphabet, defaultSize = 21) => {
      return (size = defaultSize) => {
        let id = "";
        let i = size;
        while (i--) {
          id += alphabet[Math.random() * alphabet.length | 0];
        }
        return id;
      };
    };
    var nanoid = (size = 21) => {
      let id = "";
      let i = size;
      while (i--) {
        id += urlAlphabet[Math.random() * 64 | 0];
      }
      return id;
    };
    module.exports = { nanoid, customAlphabet };
  }
});
var require_previous_map = __commonJS({
  "../../node_modules/postcss/lib/previous-map.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map();
    var { existsSync, readFileSync } = require_browserify_fs();
    var { dirname, join } = require_path_browserify();
    function fromBase64(str) {
      if (import_buffer.Buffer) {
        return import_buffer.Buffer.from(str, "base64").toString();
      } else {
        return window.atob(str);
      }
    }
    var PreviousMap = class {
      constructor(css, opts) {
        if (opts.map === false)
          return;
        this.loadAnnotation(css);
        this.inline = this.startWith(this.annotation, "data:");
        let prev = opts.map ? opts.map.prev : void 0;
        let text = this.loadMap(opts.from, prev);
        if (!this.mapFile && opts.from) {
          this.mapFile = opts.from;
        }
        if (this.mapFile)
          this.root = dirname(this.mapFile);
        if (text)
          this.text = text;
      }
      consumer() {
        if (!this.consumerCache) {
          this.consumerCache = new SourceMapConsumer(this.text);
        }
        return this.consumerCache;
      }
      withContent() {
        return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);
      }
      startWith(string, start) {
        if (!string)
          return false;
        return string.substr(0, start.length) === start;
      }
      getAnnotationURL(sourceMapString) {
        return sourceMapString.replace(/^\/\*\s*# sourceMappingURL=/, "").trim();
      }
      loadAnnotation(css) {
        let comments = css.match(/\/\*\s*# sourceMappingURL=/gm);
        if (!comments)
          return;
        let start = css.lastIndexOf(comments.pop());
        let end = css.indexOf("*/", start);
        if (start > -1 && end > -1) {
          this.annotation = this.getAnnotationURL(css.substring(start, end));
        }
      }
      decodeInline(text) {
        let baseCharsetUri = /^data:application\/json;charset=utf-?8;base64,/;
        let baseUri = /^data:application\/json;base64,/;
        let charsetUri = /^data:application\/json;charset=utf-?8,/;
        let uri = /^data:application\/json,/;
        if (charsetUri.test(text) || uri.test(text)) {
          return decodeURIComponent(text.substr(RegExp.lastMatch.length));
        }
        if (baseCharsetUri.test(text) || baseUri.test(text)) {
          return fromBase64(text.substr(RegExp.lastMatch.length));
        }
        let encoding = text.match(/data:application\/json;([^,]+),/)[1];
        throw new Error("Unsupported source map encoding " + encoding);
      }
      loadFile(path) {
        this.root = dirname(path);
        if (existsSync(path)) {
          this.mapFile = path;
          return readFileSync(path, "utf-8").toString().trim();
        }
      }
      loadMap(file, prev) {
        if (prev === false)
          return false;
        if (prev) {
          if (typeof prev === "string") {
            return prev;
          } else if (typeof prev === "function") {
            let prevPath = prev(file);
            if (prevPath) {
              let map = this.loadFile(prevPath);
              if (!map) {
                throw new Error(
                  "Unable to load previous source map: " + prevPath.toString()
                );
              }
              return map;
            }
          } else if (prev instanceof SourceMapConsumer) {
            return SourceMapGenerator.fromSourceMap(prev).toString();
          } else if (prev instanceof SourceMapGenerator) {
            return prev.toString();
          } else if (this.isMap(prev)) {
            return JSON.stringify(prev);
          } else {
            throw new Error(
              "Unsupported previous source map format: " + prev.toString()
            );
          }
        } else if (this.inline) {
          return this.decodeInline(this.annotation);
        } else if (this.annotation) {
          let map = this.annotation;
          if (file)
            map = join(dirname(file), map);
          return this.loadFile(map);
        }
      }
      isMap(map) {
        if (typeof map !== "object")
          return false;
        return typeof map.mappings === "string" || typeof map._mappings === "string" || Array.isArray(map.sections);
      }
    };
    module.exports = PreviousMap;
    PreviousMap.default = PreviousMap;
  }
});
var require_input = __commonJS({
  "../../node_modules/postcss/lib/input.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map();
    var { fileURLToPath, pathToFileURL } = require_url2();
    var { resolve, isAbsolute } = require_path_browserify();
    var { nanoid } = require_non_secure();
    var terminalHighlight = require_terminal_highlight();
    var CssSyntaxError2 = require_css_syntax_error();
    var PreviousMap = require_previous_map();
    var fromOffsetCache = Symbol("fromOffsetCache");
    var sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);
    var pathAvailable = Boolean(resolve && isAbsolute);
    var Input2 = class {
      constructor(css, opts = {}) {
        if (css === null || typeof css === "undefined" || typeof css === "object" && !css.toString) {
          throw new Error(`PostCSS received ${css} instead of CSS string`);
        }
        this.css = css.toString();
        if (this.css[0] === "\uFEFF" || this.css[0] === "\uFFFE") {
          this.hasBOM = true;
          this.css = this.css.slice(1);
        } else {
          this.hasBOM = false;
        }
        if (opts.from) {
          if (!pathAvailable || /^\w+:\/\//.test(opts.from) || isAbsolute(opts.from)) {
            this.file = opts.from;
          } else {
            this.file = resolve(opts.from);
          }
        }
        if (pathAvailable && sourceMapAvailable) {
          let map = new PreviousMap(this.css, opts);
          if (map.text) {
            this.map = map;
            let file = map.consumer().file;
            if (!this.file && file)
              this.file = this.mapResolve(file);
          }
        }
        if (!this.file) {
          this.id = "<input css " + nanoid(6) + ">";
        }
        if (this.map)
          this.map.file = this.from;
      }
      fromOffset(offset) {
        let lastLine, lineToIndex;
        if (!this[fromOffsetCache]) {
          let lines = this.css.split("\n");
          lineToIndex = new Array(lines.length);
          let prevIndex = 0;
          for (let i = 0, l = lines.length; i < l; i++) {
            lineToIndex[i] = prevIndex;
            prevIndex += lines[i].length + 1;
          }
          this[fromOffsetCache] = lineToIndex;
        } else {
          lineToIndex = this[fromOffsetCache];
        }
        lastLine = lineToIndex[lineToIndex.length - 1];
        let min = 0;
        if (offset >= lastLine) {
          min = lineToIndex.length - 1;
        } else {
          let max = lineToIndex.length - 2;
          let mid;
          while (min < max) {
            mid = min + (max - min >> 1);
            if (offset < lineToIndex[mid]) {
              max = mid - 1;
            } else if (offset >= lineToIndex[mid + 1]) {
              min = mid + 1;
            } else {
              min = mid;
              break;
            }
          }
        }
        return {
          line: min + 1,
          col: offset - lineToIndex[min] + 1
        };
      }
      error(message, line, column, opts = {}) {
        let result, endLine, endColumn;
        if (line && typeof line === "object") {
          let start = line;
          let end = column;
          if (typeof line.offset === "number") {
            let pos = this.fromOffset(start.offset);
            line = pos.line;
            column = pos.col;
          } else {
            line = start.line;
            column = start.column;
          }
          if (typeof end.offset === "number") {
            let pos = this.fromOffset(end.offset);
            endLine = pos.line;
            endColumn = pos.col;
          } else {
            endLine = end.line;
            endColumn = end.column;
          }
        } else if (!column) {
          let pos = this.fromOffset(line);
          line = pos.line;
          column = pos.col;
        }
        let origin = this.origin(line, column, endLine, endColumn);
        if (origin) {
          result = new CssSyntaxError2(
            message,
            origin.endLine === void 0 ? origin.line : { line: origin.line, column: origin.column },
            origin.endLine === void 0 ? origin.column : { line: origin.endLine, column: origin.endColumn },
            origin.source,
            origin.file,
            opts.plugin
          );
        } else {
          result = new CssSyntaxError2(
            message,
            endLine === void 0 ? line : { line, column },
            endLine === void 0 ? column : { line: endLine, column: endColumn },
            this.css,
            this.file,
            opts.plugin
          );
        }
        result.input = { line, column, endLine, endColumn, source: this.css };
        if (this.file) {
          if (pathToFileURL) {
            result.input.url = pathToFileURL(this.file).toString();
          }
          result.input.file = this.file;
        }
        return result;
      }
      origin(line, column, endLine, endColumn) {
        if (!this.map)
          return false;
        let consumer = this.map.consumer();
        let from = consumer.originalPositionFor({ line, column });
        if (!from.source)
          return false;
        let to;
        if (typeof endLine === "number") {
          to = consumer.originalPositionFor({ line: endLine, column: endColumn });
        }
        let fromUrl;
        if (isAbsolute(from.source)) {
          fromUrl = pathToFileURL(from.source);
        } else {
          fromUrl = new URL(
            from.source,
            this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)
          );
        }
        let result = {
          url: fromUrl.toString(),
          line: from.line,
          column: from.column,
          endLine: to && to.line,
          endColumn: to && to.column
        };
        if (fromUrl.protocol === "file:") {
          if (fileURLToPath) {
            result.file = fileURLToPath(fromUrl);
          } else {
            throw new Error(`file: protocol is not available in this PostCSS build`);
          }
        }
        let source = consumer.sourceContentFor(from.source);
        if (source)
          result.source = source;
        return result;
      }
      mapResolve(file) {
        if (/^\w+:\/\//.test(file)) {
          return file;
        }
        return resolve(this.map.consumer().sourceRoot || this.map.root || ".", file);
      }
      get from() {
        return this.file || this.id;
      }
      toJSON() {
        let json = {};
        for (let name of ["hasBOM", "css", "file", "id"]) {
          if (this[name] != null) {
            json[name] = this[name];
          }
        }
        if (this.map) {
          json.map = { ...this.map };
          if (json.map.consumerCache) {
            json.map.consumerCache = void 0;
          }
        }
        return json;
      }
    };
    module.exports = Input2;
    Input2.default = Input2;
    if (terminalHighlight && terminalHighlight.registerInput) {
      terminalHighlight.registerInput(Input2);
    }
  }
});
var require_map_generator = __commonJS({
  "../../node_modules/postcss/lib/map-generator.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map();
    var { dirname, resolve, relative, sep } = require_path_browserify();
    var { pathToFileURL } = require_url2();
    var Input2 = require_input();
    var sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);
    var pathAvailable = Boolean(dirname && resolve && relative && sep);
    var MapGenerator = class {
      constructor(stringify2, root2, opts, cssString) {
        this.stringify = stringify2;
        this.mapOpts = opts.map || {};
        this.root = root2;
        this.opts = opts;
        this.css = cssString;
      }
      isMap() {
        if (typeof this.opts.map !== "undefined") {
          return !!this.opts.map;
        }
        return this.previous().length > 0;
      }
      previous() {
        if (!this.previousMaps) {
          this.previousMaps = [];
          if (this.root) {
            this.root.walk((node) => {
              if (node.source && node.source.input.map) {
                let map = node.source.input.map;
                if (!this.previousMaps.includes(map)) {
                  this.previousMaps.push(map);
                }
              }
            });
          } else {
            let input = new Input2(this.css, this.opts);
            if (input.map)
              this.previousMaps.push(input.map);
          }
        }
        return this.previousMaps;
      }
      isInline() {
        if (typeof this.mapOpts.inline !== "undefined") {
          return this.mapOpts.inline;
        }
        let annotation = this.mapOpts.annotation;
        if (typeof annotation !== "undefined" && annotation !== true) {
          return false;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.inline);
        }
        return true;
      }
      isSourcesContent() {
        if (typeof this.mapOpts.sourcesContent !== "undefined") {
          return this.mapOpts.sourcesContent;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.withContent());
        }
        return true;
      }
      clearAnnotation() {
        if (this.mapOpts.annotation === false)
          return;
        if (this.root) {
          let node;
          for (let i = this.root.nodes.length - 1; i >= 0; i--) {
            node = this.root.nodes[i];
            if (node.type !== "comment")
              continue;
            if (node.text.indexOf("# sourceMappingURL=") === 0) {
              this.root.removeChild(i);
            }
          }
        } else if (this.css) {
          this.css = this.css.replace(/(\n)?\/\*#[\S\s]*?\*\/$/gm, "");
        }
      }
      setSourcesContent() {
        let already = {};
        if (this.root) {
          this.root.walk((node) => {
            if (node.source) {
              let from = node.source.input.from;
              if (from && !already[from]) {
                already[from] = true;
                this.map.setSourceContent(
                  this.toUrl(this.path(from)),
                  node.source.input.css
                );
              }
            }
          });
        } else if (this.css) {
          let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>";
          this.map.setSourceContent(from, this.css);
        }
      }
      applyPrevMaps() {
        for (let prev of this.previous()) {
          let from = this.toUrl(this.path(prev.file));
          let root2 = prev.root || dirname(prev.file);
          let map;
          if (this.mapOpts.sourcesContent === false) {
            map = new SourceMapConsumer(prev.text);
            if (map.sourcesContent) {
              map.sourcesContent = map.sourcesContent.map(() => null);
            }
          } else {
            map = prev.consumer();
          }
          this.map.applySourceMap(map, from, this.toUrl(this.path(root2)));
        }
      }
      isAnnotation() {
        if (this.isInline()) {
          return true;
        }
        if (typeof this.mapOpts.annotation !== "undefined") {
          return this.mapOpts.annotation;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.annotation);
        }
        return true;
      }
      toBase64(str) {
        if (import_buffer.Buffer) {
          return import_buffer.Buffer.from(str).toString("base64");
        } else {
          return window.btoa(unescape(encodeURIComponent(str)));
        }
      }
      addAnnotation() {
        let content;
        if (this.isInline()) {
          content = "data:application/json;base64," + this.toBase64(this.map.toString());
        } else if (typeof this.mapOpts.annotation === "string") {
          content = this.mapOpts.annotation;
        } else if (typeof this.mapOpts.annotation === "function") {
          content = this.mapOpts.annotation(this.opts.to, this.root);
        } else {
          content = this.outputFile() + ".map";
        }
        let eol = "\n";
        if (this.css.includes("\r\n"))
          eol = "\r\n";
        this.css += eol + "/*# sourceMappingURL=" + content + " */";
      }
      outputFile() {
        if (this.opts.to) {
          return this.path(this.opts.to);
        } else if (this.opts.from) {
          return this.path(this.opts.from);
        } else {
          return "to.css";
        }
      }
      generateMap() {
        if (this.root) {
          this.generateString();
        } else if (this.previous().length === 1) {
          let prev = this.previous()[0].consumer();
          prev.file = this.outputFile();
          this.map = SourceMapGenerator.fromSourceMap(prev);
        } else {
          this.map = new SourceMapGenerator({ file: this.outputFile() });
          this.map.addMapping({
            source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>",
            generated: { line: 1, column: 0 },
            original: { line: 1, column: 0 }
          });
        }
        if (this.isSourcesContent())
          this.setSourcesContent();
        if (this.root && this.previous().length > 0)
          this.applyPrevMaps();
        if (this.isAnnotation())
          this.addAnnotation();
        if (this.isInline()) {
          return [this.css];
        } else {
          return [this.css, this.map];
        }
      }
      path(file) {
        if (file.indexOf("<") === 0)
          return file;
        if (/^\w+:\/\//.test(file))
          return file;
        if (this.mapOpts.absolute)
          return file;
        let from = this.opts.to ? dirname(this.opts.to) : ".";
        if (typeof this.mapOpts.annotation === "string") {
          from = dirname(resolve(from, this.mapOpts.annotation));
        }
        file = relative(from, file);
        return file;
      }
      toUrl(path) {
        if (sep === "\\") {
          path = path.replace(/\\/g, "/");
        }
        return encodeURI(path).replace(/[#?]/g, encodeURIComponent);
      }
      sourcePath(node) {
        if (this.mapOpts.from) {
          return this.toUrl(this.mapOpts.from);
        } else if (this.mapOpts.absolute) {
          if (pathToFileURL) {
            return pathToFileURL(node.source.input.from).toString();
          } else {
            throw new Error(
              "`map.absolute` option is not available in this PostCSS build"
            );
          }
        } else {
          return this.toUrl(this.path(node.source.input.from));
        }
      }
      generateString() {
        this.css = "";
        this.map = new SourceMapGenerator({ file: this.outputFile() });
        let line = 1;
        let column = 1;
        let noSource = "<no source>";
        let mapping = {
          source: "",
          generated: { line: 0, column: 0 },
          original: { line: 0, column: 0 }
        };
        let lines, last;
        this.stringify(this.root, (str, node, type) => {
          this.css += str;
          if (node && type !== "end") {
            mapping.generated.line = line;
            mapping.generated.column = column - 1;
            if (node.source && node.source.start) {
              mapping.source = this.sourcePath(node);
              mapping.original.line = node.source.start.line;
              mapping.original.column = node.source.start.column - 1;
              this.map.addMapping(mapping);
            } else {
              mapping.source = noSource;
              mapping.original.line = 1;
              mapping.original.column = 0;
              this.map.addMapping(mapping);
            }
          }
          lines = str.match(/\n/g);
          if (lines) {
            line += lines.length;
            last = str.lastIndexOf("\n");
            column = str.length - last;
          } else {
            column += str.length;
          }
          if (node && type !== "start") {
            let p = node.parent || { raws: {} };
            if (node.type !== "decl" || node !== p.last || p.raws.semicolon) {
              if (node.source && node.source.end) {
                mapping.source = this.sourcePath(node);
                mapping.original.line = node.source.end.line;
                mapping.original.column = node.source.end.column - 1;
                mapping.generated.line = line;
                mapping.generated.column = column - 2;
                this.map.addMapping(mapping);
              } else {
                mapping.source = noSource;
                mapping.original.line = 1;
                mapping.original.column = 0;
                mapping.generated.line = line;
                mapping.generated.column = column - 1;
                this.map.addMapping(mapping);
              }
            }
          }
        });
      }
      generate() {
        this.clearAnnotation();
        if (pathAvailable && sourceMapAvailable && this.isMap()) {
          return this.generateMap();
        } else {
          let result = "";
          this.stringify(this.root, (i) => {
            result += i;
          });
          return [result];
        }
      }
    };
    module.exports = MapGenerator;
  }
});
var require_comment = __commonJS({
  "../../node_modules/postcss/lib/comment.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Node2 = require_node();
    var Comment2 = class extends Node2 {
      constructor(defaults) {
        super(defaults);
        this.type = "comment";
      }
    };
    module.exports = Comment2;
    Comment2.default = Comment2;
  }
});
var require_container = __commonJS({
  "../../node_modules/postcss/lib/container.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var { isClean, my } = require_symbols();
    var Declaration3 = require_declaration();
    var Comment2 = require_comment();
    var Node2 = require_node();
    var parse2;
    var Rule3;
    var AtRule2;
    var Root2;
    function cleanSource(nodes) {
      return nodes.map((i) => {
        if (i.nodes)
          i.nodes = cleanSource(i.nodes);
        delete i.source;
        return i;
      });
    }
    function markDirtyUp(node) {
      node[isClean] = false;
      if (node.proxyOf.nodes) {
        for (let i of node.proxyOf.nodes) {
          markDirtyUp(i);
        }
      }
    }
    var Container2 = class extends Node2 {
      push(child) {
        child.parent = this;
        this.proxyOf.nodes.push(child);
        return this;
      }
      each(callback) {
        if (!this.proxyOf.nodes)
          return void 0;
        let iterator = this.getIterator();
        let index, result;
        while (this.indexes[iterator] < this.proxyOf.nodes.length) {
          index = this.indexes[iterator];
          result = callback(this.proxyOf.nodes[index], index);
          if (result === false)
            break;
          this.indexes[iterator] += 1;
        }
        delete this.indexes[iterator];
        return result;
      }
      walk(callback) {
        return this.each((child, i) => {
          let result;
          try {
            result = callback(child, i);
          } catch (e) {
            throw child.addToError(e);
          }
          if (result !== false && child.walk) {
            result = child.walk(callback);
          }
          return result;
        });
      }
      walkDecls(prop, callback) {
        if (!callback) {
          callback = prop;
          return this.walk((child, i) => {
            if (child.type === "decl") {
              return callback(child, i);
            }
          });
        }
        if (prop instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "decl" && prop.test(child.prop)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "decl" && child.prop === prop) {
            return callback(child, i);
          }
        });
      }
      walkRules(selector, callback) {
        if (!callback) {
          callback = selector;
          return this.walk((child, i) => {
            if (child.type === "rule") {
              return callback(child, i);
            }
          });
        }
        if (selector instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "rule" && selector.test(child.selector)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "rule" && child.selector === selector) {
            return callback(child, i);
          }
        });
      }
      walkAtRules(name, callback) {
        if (!callback) {
          callback = name;
          return this.walk((child, i) => {
            if (child.type === "atrule") {
              return callback(child, i);
            }
          });
        }
        if (name instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "atrule" && name.test(child.name)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "atrule" && child.name === name) {
            return callback(child, i);
          }
        });
      }
      walkComments(callback) {
        return this.walk((child, i) => {
          if (child.type === "comment") {
            return callback(child, i);
          }
        });
      }
      append(...children) {
        for (let child of children) {
          let nodes = this.normalize(child, this.last);
          for (let node of nodes)
            this.proxyOf.nodes.push(node);
        }
        this.markDirty();
        return this;
      }
      prepend(...children) {
        children = children.reverse();
        for (let child of children) {
          let nodes = this.normalize(child, this.first, "prepend").reverse();
          for (let node of nodes)
            this.proxyOf.nodes.unshift(node);
          for (let id in this.indexes) {
            this.indexes[id] = this.indexes[id] + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      cleanRaws(keepBetween) {
        super.cleanRaws(keepBetween);
        if (this.nodes) {
          for (let node of this.nodes)
            node.cleanRaws(keepBetween);
        }
      }
      insertBefore(exist, add) {
        let existIndex = this.index(exist);
        let type = exist === 0 ? "prepend" : false;
        let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse();
        existIndex = this.index(exist);
        for (let node of nodes)
          this.proxyOf.nodes.splice(existIndex, 0, node);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (existIndex <= index) {
            this.indexes[id] = index + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      insertAfter(exist, add) {
        let existIndex = this.index(exist);
        let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();
        existIndex = this.index(exist);
        for (let node of nodes)
          this.proxyOf.nodes.splice(existIndex + 1, 0, node);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (existIndex < index) {
            this.indexes[id] = index + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      removeChild(child) {
        child = this.index(child);
        this.proxyOf.nodes[child].parent = void 0;
        this.proxyOf.nodes.splice(child, 1);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (index >= child) {
            this.indexes[id] = index - 1;
          }
        }
        this.markDirty();
        return this;
      }
      removeAll() {
        for (let node of this.proxyOf.nodes)
          node.parent = void 0;
        this.proxyOf.nodes = [];
        this.markDirty();
        return this;
      }
      replaceValues(pattern, opts, callback) {
        if (!callback) {
          callback = opts;
          opts = {};
        }
        this.walkDecls((decl2) => {
          if (opts.props && !opts.props.includes(decl2.prop))
            return;
          if (opts.fast && !decl2.value.includes(opts.fast))
            return;
          decl2.value = decl2.value.replace(pattern, callback);
        });
        this.markDirty();
        return this;
      }
      every(condition) {
        return this.nodes.every(condition);
      }
      some(condition) {
        return this.nodes.some(condition);
      }
      index(child) {
        if (typeof child === "number")
          return child;
        if (child.proxyOf)
          child = child.proxyOf;
        return this.proxyOf.nodes.indexOf(child);
      }
      get first() {
        if (!this.proxyOf.nodes)
          return void 0;
        return this.proxyOf.nodes[0];
      }
      get last() {
        if (!this.proxyOf.nodes)
          return void 0;
        return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];
      }
      normalize(nodes, sample) {
        if (typeof nodes === "string") {
          nodes = cleanSource(parse2(nodes).nodes);
        } else if (Array.isArray(nodes)) {
          nodes = nodes.slice(0);
          for (let i of nodes) {
            if (i.parent)
              i.parent.removeChild(i, "ignore");
          }
        } else if (nodes.type === "root" && this.type !== "document") {
          nodes = nodes.nodes.slice(0);
          for (let i of nodes) {
            if (i.parent)
              i.parent.removeChild(i, "ignore");
          }
        } else if (nodes.type) {
          nodes = [nodes];
        } else if (nodes.prop) {
          if (typeof nodes.value === "undefined") {
            throw new Error("Value field is missed in node creation");
          } else if (typeof nodes.value !== "string") {
            nodes.value = String(nodes.value);
          }
          nodes = [new Declaration3(nodes)];
        } else if (nodes.selector) {
          nodes = [new Rule3(nodes)];
        } else if (nodes.name) {
          nodes = [new AtRule2(nodes)];
        } else if (nodes.text) {
          nodes = [new Comment2(nodes)];
        } else {
          throw new Error("Unknown node type in node creation");
        }
        let processed = nodes.map((i) => {
          if (!i[my])
            Container2.rebuild(i);
          i = i.proxyOf;
          if (i.parent)
            i.parent.removeChild(i);
          if (i[isClean])
            markDirtyUp(i);
          if (typeof i.raws.before === "undefined") {
            if (sample && typeof sample.raws.before !== "undefined") {
              i.raws.before = sample.raws.before.replace(/\S/g, "");
            }
          }
          i.parent = this.proxyOf;
          return i;
        });
        return processed;
      }
      getProxyProcessor() {
        return {
          set(node, prop, value) {
            if (node[prop] === value)
              return true;
            node[prop] = value;
            if (prop === "name" || prop === "params" || prop === "selector") {
              node.markDirty();
            }
            return true;
          },
          get(node, prop) {
            if (prop === "proxyOf") {
              return node;
            } else if (!node[prop]) {
              return node[prop];
            } else if (prop === "each" || typeof prop === "string" && prop.startsWith("walk")) {
              return (...args) => {
                return node[prop](
                  ...args.map((i) => {
                    if (typeof i === "function") {
                      return (child, index) => i(child.toProxy(), index);
                    } else {
                      return i;
                    }
                  })
                );
              };
            } else if (prop === "every" || prop === "some") {
              return (cb) => {
                return node[prop](
                  (child, ...other) => cb(child.toProxy(), ...other)
                );
              };
            } else if (prop === "root") {
              return () => node.root().toProxy();
            } else if (prop === "nodes") {
              return node.nodes.map((i) => i.toProxy());
            } else if (prop === "first" || prop === "last") {
              return node[prop].toProxy();
            } else {
              return node[prop];
            }
          }
        };
      }
      getIterator() {
        if (!this.lastEach)
          this.lastEach = 0;
        if (!this.indexes)
          this.indexes = {};
        this.lastEach += 1;
        let iterator = this.lastEach;
        this.indexes[iterator] = 0;
        return iterator;
      }
    };
    Container2.registerParse = (dependant) => {
      parse2 = dependant;
    };
    Container2.registerRule = (dependant) => {
      Rule3 = dependant;
    };
    Container2.registerAtRule = (dependant) => {
      AtRule2 = dependant;
    };
    Container2.registerRoot = (dependant) => {
      Root2 = dependant;
    };
    module.exports = Container2;
    Container2.default = Container2;
    Container2.rebuild = (node) => {
      if (node.type === "atrule") {
        Object.setPrototypeOf(node, AtRule2.prototype);
      } else if (node.type === "rule") {
        Object.setPrototypeOf(node, Rule3.prototype);
      } else if (node.type === "decl") {
        Object.setPrototypeOf(node, Declaration3.prototype);
      } else if (node.type === "comment") {
        Object.setPrototypeOf(node, Comment2.prototype);
      } else if (node.type === "root") {
        Object.setPrototypeOf(node, Root2.prototype);
      }
      node[my] = true;
      if (node.nodes) {
        node.nodes.forEach((child) => {
          Container2.rebuild(child);
        });
      }
    };
  }
});
var require_document = __commonJS({
  "../../node_modules/postcss/lib/document.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Container2 = require_container();
    var LazyResult;
    var Processor2;
    var Document2 = class extends Container2 {
      constructor(defaults) {
        super({ type: "document", ...defaults });
        if (!this.nodes) {
          this.nodes = [];
        }
      }
      toResult(opts = {}) {
        let lazy = new LazyResult(new Processor2(), this, opts);
        return lazy.stringify();
      }
    };
    Document2.registerLazyResult = (dependant) => {
      LazyResult = dependant;
    };
    Document2.registerProcessor = (dependant) => {
      Processor2 = dependant;
    };
    module.exports = Document2;
    Document2.default = Document2;
  }
});
var require_warn_once = __commonJS({
  "../../node_modules/postcss/lib/warn-once.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var printed = {};
    module.exports = function warnOnce(message) {
      if (printed[message])
        return;
      printed[message] = true;
      if (typeof console !== "undefined" && console.warn) {
        console.warn(message);
      }
    };
  }
});
var require_warning = __commonJS({
  "../../node_modules/postcss/lib/warning.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Warning2 = class {
      constructor(text, opts = {}) {
        this.type = "warning";
        this.text = text;
        if (opts.node && opts.node.source) {
          let range = opts.node.rangeBy(opts);
          this.line = range.start.line;
          this.column = range.start.column;
          this.endLine = range.end.line;
          this.endColumn = range.end.column;
        }
        for (let opt in opts)
          this[opt] = opts[opt];
      }
      toString() {
        if (this.node) {
          return this.node.error(this.text, {
            plugin: this.plugin,
            index: this.index,
            word: this.word
          }).message;
        }
        if (this.plugin) {
          return this.plugin + ": " + this.text;
        }
        return this.text;
      }
    };
    module.exports = Warning2;
    Warning2.default = Warning2;
  }
});
var require_result = __commonJS({
  "../../node_modules/postcss/lib/result.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Warning2 = require_warning();
    var Result2 = class {
      constructor(processor, root2, opts) {
        this.processor = processor;
        this.messages = [];
        this.root = root2;
        this.opts = opts;
        this.css = void 0;
        this.map = void 0;
      }
      toString() {
        return this.css;
      }
      warn(text, opts = {}) {
        if (!opts.plugin) {
          if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
            opts.plugin = this.lastPlugin.postcssPlugin;
          }
        }
        let warning = new Warning2(text, opts);
        this.messages.push(warning);
        return warning;
      }
      warnings() {
        return this.messages.filter((i) => i.type === "warning");
      }
      get content() {
        return this.css;
      }
    };
    module.exports = Result2;
    Result2.default = Result2;
  }
});
var require_tokenize = __commonJS({
  "../../node_modules/postcss/lib/tokenize.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var SINGLE_QUOTE = "'".charCodeAt(0);
    var DOUBLE_QUOTE = '"'.charCodeAt(0);
    var BACKSLASH = "\\".charCodeAt(0);
    var SLASH = "/".charCodeAt(0);
    var NEWLINE = "\n".charCodeAt(0);
    var SPACE = " ".charCodeAt(0);
    var FEED = "\f".charCodeAt(0);
    var TAB = "	".charCodeAt(0);
    var CR = "\r".charCodeAt(0);
    var OPEN_SQUARE = "[".charCodeAt(0);
    var CLOSE_SQUARE = "]".charCodeAt(0);
    var OPEN_PARENTHESES = "(".charCodeAt(0);
    var CLOSE_PARENTHESES = ")".charCodeAt(0);
    var OPEN_CURLY = "{".charCodeAt(0);
    var CLOSE_CURLY = "}".charCodeAt(0);
    var SEMICOLON = ";".charCodeAt(0);
    var ASTERISK = "*".charCodeAt(0);
    var COLON = ":".charCodeAt(0);
    var AT = "@".charCodeAt(0);
    var RE_AT_END = /[\t\n\f\r "#'()/;[\\\]{}]/g;
    var RE_WORD_END = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g;
    var RE_BAD_BRACKET = /.[\n"'(/\\]/;
    var RE_HEX_ESCAPE = /[\da-f]/i;
    module.exports = function tokenizer(input, options = {}) {
      let css = input.css.valueOf();
      let ignore = options.ignoreErrors;
      let code, next, quote, content, escape2;
      let escaped, escapePos, prev, n, currentToken;
      let length = css.length;
      let pos = 0;
      let buffer = [];
      let returned = [];
      function position() {
        return pos;
      }
      function unclosed(what) {
        throw input.error("Unclosed " + what, pos);
      }
      function endOfFile() {
        return returned.length === 0 && pos >= length;
      }
      function nextToken(opts) {
        if (returned.length)
          return returned.pop();
        if (pos >= length)
          return;
        let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;
        code = css.charCodeAt(pos);
        switch (code) {
          case NEWLINE:
          case SPACE:
          case TAB:
          case CR:
          case FEED: {
            next = pos;
            do {
              next += 1;
              code = css.charCodeAt(next);
            } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);
            currentToken = ["space", css.slice(pos, next)];
            pos = next - 1;
            break;
          }
          case OPEN_SQUARE:
          case CLOSE_SQUARE:
          case OPEN_CURLY:
          case CLOSE_CURLY:
          case COLON:
          case SEMICOLON:
          case CLOSE_PARENTHESES: {
            let controlChar = String.fromCharCode(code);
            currentToken = [controlChar, controlChar, pos];
            break;
          }
          case OPEN_PARENTHESES: {
            prev = buffer.length ? buffer.pop()[1] : "";
            n = css.charCodeAt(pos + 1);
            if (prev === "url" && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {
              next = pos;
              do {
                escaped = false;
                next = css.indexOf(")", next + 1);
                if (next === -1) {
                  if (ignore || ignoreUnclosed) {
                    next = pos;
                    break;
                  } else {
                    unclosed("bracket");
                  }
                }
                escapePos = next;
                while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                  escapePos -= 1;
                  escaped = !escaped;
                }
              } while (escaped);
              currentToken = ["brackets", css.slice(pos, next + 1), pos, next];
              pos = next;
            } else {
              next = css.indexOf(")", pos + 1);
              content = css.slice(pos, next + 1);
              if (next === -1 || RE_BAD_BRACKET.test(content)) {
                currentToken = ["(", "(", pos];
              } else {
                currentToken = ["brackets", content, pos, next];
                pos = next;
              }
            }
            break;
          }
          case SINGLE_QUOTE:
          case DOUBLE_QUOTE: {
            quote = code === SINGLE_QUOTE ? "'" : '"';
            next = pos;
            do {
              escaped = false;
              next = css.indexOf(quote, next + 1);
              if (next === -1) {
                if (ignore || ignoreUnclosed) {
                  next = pos + 1;
                  break;
                } else {
                  unclosed("string");
                }
              }
              escapePos = next;
              while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                escapePos -= 1;
                escaped = !escaped;
              }
            } while (escaped);
            currentToken = ["string", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          case AT: {
            RE_AT_END.lastIndex = pos + 1;
            RE_AT_END.test(css);
            if (RE_AT_END.lastIndex === 0) {
              next = css.length - 1;
            } else {
              next = RE_AT_END.lastIndex - 2;
            }
            currentToken = ["at-word", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          case BACKSLASH: {
            next = pos;
            escape2 = true;
            while (css.charCodeAt(next + 1) === BACKSLASH) {
              next += 1;
              escape2 = !escape2;
            }
            code = css.charCodeAt(next + 1);
            if (escape2 && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {
              next += 1;
              if (RE_HEX_ESCAPE.test(css.charAt(next))) {
                while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {
                  next += 1;
                }
                if (css.charCodeAt(next + 1) === SPACE) {
                  next += 1;
                }
              }
            }
            currentToken = ["word", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          default: {
            if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
              next = css.indexOf("*/", pos + 2) + 1;
              if (next === 0) {
                if (ignore || ignoreUnclosed) {
                  next = css.length;
                } else {
                  unclosed("comment");
                }
              }
              currentToken = ["comment", css.slice(pos, next + 1), pos, next];
              pos = next;
            } else {
              RE_WORD_END.lastIndex = pos + 1;
              RE_WORD_END.test(css);
              if (RE_WORD_END.lastIndex === 0) {
                next = css.length - 1;
              } else {
                next = RE_WORD_END.lastIndex - 2;
              }
              currentToken = ["word", css.slice(pos, next + 1), pos, next];
              buffer.push(currentToken);
              pos = next;
            }
            break;
          }
        }
        pos++;
        return currentToken;
      }
      function back(token) {
        returned.push(token);
      }
      return {
        back,
        nextToken,
        endOfFile,
        position
      };
    };
  }
});
var require_at_rule = __commonJS({
  "../../node_modules/postcss/lib/at-rule.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Container2 = require_container();
    var AtRule2 = class extends Container2 {
      constructor(defaults) {
        super(defaults);
        this.type = "atrule";
      }
      append(...children) {
        if (!this.proxyOf.nodes)
          this.nodes = [];
        return super.append(...children);
      }
      prepend(...children) {
        if (!this.proxyOf.nodes)
          this.nodes = [];
        return super.prepend(...children);
      }
    };
    module.exports = AtRule2;
    AtRule2.default = AtRule2;
    Container2.registerAtRule(AtRule2);
  }
});
var require_root = __commonJS({
  "../../node_modules/postcss/lib/root.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Container2 = require_container();
    var LazyResult;
    var Processor2;
    var Root2 = class extends Container2 {
      constructor(defaults) {
        super(defaults);
        this.type = "root";
        if (!this.nodes)
          this.nodes = [];
      }
      removeChild(child, ignore) {
        let index = this.index(child);
        if (!ignore && index === 0 && this.nodes.length > 1) {
          this.nodes[1].raws.before = this.nodes[index].raws.before;
        }
        return super.removeChild(child);
      }
      normalize(child, sample, type) {
        let nodes = super.normalize(child);
        if (sample) {
          if (type === "prepend") {
            if (this.nodes.length > 1) {
              sample.raws.before = this.nodes[1].raws.before;
            } else {
              delete sample.raws.before;
            }
          } else if (this.first !== sample) {
            for (let node of nodes) {
              node.raws.before = sample.raws.before;
            }
          }
        }
        return nodes;
      }
      toResult(opts = {}) {
        let lazy = new LazyResult(new Processor2(), this, opts);
        return lazy.stringify();
      }
    };
    Root2.registerLazyResult = (dependant) => {
      LazyResult = dependant;
    };
    Root2.registerProcessor = (dependant) => {
      Processor2 = dependant;
    };
    module.exports = Root2;
    Root2.default = Root2;
    Container2.registerRoot(Root2);
  }
});
var require_list = __commonJS({
  "../../node_modules/postcss/lib/list.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var list2 = {
      split(string, separators, last) {
        let array = [];
        let current = "";
        let split = false;
        let func = 0;
        let inQuote = false;
        let prevQuote = "";
        let escape2 = false;
        for (let letter of string) {
          if (escape2) {
            escape2 = false;
          } else if (letter === "\\") {
            escape2 = true;
          } else if (inQuote) {
            if (letter === prevQuote) {
              inQuote = false;
            }
          } else if (letter === '"' || letter === "'") {
            inQuote = true;
            prevQuote = letter;
          } else if (letter === "(") {
            func += 1;
          } else if (letter === ")") {
            if (func > 0)
              func -= 1;
          } else if (func === 0) {
            if (separators.includes(letter))
              split = true;
          }
          if (split) {
            if (current !== "")
              array.push(current.trim());
            current = "";
            split = false;
          } else {
            current += letter;
          }
        }
        if (last || current !== "")
          array.push(current.trim());
        return array;
      },
      space(string) {
        let spaces = [" ", "\n", "	"];
        return list2.split(string, spaces);
      },
      comma(string) {
        return list2.split(string, [","], true);
      }
    };
    module.exports = list2;
    list2.default = list2;
  }
});
var require_rule = __commonJS({
  "../../node_modules/postcss/lib/rule.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Container2 = require_container();
    var list2 = require_list();
    var Rule3 = class extends Container2 {
      constructor(defaults) {
        super(defaults);
        this.type = "rule";
        if (!this.nodes)
          this.nodes = [];
      }
      get selectors() {
        return list2.comma(this.selector);
      }
      set selectors(values) {
        let match = this.selector ? this.selector.match(/,\s*/) : null;
        let sep = match ? match[0] : "," + this.raw("between", "beforeOpen");
        this.selector = values.join(sep);
      }
    };
    module.exports = Rule3;
    Rule3.default = Rule3;
    Container2.registerRule(Rule3);
  }
});
var require_parser = __commonJS({
  "../../node_modules/postcss/lib/parser.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Declaration3 = require_declaration();
    var tokenizer = require_tokenize();
    var Comment2 = require_comment();
    var AtRule2 = require_at_rule();
    var Root2 = require_root();
    var Rule3 = require_rule();
    var SAFE_COMMENT_NEIGHBOR = {
      empty: true,
      space: true
    };
    function findLastWithPosition(tokens) {
      for (let i = tokens.length - 1; i >= 0; i--) {
        let token = tokens[i];
        let pos = token[3] || token[2];
        if (pos)
          return pos;
      }
    }
    var Parser = class {
      constructor(input) {
        this.input = input;
        this.root = new Root2();
        this.current = this.root;
        this.spaces = "";
        this.semicolon = false;
        this.customProperty = false;
        this.createTokenizer();
        this.root.source = { input, start: { offset: 0, line: 1, column: 1 } };
      }
      createTokenizer() {
        this.tokenizer = tokenizer(this.input);
      }
      parse() {
        let token;
        while (!this.tokenizer.endOfFile()) {
          token = this.tokenizer.nextToken();
          switch (token[0]) {
            case "space":
              this.spaces += token[1];
              break;
            case ";":
              this.freeSemicolon(token);
              break;
            case "}":
              this.end(token);
              break;
            case "comment":
              this.comment(token);
              break;
            case "at-word":
              this.atrule(token);
              break;
            case "{":
              this.emptyRule(token);
              break;
            default:
              this.other(token);
              break;
          }
        }
        this.endFile();
      }
      comment(token) {
        let node = new Comment2();
        this.init(node, token[2]);
        node.source.end = this.getPosition(token[3] || token[2]);
        let text = token[1].slice(2, -2);
        if (/^\s*$/.test(text)) {
          node.text = "";
          node.raws.left = text;
          node.raws.right = "";
        } else {
          let match = text.match(/^(\s*)([^]*\S)(\s*)$/);
          node.text = match[2];
          node.raws.left = match[1];
          node.raws.right = match[3];
        }
      }
      emptyRule(token) {
        let node = new Rule3();
        this.init(node, token[2]);
        node.selector = "";
        node.raws.between = "";
        this.current = node;
      }
      other(start) {
        let end = false;
        let type = null;
        let colon = false;
        let bracket = null;
        let brackets = [];
        let customProperty = start[1].startsWith("--");
        let tokens = [];
        let token = start;
        while (token) {
          type = token[0];
          tokens.push(token);
          if (type === "(" || type === "[") {
            if (!bracket)
              bracket = token;
            brackets.push(type === "(" ? ")" : "]");
          } else if (customProperty && colon && type === "{") {
            if (!bracket)
              bracket = token;
            brackets.push("}");
          } else if (brackets.length === 0) {
            if (type === ";") {
              if (colon) {
                this.decl(tokens, customProperty);
                return;
              } else {
                break;
              }
            } else if (type === "{") {
              this.rule(tokens);
              return;
            } else if (type === "}") {
              this.tokenizer.back(tokens.pop());
              end = true;
              break;
            } else if (type === ":") {
              colon = true;
            }
          } else if (type === brackets[brackets.length - 1]) {
            brackets.pop();
            if (brackets.length === 0)
              bracket = null;
          }
          token = this.tokenizer.nextToken();
        }
        if (this.tokenizer.endOfFile())
          end = true;
        if (brackets.length > 0)
          this.unclosedBracket(bracket);
        if (end && colon) {
          if (!customProperty) {
            while (tokens.length) {
              token = tokens[tokens.length - 1][0];
              if (token !== "space" && token !== "comment")
                break;
              this.tokenizer.back(tokens.pop());
            }
          }
          this.decl(tokens, customProperty);
        } else {
          this.unknownWord(tokens);
        }
      }
      rule(tokens) {
        tokens.pop();
        let node = new Rule3();
        this.init(node, tokens[0][2]);
        node.raws.between = this.spacesAndCommentsFromEnd(tokens);
        this.raw(node, "selector", tokens);
        this.current = node;
      }
      decl(tokens, customProperty) {
        let node = new Declaration3();
        this.init(node, tokens[0][2]);
        let last = tokens[tokens.length - 1];
        if (last[0] === ";") {
          this.semicolon = true;
          tokens.pop();
        }
        node.source.end = this.getPosition(
          last[3] || last[2] || findLastWithPosition(tokens)
        );
        while (tokens[0][0] !== "word") {
          if (tokens.length === 1)
            this.unknownWord(tokens);
          node.raws.before += tokens.shift()[1];
        }
        node.source.start = this.getPosition(tokens[0][2]);
        node.prop = "";
        while (tokens.length) {
          let type = tokens[0][0];
          if (type === ":" || type === "space" || type === "comment") {
            break;
          }
          node.prop += tokens.shift()[1];
        }
        node.raws.between = "";
        let token;
        while (tokens.length) {
          token = tokens.shift();
          if (token[0] === ":") {
            node.raws.between += token[1];
            break;
          } else {
            if (token[0] === "word" && /\w/.test(token[1])) {
              this.unknownWord([token]);
            }
            node.raws.between += token[1];
          }
        }
        if (node.prop[0] === "_" || node.prop[0] === "*") {
          node.raws.before += node.prop[0];
          node.prop = node.prop.slice(1);
        }
        let firstSpaces = [];
        let next;
        while (tokens.length) {
          next = tokens[0][0];
          if (next !== "space" && next !== "comment")
            break;
          firstSpaces.push(tokens.shift());
        }
        this.precheckMissedSemicolon(tokens);
        for (let i = tokens.length - 1; i >= 0; i--) {
          token = tokens[i];
          if (token[1].toLowerCase() === "!important") {
            node.important = true;
            let string = this.stringFrom(tokens, i);
            string = this.spacesFromEnd(tokens) + string;
            if (string !== " !important")
              node.raws.important = string;
            break;
          } else if (token[1].toLowerCase() === "important") {
            let cache = tokens.slice(0);
            let str = "";
            for (let j = i; j > 0; j--) {
              let type = cache[j][0];
              if (str.trim().indexOf("!") === 0 && type !== "space") {
                break;
              }
              str = cache.pop()[1] + str;
            }
            if (str.trim().indexOf("!") === 0) {
              node.important = true;
              node.raws.important = str;
              tokens = cache;
            }
          }
          if (token[0] !== "space" && token[0] !== "comment") {
            break;
          }
        }
        let hasWord = tokens.some((i) => i[0] !== "space" && i[0] !== "comment");
        if (hasWord) {
          node.raws.between += firstSpaces.map((i) => i[1]).join("");
          firstSpaces = [];
        }
        this.raw(node, "value", firstSpaces.concat(tokens), customProperty);
        if (node.value.includes(":") && !customProperty) {
          this.checkMissedSemicolon(tokens);
        }
      }
      atrule(token) {
        let node = new AtRule2();
        node.name = token[1].slice(1);
        if (node.name === "") {
          this.unnamedAtrule(node, token);
        }
        this.init(node, token[2]);
        let type;
        let prev;
        let shift;
        let last = false;
        let open = false;
        let params = [];
        let brackets = [];
        while (!this.tokenizer.endOfFile()) {
          token = this.tokenizer.nextToken();
          type = token[0];
          if (type === "(" || type === "[") {
            brackets.push(type === "(" ? ")" : "]");
          } else if (type === "{" && brackets.length > 0) {
            brackets.push("}");
          } else if (type === brackets[brackets.length - 1]) {
            brackets.pop();
          }
          if (brackets.length === 0) {
            if (type === ";") {
              node.source.end = this.getPosition(token[2]);
              this.semicolon = true;
              break;
            } else if (type === "{") {
              open = true;
              break;
            } else if (type === "}") {
              if (params.length > 0) {
                shift = params.length - 1;
                prev = params[shift];
                while (prev && prev[0] === "space") {
                  prev = params[--shift];
                }
                if (prev) {
                  node.source.end = this.getPosition(prev[3] || prev[2]);
                }
              }
              this.end(token);
              break;
            } else {
              params.push(token);
            }
          } else {
            params.push(token);
          }
          if (this.tokenizer.endOfFile()) {
            last = true;
            break;
          }
        }
        node.raws.between = this.spacesAndCommentsFromEnd(params);
        if (params.length) {
          node.raws.afterName = this.spacesAndCommentsFromStart(params);
          this.raw(node, "params", params);
          if (last) {
            token = params[params.length - 1];
            node.source.end = this.getPosition(token[3] || token[2]);
            this.spaces = node.raws.between;
            node.raws.between = "";
          }
        } else {
          node.raws.afterName = "";
          node.params = "";
        }
        if (open) {
          node.nodes = [];
          this.current = node;
        }
      }
      end(token) {
        if (this.current.nodes && this.current.nodes.length) {
          this.current.raws.semicolon = this.semicolon;
        }
        this.semicolon = false;
        this.current.raws.after = (this.current.raws.after || "") + this.spaces;
        this.spaces = "";
        if (this.current.parent) {
          this.current.source.end = this.getPosition(token[2]);
          this.current = this.current.parent;
        } else {
          this.unexpectedClose(token);
        }
      }
      endFile() {
        if (this.current.parent)
          this.unclosedBlock();
        if (this.current.nodes && this.current.nodes.length) {
          this.current.raws.semicolon = this.semicolon;
        }
        this.current.raws.after = (this.current.raws.after || "") + this.spaces;
      }
      freeSemicolon(token) {
        this.spaces += token[1];
        if (this.current.nodes) {
          let prev = this.current.nodes[this.current.nodes.length - 1];
          if (prev && prev.type === "rule" && !prev.raws.ownSemicolon) {
            prev.raws.ownSemicolon = this.spaces;
            this.spaces = "";
          }
        }
      }
      getPosition(offset) {
        let pos = this.input.fromOffset(offset);
        return {
          offset,
          line: pos.line,
          column: pos.col
        };
      }
      init(node, offset) {
        this.current.push(node);
        node.source = {
          start: this.getPosition(offset),
          input: this.input
        };
        node.raws.before = this.spaces;
        this.spaces = "";
        if (node.type !== "comment")
          this.semicolon = false;
      }
      raw(node, prop, tokens, customProperty) {
        let token, type;
        let length = tokens.length;
        let value = "";
        let clean = true;
        let next, prev;
        for (let i = 0; i < length; i += 1) {
          token = tokens[i];
          type = token[0];
          if (type === "space" && i === length - 1 && !customProperty) {
            clean = false;
          } else if (type === "comment") {
            prev = tokens[i - 1] ? tokens[i - 1][0] : "empty";
            next = tokens[i + 1] ? tokens[i + 1][0] : "empty";
            if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {
              if (value.slice(-1) === ",") {
                clean = false;
              } else {
                value += token[1];
              }
            } else {
              clean = false;
            }
          } else {
            value += token[1];
          }
        }
        if (!clean) {
          let raw = tokens.reduce((all, i) => all + i[1], "");
          node.raws[prop] = { value, raw };
        }
        node[prop] = value;
      }
      spacesAndCommentsFromEnd(tokens) {
        let lastTokenType;
        let spaces = "";
        while (tokens.length) {
          lastTokenType = tokens[tokens.length - 1][0];
          if (lastTokenType !== "space" && lastTokenType !== "comment")
            break;
          spaces = tokens.pop()[1] + spaces;
        }
        return spaces;
      }
      spacesAndCommentsFromStart(tokens) {
        let next;
        let spaces = "";
        while (tokens.length) {
          next = tokens[0][0];
          if (next !== "space" && next !== "comment")
            break;
          spaces += tokens.shift()[1];
        }
        return spaces;
      }
      spacesFromEnd(tokens) {
        let lastTokenType;
        let spaces = "";
        while (tokens.length) {
          lastTokenType = tokens[tokens.length - 1][0];
          if (lastTokenType !== "space")
            break;
          spaces = tokens.pop()[1] + spaces;
        }
        return spaces;
      }
      stringFrom(tokens, from) {
        let result = "";
        for (let i = from; i < tokens.length; i++) {
          result += tokens[i][1];
        }
        tokens.splice(from, tokens.length - from);
        return result;
      }
      colon(tokens) {
        let brackets = 0;
        let token, type, prev;
        for (let [i, element] of tokens.entries()) {
          token = element;
          type = token[0];
          if (type === "(") {
            brackets += 1;
          }
          if (type === ")") {
            brackets -= 1;
          }
          if (brackets === 0 && type === ":") {
            if (!prev) {
              this.doubleColon(token);
            } else if (prev[0] === "word" && prev[1] === "progid") {
              continue;
            } else {
              return i;
            }
          }
          prev = token;
        }
        return false;
      }
      unclosedBracket(bracket) {
        throw this.input.error(
          "Unclosed bracket",
          { offset: bracket[2] },
          { offset: bracket[2] + 1 }
        );
      }
      unknownWord(tokens) {
        throw this.input.error(
          "Unknown word",
          { offset: tokens[0][2] },
          { offset: tokens[0][2] + tokens[0][1].length }
        );
      }
      unexpectedClose(token) {
        throw this.input.error(
          "Unexpected }",
          { offset: token[2] },
          { offset: token[2] + 1 }
        );
      }
      unclosedBlock() {
        let pos = this.current.source.start;
        throw this.input.error("Unclosed block", pos.line, pos.column);
      }
      doubleColon(token) {
        throw this.input.error(
          "Double colon",
          { offset: token[2] },
          { offset: token[2] + token[1].length }
        );
      }
      unnamedAtrule(node, token) {
        throw this.input.error(
          "At-rule without name",
          { offset: token[2] },
          { offset: token[2] + token[1].length }
        );
      }
      precheckMissedSemicolon() {
      }
      checkMissedSemicolon(tokens) {
        let colon = this.colon(tokens);
        if (colon === false)
          return;
        let founded = 0;
        let token;
        for (let j = colon - 1; j >= 0; j--) {
          token = tokens[j];
          if (token[0] !== "space") {
            founded += 1;
            if (founded === 2)
              break;
          }
        }
        throw this.input.error(
          "Missed semicolon",
          token[0] === "word" ? token[3] + 1 : token[2]
        );
      }
    };
    module.exports = Parser;
  }
});
var require_parse2 = __commonJS({
  "../../node_modules/postcss/lib/parse.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Container2 = require_container();
    var Parser = require_parser();
    var Input2 = require_input();
    function parse2(css, opts) {
      let input = new Input2(css, opts);
      let parser = new Parser(input);
      try {
        parser.parse();
      } catch (e) {
        if (true) {
          if (e.name === "CssSyntaxError" && opts && opts.from) {
            if (/\.scss$/i.test(opts.from)) {
              e.message += "\nYou tried to parse SCSS with the standard CSS parser; try again with the postcss-scss parser";
            } else if (/\.sass/i.test(opts.from)) {
              e.message += "\nYou tried to parse Sass with the standard CSS parser; try again with the postcss-sass parser";
            } else if (/\.less$/i.test(opts.from)) {
              e.message += "\nYou tried to parse Less with the standard CSS parser; try again with the postcss-less parser";
            }
          }
        }
        throw e;
      }
      return parser.root;
    }
    module.exports = parse2;
    parse2.default = parse2;
    Container2.registerParse(parse2);
  }
});
var require_lazy_result = __commonJS({
  "../../node_modules/postcss/lib/lazy-result.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var { isClean, my } = require_symbols();
    var MapGenerator = require_map_generator();
    var stringify2 = require_stringify();
    var Container2 = require_container();
    var Document2 = require_document();
    var warnOnce = require_warn_once();
    var Result2 = require_result();
    var parse2 = require_parse2();
    var Root2 = require_root();
    var TYPE_TO_CLASS_NAME = {
      document: "Document",
      root: "Root",
      atrule: "AtRule",
      rule: "Rule",
      decl: "Declaration",
      comment: "Comment"
    };
    var PLUGIN_PROPS = {
      postcssPlugin: true,
      prepare: true,
      Once: true,
      Document: true,
      Root: true,
      Declaration: true,
      Rule: true,
      AtRule: true,
      Comment: true,
      DeclarationExit: true,
      RuleExit: true,
      AtRuleExit: true,
      CommentExit: true,
      RootExit: true,
      DocumentExit: true,
      OnceExit: true
    };
    var NOT_VISITORS = {
      postcssPlugin: true,
      prepare: true,
      Once: true
    };
    var CHILDREN = 0;
    function isPromise(obj) {
      return typeof obj === "object" && typeof obj.then === "function";
    }
    function getEvents(node) {
      let key = false;
      let type = TYPE_TO_CLASS_NAME[node.type];
      if (node.type === "decl") {
        key = node.prop.toLowerCase();
      } else if (node.type === "atrule") {
        key = node.name.toLowerCase();
      }
      if (key && node.append) {
        return [
          type,
          type + "-" + key,
          CHILDREN,
          type + "Exit",
          type + "Exit-" + key
        ];
      } else if (key) {
        return [type, type + "-" + key, type + "Exit", type + "Exit-" + key];
      } else if (node.append) {
        return [type, CHILDREN, type + "Exit"];
      } else {
        return [type, type + "Exit"];
      }
    }
    function toStack(node) {
      let events;
      if (node.type === "document") {
        events = ["Document", CHILDREN, "DocumentExit"];
      } else if (node.type === "root") {
        events = ["Root", CHILDREN, "RootExit"];
      } else {
        events = getEvents(node);
      }
      return {
        node,
        events,
        eventIndex: 0,
        visitors: [],
        visitorIndex: 0,
        iterator: 0
      };
    }
    function cleanMarks(node) {
      node[isClean] = false;
      if (node.nodes)
        node.nodes.forEach((i) => cleanMarks(i));
      return node;
    }
    var postcss2 = {};
    var LazyResult = class {
      constructor(processor, css, opts) {
        this.stringified = false;
        this.processed = false;
        let root2;
        if (typeof css === "object" && css !== null && (css.type === "root" || css.type === "document")) {
          root2 = cleanMarks(css);
        } else if (css instanceof LazyResult || css instanceof Result2) {
          root2 = cleanMarks(css.root);
          if (css.map) {
            if (typeof opts.map === "undefined")
              opts.map = {};
            if (!opts.map.inline)
              opts.map.inline = false;
            opts.map.prev = css.map;
          }
        } else {
          let parser = parse2;
          if (opts.syntax)
            parser = opts.syntax.parse;
          if (opts.parser)
            parser = opts.parser;
          if (parser.parse)
            parser = parser.parse;
          try {
            root2 = parser(css, opts);
          } catch (error) {
            this.processed = true;
            this.error = error;
          }
          if (root2 && !root2[my]) {
            Container2.rebuild(root2);
          }
        }
        this.result = new Result2(processor, root2, opts);
        this.helpers = { ...postcss2, result: this.result, postcss: postcss2 };
        this.plugins = this.processor.plugins.map((plugin2) => {
          if (typeof plugin2 === "object" && plugin2.prepare) {
            return { ...plugin2, ...plugin2.prepare(this.result) };
          } else {
            return plugin2;
          }
        });
      }
      get [Symbol.toStringTag]() {
        return "LazyResult";
      }
      get processor() {
        return this.result.processor;
      }
      get opts() {
        return this.result.opts;
      }
      get css() {
        return this.stringify().css;
      }
      get content() {
        return this.stringify().content;
      }
      get map() {
        return this.stringify().map;
      }
      get root() {
        return this.sync().root;
      }
      get messages() {
        return this.sync().messages;
      }
      warnings() {
        return this.sync().warnings();
      }
      toString() {
        return this.css;
      }
      then(onFulfilled, onRejected) {
        if (true) {
          if (!("from" in this.opts)) {
            warnOnce(
              "Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning."
            );
          }
        }
        return this.async().then(onFulfilled, onRejected);
      }
      catch(onRejected) {
        return this.async().catch(onRejected);
      }
      finally(onFinally) {
        return this.async().then(onFinally, onFinally);
      }
      async() {
        if (this.error)
          return Promise.reject(this.error);
        if (this.processed)
          return Promise.resolve(this.result);
        if (!this.processing) {
          this.processing = this.runAsync();
        }
        return this.processing;
      }
      sync() {
        if (this.error)
          throw this.error;
        if (this.processed)
          return this.result;
        this.processed = true;
        if (this.processing) {
          throw this.getAsyncError();
        }
        for (let plugin2 of this.plugins) {
          let promise = this.runOnRoot(plugin2);
          if (isPromise(promise)) {
            throw this.getAsyncError();
          }
        }
        this.prepareVisitors();
        if (this.hasListener) {
          let root2 = this.result.root;
          while (!root2[isClean]) {
            root2[isClean] = true;
            this.walkSync(root2);
          }
          if (this.listeners.OnceExit) {
            if (root2.type === "document") {
              for (let subRoot of root2.nodes) {
                this.visitSync(this.listeners.OnceExit, subRoot);
              }
            } else {
              this.visitSync(this.listeners.OnceExit, root2);
            }
          }
        }
        return this.result;
      }
      stringify() {
        if (this.error)
          throw this.error;
        if (this.stringified)
          return this.result;
        this.stringified = true;
        this.sync();
        let opts = this.result.opts;
        let str = stringify2;
        if (opts.syntax)
          str = opts.syntax.stringify;
        if (opts.stringifier)
          str = opts.stringifier;
        if (str.stringify)
          str = str.stringify;
        let map = new MapGenerator(str, this.result.root, this.result.opts);
        let data = map.generate();
        this.result.css = data[0];
        this.result.map = data[1];
        return this.result;
      }
      walkSync(node) {
        node[isClean] = true;
        let events = getEvents(node);
        for (let event of events) {
          if (event === CHILDREN) {
            if (node.nodes) {
              node.each((child) => {
                if (!child[isClean])
                  this.walkSync(child);
              });
            }
          } else {
            let visitors = this.listeners[event];
            if (visitors) {
              if (this.visitSync(visitors, node.toProxy()))
                return;
            }
          }
        }
      }
      visitSync(visitors, node) {
        for (let [plugin2, visitor] of visitors) {
          this.result.lastPlugin = plugin2;
          let promise;
          try {
            promise = visitor(node, this.helpers);
          } catch (e) {
            throw this.handleError(e, node.proxyOf);
          }
          if (node.type !== "root" && node.type !== "document" && !node.parent) {
            return true;
          }
          if (isPromise(promise)) {
            throw this.getAsyncError();
          }
        }
      }
      runOnRoot(plugin2) {
        this.result.lastPlugin = plugin2;
        try {
          if (typeof plugin2 === "object" && plugin2.Once) {
            if (this.result.root.type === "document") {
              let roots = this.result.root.nodes.map(
                (root2) => plugin2.Once(root2, this.helpers)
              );
              if (isPromise(roots[0])) {
                return Promise.all(roots);
              }
              return roots;
            }
            return plugin2.Once(this.result.root, this.helpers);
          } else if (typeof plugin2 === "function") {
            return plugin2(this.result.root, this.result);
          }
        } catch (error) {
          throw this.handleError(error);
        }
      }
      getAsyncError() {
        throw new Error("Use process(css).then(cb) to work with async plugins");
      }
      handleError(error, node) {
        let plugin2 = this.result.lastPlugin;
        try {
          if (node)
            node.addToError(error);
          this.error = error;
          if (error.name === "CssSyntaxError" && !error.plugin) {
            error.plugin = plugin2.postcssPlugin;
            error.setMessage();
          } else if (plugin2.postcssVersion) {
            if (true) {
              let pluginName = plugin2.postcssPlugin;
              let pluginVer = plugin2.postcssVersion;
              let runtimeVer = this.result.processor.version;
              let a = pluginVer.split(".");
              let b = runtimeVer.split(".");
              if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {
                console.error(
                  "Unknown error from PostCSS plugin. Your current PostCSS version is " + runtimeVer + ", but " + pluginName + " uses " + pluginVer + ". Perhaps this is the source of the error below."
                );
              }
            }
          }
        } catch (err) {
          if (console && console.error)
            console.error(err);
        }
        return error;
      }
      async runAsync() {
        this.plugin = 0;
        for (let i = 0; i < this.plugins.length; i++) {
          let plugin2 = this.plugins[i];
          let promise = this.runOnRoot(plugin2);
          if (isPromise(promise)) {
            try {
              await promise;
            } catch (error) {
              throw this.handleError(error);
            }
          }
        }
        this.prepareVisitors();
        if (this.hasListener) {
          let root2 = this.result.root;
          while (!root2[isClean]) {
            root2[isClean] = true;
            let stack = [toStack(root2)];
            while (stack.length > 0) {
              let promise = this.visitTick(stack);
              if (isPromise(promise)) {
                try {
                  await promise;
                } catch (e) {
                  let node = stack[stack.length - 1].node;
                  throw this.handleError(e, node);
                }
              }
            }
          }
          if (this.listeners.OnceExit) {
            for (let [plugin2, visitor] of this.listeners.OnceExit) {
              this.result.lastPlugin = plugin2;
              try {
                if (root2.type === "document") {
                  let roots = root2.nodes.map(
                    (subRoot) => visitor(subRoot, this.helpers)
                  );
                  await Promise.all(roots);
                } else {
                  await visitor(root2, this.helpers);
                }
              } catch (e) {
                throw this.handleError(e);
              }
            }
          }
        }
        this.processed = true;
        return this.stringify();
      }
      prepareVisitors() {
        this.listeners = {};
        let add = (plugin2, type, cb) => {
          if (!this.listeners[type])
            this.listeners[type] = [];
          this.listeners[type].push([plugin2, cb]);
        };
        for (let plugin2 of this.plugins) {
          if (typeof plugin2 === "object") {
            for (let event in plugin2) {
              if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {
                throw new Error(
                  `Unknown event ${event} in ${plugin2.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`
                );
              }
              if (!NOT_VISITORS[event]) {
                if (typeof plugin2[event] === "object") {
                  for (let filter in plugin2[event]) {
                    if (filter === "*") {
                      add(plugin2, event, plugin2[event][filter]);
                    } else {
                      add(
                        plugin2,
                        event + "-" + filter.toLowerCase(),
                        plugin2[event][filter]
                      );
                    }
                  }
                } else if (typeof plugin2[event] === "function") {
                  add(plugin2, event, plugin2[event]);
                }
              }
            }
          }
        }
        this.hasListener = Object.keys(this.listeners).length > 0;
      }
      visitTick(stack) {
        let visit = stack[stack.length - 1];
        let { node, visitors } = visit;
        if (node.type !== "root" && node.type !== "document" && !node.parent) {
          stack.pop();
          return;
        }
        if (visitors.length > 0 && visit.visitorIndex < visitors.length) {
          let [plugin2, visitor] = visitors[visit.visitorIndex];
          visit.visitorIndex += 1;
          if (visit.visitorIndex === visitors.length) {
            visit.visitors = [];
            visit.visitorIndex = 0;
          }
          this.result.lastPlugin = plugin2;
          try {
            return visitor(node.toProxy(), this.helpers);
          } catch (e) {
            throw this.handleError(e, node);
          }
        }
        if (visit.iterator !== 0) {
          let iterator = visit.iterator;
          let child;
          while (child = node.nodes[node.indexes[iterator]]) {
            node.indexes[iterator] += 1;
            if (!child[isClean]) {
              child[isClean] = true;
              stack.push(toStack(child));
              return;
            }
          }
          visit.iterator = 0;
          delete node.indexes[iterator];
        }
        let events = visit.events;
        while (visit.eventIndex < events.length) {
          let event = events[visit.eventIndex];
          visit.eventIndex += 1;
          if (event === CHILDREN) {
            if (node.nodes && node.nodes.length) {
              node[isClean] = true;
              visit.iterator = node.getIterator();
            }
            return;
          } else if (this.listeners[event]) {
            visit.visitors = this.listeners[event];
            return;
          }
        }
        stack.pop();
      }
    };
    LazyResult.registerPostcss = (dependant) => {
      postcss2 = dependant;
    };
    module.exports = LazyResult;
    LazyResult.default = LazyResult;
    Root2.registerLazyResult(LazyResult);
    Document2.registerLazyResult(LazyResult);
  }
});
var require_no_work_result = __commonJS({
  "../../node_modules/postcss/lib/no-work-result.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var MapGenerator = require_map_generator();
    var stringify2 = require_stringify();
    var warnOnce = require_warn_once();
    var parse2 = require_parse2();
    var Result2 = require_result();
    var NoWorkResult = class {
      constructor(processor, css, opts) {
        css = css.toString();
        this.stringified = false;
        this._processor = processor;
        this._css = css;
        this._opts = opts;
        this._map = void 0;
        let root2;
        let str = stringify2;
        this.result = new Result2(this._processor, root2, this._opts);
        this.result.css = css;
        let self2 = this;
        Object.defineProperty(this.result, "root", {
          get() {
            return self2.root;
          }
        });
        let map = new MapGenerator(str, root2, this._opts, css);
        if (map.isMap()) {
          let [generatedCSS, generatedMap] = map.generate();
          if (generatedCSS) {
            this.result.css = generatedCSS;
          }
          if (generatedMap) {
            this.result.map = generatedMap;
          }
        }
      }
      get [Symbol.toStringTag]() {
        return "NoWorkResult";
      }
      get processor() {
        return this.result.processor;
      }
      get opts() {
        return this.result.opts;
      }
      get css() {
        return this.result.css;
      }
      get content() {
        return this.result.css;
      }
      get map() {
        return this.result.map;
      }
      get root() {
        if (this._root) {
          return this._root;
        }
        let root2;
        let parser = parse2;
        try {
          root2 = parser(this._css, this._opts);
        } catch (error) {
          this.error = error;
        }
        if (this.error) {
          throw this.error;
        } else {
          this._root = root2;
          return root2;
        }
      }
      get messages() {
        return [];
      }
      warnings() {
        return [];
      }
      toString() {
        return this._css;
      }
      then(onFulfilled, onRejected) {
        if (true) {
          if (!("from" in this._opts)) {
            warnOnce(
              "Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning."
            );
          }
        }
        return this.async().then(onFulfilled, onRejected);
      }
      catch(onRejected) {
        return this.async().catch(onRejected);
      }
      finally(onFinally) {
        return this.async().then(onFinally, onFinally);
      }
      async() {
        if (this.error)
          return Promise.reject(this.error);
        return Promise.resolve(this.result);
      }
      sync() {
        if (this.error)
          throw this.error;
        return this.result;
      }
    };
    module.exports = NoWorkResult;
    NoWorkResult.default = NoWorkResult;
  }
});
var require_processor = __commonJS({
  "../../node_modules/postcss/lib/processor.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var NoWorkResult = require_no_work_result();
    var LazyResult = require_lazy_result();
    var Document2 = require_document();
    var Root2 = require_root();
    var Processor2 = class {
      constructor(plugins = []) {
        this.version = "8.4.17";
        this.plugins = this.normalize(plugins);
      }
      use(plugin2) {
        this.plugins = this.plugins.concat(this.normalize([plugin2]));
        return this;
      }
      process(css, opts = {}) {
        if (this.plugins.length === 0 && typeof opts.parser === "undefined" && typeof opts.stringifier === "undefined" && typeof opts.syntax === "undefined") {
          return new NoWorkResult(this, css, opts);
        } else {
          return new LazyResult(this, css, opts);
        }
      }
      normalize(plugins) {
        let normalized = [];
        for (let i of plugins) {
          if (i.postcss === true) {
            i = i();
          } else if (i.postcss) {
            i = i.postcss;
          }
          if (typeof i === "object" && Array.isArray(i.plugins)) {
            normalized = normalized.concat(i.plugins);
          } else if (typeof i === "object" && i.postcssPlugin) {
            normalized.push(i);
          } else if (typeof i === "function") {
            normalized.push(i);
          } else if (typeof i === "object" && (i.parse || i.stringify)) {
            if (true) {
              throw new Error(
                "PostCSS syntaxes cannot be used as plugins. Instead, please use one of the syntax/parser/stringifier options as outlined in your PostCSS runner documentation."
              );
            }
          } else {
            throw new Error(i + " is not a PostCSS plugin");
          }
        }
        return normalized;
      }
    };
    module.exports = Processor2;
    Processor2.default = Processor2;
    Root2.registerProcessor(Processor2);
    Document2.registerProcessor(Processor2);
  }
});
var require_fromJSON = __commonJS({
  "../../node_modules/postcss/lib/fromJSON.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Declaration3 = require_declaration();
    var PreviousMap = require_previous_map();
    var Comment2 = require_comment();
    var AtRule2 = require_at_rule();
    var Input2 = require_input();
    var Root2 = require_root();
    var Rule3 = require_rule();
    function fromJSON2(json, inputs) {
      if (Array.isArray(json))
        return json.map((n) => fromJSON2(n));
      let { inputs: ownInputs, ...defaults } = json;
      if (ownInputs) {
        inputs = [];
        for (let input of ownInputs) {
          let inputHydrated = { ...input, __proto__: Input2.prototype };
          if (inputHydrated.map) {
            inputHydrated.map = {
              ...inputHydrated.map,
              __proto__: PreviousMap.prototype
            };
          }
          inputs.push(inputHydrated);
        }
      }
      if (defaults.nodes) {
        defaults.nodes = json.nodes.map((n) => fromJSON2(n, inputs));
      }
      if (defaults.source) {
        let { inputId, ...source } = defaults.source;
        defaults.source = source;
        if (inputId != null) {
          defaults.source.input = inputs[inputId];
        }
      }
      if (defaults.type === "root") {
        return new Root2(defaults);
      } else if (defaults.type === "decl") {
        return new Declaration3(defaults);
      } else if (defaults.type === "rule") {
        return new Rule3(defaults);
      } else if (defaults.type === "comment") {
        return new Comment2(defaults);
      } else if (defaults.type === "atrule") {
        return new AtRule2(defaults);
      } else {
        throw new Error("Unknown node type: " + json.type);
      }
    }
    module.exports = fromJSON2;
    fromJSON2.default = fromJSON2;
  }
});
var require_postcss = __commonJS({
  "../../node_modules/postcss/lib/postcss.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var CssSyntaxError2 = require_css_syntax_error();
    var Declaration3 = require_declaration();
    var LazyResult = require_lazy_result();
    var Container2 = require_container();
    var Processor2 = require_processor();
    var stringify2 = require_stringify();
    var fromJSON2 = require_fromJSON();
    var Document2 = require_document();
    var Warning2 = require_warning();
    var Comment2 = require_comment();
    var AtRule2 = require_at_rule();
    var Result2 = require_result();
    var Input2 = require_input();
    var parse2 = require_parse2();
    var list2 = require_list();
    var Rule3 = require_rule();
    var Root2 = require_root();
    var Node2 = require_node();
    function postcss2(...plugins) {
      if (plugins.length === 1 && Array.isArray(plugins[0])) {
        plugins = plugins[0];
      }
      return new Processor2(plugins);
    }
    postcss2.plugin = function plugin2(name, initializer) {
      let warningPrinted = false;
      function creator(...args) {
        if (console && console.warn && !warningPrinted) {
          warningPrinted = true;
          console.warn(
            name + ": postcss.plugin was deprecated. Migration guide:\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration"
          );
          if (process.env.LANG && process.env.LANG.startsWith("cn")) {
            console.warn(
              name + ": \u91CC\u9762 postcss.plugin \u88AB\u5F03\u7528. \u8FC1\u79FB\u6307\u5357:\nhttps://www.w3ctech.com/topic/2226"
            );
          }
        }
        let transformer = initializer(...args);
        transformer.postcssPlugin = name;
        transformer.postcssVersion = new Processor2().version;
        return transformer;
      }
      let cache;
      Object.defineProperty(creator, "postcss", {
        get() {
          if (!cache)
            cache = creator();
          return cache;
        }
      });
      creator.process = function(css, processOpts, pluginOpts) {
        return postcss2([creator(pluginOpts)]).process(css, processOpts);
      };
      return creator;
    };
    postcss2.stringify = stringify2;
    postcss2.parse = parse2;
    postcss2.fromJSON = fromJSON2;
    postcss2.list = list2;
    postcss2.comment = (defaults) => new Comment2(defaults);
    postcss2.atRule = (defaults) => new AtRule2(defaults);
    postcss2.decl = (defaults) => new Declaration3(defaults);
    postcss2.rule = (defaults) => new Rule3(defaults);
    postcss2.root = (defaults) => new Root2(defaults);
    postcss2.document = (defaults) => new Document2(defaults);
    postcss2.CssSyntaxError = CssSyntaxError2;
    postcss2.Declaration = Declaration3;
    postcss2.Container = Container2;
    postcss2.Processor = Processor2;
    postcss2.Document = Document2;
    postcss2.Comment = Comment2;
    postcss2.Warning = Warning2;
    postcss2.AtRule = AtRule2;
    postcss2.Result = Result2;
    postcss2.Input = Input2;
    postcss2.Rule = Rule3;
    postcss2.Root = Root2;
    postcss2.Node = Node2;
    LazyResult.registerPostcss(postcss2);
    module.exports = postcss2;
    postcss2.default = postcss2;
  }
});
var require_utils = __commonJS({
  "../../node_modules/autoprefixer/lib/utils.js"(exports, module) {
    init_process();
    init_buffer();
    var { list: list2 } = require_postcss();
    module.exports.error = function(text) {
      let err = new Error(text);
      err.autoprefixer = true;
      throw err;
    };
    module.exports.uniq = function(array) {
      return [...new Set(array)];
    };
    module.exports.removeNote = function(string) {
      if (!string.includes(" ")) {
        return string;
      }
      return string.split(" ")[0];
    };
    module.exports.escapeRegexp = function(string) {
      return string.replace(/[$()*+-.?[\\\]^{|}]/g, "\\$&");
    };
    module.exports.regexp = function(word, escape2 = true) {
      if (escape2) {
        word = this.escapeRegexp(word);
      }
      return new RegExp(`(^|[\\s,(])(${word}($|[\\s(,]))`, "gi");
    };
    module.exports.editList = function(value, callback) {
      let origin = list2.comma(value);
      let changed = callback(origin, []);
      if (origin === changed) {
        return value;
      }
      let join = value.match(/,\s*/);
      join = join ? join[0] : ", ";
      return changed.join(join);
    };
    module.exports.splitSelector = function(selector) {
      return list2.comma(selector).map((i) => {
        return list2.space(i).map((k) => {
          return k.split(/(?=\.|#)/g);
        });
      });
    };
    module.exports.isPureNumber = function(value) {
      if (typeof value === "number") {
        return true;
      }
      if (typeof value === "string") {
        return /^[0-9]+$/.test(value);
      }
      return false;
    };
  }
});
var require_browsers3 = __commonJS({
  "../../node_modules/autoprefixer/lib/browsers.js"(exports, module) {
    init_process();
    init_buffer();
    var browserslist = require_browserslist();
    var agents = require_unpacker().agents;
    var utils = require_utils();
    var Browsers = class {
      static prefixes() {
        if (this.prefixesCache) {
          return this.prefixesCache;
        }
        this.prefixesCache = [];
        for (let name in agents) {
          this.prefixesCache.push(`-${agents[name].prefix}-`);
        }
        this.prefixesCache = utils.uniq(this.prefixesCache).sort((a, b) => b.length - a.length);
        return this.prefixesCache;
      }
      static withPrefix(value) {
        if (!this.prefixesRegexp) {
          this.prefixesRegexp = new RegExp(this.prefixes().join("|"));
        }
        return this.prefixesRegexp.test(value);
      }
      constructor(data, requirements, options, browserslistOpts) {
        this.data = data;
        this.options = options || {};
        this.browserslistOpts = browserslistOpts || {};
        this.selected = this.parse(requirements);
      }
      parse(requirements) {
        let opts = {};
        for (let i in this.browserslistOpts) {
          opts[i] = this.browserslistOpts[i];
        }
        opts.path = this.options.from;
        return browserslist(requirements, opts);
      }
      prefix(browser) {
        let [name, version] = browser.split(" ");
        let data = this.data[name];
        let prefix = data.prefix_exceptions && data.prefix_exceptions[version];
        if (!prefix) {
          prefix = data.prefix;
        }
        return `-${prefix}-`;
      }
      isSelected(browser) {
        return this.selected.includes(browser);
      }
    };
    module.exports = Browsers;
  }
});
var require_vendor = __commonJS({
  "../../node_modules/autoprefixer/lib/vendor.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = {
      prefix(prop) {
        let match = prop.match(/^(-\w+-)/);
        if (match) {
          return match[0];
        }
        return "";
      },
      unprefixed(prop) {
        return prop.replace(/^-\w+-/, "");
      }
    };
  }
});
var require_prefixer = __commonJS({
  "../../node_modules/autoprefixer/lib/prefixer.js"(exports, module) {
    init_process();
    init_buffer();
    var Browsers = require_browsers3();
    var vendor = require_vendor();
    var utils = require_utils();
    function clone(obj, parent) {
      let cloned = new obj.constructor();
      for (let i of Object.keys(obj || {})) {
        let value = obj[i];
        if (i === "parent" && typeof value === "object") {
          if (parent) {
            cloned[i] = parent;
          }
        } else if (i === "source" || i === null) {
          cloned[i] = value;
        } else if (Array.isArray(value)) {
          cloned[i] = value.map((x) => clone(x, cloned));
        } else if (i !== "_autoprefixerPrefix" && i !== "_autoprefixerValues" && i !== "proxyCache") {
          if (typeof value === "object" && value !== null) {
            value = clone(value, cloned);
          }
          cloned[i] = value;
        }
      }
      return cloned;
    }
    var Prefixer = class {
      static hack(klass) {
        if (!this.hacks) {
          this.hacks = {};
        }
        return klass.names.map((name) => {
          this.hacks[name] = klass;
          return this.hacks[name];
        });
      }
      static load(name, prefixes, all) {
        let Klass = this.hacks && this.hacks[name];
        if (Klass) {
          return new Klass(name, prefixes, all);
        } else {
          return new this(name, prefixes, all);
        }
      }
      static clone(node, overrides) {
        let cloned = clone(node);
        for (let name in overrides) {
          cloned[name] = overrides[name];
        }
        return cloned;
      }
      constructor(name, prefixes, all) {
        this.prefixes = prefixes;
        this.name = name;
        this.all = all;
      }
      parentPrefix(node) {
        let prefix;
        if (typeof node._autoprefixerPrefix !== "undefined") {
          prefix = node._autoprefixerPrefix;
        } else if (node.type === "decl" && node.prop[0] === "-") {
          prefix = vendor.prefix(node.prop);
        } else if (node.type === "root") {
          prefix = false;
        } else if (node.type === "rule" && node.selector.includes(":-") && /:(-\w+-)/.test(node.selector)) {
          prefix = node.selector.match(/:(-\w+-)/)[1];
        } else if (node.type === "atrule" && node.name[0] === "-") {
          prefix = vendor.prefix(node.name);
        } else {
          prefix = this.parentPrefix(node.parent);
        }
        if (!Browsers.prefixes().includes(prefix)) {
          prefix = false;
        }
        node._autoprefixerPrefix = prefix;
        return node._autoprefixerPrefix;
      }
      process(node, result) {
        if (!this.check(node)) {
          return void 0;
        }
        let parent = this.parentPrefix(node);
        let prefixes = this.prefixes.filter(
          (prefix) => !parent || parent === utils.removeNote(prefix)
        );
        let added = [];
        for (let prefix of prefixes) {
          if (this.add(node, prefix, added.concat([prefix]), result)) {
            added.push(prefix);
          }
        }
        return added;
      }
      clone(node, overrides) {
        return Prefixer.clone(node, overrides);
      }
    };
    module.exports = Prefixer;
  }
});
var require_declaration2 = __commonJS({
  "../../node_modules/autoprefixer/lib/declaration.js"(exports, module) {
    init_process();
    init_buffer();
    var Prefixer = require_prefixer();
    var Browsers = require_browsers3();
    var utils = require_utils();
    var Declaration3 = class extends Prefixer {
      check() {
        return true;
      }
      prefixed(prop, prefix) {
        return prefix + prop;
      }
      normalize(prop) {
        return prop;
      }
      otherPrefixes(value, prefix) {
        for (let other of Browsers.prefixes()) {
          if (other === prefix) {
            continue;
          }
          if (value.includes(other)) {
            return true;
          }
        }
        return false;
      }
      set(decl2, prefix) {
        decl2.prop = this.prefixed(decl2.prop, prefix);
        return decl2;
      }
      needCascade(decl2) {
        if (!decl2._autoprefixerCascade) {
          decl2._autoprefixerCascade = this.all.options.cascade !== false && decl2.raw("before").includes("\n");
        }
        return decl2._autoprefixerCascade;
      }
      maxPrefixed(prefixes, decl2) {
        if (decl2._autoprefixerMax) {
          return decl2._autoprefixerMax;
        }
        let max = 0;
        for (let prefix of prefixes) {
          prefix = utils.removeNote(prefix);
          if (prefix.length > max) {
            max = prefix.length;
          }
        }
        decl2._autoprefixerMax = max;
        return decl2._autoprefixerMax;
      }
      calcBefore(prefixes, decl2, prefix = "") {
        let max = this.maxPrefixed(prefixes, decl2);
        let diff = max - utils.removeNote(prefix).length;
        let before = decl2.raw("before");
        if (diff > 0) {
          before += Array(diff).fill(" ").join("");
        }
        return before;
      }
      restoreBefore(decl2) {
        let lines = decl2.raw("before").split("\n");
        let min = lines[lines.length - 1];
        this.all.group(decl2).up((prefixed) => {
          let array = prefixed.raw("before").split("\n");
          let last = array[array.length - 1];
          if (last.length < min.length) {
            min = last;
          }
        });
        lines[lines.length - 1] = min;
        decl2.raws.before = lines.join("\n");
      }
      insert(decl2, prefix, prefixes) {
        let cloned = this.set(this.clone(decl2), prefix);
        if (!cloned)
          return void 0;
        let already = decl2.parent.some(
          (i) => i.prop === cloned.prop && i.value === cloned.value
        );
        if (already) {
          return void 0;
        }
        if (this.needCascade(decl2)) {
          cloned.raws.before = this.calcBefore(prefixes, decl2, prefix);
        }
        return decl2.parent.insertBefore(decl2, cloned);
      }
      isAlready(decl2, prefixed) {
        let already = this.all.group(decl2).up((i) => i.prop === prefixed);
        if (!already) {
          already = this.all.group(decl2).down((i) => i.prop === prefixed);
        }
        return already;
      }
      add(decl2, prefix, prefixes, result) {
        let prefixed = this.prefixed(decl2.prop, prefix);
        if (this.isAlready(decl2, prefixed) || this.otherPrefixes(decl2.value, prefix)) {
          return void 0;
        }
        return this.insert(decl2, prefix, prefixes, result);
      }
      process(decl2, result) {
        if (!this.needCascade(decl2)) {
          super.process(decl2, result);
          return;
        }
        let prefixes = super.process(decl2, result);
        if (!prefixes || !prefixes.length) {
          return;
        }
        this.restoreBefore(decl2);
        decl2.raws.before = this.calcBefore(prefixes, decl2);
      }
      old(prop, prefix) {
        return [this.prefixed(prop, prefix)];
      }
    };
    module.exports = Declaration3;
  }
});
var require_fraction = __commonJS({
  "../../node_modules/fraction.js/fraction.js"(exports, module) {
    init_process();
    init_buffer();
    (function(root2) {
      "use strict";
      var MAX_CYCLE_LEN = 2e3;
      var P = {
        "s": 1,
        "n": 0,
        "d": 1
      };
      function assign(n, s) {
        if (isNaN(n = parseInt(n, 10))) {
          throw Fraction["InvalidParameter"];
        }
        return n * s;
      }
      function newFraction(n, d) {
        if (d === 0) {
          throw Fraction["DivisionByZero"];
        }
        var f = Object.create(Fraction.prototype);
        f["s"] = n < 0 ? -1 : 1;
        n = n < 0 ? -n : n;
        var a = gcd(n, d);
        f["n"] = n / a;
        f["d"] = d / a;
        return f;
      }
      function factorize(num) {
        var factors = {};
        var n = num;
        var i = 2;
        var s = 4;
        while (s <= n) {
          while (n % i === 0) {
            n /= i;
            factors[i] = (factors[i] || 0) + 1;
          }
          s += 1 + 2 * i++;
        }
        if (n !== num) {
          if (n > 1)
            factors[n] = (factors[n] || 0) + 1;
        } else {
          factors[num] = (factors[num] || 0) + 1;
        }
        return factors;
      }
      var parse2 = function(p1, p2) {
        var n = 0, d = 1, s = 1;
        var v = 0, w = 0, x = 0, y = 1, z = 1;
        var A = 0, B = 1;
        var C = 1, D = 1;
        var N = 1e7;
        var M;
        if (p1 === void 0 || p1 === null) {
        } else if (p2 !== void 0) {
          n = p1;
          d = p2;
          s = n * d;
          if (n % 1 !== 0 || d % 1 !== 0) {
            throw Fraction["NonIntegerParameter"];
          }
        } else
          switch (typeof p1) {
            case "object": {
              if ("d" in p1 && "n" in p1) {
                n = p1["n"];
                d = p1["d"];
                if ("s" in p1)
                  n *= p1["s"];
              } else if (0 in p1) {
                n = p1[0];
                if (1 in p1)
                  d = p1[1];
              } else {
                throw Fraction["InvalidParameter"];
              }
              s = n * d;
              break;
            }
            case "number": {
              if (p1 < 0) {
                s = p1;
                p1 = -p1;
              }
              if (p1 % 1 === 0) {
                n = p1;
              } else if (p1 > 0) {
                if (p1 >= 1) {
                  z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));
                  p1 /= z;
                }
                while (B <= N && D <= N) {
                  M = (A + C) / (B + D);
                  if (p1 === M) {
                    if (B + D <= N) {
                      n = A + C;
                      d = B + D;
                    } else if (D > B) {
                      n = C;
                      d = D;
                    } else {
                      n = A;
                      d = B;
                    }
                    break;
                  } else {
                    if (p1 > M) {
                      A += C;
                      B += D;
                    } else {
                      C += A;
                      D += B;
                    }
                    if (B > N) {
                      n = C;
                      d = D;
                    } else {
                      n = A;
                      d = B;
                    }
                  }
                }
                n *= z;
              } else if (isNaN(p1) || isNaN(p2)) {
                d = n = NaN;
              }
              break;
            }
            case "string": {
              B = p1.match(/\d+|./g);
              if (B === null)
                throw Fraction["InvalidParameter"];
              if (B[A] === "-") {
                s = -1;
                A++;
              } else if (B[A] === "+") {
                A++;
              }
              if (B.length === A + 1) {
                w = assign(B[A++], s);
              } else if (B[A + 1] === "." || B[A] === ".") {
                if (B[A] !== ".") {
                  v = assign(B[A++], s);
                }
                A++;
                if (A + 1 === B.length || B[A + 1] === "(" && B[A + 3] === ")" || B[A + 1] === "'" && B[A + 3] === "'") {
                  w = assign(B[A], s);
                  y = Math.pow(10, B[A].length);
                  A++;
                }
                if (B[A] === "(" && B[A + 2] === ")" || B[A] === "'" && B[A + 2] === "'") {
                  x = assign(B[A + 1], s);
                  z = Math.pow(10, B[A + 1].length) - 1;
                  A += 3;
                }
              } else if (B[A + 1] === "/" || B[A + 1] === ":") {
                w = assign(B[A], s);
                y = assign(B[A + 2], 1);
                A += 3;
              } else if (B[A + 3] === "/" && B[A + 1] === " ") {
                v = assign(B[A], s);
                w = assign(B[A + 2], s);
                y = assign(B[A + 4], 1);
                A += 5;
              }
              if (B.length <= A) {
                d = y * z;
                s = n = x + d * v + z * w;
                break;
              }
            }
            default:
              throw Fraction["InvalidParameter"];
          }
        if (d === 0) {
          throw Fraction["DivisionByZero"];
        }
        P["s"] = s < 0 ? -1 : 1;
        P["n"] = Math.abs(n);
        P["d"] = Math.abs(d);
      };
      function modpow(b, e, m) {
        var r = 1;
        for (; e > 0; b = b * b % m, e >>= 1) {
          if (e & 1) {
            r = r * b % m;
          }
        }
        return r;
      }
      function cycleLen(n, d) {
        for (; d % 2 === 0; d /= 2) {
        }
        for (; d % 5 === 0; d /= 5) {
        }
        if (d === 1)
          return 0;
        var rem = 10 % d;
        var t = 1;
        for (; rem !== 1; t++) {
          rem = rem * 10 % d;
          if (t > MAX_CYCLE_LEN)
            return 0;
        }
        return t;
      }
      function cycleStart(n, d, len) {
        var rem1 = 1;
        var rem2 = modpow(10, len, d);
        for (var t = 0; t < 300; t++) {
          if (rem1 === rem2)
            return t;
          rem1 = rem1 * 10 % d;
          rem2 = rem2 * 10 % d;
        }
        return 0;
      }
      function gcd(a, b) {
        if (!a)
          return b;
        if (!b)
          return a;
        while (1) {
          a %= b;
          if (!a)
            return b;
          b %= a;
          if (!b)
            return a;
        }
      }
      ;
      function Fraction(a, b) {
        parse2(a, b);
        if (this instanceof Fraction) {
          a = gcd(P["d"], P["n"]);
          this["s"] = P["s"];
          this["n"] = P["n"] / a;
          this["d"] = P["d"] / a;
        } else {
          return newFraction(P["s"] * P["n"], P["d"]);
        }
      }
      Fraction["DivisionByZero"] = new Error("Division by Zero");
      Fraction["InvalidParameter"] = new Error("Invalid argument");
      Fraction["NonIntegerParameter"] = new Error("Parameters must be integer");
      Fraction.prototype = {
        "s": 1,
        "n": 0,
        "d": 1,
        "abs": function() {
          return newFraction(this["n"], this["d"]);
        },
        "neg": function() {
          return newFraction(-this["s"] * this["n"], this["d"]);
        },
        "add": function(a, b) {
          parse2(a, b);
          return newFraction(
            this["s"] * this["n"] * P["d"] + P["s"] * this["d"] * P["n"],
            this["d"] * P["d"]
          );
        },
        "sub": function(a, b) {
          parse2(a, b);
          return newFraction(
            this["s"] * this["n"] * P["d"] - P["s"] * this["d"] * P["n"],
            this["d"] * P["d"]
          );
        },
        "mul": function(a, b) {
          parse2(a, b);
          return newFraction(
            this["s"] * P["s"] * this["n"] * P["n"],
            this["d"] * P["d"]
          );
        },
        "div": function(a, b) {
          parse2(a, b);
          return newFraction(
            this["s"] * P["s"] * this["n"] * P["d"],
            this["d"] * P["n"]
          );
        },
        "clone": function() {
          return newFraction(this["s"] * this["n"], this["d"]);
        },
        "mod": function(a, b) {
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return new Fraction(NaN);
          }
          if (a === void 0) {
            return newFraction(this["s"] * this["n"] % this["d"], 1);
          }
          parse2(a, b);
          if (0 === P["n"] && 0 === this["d"]) {
            throw Fraction["DivisionByZero"];
          }
          return newFraction(
            this["s"] * (P["d"] * this["n"]) % (P["n"] * this["d"]),
            P["d"] * this["d"]
          );
        },
        "gcd": function(a, b) {
          parse2(a, b);
          return newFraction(gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]), P["d"] * this["d"]);
        },
        "lcm": function(a, b) {
          parse2(a, b);
          if (P["n"] === 0 && this["n"] === 0) {
            return newFraction(0, 1);
          }
          return newFraction(P["n"] * this["n"], gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]));
        },
        "ceil": function(places) {
          places = Math.pow(10, places || 0);
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return new Fraction(NaN);
          }
          return newFraction(Math.ceil(places * this["s"] * this["n"] / this["d"]), places);
        },
        "floor": function(places) {
          places = Math.pow(10, places || 0);
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return new Fraction(NaN);
          }
          return newFraction(Math.floor(places * this["s"] * this["n"] / this["d"]), places);
        },
        "round": function(places) {
          places = Math.pow(10, places || 0);
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return new Fraction(NaN);
          }
          return newFraction(Math.round(places * this["s"] * this["n"] / this["d"]), places);
        },
        "inverse": function() {
          return newFraction(this["s"] * this["d"], this["n"]);
        },
        "pow": function(a, b) {
          parse2(a, b);
          if (P["d"] === 1) {
            if (P["s"] < 0) {
              return newFraction(Math.pow(this["s"] * this["d"], P["n"]), Math.pow(this["n"], P["n"]));
            } else {
              return newFraction(Math.pow(this["s"] * this["n"], P["n"]), Math.pow(this["d"], P["n"]));
            }
          }
          if (this["s"] < 0)
            return null;
          var N = factorize(this["n"]);
          var D = factorize(this["d"]);
          var n = 1;
          var d = 1;
          for (var k in N) {
            if (k === "1")
              continue;
            if (k === "0") {
              n = 0;
              break;
            }
            N[k] *= P["n"];
            if (N[k] % P["d"] === 0) {
              N[k] /= P["d"];
            } else
              return null;
            n *= Math.pow(k, N[k]);
          }
          for (var k in D) {
            if (k === "1")
              continue;
            D[k] *= P["n"];
            if (D[k] % P["d"] === 0) {
              D[k] /= P["d"];
            } else
              return null;
            d *= Math.pow(k, D[k]);
          }
          if (P["s"] < 0) {
            return newFraction(d, n);
          }
          return newFraction(n, d);
        },
        "equals": function(a, b) {
          parse2(a, b);
          return this["s"] * this["n"] * P["d"] === P["s"] * P["n"] * this["d"];
        },
        "compare": function(a, b) {
          parse2(a, b);
          var t = this["s"] * this["n"] * P["d"] - P["s"] * P["n"] * this["d"];
          return (0 < t) - (t < 0);
        },
        "simplify": function(eps) {
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return this;
          }
          eps = eps || 1e-3;
          var thisABS = this["abs"]();
          var cont = thisABS["toContinued"]();
          for (var i = 1; i < cont.length; i++) {
            var s = newFraction(cont[i - 1], 1);
            for (var k = i - 2; k >= 0; k--) {
              s = s["inverse"]()["add"](cont[k]);
            }
            if (s["sub"](thisABS)["abs"]().valueOf() < eps) {
              return s["mul"](this["s"]);
            }
          }
          return this;
        },
        "divisible": function(a, b) {
          parse2(a, b);
          return !(!(P["n"] * this["d"]) || this["n"] * P["d"] % (P["n"] * this["d"]));
        },
        "valueOf": function() {
          return this["s"] * this["n"] / this["d"];
        },
        "toFraction": function(excludeWhole) {
          var whole, str = "";
          var n = this["n"];
          var d = this["d"];
          if (this["s"] < 0) {
            str += "-";
          }
          if (d === 1) {
            str += n;
          } else {
            if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
              str += whole;
              str += " ";
              n %= d;
            }
            str += n;
            str += "/";
            str += d;
          }
          return str;
        },
        "toLatex": function(excludeWhole) {
          var whole, str = "";
          var n = this["n"];
          var d = this["d"];
          if (this["s"] < 0) {
            str += "-";
          }
          if (d === 1) {
            str += n;
          } else {
            if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
              str += whole;
              n %= d;
            }
            str += "\\frac{";
            str += n;
            str += "}{";
            str += d;
            str += "}";
          }
          return str;
        },
        "toContinued": function() {
          var t;
          var a = this["n"];
          var b = this["d"];
          var res = [];
          if (isNaN(a) || isNaN(b)) {
            return res;
          }
          do {
            res.push(Math.floor(a / b));
            t = a % b;
            a = b;
            b = t;
          } while (a !== 1);
          return res;
        },
        "toString": function(dec) {
          var N = this["n"];
          var D = this["d"];
          if (isNaN(N) || isNaN(D)) {
            return "NaN";
          }
          dec = dec || 15;
          var cycLen = cycleLen(N, D);
          var cycOff = cycleStart(N, D, cycLen);
          var str = this["s"] < 0 ? "-" : "";
          str += N / D | 0;
          N %= D;
          N *= 10;
          if (N)
            str += ".";
          if (cycLen) {
            for (var i = cycOff; i--; ) {
              str += N / D | 0;
              N %= D;
              N *= 10;
            }
            str += "(";
            for (var i = cycLen; i--; ) {
              str += N / D | 0;
              N %= D;
              N *= 10;
            }
            str += ")";
          } else {
            for (var i = dec; N && i--; ) {
              str += N / D | 0;
              N %= D;
              N *= 10;
            }
          }
          return str;
        }
      };
      if (typeof define === "function" && define["amd"]) {
        define([], function() {
          return Fraction;
        });
      } else if (typeof exports === "object") {
        Object.defineProperty(Fraction, "__esModule", { "value": true });
        Fraction["default"] = Fraction;
        Fraction["Fraction"] = Fraction;
        module["exports"] = Fraction;
      } else {
        root2["Fraction"] = Fraction;
      }
    })(exports);
  }
});
var require_resolution = __commonJS({
  "../../node_modules/autoprefixer/lib/resolution.js"(exports, module) {
    init_process();
    init_buffer();
    var FractionJs = require_fraction();
    var Prefixer = require_prefixer();
    var utils = require_utils();
    var REGEXP = /(min|max)-resolution\s*:\s*\d*\.?\d+(dppx|dpcm|dpi|x)/gi;
    var SPLIT = /(min|max)-resolution(\s*:\s*)(\d*\.?\d+)(dppx|dpcm|dpi|x)/i;
    var Resolution = class extends Prefixer {
      prefixName(prefix, name) {
        if (prefix === "-moz-") {
          return name + "--moz-device-pixel-ratio";
        } else {
          return prefix + name + "-device-pixel-ratio";
        }
      }
      prefixQuery(prefix, name, colon, value, units) {
        value = new FractionJs(value);
        if (units === "dpi") {
          value = value.div(96);
        } else if (units === "dpcm") {
          value = value.mul(2.54).div(96);
        }
        value = value.simplify();
        if (prefix === "-o-") {
          value = value.n + "/" + value.d;
        }
        return this.prefixName(prefix, name) + colon + value;
      }
      clean(rule2) {
        if (!this.bad) {
          this.bad = [];
          for (let prefix of this.prefixes) {
            this.bad.push(this.prefixName(prefix, "min"));
            this.bad.push(this.prefixName(prefix, "max"));
          }
        }
        rule2.params = utils.editList(rule2.params, (queries) => {
          return queries.filter((query) => this.bad.every((i) => !query.includes(i)));
        });
      }
      process(rule2) {
        let parent = this.parentPrefix(rule2);
        let prefixes = parent ? [parent] : this.prefixes;
        rule2.params = utils.editList(rule2.params, (origin, prefixed) => {
          for (let query of origin) {
            if (!query.includes("min-resolution") && !query.includes("max-resolution")) {
              prefixed.push(query);
              continue;
            }
            for (let prefix of prefixes) {
              let processed = query.replace(REGEXP, (str) => {
                let parts = str.match(SPLIT);
                return this.prefixQuery(
                  prefix,
                  parts[1],
                  parts[2],
                  parts[3],
                  parts[4]
                );
              });
              prefixed.push(processed);
            }
            prefixed.push(query);
          }
          return utils.uniq(prefixed);
        });
      }
    };
    module.exports = Resolution;
  }
});
var require_parse3 = __commonJS({
  "../../node_modules/postcss-value-parser/lib/parse.js"(exports, module) {
    init_process();
    init_buffer();
    var openParentheses = "(".charCodeAt(0);
    var closeParentheses = ")".charCodeAt(0);
    var singleQuote = "'".charCodeAt(0);
    var doubleQuote = '"'.charCodeAt(0);
    var backslash = "\\".charCodeAt(0);
    var slash = "/".charCodeAt(0);
    var comma = ",".charCodeAt(0);
    var colon = ":".charCodeAt(0);
    var star = "*".charCodeAt(0);
    var uLower = "u".charCodeAt(0);
    var uUpper = "U".charCodeAt(0);
    var plus = "+".charCodeAt(0);
    var isUnicodeRange = /^[a-f0-9?-]+$/i;
    module.exports = function(input) {
      var tokens = [];
      var value = input;
      var next, quote, prev, token, escape2, escapePos, whitespacePos, parenthesesOpenPos;
      var pos = 0;
      var code = value.charCodeAt(pos);
      var max = value.length;
      var stack = [{ nodes: tokens }];
      var balanced = 0;
      var parent;
      var name = "";
      var before = "";
      var after = "";
      while (pos < max) {
        if (code <= 32) {
          next = pos;
          do {
            next += 1;
            code = value.charCodeAt(next);
          } while (code <= 32);
          token = value.slice(pos, next);
          prev = tokens[tokens.length - 1];
          if (code === closeParentheses && balanced) {
            after = token;
          } else if (prev && prev.type === "div") {
            prev.after = token;
            prev.sourceEndIndex += token.length;
          } else if (code === comma || code === colon || code === slash && value.charCodeAt(next + 1) !== star && (!parent || parent && parent.type === "function" && parent.value !== "calc")) {
            before = token;
          } else {
            tokens.push({
              type: "space",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          }
          pos = next;
        } else if (code === singleQuote || code === doubleQuote) {
          next = pos;
          quote = code === singleQuote ? "'" : '"';
          token = {
            type: "string",
            sourceIndex: pos,
            quote
          };
          do {
            escape2 = false;
            next = value.indexOf(quote, next + 1);
            if (~next) {
              escapePos = next;
              while (value.charCodeAt(escapePos - 1) === backslash) {
                escapePos -= 1;
                escape2 = !escape2;
              }
            } else {
              value += quote;
              next = value.length - 1;
              token.unclosed = true;
            }
          } while (escape2);
          token.value = value.slice(pos + 1, next);
          token.sourceEndIndex = token.unclosed ? next : next + 1;
          tokens.push(token);
          pos = next + 1;
          code = value.charCodeAt(pos);
        } else if (code === slash && value.charCodeAt(pos + 1) === star) {
          next = value.indexOf("*/", pos);
          token = {
            type: "comment",
            sourceIndex: pos,
            sourceEndIndex: next + 2
          };
          if (next === -1) {
            token.unclosed = true;
            next = value.length;
            token.sourceEndIndex = next;
          }
          token.value = value.slice(pos + 2, next);
          tokens.push(token);
          pos = next + 2;
          code = value.charCodeAt(pos);
        } else if ((code === slash || code === star) && parent && parent.type === "function" && parent.value === "calc") {
          token = value[pos];
          tokens.push({
            type: "word",
            sourceIndex: pos - before.length,
            sourceEndIndex: pos + token.length,
            value: token
          });
          pos += 1;
          code = value.charCodeAt(pos);
        } else if (code === slash || code === comma || code === colon) {
          token = value[pos];
          tokens.push({
            type: "div",
            sourceIndex: pos - before.length,
            sourceEndIndex: pos + token.length,
            value: token,
            before,
            after: ""
          });
          before = "";
          pos += 1;
          code = value.charCodeAt(pos);
        } else if (openParentheses === code) {
          next = pos;
          do {
            next += 1;
            code = value.charCodeAt(next);
          } while (code <= 32);
          parenthesesOpenPos = pos;
          token = {
            type: "function",
            sourceIndex: pos - name.length,
            value: name,
            before: value.slice(parenthesesOpenPos + 1, next)
          };
          pos = next;
          if (name === "url" && code !== singleQuote && code !== doubleQuote) {
            next -= 1;
            do {
              escape2 = false;
              next = value.indexOf(")", next + 1);
              if (~next) {
                escapePos = next;
                while (value.charCodeAt(escapePos - 1) === backslash) {
                  escapePos -= 1;
                  escape2 = !escape2;
                }
              } else {
                value += ")";
                next = value.length - 1;
                token.unclosed = true;
              }
            } while (escape2);
            whitespacePos = next;
            do {
              whitespacePos -= 1;
              code = value.charCodeAt(whitespacePos);
            } while (code <= 32);
            if (parenthesesOpenPos < whitespacePos) {
              if (pos !== whitespacePos + 1) {
                token.nodes = [
                  {
                    type: "word",
                    sourceIndex: pos,
                    sourceEndIndex: whitespacePos + 1,
                    value: value.slice(pos, whitespacePos + 1)
                  }
                ];
              } else {
                token.nodes = [];
              }
              if (token.unclosed && whitespacePos + 1 !== next) {
                token.after = "";
                token.nodes.push({
                  type: "space",
                  sourceIndex: whitespacePos + 1,
                  sourceEndIndex: next,
                  value: value.slice(whitespacePos + 1, next)
                });
              } else {
                token.after = value.slice(whitespacePos + 1, next);
                token.sourceEndIndex = next;
              }
            } else {
              token.after = "";
              token.nodes = [];
            }
            pos = next + 1;
            token.sourceEndIndex = token.unclosed ? next : pos;
            code = value.charCodeAt(pos);
            tokens.push(token);
          } else {
            balanced += 1;
            token.after = "";
            token.sourceEndIndex = pos + 1;
            tokens.push(token);
            stack.push(token);
            tokens = token.nodes = [];
            parent = token;
          }
          name = "";
        } else if (closeParentheses === code && balanced) {
          pos += 1;
          code = value.charCodeAt(pos);
          parent.after = after;
          parent.sourceEndIndex += after.length;
          after = "";
          balanced -= 1;
          stack[stack.length - 1].sourceEndIndex = pos;
          stack.pop();
          parent = stack[balanced];
          tokens = parent.nodes;
        } else {
          next = pos;
          do {
            if (code === backslash) {
              next += 1;
            }
            next += 1;
            code = value.charCodeAt(next);
          } while (next < max && !(code <= 32 || code === singleQuote || code === doubleQuote || code === comma || code === colon || code === slash || code === openParentheses || code === star && parent && parent.type === "function" && parent.value === "calc" || code === slash && parent.type === "function" && parent.value === "calc" || code === closeParentheses && balanced));
          token = value.slice(pos, next);
          if (openParentheses === code) {
            name = token;
          } else if ((uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) && plus === token.charCodeAt(1) && isUnicodeRange.test(token.slice(2))) {
            tokens.push({
              type: "unicode-range",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          } else {
            tokens.push({
              type: "word",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          }
          pos = next;
        }
      }
      for (pos = stack.length - 1; pos; pos -= 1) {
        stack[pos].unclosed = true;
        stack[pos].sourceEndIndex = value.length;
      }
      return stack[0].nodes;
    };
  }
});
var require_walk = __commonJS({
  "../../node_modules/postcss-value-parser/lib/walk.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = function walk(nodes, cb, bubble) {
      var i, max, node, result;
      for (i = 0, max = nodes.length; i < max; i += 1) {
        node = nodes[i];
        if (!bubble) {
          result = cb(node, i, nodes);
        }
        if (result !== false && node.type === "function" && Array.isArray(node.nodes)) {
          walk(node.nodes, cb, bubble);
        }
        if (bubble) {
          cb(node, i, nodes);
        }
      }
    };
  }
});
var require_stringify2 = __commonJS({
  "../../node_modules/postcss-value-parser/lib/stringify.js"(exports, module) {
    init_process();
    init_buffer();
    function stringifyNode(node, custom) {
      var type = node.type;
      var value = node.value;
      var buf;
      var customResult;
      if (custom && (customResult = custom(node)) !== void 0) {
        return customResult;
      } else if (type === "word" || type === "space") {
        return value;
      } else if (type === "string") {
        buf = node.quote || "";
        return buf + value + (node.unclosed ? "" : buf);
      } else if (type === "comment") {
        return "/*" + value + (node.unclosed ? "" : "*/");
      } else if (type === "div") {
        return (node.before || "") + value + (node.after || "");
      } else if (Array.isArray(node.nodes)) {
        buf = stringify2(node.nodes, custom);
        if (type !== "function") {
          return buf;
        }
        return value + "(" + (node.before || "") + buf + (node.after || "") + (node.unclosed ? "" : ")");
      }
      return value;
    }
    function stringify2(nodes, custom) {
      var result, i;
      if (Array.isArray(nodes)) {
        result = "";
        for (i = nodes.length - 1; ~i; i -= 1) {
          result = stringifyNode(nodes[i], custom) + result;
        }
        return result;
      }
      return stringifyNode(nodes, custom);
    }
    module.exports = stringify2;
  }
});
var require_unit = __commonJS({
  "../../node_modules/postcss-value-parser/lib/unit.js"(exports, module) {
    init_process();
    init_buffer();
    var minus = "-".charCodeAt(0);
    var plus = "+".charCodeAt(0);
    var dot = ".".charCodeAt(0);
    var exp = "e".charCodeAt(0);
    var EXP = "E".charCodeAt(0);
    function likeNumber(value) {
      var code = value.charCodeAt(0);
      var nextCode;
      if (code === plus || code === minus) {
        nextCode = value.charCodeAt(1);
        if (nextCode >= 48 && nextCode <= 57) {
          return true;
        }
        var nextNextCode = value.charCodeAt(2);
        if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {
          return true;
        }
        return false;
      }
      if (code === dot) {
        nextCode = value.charCodeAt(1);
        if (nextCode >= 48 && nextCode <= 57) {
          return true;
        }
        return false;
      }
      if (code >= 48 && code <= 57) {
        return true;
      }
      return false;
    }
    module.exports = function(value) {
      var pos = 0;
      var length = value.length;
      var code;
      var nextCode;
      var nextNextCode;
      if (length === 0 || !likeNumber(value)) {
        return false;
      }
      code = value.charCodeAt(pos);
      if (code === plus || code === minus) {
        pos++;
      }
      while (pos < length) {
        code = value.charCodeAt(pos);
        if (code < 48 || code > 57) {
          break;
        }
        pos += 1;
      }
      code = value.charCodeAt(pos);
      nextCode = value.charCodeAt(pos + 1);
      if (code === dot && nextCode >= 48 && nextCode <= 57) {
        pos += 2;
        while (pos < length) {
          code = value.charCodeAt(pos);
          if (code < 48 || code > 57) {
            break;
          }
          pos += 1;
        }
      }
      code = value.charCodeAt(pos);
      nextCode = value.charCodeAt(pos + 1);
      nextNextCode = value.charCodeAt(pos + 2);
      if ((code === exp || code === EXP) && (nextCode >= 48 && nextCode <= 57 || (nextCode === plus || nextCode === minus) && nextNextCode >= 48 && nextNextCode <= 57)) {
        pos += nextCode === plus || nextCode === minus ? 3 : 2;
        while (pos < length) {
          code = value.charCodeAt(pos);
          if (code < 48 || code > 57) {
            break;
          }
          pos += 1;
        }
      }
      return {
        number: value.slice(0, pos),
        unit: value.slice(pos)
      };
    };
  }
});
var require_lib = __commonJS({
  "../../node_modules/postcss-value-parser/lib/index.js"(exports, module) {
    init_process();
    init_buffer();
    var parse2 = require_parse3();
    var walk = require_walk();
    var stringify2 = require_stringify2();
    function ValueParser(value) {
      if (this instanceof ValueParser) {
        this.nodes = parse2(value);
        return this;
      }
      return new ValueParser(value);
    }
    ValueParser.prototype.toString = function() {
      return Array.isArray(this.nodes) ? stringify2(this.nodes) : "";
    };
    ValueParser.prototype.walk = function(cb, bubble) {
      walk(this.nodes, cb, bubble);
      return this;
    };
    ValueParser.unit = require_unit();
    ValueParser.walk = walk;
    ValueParser.stringify = stringify2;
    module.exports = ValueParser;
  }
});
var require_transition = __commonJS({
  "../../node_modules/autoprefixer/lib/transition.js"(exports, module) {
    init_process();
    init_buffer();
    var { list: list2 } = require_postcss();
    var parser = require_lib();
    var Browsers = require_browsers3();
    var vendor = require_vendor();
    var Transition = class {
      constructor(prefixes) {
        this.props = ["transition", "transition-property"];
        this.prefixes = prefixes;
      }
      add(decl2, result) {
        let prefix, prop;
        let add = this.prefixes.add[decl2.prop];
        let vendorPrefixes = this.ruleVendorPrefixes(decl2);
        let declPrefixes = vendorPrefixes || add && add.prefixes || [];
        let params = this.parse(decl2.value);
        let names = params.map((i) => this.findProp(i));
        let added = [];
        if (names.some((i) => i[0] === "-")) {
          return;
        }
        for (let param of params) {
          prop = this.findProp(param);
          if (prop[0] === "-")
            continue;
          let prefixer = this.prefixes.add[prop];
          if (!prefixer || !prefixer.prefixes)
            continue;
          for (prefix of prefixer.prefixes) {
            if (vendorPrefixes && !vendorPrefixes.some((p) => prefix.includes(p))) {
              continue;
            }
            let prefixed = this.prefixes.prefixed(prop, prefix);
            if (prefixed !== "-ms-transform" && !names.includes(prefixed)) {
              if (!this.disabled(prop, prefix)) {
                added.push(this.clone(prop, prefixed, param));
              }
            }
          }
        }
        params = params.concat(added);
        let value = this.stringify(params);
        let webkitClean = this.stringify(
          this.cleanFromUnprefixed(params, "-webkit-")
        );
        if (declPrefixes.includes("-webkit-")) {
          this.cloneBefore(decl2, `-webkit-${decl2.prop}`, webkitClean);
        }
        this.cloneBefore(decl2, decl2.prop, webkitClean);
        if (declPrefixes.includes("-o-")) {
          let operaClean = this.stringify(this.cleanFromUnprefixed(params, "-o-"));
          this.cloneBefore(decl2, `-o-${decl2.prop}`, operaClean);
        }
        for (prefix of declPrefixes) {
          if (prefix !== "-webkit-" && prefix !== "-o-") {
            let prefixValue = this.stringify(
              this.cleanOtherPrefixes(params, prefix)
            );
            this.cloneBefore(decl2, prefix + decl2.prop, prefixValue);
          }
        }
        if (value !== decl2.value && !this.already(decl2, decl2.prop, value)) {
          this.checkForWarning(result, decl2);
          decl2.cloneBefore();
          decl2.value = value;
        }
      }
      findProp(param) {
        let prop = param[0].value;
        if (/^\d/.test(prop)) {
          for (let [i, token] of param.entries()) {
            if (i !== 0 && token.type === "word") {
              return token.value;
            }
          }
        }
        return prop;
      }
      already(decl2, prop, value) {
        return decl2.parent.some((i) => i.prop === prop && i.value === value);
      }
      cloneBefore(decl2, prop, value) {
        if (!this.already(decl2, prop, value)) {
          decl2.cloneBefore({ prop, value });
        }
      }
      checkForWarning(result, decl2) {
        if (decl2.prop !== "transition-property") {
          return;
        }
        let isPrefixed = false;
        let hasAssociatedProp = false;
        decl2.parent.each((i) => {
          if (i.type !== "decl") {
            return void 0;
          }
          if (i.prop.indexOf("transition-") !== 0) {
            return void 0;
          }
          let values = list2.comma(i.value);
          if (i.prop === "transition-property") {
            values.forEach((value) => {
              let lookup = this.prefixes.add[value];
              if (lookup && lookup.prefixes && lookup.prefixes.length > 0) {
                isPrefixed = true;
              }
            });
            return void 0;
          }
          hasAssociatedProp = hasAssociatedProp || values.length > 1;
          return false;
        });
        if (isPrefixed && hasAssociatedProp) {
          decl2.warn(
            result,
            "Replace transition-property to transition, because Autoprefixer could not support any cases of transition-property and other transition-*"
          );
        }
      }
      remove(decl2) {
        let params = this.parse(decl2.value);
        params = params.filter((i) => {
          let prop = this.prefixes.remove[this.findProp(i)];
          return !prop || !prop.remove;
        });
        let value = this.stringify(params);
        if (decl2.value === value) {
          return;
        }
        if (params.length === 0) {
          decl2.remove();
          return;
        }
        let double = decl2.parent.some((i) => {
          return i.prop === decl2.prop && i.value === value;
        });
        let smaller = decl2.parent.some((i) => {
          return i !== decl2 && i.prop === decl2.prop && i.value.length > value.length;
        });
        if (double || smaller) {
          decl2.remove();
          return;
        }
        decl2.value = value;
      }
      parse(value) {
        let ast = parser(value);
        let result = [];
        let param = [];
        for (let node of ast.nodes) {
          param.push(node);
          if (node.type === "div" && node.value === ",") {
            result.push(param);
            param = [];
          }
        }
        result.push(param);
        return result.filter((i) => i.length > 0);
      }
      stringify(params) {
        if (params.length === 0) {
          return "";
        }
        let nodes = [];
        for (let param of params) {
          if (param[param.length - 1].type !== "div") {
            param.push(this.div(params));
          }
          nodes = nodes.concat(param);
        }
        if (nodes[0].type === "div") {
          nodes = nodes.slice(1);
        }
        if (nodes[nodes.length - 1].type === "div") {
          nodes = nodes.slice(0, -2 + 1 || void 0);
        }
        return parser.stringify({ nodes });
      }
      clone(origin, name, param) {
        let result = [];
        let changed = false;
        for (let i of param) {
          if (!changed && i.type === "word" && i.value === origin) {
            result.push({ type: "word", value: name });
            changed = true;
          } else {
            result.push(i);
          }
        }
        return result;
      }
      div(params) {
        for (let param of params) {
          for (let node of param) {
            if (node.type === "div" && node.value === ",") {
              return node;
            }
          }
        }
        return { type: "div", value: ",", after: " " };
      }
      cleanOtherPrefixes(params, prefix) {
        return params.filter((param) => {
          let current = vendor.prefix(this.findProp(param));
          return current === "" || current === prefix;
        });
      }
      cleanFromUnprefixed(params, prefix) {
        let remove = params.map((i) => this.findProp(i)).filter((i) => i.slice(0, prefix.length) === prefix).map((i) => this.prefixes.unprefixed(i));
        let result = [];
        for (let param of params) {
          let prop = this.findProp(param);
          let p = vendor.prefix(prop);
          if (!remove.includes(prop) && (p === prefix || p === "")) {
            result.push(param);
          }
        }
        return result;
      }
      disabled(prop, prefix) {
        let other = ["order", "justify-content", "align-self", "align-content"];
        if (prop.includes("flex") || other.includes(prop)) {
          if (this.prefixes.options.flexbox === false) {
            return true;
          }
          if (this.prefixes.options.flexbox === "no-2009") {
            return prefix.includes("2009");
          }
        }
        return void 0;
      }
      ruleVendorPrefixes(decl2) {
        let { parent } = decl2;
        if (parent.type !== "rule") {
          return false;
        } else if (!parent.selector.includes(":-")) {
          return false;
        }
        let selectors = Browsers.prefixes().filter(
          (s) => parent.selector.includes(":" + s)
        );
        return selectors.length > 0 ? selectors : false;
      }
    };
    module.exports = Transition;
  }
});
var require_old_value = __commonJS({
  "../../node_modules/autoprefixer/lib/old-value.js"(exports, module) {
    init_process();
    init_buffer();
    var utils = require_utils();
    var OldValue = class {
      constructor(unprefixed, prefixed, string, regexp) {
        this.unprefixed = unprefixed;
        this.prefixed = prefixed;
        this.string = string || prefixed;
        this.regexp = regexp || utils.regexp(prefixed);
      }
      check(value) {
        if (value.includes(this.string)) {
          return !!value.match(this.regexp);
        }
        return false;
      }
    };
    module.exports = OldValue;
  }
});
var require_value = __commonJS({
  "../../node_modules/autoprefixer/lib/value.js"(exports, module) {
    init_process();
    init_buffer();
    var Prefixer = require_prefixer();
    var OldValue = require_old_value();
    var vendor = require_vendor();
    var utils = require_utils();
    var Value = class extends Prefixer {
      static save(prefixes, decl2) {
        let prop = decl2.prop;
        let result = [];
        for (let prefix in decl2._autoprefixerValues) {
          let value = decl2._autoprefixerValues[prefix];
          if (value === decl2.value) {
            continue;
          }
          let item;
          let propPrefix = vendor.prefix(prop);
          if (propPrefix === "-pie-") {
            continue;
          }
          if (propPrefix === prefix) {
            item = decl2.value = value;
            result.push(item);
            continue;
          }
          let prefixed = prefixes.prefixed(prop, prefix);
          let rule2 = decl2.parent;
          if (!rule2.every((i) => i.prop !== prefixed)) {
            result.push(item);
            continue;
          }
          let trimmed = value.replace(/\s+/, " ");
          let already = rule2.some(
            (i) => i.prop === decl2.prop && i.value.replace(/\s+/, " ") === trimmed
          );
          if (already) {
            result.push(item);
            continue;
          }
          let cloned = this.clone(decl2, { value });
          item = decl2.parent.insertBefore(decl2, cloned);
          result.push(item);
        }
        return result;
      }
      check(decl2) {
        let value = decl2.value;
        if (!value.includes(this.name)) {
          return false;
        }
        return !!value.match(this.regexp());
      }
      regexp() {
        return this.regexpCache || (this.regexpCache = utils.regexp(this.name));
      }
      replace(string, prefix) {
        return string.replace(this.regexp(), `$1${prefix}$2`);
      }
      value(decl2) {
        if (decl2.raws.value && decl2.raws.value.value === decl2.value) {
          return decl2.raws.value.raw;
        } else {
          return decl2.value;
        }
      }
      add(decl2, prefix) {
        if (!decl2._autoprefixerValues) {
          decl2._autoprefixerValues = {};
        }
        let value = decl2._autoprefixerValues[prefix] || this.value(decl2);
        let before;
        do {
          before = value;
          value = this.replace(value, prefix);
          if (value === false)
            return;
        } while (value !== before);
        decl2._autoprefixerValues[prefix] = value;
      }
      old(prefix) {
        return new OldValue(this.name, prefix + this.name);
      }
    };
    module.exports = Value;
  }
});
var require_grid_utils = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-utils.js"(exports) {
    init_process();
    init_buffer();
    var parser = require_lib();
    var list2 = require_postcss().list;
    var uniq = require_utils().uniq;
    var escapeRegexp = require_utils().escapeRegexp;
    var splitSelector = require_utils().splitSelector;
    function convert(value) {
      if (value && value.length === 2 && value[0] === "span" && parseInt(value[1], 10) > 0) {
        return [false, parseInt(value[1], 10)];
      }
      if (value && value.length === 1 && parseInt(value[0], 10) > 0) {
        return [parseInt(value[0], 10), false];
      }
      return [false, false];
    }
    exports.translate = translate;
    function translate(values, startIndex, endIndex) {
      let startValue = values[startIndex];
      let endValue = values[endIndex];
      if (!startValue) {
        return [false, false];
      }
      let [start, spanStart] = convert(startValue);
      let [end, spanEnd] = convert(endValue);
      if (start && !endValue) {
        return [start, false];
      }
      if (spanStart && end) {
        return [end - spanStart, spanStart];
      }
      if (start && spanEnd) {
        return [start, spanEnd];
      }
      if (start && end) {
        return [start, end - start];
      }
      return [false, false];
    }
    exports.parse = parse2;
    function parse2(decl2) {
      let node = parser(decl2.value);
      let values = [];
      let current = 0;
      values[current] = [];
      for (let i of node.nodes) {
        if (i.type === "div") {
          current += 1;
          values[current] = [];
        } else if (i.type === "word") {
          values[current].push(i.value);
        }
      }
      return values;
    }
    exports.insertDecl = insertDecl;
    function insertDecl(decl2, prop, value) {
      if (value && !decl2.parent.some((i) => i.prop === `-ms-${prop}`)) {
        decl2.cloneBefore({
          prop: `-ms-${prop}`,
          value: value.toString()
        });
      }
    }
    exports.prefixTrackProp = prefixTrackProp;
    function prefixTrackProp({ prop, prefix }) {
      return prefix + prop.replace("template-", "");
    }
    function transformRepeat({ nodes }, { gap }) {
      let { count, size } = nodes.reduce(
        (result, node) => {
          if (node.type === "div" && node.value === ",") {
            result.key = "size";
          } else {
            result[result.key].push(parser.stringify(node));
          }
          return result;
        },
        {
          key: "count",
          size: [],
          count: []
        }
      );
      if (gap) {
        size = size.filter((i) => i.trim());
        let val = [];
        for (let i = 1; i <= count; i++) {
          size.forEach((item, index) => {
            if (index > 0 || i > 1) {
              val.push(gap);
            }
            val.push(item);
          });
        }
        return val.join(" ");
      }
      return `(${size.join("")})[${count.join("")}]`;
    }
    exports.prefixTrackValue = prefixTrackValue;
    function prefixTrackValue({ value, gap }) {
      let result = parser(value).nodes.reduce((nodes, node) => {
        if (node.type === "function" && node.value === "repeat") {
          return nodes.concat({
            type: "word",
            value: transformRepeat(node, { gap })
          });
        }
        if (gap && node.type === "space") {
          return nodes.concat(
            {
              type: "space",
              value: " "
            },
            {
              type: "word",
              value: gap
            },
            node
          );
        }
        return nodes.concat(node);
      }, []);
      return parser.stringify(result);
    }
    var DOTS = /^\.+$/;
    function track(start, end) {
      return { start, end, span: end - start };
    }
    function getColumns(line) {
      return line.trim().split(/\s+/g);
    }
    exports.parseGridAreas = parseGridAreas;
    function parseGridAreas({ rows, gap }) {
      return rows.reduce((areas, line, rowIndex) => {
        if (gap.row)
          rowIndex *= 2;
        if (line.trim() === "")
          return areas;
        getColumns(line).forEach((area, columnIndex) => {
          if (DOTS.test(area))
            return;
          if (gap.column)
            columnIndex *= 2;
          if (typeof areas[area] === "undefined") {
            areas[area] = {
              column: track(columnIndex + 1, columnIndex + 2),
              row: track(rowIndex + 1, rowIndex + 2)
            };
          } else {
            let { column, row } = areas[area];
            column.start = Math.min(column.start, columnIndex + 1);
            column.end = Math.max(column.end, columnIndex + 2);
            column.span = column.end - column.start;
            row.start = Math.min(row.start, rowIndex + 1);
            row.end = Math.max(row.end, rowIndex + 2);
            row.span = row.end - row.start;
          }
        });
        return areas;
      }, {});
    }
    function testTrack(node) {
      return node.type === "word" && /^\[.+]$/.test(node.value);
    }
    function verifyRowSize(result) {
      if (result.areas.length > result.rows.length) {
        result.rows.push("auto");
      }
      return result;
    }
    exports.parseTemplate = parseTemplate;
    function parseTemplate({ decl: decl2, gap }) {
      let gridTemplate = parser(decl2.value).nodes.reduce(
        (result, node) => {
          let { type, value } = node;
          if (testTrack(node) || type === "space")
            return result;
          if (type === "string") {
            result = verifyRowSize(result);
            result.areas.push(value);
          }
          if (type === "word" || type === "function") {
            result[result.key].push(parser.stringify(node));
          }
          if (type === "div" && value === "/") {
            result.key = "columns";
            result = verifyRowSize(result);
          }
          return result;
        },
        {
          key: "rows",
          columns: [],
          rows: [],
          areas: []
        }
      );
      return {
        areas: parseGridAreas({
          rows: gridTemplate.areas,
          gap
        }),
        columns: prefixTrackValue({
          value: gridTemplate.columns.join(" "),
          gap: gap.column
        }),
        rows: prefixTrackValue({
          value: gridTemplate.rows.join(" "),
          gap: gap.row
        })
      };
    }
    function getMSDecls(area, addRowSpan = false, addColumnSpan = false) {
      let result = [
        {
          prop: "-ms-grid-row",
          value: String(area.row.start)
        }
      ];
      if (area.row.span > 1 || addRowSpan) {
        result.push({
          prop: "-ms-grid-row-span",
          value: String(area.row.span)
        });
      }
      result.push({
        prop: "-ms-grid-column",
        value: String(area.column.start)
      });
      if (area.column.span > 1 || addColumnSpan) {
        result.push({
          prop: "-ms-grid-column-span",
          value: String(area.column.span)
        });
      }
      return result;
    }
    function getParentMedia(parent) {
      if (parent.type === "atrule" && parent.name === "media") {
        return parent;
      }
      if (!parent.parent) {
        return false;
      }
      return getParentMedia(parent.parent);
    }
    function changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {
      ruleSelectors = ruleSelectors.map((selector) => {
        let selectorBySpace = list2.space(selector);
        let selectorByComma = list2.comma(selector);
        if (selectorBySpace.length > selectorByComma.length) {
          selector = selectorBySpace.slice(-1).join("");
        }
        return selector;
      });
      return ruleSelectors.map((ruleSelector) => {
        let newSelector = templateSelectors.map((tplSelector, index) => {
          let space = index === 0 ? "" : " ";
          return `${space}${tplSelector} > ${ruleSelector}`;
        });
        return newSelector;
      });
    }
    function selectorsEqual(ruleA, ruleB) {
      return ruleA.selectors.some((sel) => {
        return ruleB.selectors.includes(sel);
      });
    }
    function parseGridTemplatesData(css) {
      let parsed = [];
      css.walkDecls(/grid-template(-areas)?$/, (d) => {
        let rule2 = d.parent;
        let media = getParentMedia(rule2);
        let gap = getGridGap(d);
        let inheritedGap = inheritGridGap(d, gap);
        let { areas } = parseTemplate({ decl: d, gap: inheritedGap || gap });
        let areaNames = Object.keys(areas);
        if (areaNames.length === 0) {
          return true;
        }
        let index = parsed.reduce((acc, { allAreas }, idx) => {
          let hasAreas = allAreas && areaNames.some((area) => allAreas.includes(area));
          return hasAreas ? idx : acc;
        }, null);
        if (index !== null) {
          let { allAreas, rules } = parsed[index];
          let hasNoDuplicates = rules.some((r) => {
            return r.hasDuplicates === false && selectorsEqual(r, rule2);
          });
          let duplicatesFound = false;
          let duplicateAreaNames = rules.reduce((acc, r) => {
            if (!r.params && selectorsEqual(r, rule2)) {
              duplicatesFound = true;
              return r.duplicateAreaNames;
            }
            if (!duplicatesFound) {
              areaNames.forEach((name) => {
                if (r.areas[name]) {
                  acc.push(name);
                }
              });
            }
            return uniq(acc);
          }, []);
          rules.forEach((r) => {
            areaNames.forEach((name) => {
              let area = r.areas[name];
              if (area && area.row.span !== areas[name].row.span) {
                areas[name].row.updateSpan = true;
              }
              if (area && area.column.span !== areas[name].column.span) {
                areas[name].column.updateSpan = true;
              }
            });
          });
          parsed[index].allAreas = uniq([...allAreas, ...areaNames]);
          parsed[index].rules.push({
            hasDuplicates: !hasNoDuplicates,
            params: media.params,
            selectors: rule2.selectors,
            node: rule2,
            duplicateAreaNames,
            areas
          });
        } else {
          parsed.push({
            allAreas: areaNames,
            areasCount: 0,
            rules: [
              {
                hasDuplicates: false,
                duplicateRules: [],
                params: media.params,
                selectors: rule2.selectors,
                node: rule2,
                duplicateAreaNames: [],
                areas
              }
            ]
          });
        }
        return void 0;
      });
      return parsed;
    }
    exports.insertAreas = insertAreas;
    function insertAreas(css, isDisabled) {
      let gridTemplatesData = parseGridTemplatesData(css);
      if (gridTemplatesData.length === 0) {
        return void 0;
      }
      let rulesToInsert = {};
      css.walkDecls("grid-area", (gridArea) => {
        let gridAreaRule = gridArea.parent;
        let hasPrefixedRow = gridAreaRule.first.prop === "-ms-grid-row";
        let gridAreaMedia = getParentMedia(gridAreaRule);
        if (isDisabled(gridArea)) {
          return void 0;
        }
        let gridAreaRuleIndex = css.index(gridAreaMedia || gridAreaRule);
        let value = gridArea.value;
        let data = gridTemplatesData.filter((d) => d.allAreas.includes(value))[0];
        if (!data) {
          return true;
        }
        let lastArea = data.allAreas[data.allAreas.length - 1];
        let selectorBySpace = list2.space(gridAreaRule.selector);
        let selectorByComma = list2.comma(gridAreaRule.selector);
        let selectorIsComplex = selectorBySpace.length > 1 && selectorBySpace.length > selectorByComma.length;
        if (hasPrefixedRow) {
          return false;
        }
        if (!rulesToInsert[lastArea]) {
          rulesToInsert[lastArea] = {};
        }
        let lastRuleIsSet = false;
        for (let rule2 of data.rules) {
          let area = rule2.areas[value];
          let hasDuplicateName = rule2.duplicateAreaNames.includes(value);
          if (!area) {
            let lastRule = rulesToInsert[lastArea].lastRule;
            let lastRuleIndex;
            if (lastRule) {
              lastRuleIndex = css.index(lastRule);
            } else {
              lastRuleIndex = -1;
            }
            if (gridAreaRuleIndex > lastRuleIndex) {
              rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;
            }
            continue;
          }
          if (rule2.params && !rulesToInsert[lastArea][rule2.params]) {
            rulesToInsert[lastArea][rule2.params] = [];
          }
          if ((!rule2.hasDuplicates || !hasDuplicateName) && !rule2.params) {
            getMSDecls(area, false, false).reverse().forEach(
              (i) => gridAreaRule.prepend(
                Object.assign(i, {
                  raws: {
                    between: gridArea.raws.between
                  }
                })
              )
            );
            rulesToInsert[lastArea].lastRule = gridAreaRule;
            lastRuleIsSet = true;
          } else if (rule2.hasDuplicates && !rule2.params && !selectorIsComplex) {
            let cloned = gridAreaRule.clone();
            cloned.removeAll();
            getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(
              (i) => cloned.prepend(
                Object.assign(i, {
                  raws: {
                    between: gridArea.raws.between
                  }
                })
              )
            );
            cloned.selectors = changeDuplicateAreaSelectors(
              cloned.selectors,
              rule2.selectors
            );
            if (rulesToInsert[lastArea].lastRule) {
              rulesToInsert[lastArea].lastRule.after(cloned);
            }
            rulesToInsert[lastArea].lastRule = cloned;
            lastRuleIsSet = true;
          } else if (rule2.hasDuplicates && !rule2.params && selectorIsComplex && gridAreaRule.selector.includes(rule2.selectors[0])) {
            gridAreaRule.walkDecls(/-ms-grid-(row|column)/, (d) => d.remove());
            getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(
              (i) => gridAreaRule.prepend(
                Object.assign(i, {
                  raws: {
                    between: gridArea.raws.between
                  }
                })
              )
            );
          } else if (rule2.params) {
            let cloned = gridAreaRule.clone();
            cloned.removeAll();
            getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(
              (i) => cloned.prepend(
                Object.assign(i, {
                  raws: {
                    between: gridArea.raws.between
                  }
                })
              )
            );
            if (rule2.hasDuplicates && hasDuplicateName) {
              cloned.selectors = changeDuplicateAreaSelectors(
                cloned.selectors,
                rule2.selectors
              );
            }
            cloned.raws = rule2.node.raws;
            if (css.index(rule2.node.parent) > gridAreaRuleIndex) {
              rule2.node.parent.append(cloned);
            } else {
              rulesToInsert[lastArea][rule2.params].push(cloned);
            }
            if (!lastRuleIsSet) {
              rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;
            }
          }
        }
        return void 0;
      });
      Object.keys(rulesToInsert).forEach((area) => {
        let data = rulesToInsert[area];
        let lastRule = data.lastRule;
        Object.keys(data).reverse().filter((p) => p !== "lastRule").forEach((params) => {
          if (data[params].length > 0 && lastRule) {
            lastRule.after({ name: "media", params });
            lastRule.next().append(data[params]);
          }
        });
      });
      return void 0;
    }
    exports.warnMissedAreas = warnMissedAreas;
    function warnMissedAreas(areas, decl2, result) {
      let missed = Object.keys(areas);
      decl2.root().walkDecls("grid-area", (gridArea) => {
        missed = missed.filter((e) => e !== gridArea.value);
      });
      if (missed.length > 0) {
        decl2.warn(result, "Can not find grid areas: " + missed.join(", "));
      }
      return void 0;
    }
    exports.warnTemplateSelectorNotFound = warnTemplateSelectorNotFound;
    function warnTemplateSelectorNotFound(decl2, result) {
      let rule2 = decl2.parent;
      let root2 = decl2.root();
      let duplicatesFound = false;
      let slicedSelectorArr = list2.space(rule2.selector).filter((str) => str !== ">").slice(0, -1);
      if (slicedSelectorArr.length > 0) {
        let gridTemplateFound = false;
        let foundAreaSelector = null;
        root2.walkDecls(/grid-template(-areas)?$/, (d) => {
          let parent = d.parent;
          let templateSelectors = parent.selectors;
          let { areas } = parseTemplate({ decl: d, gap: getGridGap(d) });
          let hasArea = areas[decl2.value];
          for (let tplSelector of templateSelectors) {
            if (gridTemplateFound) {
              break;
            }
            let tplSelectorArr = list2.space(tplSelector).filter((str) => str !== ">");
            gridTemplateFound = tplSelectorArr.every(
              (item, idx) => item === slicedSelectorArr[idx]
            );
          }
          if (gridTemplateFound || !hasArea) {
            return true;
          }
          if (!foundAreaSelector) {
            foundAreaSelector = parent.selector;
          }
          if (foundAreaSelector && foundAreaSelector !== parent.selector) {
            duplicatesFound = true;
          }
          return void 0;
        });
        if (!gridTemplateFound && duplicatesFound) {
          decl2.warn(
            result,
            `Autoprefixer cannot find a grid-template containing the duplicate grid-area "${decl2.value}" with full selector matching: ${slicedSelectorArr.join(" ")}`
          );
        }
      }
    }
    exports.warnIfGridRowColumnExists = warnIfGridRowColumnExists;
    function warnIfGridRowColumnExists(decl2, result) {
      let rule2 = decl2.parent;
      let decls = [];
      rule2.walkDecls(/^grid-(row|column)/, (d) => {
        if (!d.prop.endsWith("-end") && !d.value.startsWith("span") && !d.prop.endsWith("-gap")) {
          decls.push(d);
        }
      });
      if (decls.length > 0) {
        decls.forEach((d) => {
          d.warn(
            result,
            `You already have a grid-area declaration present in the rule. You should use either grid-area or ${d.prop}, not both`
          );
        });
      }
      return void 0;
    }
    exports.getGridGap = getGridGap;
    function getGridGap(decl2) {
      let gap = {};
      let testGap = /^(grid-)?((row|column)-)?gap$/;
      decl2.parent.walkDecls(testGap, ({ prop, value }) => {
        if (/^(grid-)?gap$/.test(prop)) {
          let [row, , column] = parser(value).nodes;
          gap.row = row && parser.stringify(row);
          gap.column = column ? parser.stringify(column) : gap.row;
        }
        if (/^(grid-)?row-gap$/.test(prop))
          gap.row = value;
        if (/^(grid-)?column-gap$/.test(prop))
          gap.column = value;
      });
      return gap;
    }
    function parseMediaParams(params) {
      if (!params) {
        return [];
      }
      let parsed = parser(params);
      let prop;
      let value;
      parsed.walk((node) => {
        if (node.type === "word" && /min|max/g.test(node.value)) {
          prop = node.value;
        } else if (node.value.includes("px")) {
          value = parseInt(node.value.replace(/\D/g, ""));
        }
      });
      return [prop, value];
    }
    function shouldInheritGap(selA, selB) {
      let result;
      let splitSelectorArrA = splitSelector(selA);
      let splitSelectorArrB = splitSelector(selB);
      if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {
        return false;
      } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {
        let idx = splitSelectorArrA[0].reduce((res, [item], index) => {
          let firstSelectorPart = splitSelectorArrB[0][0][0];
          if (item === firstSelectorPart) {
            return index;
          }
          return false;
        }, false);
        if (idx) {
          result = splitSelectorArrB[0].every((arr, index) => {
            return arr.every(
              (part, innerIndex) => splitSelectorArrA[0].slice(idx)[index][innerIndex] === part
            );
          });
        }
      } else {
        result = splitSelectorArrB.some((byCommaArr) => {
          return byCommaArr.every((bySpaceArr, index) => {
            return bySpaceArr.every(
              (part, innerIndex) => splitSelectorArrA[0][index][innerIndex] === part
            );
          });
        });
      }
      return result;
    }
    exports.inheritGridGap = inheritGridGap;
    function inheritGridGap(decl2, gap) {
      let rule2 = decl2.parent;
      let mediaRule = getParentMedia(rule2);
      let root2 = rule2.root();
      let splitSelectorArr = splitSelector(rule2.selector);
      if (Object.keys(gap).length > 0) {
        return false;
      }
      let [prop] = parseMediaParams(mediaRule.params);
      let lastBySpace = splitSelectorArr[0];
      let escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0]);
      let regexp = new RegExp(`(${escaped}$)|(${escaped}[,.])`);
      let closestRuleGap;
      root2.walkRules(regexp, (r) => {
        let gridGap;
        if (rule2.toString() === r.toString()) {
          return false;
        }
        r.walkDecls("grid-gap", (d) => gridGap = getGridGap(d));
        if (!gridGap || Object.keys(gridGap).length === 0) {
          return true;
        }
        if (!shouldInheritGap(rule2.selector, r.selector)) {
          return true;
        }
        let media = getParentMedia(r);
        if (media) {
          let propToCompare = parseMediaParams(media.params)[0];
          if (propToCompare === prop) {
            closestRuleGap = gridGap;
            return true;
          }
        } else {
          closestRuleGap = gridGap;
          return true;
        }
        return void 0;
      });
      if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {
        return closestRuleGap;
      }
      return false;
    }
    exports.warnGridGap = warnGridGap;
    function warnGridGap({ gap, hasColumns, decl: decl2, result }) {
      let hasBothGaps = gap.row && gap.column;
      if (!hasColumns && (hasBothGaps || gap.column && !gap.row)) {
        delete gap.column;
        decl2.warn(
          result,
          "Can not implement grid-gap without grid-template-columns"
        );
      }
    }
    function normalizeRowColumn(str) {
      let normalized = parser(str).nodes.reduce((result, node) => {
        if (node.type === "function" && node.value === "repeat") {
          let key = "count";
          let [count, value] = node.nodes.reduce(
            (acc, n) => {
              if (n.type === "word" && key === "count") {
                acc[0] = Math.abs(parseInt(n.value));
                return acc;
              }
              if (n.type === "div" && n.value === ",") {
                key = "value";
                return acc;
              }
              if (key === "value") {
                acc[1] += parser.stringify(n);
              }
              return acc;
            },
            [0, ""]
          );
          if (count) {
            for (let i = 0; i < count; i++) {
              result.push(value);
            }
          }
          return result;
        }
        if (node.type === "space") {
          return result;
        }
        return result.concat(parser.stringify(node));
      }, []);
      return normalized;
    }
    exports.autoplaceGridItems = autoplaceGridItems;
    function autoplaceGridItems(decl2, result, gap, autoflowValue = "row") {
      let { parent } = decl2;
      let rowDecl = parent.nodes.find((i) => i.prop === "grid-template-rows");
      let rows = normalizeRowColumn(rowDecl.value);
      let columns = normalizeRowColumn(decl2.value);
      let filledRows = rows.map((_, rowIndex) => {
        return Array.from(
          { length: columns.length },
          (v, k) => k + rowIndex * columns.length + 1
        ).join(" ");
      });
      let areas = parseGridAreas({ rows: filledRows, gap });
      let keys = Object.keys(areas);
      let items = keys.map((i) => areas[i]);
      if (autoflowValue.includes("column")) {
        items = items.sort((a, b) => a.column.start - b.column.start);
      }
      items.reverse().forEach((item, index) => {
        let { column, row } = item;
        let nodeSelector = parent.selectors.map((sel) => sel + ` > *:nth-child(${keys.length - index})`).join(", ");
        let node = parent.clone().removeAll();
        node.selector = nodeSelector;
        node.append({ prop: "-ms-grid-row", value: row.start });
        node.append({ prop: "-ms-grid-column", value: column.start });
        parent.after(node);
      });
      return void 0;
    }
  }
});
var require_processor2 = __commonJS({
  "../../node_modules/autoprefixer/lib/processor.js"(exports, module) {
    init_process();
    init_buffer();
    var parser = require_lib();
    var Value = require_value();
    var insertAreas = require_grid_utils().insertAreas;
    var OLD_LINEAR = /(^|[^-])linear-gradient\(\s*(top|left|right|bottom)/i;
    var OLD_RADIAL = /(^|[^-])radial-gradient\(\s*\d+(\w*|%)\s+\d+(\w*|%)\s*,/i;
    var IGNORE_NEXT = /(!\s*)?autoprefixer:\s*ignore\s+next/i;
    var GRID_REGEX = /(!\s*)?autoprefixer\s*grid:\s*(on|off|(no-)?autoplace)/i;
    var SIZES = [
      "width",
      "height",
      "min-width",
      "max-width",
      "min-height",
      "max-height",
      "inline-size",
      "min-inline-size",
      "max-inline-size",
      "block-size",
      "min-block-size",
      "max-block-size"
    ];
    function hasGridTemplate(decl2) {
      return decl2.parent.some(
        (i) => i.prop === "grid-template" || i.prop === "grid-template-areas"
      );
    }
    function hasRowsAndColumns(decl2) {
      let hasRows = decl2.parent.some((i) => i.prop === "grid-template-rows");
      let hasColumns = decl2.parent.some((i) => i.prop === "grid-template-columns");
      return hasRows && hasColumns;
    }
    var Processor2 = class {
      constructor(prefixes) {
        this.prefixes = prefixes;
      }
      add(css, result) {
        let resolution = this.prefixes.add["@resolution"];
        let keyframes = this.prefixes.add["@keyframes"];
        let viewport = this.prefixes.add["@viewport"];
        let supports = this.prefixes.add["@supports"];
        css.walkAtRules((rule2) => {
          if (rule2.name === "keyframes") {
            if (!this.disabled(rule2, result)) {
              return keyframes && keyframes.process(rule2);
            }
          } else if (rule2.name === "viewport") {
            if (!this.disabled(rule2, result)) {
              return viewport && viewport.process(rule2);
            }
          } else if (rule2.name === "supports") {
            if (this.prefixes.options.supports !== false && !this.disabled(rule2, result)) {
              return supports.process(rule2);
            }
          } else if (rule2.name === "media" && rule2.params.includes("-resolution")) {
            if (!this.disabled(rule2, result)) {
              return resolution && resolution.process(rule2);
            }
          }
          return void 0;
        });
        css.walkRules((rule2) => {
          if (this.disabled(rule2, result))
            return void 0;
          return this.prefixes.add.selectors.map((selector) => {
            return selector.process(rule2, result);
          });
        });
        function insideGrid(decl2) {
          return decl2.parent.nodes.some((node) => {
            if (node.type !== "decl")
              return false;
            let displayGrid = node.prop === "display" && /(inline-)?grid/.test(node.value);
            let gridTemplate = node.prop.startsWith("grid-template");
            let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop);
            return displayGrid || gridTemplate || gridGap;
          });
        }
        function insideFlex(decl2) {
          return decl2.parent.some((node) => {
            return node.prop === "display" && /(inline-)?flex/.test(node.value);
          });
        }
        let gridPrefixes = this.gridStatus(css, result) && this.prefixes.add["grid-area"] && this.prefixes.add["grid-area"].prefixes;
        css.walkDecls((decl2) => {
          if (this.disabledDecl(decl2, result))
            return void 0;
          let parent = decl2.parent;
          let prop = decl2.prop;
          let value = decl2.value;
          if (prop === "color-adjust") {
            if (parent.every((i) => i.prop !== "print-color-adjust")) {
              result.warn(
                "Replace color-adjust to print-color-adjust. The color-adjust shorthand is currently deprecated.",
                { node: decl2 }
              );
            }
          } else if (prop === "grid-row-span") {
            result.warn(
              "grid-row-span is not part of final Grid Layout. Use grid-row.",
              { node: decl2 }
            );
            return void 0;
          } else if (prop === "grid-column-span") {
            result.warn(
              "grid-column-span is not part of final Grid Layout. Use grid-column.",
              { node: decl2 }
            );
            return void 0;
          } else if (prop === "display" && value === "box") {
            result.warn(
              "You should write display: flex by final spec instead of display: box",
              { node: decl2 }
            );
            return void 0;
          } else if (prop === "text-emphasis-position") {
            if (value === "under" || value === "over") {
              result.warn(
                "You should use 2 values for text-emphasis-position For example, `under left` instead of just `under`.",
                { node: decl2 }
              );
            }
          } else if (/^(align|justify|place)-(items|content)$/.test(prop) && insideFlex(decl2)) {
            if (value === "start" || value === "end") {
              result.warn(
                `${value} value has mixed support, consider using flex-${value} instead`,
                { node: decl2 }
              );
            }
          } else if (prop === "text-decoration-skip" && value === "ink") {
            result.warn(
              "Replace text-decoration-skip: ink to text-decoration-skip-ink: auto, because spec had been changed",
              { node: decl2 }
            );
          } else {
            if (gridPrefixes && this.gridStatus(decl2, result)) {
              if (decl2.value === "subgrid") {
                result.warn("IE does not support subgrid", { node: decl2 });
              }
              if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl2)) {
                let fixed = prop.replace("-items", "-self");
                result.warn(
                  `IE does not support ${prop} on grid containers. Try using ${fixed} on child elements instead: ${decl2.parent.selector} > * { ${fixed}: ${decl2.value} }`,
                  { node: decl2 }
                );
              } else if (/^(align|justify|place)-content$/.test(prop) && insideGrid(decl2)) {
                result.warn(`IE does not support ${decl2.prop} on grid containers`, {
                  node: decl2
                });
              } else if (prop === "display" && decl2.value === "contents") {
                result.warn(
                  "Please do not use display: contents; if you have grid setting enabled",
                  { node: decl2 }
                );
                return void 0;
              } else if (decl2.prop === "grid-gap") {
                let status = this.gridStatus(decl2, result);
                if (status === "autoplace" && !hasRowsAndColumns(decl2) && !hasGridTemplate(decl2)) {
                  result.warn(
                    "grid-gap only works if grid-template(-areas) is being used or both rows and columns have been declared and cells have not been manually placed inside the explicit grid",
                    { node: decl2 }
                  );
                } else if ((status === true || status === "no-autoplace") && !hasGridTemplate(decl2)) {
                  result.warn(
                    "grid-gap only works if grid-template(-areas) is being used",
                    { node: decl2 }
                  );
                }
              } else if (prop === "grid-auto-columns") {
                result.warn("grid-auto-columns is not supported by IE", {
                  node: decl2
                });
                return void 0;
              } else if (prop === "grid-auto-rows") {
                result.warn("grid-auto-rows is not supported by IE", { node: decl2 });
                return void 0;
              } else if (prop === "grid-auto-flow") {
                let hasRows = parent.some((i) => i.prop === "grid-template-rows");
                let hasCols = parent.some((i) => i.prop === "grid-template-columns");
                if (hasGridTemplate(decl2)) {
                  result.warn("grid-auto-flow is not supported by IE", {
                    node: decl2
                  });
                } else if (value.includes("dense")) {
                  result.warn("grid-auto-flow: dense is not supported by IE", {
                    node: decl2
                  });
                } else if (!hasRows && !hasCols) {
                  result.warn(
                    "grid-auto-flow works only if grid-template-rows and grid-template-columns are present in the same rule",
                    { node: decl2 }
                  );
                }
                return void 0;
              } else if (value.includes("auto-fit")) {
                result.warn("auto-fit value is not supported by IE", {
                  node: decl2,
                  word: "auto-fit"
                });
                return void 0;
              } else if (value.includes("auto-fill")) {
                result.warn("auto-fill value is not supported by IE", {
                  node: decl2,
                  word: "auto-fill"
                });
                return void 0;
              } else if (prop.startsWith("grid-template") && value.includes("[")) {
                result.warn(
                  "Autoprefixer currently does not support line names. Try using grid-template-areas instead.",
                  { node: decl2, word: "[" }
                );
              }
            }
            if (value.includes("radial-gradient")) {
              if (OLD_RADIAL.test(decl2.value)) {
                result.warn(
                  "Gradient has outdated direction syntax. New syntax is like `closest-side at 0 0` instead of `0 0, closest-side`.",
                  { node: decl2 }
                );
              } else {
                let ast = parser(value);
                for (let i of ast.nodes) {
                  if (i.type === "function" && i.value === "radial-gradient") {
                    for (let word of i.nodes) {
                      if (word.type === "word") {
                        if (word.value === "cover") {
                          result.warn(
                            "Gradient has outdated direction syntax. Replace `cover` to `farthest-corner`.",
                            { node: decl2 }
                          );
                        } else if (word.value === "contain") {
                          result.warn(
                            "Gradient has outdated direction syntax. Replace `contain` to `closest-side`.",
                            { node: decl2 }
                          );
                        }
                      }
                    }
                  }
                }
              }
            }
            if (value.includes("linear-gradient")) {
              if (OLD_LINEAR.test(value)) {
                result.warn(
                  "Gradient has outdated direction syntax. New syntax is like `to left` instead of `right`.",
                  { node: decl2 }
                );
              }
            }
          }
          if (SIZES.includes(decl2.prop)) {
            if (!decl2.value.includes("-fill-available")) {
              if (decl2.value.includes("fill-available")) {
                result.warn(
                  "Replace fill-available to stretch, because spec had been changed",
                  { node: decl2 }
                );
              } else if (decl2.value.includes("fill")) {
                let ast = parser(value);
                if (ast.nodes.some((i) => i.type === "word" && i.value === "fill")) {
                  result.warn(
                    "Replace fill to stretch, because spec had been changed",
                    { node: decl2 }
                  );
                }
              }
            }
          }
          let prefixer;
          if (decl2.prop === "transition" || decl2.prop === "transition-property") {
            return this.prefixes.transition.add(decl2, result);
          } else if (decl2.prop === "align-self") {
            let display = this.displayType(decl2);
            if (display !== "grid" && this.prefixes.options.flexbox !== false) {
              prefixer = this.prefixes.add["align-self"];
              if (prefixer && prefixer.prefixes) {
                prefixer.process(decl2);
              }
            }
            if (this.gridStatus(decl2, result) !== false) {
              prefixer = this.prefixes.add["grid-row-align"];
              if (prefixer && prefixer.prefixes) {
                return prefixer.process(decl2, result);
              }
            }
          } else if (decl2.prop === "justify-self") {
            if (this.gridStatus(decl2, result) !== false) {
              prefixer = this.prefixes.add["grid-column-align"];
              if (prefixer && prefixer.prefixes) {
                return prefixer.process(decl2, result);
              }
            }
          } else if (decl2.prop === "place-self") {
            prefixer = this.prefixes.add["place-self"];
            if (prefixer && prefixer.prefixes && this.gridStatus(decl2, result) !== false) {
              return prefixer.process(decl2, result);
            }
          } else {
            prefixer = this.prefixes.add[decl2.prop];
            if (prefixer && prefixer.prefixes) {
              return prefixer.process(decl2, result);
            }
          }
          return void 0;
        });
        if (this.gridStatus(css, result)) {
          insertAreas(css, this.disabled);
        }
        return css.walkDecls((decl2) => {
          if (this.disabledValue(decl2, result))
            return;
          let unprefixed = this.prefixes.unprefixed(decl2.prop);
          let list2 = this.prefixes.values("add", unprefixed);
          if (Array.isArray(list2)) {
            for (let value of list2) {
              if (value.process)
                value.process(decl2, result);
            }
          }
          Value.save(this.prefixes, decl2);
        });
      }
      remove(css, result) {
        let resolution = this.prefixes.remove["@resolution"];
        css.walkAtRules((rule2, i) => {
          if (this.prefixes.remove[`@${rule2.name}`]) {
            if (!this.disabled(rule2, result)) {
              rule2.parent.removeChild(i);
            }
          } else if (rule2.name === "media" && rule2.params.includes("-resolution") && resolution) {
            resolution.clean(rule2);
          }
        });
        for (let checker of this.prefixes.remove.selectors) {
          css.walkRules((rule2, i) => {
            if (checker.check(rule2)) {
              if (!this.disabled(rule2, result)) {
                rule2.parent.removeChild(i);
              }
            }
          });
        }
        return css.walkDecls((decl2, i) => {
          if (this.disabled(decl2, result))
            return;
          let rule2 = decl2.parent;
          let unprefixed = this.prefixes.unprefixed(decl2.prop);
          if (decl2.prop === "transition" || decl2.prop === "transition-property") {
            this.prefixes.transition.remove(decl2);
          }
          if (this.prefixes.remove[decl2.prop] && this.prefixes.remove[decl2.prop].remove) {
            let notHack = this.prefixes.group(decl2).down((other) => {
              return this.prefixes.normalize(other.prop) === unprefixed;
            });
            if (unprefixed === "flex-flow") {
              notHack = true;
            }
            if (decl2.prop === "-webkit-box-orient") {
              let hacks = { "flex-direction": true, "flex-flow": true };
              if (!decl2.parent.some((j) => hacks[j.prop]))
                return;
            }
            if (notHack && !this.withHackValue(decl2)) {
              if (decl2.raw("before").includes("\n")) {
                this.reduceSpaces(decl2);
              }
              rule2.removeChild(i);
              return;
            }
          }
          for (let checker of this.prefixes.values("remove", unprefixed)) {
            if (!checker.check)
              continue;
            if (!checker.check(decl2.value))
              continue;
            unprefixed = checker.unprefixed;
            let notHack = this.prefixes.group(decl2).down((other) => {
              return other.value.includes(unprefixed);
            });
            if (notHack) {
              rule2.removeChild(i);
              return;
            }
          }
        });
      }
      withHackValue(decl2) {
        return decl2.prop === "-webkit-background-clip" && decl2.value === "text";
      }
      disabledValue(node, result) {
        if (this.gridStatus(node, result) === false && node.type === "decl") {
          if (node.prop === "display" && node.value.includes("grid")) {
            return true;
          }
        }
        if (this.prefixes.options.flexbox === false && node.type === "decl") {
          if (node.prop === "display" && node.value.includes("flex")) {
            return true;
          }
        }
        if (node.type === "decl" && node.prop === "content") {
          return true;
        }
        return this.disabled(node, result);
      }
      disabledDecl(node, result) {
        if (this.gridStatus(node, result) === false && node.type === "decl") {
          if (node.prop.includes("grid") || node.prop === "justify-items") {
            return true;
          }
        }
        if (this.prefixes.options.flexbox === false && node.type === "decl") {
          let other = ["order", "justify-content", "align-items", "align-content"];
          if (node.prop.includes("flex") || other.includes(node.prop)) {
            return true;
          }
        }
        return this.disabled(node, result);
      }
      disabled(node, result) {
        if (!node)
          return false;
        if (node._autoprefixerDisabled !== void 0) {
          return node._autoprefixerDisabled;
        }
        if (node.parent) {
          let p = node.prev();
          if (p && p.type === "comment" && IGNORE_NEXT.test(p.text)) {
            node._autoprefixerDisabled = true;
            node._autoprefixerSelfDisabled = true;
            return true;
          }
        }
        let value = null;
        if (node.nodes) {
          let status;
          node.each((i) => {
            if (i.type !== "comment")
              return;
            if (/(!\s*)?autoprefixer:\s*(off|on)/i.test(i.text)) {
              if (typeof status !== "undefined") {
                result.warn(
                  "Second Autoprefixer control comment was ignored. Autoprefixer applies control comment to whole block, not to next rules.",
                  { node: i }
                );
              } else {
                status = /on/i.test(i.text);
              }
            }
          });
          if (status !== void 0) {
            value = !status;
          }
        }
        if (!node.nodes || value === null) {
          if (node.parent) {
            let isParentDisabled = this.disabled(node.parent, result);
            if (node.parent._autoprefixerSelfDisabled === true) {
              value = false;
            } else {
              value = isParentDisabled;
            }
          } else {
            value = false;
          }
        }
        node._autoprefixerDisabled = value;
        return value;
      }
      reduceSpaces(decl2) {
        let stop = false;
        this.prefixes.group(decl2).up(() => {
          stop = true;
          return true;
        });
        if (stop) {
          return;
        }
        let parts = decl2.raw("before").split("\n");
        let prevMin = parts[parts.length - 1].length;
        let diff = false;
        this.prefixes.group(decl2).down((other) => {
          parts = other.raw("before").split("\n");
          let last = parts.length - 1;
          if (parts[last].length > prevMin) {
            if (diff === false) {
              diff = parts[last].length - prevMin;
            }
            parts[last] = parts[last].slice(0, -diff);
            other.raws.before = parts.join("\n");
          }
        });
      }
      displayType(decl2) {
        for (let i of decl2.parent.nodes) {
          if (i.prop !== "display") {
            continue;
          }
          if (i.value.includes("flex")) {
            return "flex";
          }
          if (i.value.includes("grid")) {
            return "grid";
          }
        }
        return false;
      }
      gridStatus(node, result) {
        if (!node)
          return false;
        if (node._autoprefixerGridStatus !== void 0) {
          return node._autoprefixerGridStatus;
        }
        let value = null;
        if (node.nodes) {
          let status;
          node.each((i) => {
            if (i.type !== "comment")
              return;
            if (GRID_REGEX.test(i.text)) {
              let hasAutoplace = /:\s*autoplace/i.test(i.text);
              let noAutoplace = /no-autoplace/i.test(i.text);
              if (typeof status !== "undefined") {
                result.warn(
                  "Second Autoprefixer grid control comment was ignored. Autoprefixer applies control comments to the whole block, not to the next rules.",
                  { node: i }
                );
              } else if (hasAutoplace) {
                status = "autoplace";
              } else if (noAutoplace) {
                status = true;
              } else {
                status = /on/i.test(i.text);
              }
            }
          });
          if (status !== void 0) {
            value = status;
          }
        }
        if (node.type === "atrule" && node.name === "supports") {
          let params = node.params;
          if (params.includes("grid") && params.includes("auto")) {
            value = false;
          }
        }
        if (!node.nodes || value === null) {
          if (node.parent) {
            let isParentGrid = this.gridStatus(node.parent, result);
            if (node.parent._autoprefixerSelfDisabled === true) {
              value = false;
            } else {
              value = isParentGrid;
            }
          } else if (typeof this.prefixes.options.grid !== "undefined") {
            value = this.prefixes.options.grid;
          } else if (typeof process.env.AUTOPREFIXER_GRID !== "undefined") {
            if (process.env.AUTOPREFIXER_GRID === "autoplace") {
              value = "autoplace";
            } else {
              value = true;
            }
          } else {
            value = false;
          }
        }
        node._autoprefixerGridStatus = value;
        return value;
      }
    };
    module.exports = Processor2;
  }
});
var require_brackets = __commonJS({
  "../../node_modules/autoprefixer/lib/brackets.js"(exports, module) {
    init_process();
    init_buffer();
    function last(array) {
      return array[array.length - 1];
    }
    var brackets = {
      parse(str) {
        let current = [""];
        let stack = [current];
        for (let sym of str) {
          if (sym === "(") {
            current = [""];
            last(stack).push(current);
            stack.push(current);
            continue;
          }
          if (sym === ")") {
            stack.pop();
            current = last(stack);
            current.push("");
            continue;
          }
          current[current.length - 1] += sym;
        }
        return stack[0];
      },
      stringify(ast) {
        let result = "";
        for (let i of ast) {
          if (typeof i === "object") {
            result += `(${brackets.stringify(i)})`;
            continue;
          }
          result += i;
        }
        return result;
      }
    };
    module.exports = brackets;
  }
});
var require_supports = __commonJS({
  "../../node_modules/autoprefixer/lib/supports.js"(exports, module) {
    init_process();
    init_buffer();
    var featureQueries = require_css_featurequeries();
    var { feature } = require_unpacker();
    var { parse: parse2 } = require_postcss();
    var Browsers = require_browsers3();
    var brackets = require_brackets();
    var Value = require_value();
    var utils = require_utils();
    var data = feature(featureQueries);
    var supported = [];
    for (let browser in data.stats) {
      let versions = data.stats[browser];
      for (let version in versions) {
        let support = versions[version];
        if (/y/.test(support)) {
          supported.push(browser + " " + version);
        }
      }
    }
    var Supports = class {
      constructor(Prefixes, all) {
        this.Prefixes = Prefixes;
        this.all = all;
      }
      prefixer() {
        if (this.prefixerCache) {
          return this.prefixerCache;
        }
        let filtered = this.all.browsers.selected.filter((i) => {
          return supported.includes(i);
        });
        let browsers = new Browsers(
          this.all.browsers.data,
          filtered,
          this.all.options
        );
        this.prefixerCache = new this.Prefixes(
          this.all.data,
          browsers,
          this.all.options
        );
        return this.prefixerCache;
      }
      parse(str) {
        let parts = str.split(":");
        let prop = parts[0];
        let value = parts[1];
        if (!value)
          value = "";
        return [prop.trim(), value.trim()];
      }
      virtual(str) {
        let [prop, value] = this.parse(str);
        let rule2 = parse2("a{}").first;
        rule2.append({ prop, value, raws: { before: "" } });
        return rule2;
      }
      prefixed(str) {
        let rule2 = this.virtual(str);
        if (this.disabled(rule2.first)) {
          return rule2.nodes;
        }
        let result = { warn: () => null };
        let prefixer = this.prefixer().add[rule2.first.prop];
        prefixer && prefixer.process && prefixer.process(rule2.first, result);
        for (let decl2 of rule2.nodes) {
          for (let value of this.prefixer().values("add", rule2.first.prop)) {
            value.process(decl2);
          }
          Value.save(this.all, decl2);
        }
        return rule2.nodes;
      }
      isNot(node) {
        return typeof node === "string" && /not\s*/i.test(node);
      }
      isOr(node) {
        return typeof node === "string" && /\s*or\s*/i.test(node);
      }
      isProp(node) {
        return typeof node === "object" && node.length === 1 && typeof node[0] === "string";
      }
      isHack(all, unprefixed) {
        let check = new RegExp(`(\\(|\\s)${utils.escapeRegexp(unprefixed)}:`);
        return !check.test(all);
      }
      toRemove(str, all) {
        let [prop, value] = this.parse(str);
        let unprefixed = this.all.unprefixed(prop);
        let cleaner = this.all.cleaner();
        if (cleaner.remove[prop] && cleaner.remove[prop].remove && !this.isHack(all, unprefixed)) {
          return true;
        }
        for (let checker of cleaner.values("remove", unprefixed)) {
          if (checker.check(value)) {
            return true;
          }
        }
        return false;
      }
      remove(nodes, all) {
        let i = 0;
        while (i < nodes.length) {
          if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {
            if (this.toRemove(nodes[i][0], all)) {
              nodes.splice(i, 2);
              continue;
            }
            i += 2;
            continue;
          }
          if (typeof nodes[i] === "object") {
            nodes[i] = this.remove(nodes[i], all);
          }
          i += 1;
        }
        return nodes;
      }
      cleanBrackets(nodes) {
        return nodes.map((i) => {
          if (typeof i !== "object") {
            return i;
          }
          if (i.length === 1 && typeof i[0] === "object") {
            return this.cleanBrackets(i[0]);
          }
          return this.cleanBrackets(i);
        });
      }
      convert(progress) {
        let result = [""];
        for (let i of progress) {
          result.push([`${i.prop}: ${i.value}`]);
          result.push(" or ");
        }
        result[result.length - 1] = "";
        return result;
      }
      normalize(nodes) {
        if (typeof nodes !== "object") {
          return nodes;
        }
        nodes = nodes.filter((i) => i !== "");
        if (typeof nodes[0] === "string") {
          let firstNode = nodes[0].trim();
          if (firstNode.includes(":") || firstNode === "selector" || firstNode === "not selector") {
            return [brackets.stringify(nodes)];
          }
        }
        return nodes.map((i) => this.normalize(i));
      }
      add(nodes, all) {
        return nodes.map((i) => {
          if (this.isProp(i)) {
            let prefixed = this.prefixed(i[0]);
            if (prefixed.length > 1) {
              return this.convert(prefixed);
            }
            return i;
          }
          if (typeof i === "object") {
            return this.add(i, all);
          }
          return i;
        });
      }
      process(rule2) {
        let ast = brackets.parse(rule2.params);
        ast = this.normalize(ast);
        ast = this.remove(ast, rule2.params);
        ast = this.add(ast, rule2.params);
        ast = this.cleanBrackets(ast);
        rule2.params = brackets.stringify(ast);
      }
      disabled(node) {
        if (!this.all.options.grid) {
          if (node.prop === "display" && node.value.includes("grid")) {
            return true;
          }
          if (node.prop.includes("grid") || node.prop === "justify-items") {
            return true;
          }
        }
        if (this.all.options.flexbox === false) {
          if (node.prop === "display" && node.value.includes("flex")) {
            return true;
          }
          let other = ["order", "justify-content", "align-items", "align-content"];
          if (node.prop.includes("flex") || other.includes(node.prop)) {
            return true;
          }
        }
        return false;
      }
    };
    module.exports = Supports;
  }
});
var require_old_selector = __commonJS({
  "../../node_modules/autoprefixer/lib/old-selector.js"(exports, module) {
    init_process();
    init_buffer();
    var OldSelector = class {
      constructor(selector, prefix) {
        this.prefix = prefix;
        this.prefixed = selector.prefixed(this.prefix);
        this.regexp = selector.regexp(this.prefix);
        this.prefixeds = selector.possible().map((x) => [selector.prefixed(x), selector.regexp(x)]);
        this.unprefixed = selector.name;
        this.nameRegexp = selector.regexp();
      }
      isHack(rule2) {
        let index = rule2.parent.index(rule2) + 1;
        let rules = rule2.parent.nodes;
        while (index < rules.length) {
          let before = rules[index].selector;
          if (!before) {
            return true;
          }
          if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {
            return false;
          }
          let some = false;
          for (let [string, regexp] of this.prefixeds) {
            if (before.includes(string) && before.match(regexp)) {
              some = true;
              break;
            }
          }
          if (!some) {
            return true;
          }
          index += 1;
        }
        return true;
      }
      check(rule2) {
        if (!rule2.selector.includes(this.prefixed)) {
          return false;
        }
        if (!rule2.selector.match(this.regexp)) {
          return false;
        }
        if (this.isHack(rule2)) {
          return false;
        }
        return true;
      }
    };
    module.exports = OldSelector;
  }
});
var require_selector = __commonJS({
  "../../node_modules/autoprefixer/lib/selector.js"(exports, module) {
    init_process();
    init_buffer();
    var { list: list2 } = require_postcss();
    var OldSelector = require_old_selector();
    var Prefixer = require_prefixer();
    var Browsers = require_browsers3();
    var utils = require_utils();
    var Selector = class extends Prefixer {
      constructor(name, prefixes, all) {
        super(name, prefixes, all);
        this.regexpCache = /* @__PURE__ */ new Map();
      }
      check(rule2) {
        if (rule2.selector.includes(this.name)) {
          return !!rule2.selector.match(this.regexp());
        }
        return false;
      }
      prefixed(prefix) {
        return this.name.replace(/^(\W*)/, `$1${prefix}`);
      }
      regexp(prefix) {
        if (!this.regexpCache.has(prefix)) {
          let name = prefix ? this.prefixed(prefix) : this.name;
          this.regexpCache.set(
            prefix,
            new RegExp(`(^|[^:"'=])${utils.escapeRegexp(name)}`, "gi")
          );
        }
        return this.regexpCache.get(prefix);
      }
      possible() {
        return Browsers.prefixes();
      }
      prefixeds(rule2) {
        if (rule2._autoprefixerPrefixeds) {
          if (rule2._autoprefixerPrefixeds[this.name]) {
            return rule2._autoprefixerPrefixeds;
          }
        } else {
          rule2._autoprefixerPrefixeds = {};
        }
        let prefixeds = {};
        if (rule2.selector.includes(",")) {
          let ruleParts = list2.comma(rule2.selector);
          let toProcess = ruleParts.filter((el) => el.includes(this.name));
          for (let prefix of this.possible()) {
            prefixeds[prefix] = toProcess.map((el) => this.replace(el, prefix)).join(", ");
          }
        } else {
          for (let prefix of this.possible()) {
            prefixeds[prefix] = this.replace(rule2.selector, prefix);
          }
        }
        rule2._autoprefixerPrefixeds[this.name] = prefixeds;
        return rule2._autoprefixerPrefixeds;
      }
      already(rule2, prefixeds, prefix) {
        let index = rule2.parent.index(rule2) - 1;
        while (index >= 0) {
          let before = rule2.parent.nodes[index];
          if (before.type !== "rule") {
            return false;
          }
          let some = false;
          for (let key in prefixeds[this.name]) {
            let prefixed = prefixeds[this.name][key];
            if (before.selector === prefixed) {
              if (prefix === key) {
                return true;
              } else {
                some = true;
                break;
              }
            }
          }
          if (!some) {
            return false;
          }
          index -= 1;
        }
        return false;
      }
      replace(selector, prefix) {
        return selector.replace(this.regexp(), `$1${this.prefixed(prefix)}`);
      }
      add(rule2, prefix) {
        let prefixeds = this.prefixeds(rule2);
        if (this.already(rule2, prefixeds, prefix)) {
          return;
        }
        let cloned = this.clone(rule2, { selector: prefixeds[this.name][prefix] });
        rule2.parent.insertBefore(rule2, cloned);
      }
      old(prefix) {
        return new OldSelector(this, prefix);
      }
    };
    module.exports = Selector;
  }
});
var require_at_rule2 = __commonJS({
  "../../node_modules/autoprefixer/lib/at-rule.js"(exports, module) {
    init_process();
    init_buffer();
    var Prefixer = require_prefixer();
    var AtRule2 = class extends Prefixer {
      add(rule2, prefix) {
        let prefixed = prefix + rule2.name;
        let already = rule2.parent.some(
          (i) => i.name === prefixed && i.params === rule2.params
        );
        if (already) {
          return void 0;
        }
        let cloned = this.clone(rule2, { name: prefixed });
        return rule2.parent.insertBefore(rule2, cloned);
      }
      process(node) {
        let parent = this.parentPrefix(node);
        for (let prefix of this.prefixes) {
          if (!parent || parent === prefix) {
            this.add(node, prefix);
          }
        }
      }
    };
    module.exports = AtRule2;
  }
});
var require_fullscreen2 = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/fullscreen.js"(exports, module) {
    init_process();
    init_buffer();
    var Selector = require_selector();
    var Fullscreen = class extends Selector {
      prefixed(prefix) {
        if (prefix === "-webkit-") {
          return ":-webkit-full-screen";
        }
        if (prefix === "-moz-") {
          return ":-moz-full-screen";
        }
        return `:${prefix}fullscreen`;
      }
    };
    Fullscreen.names = [":fullscreen"];
    module.exports = Fullscreen;
  }
});
var require_placeholder = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/placeholder.js"(exports, module) {
    init_process();
    init_buffer();
    var Selector = require_selector();
    var Placeholder = class extends Selector {
      possible() {
        return super.possible().concat(["-moz- old", "-ms- old"]);
      }
      prefixed(prefix) {
        if (prefix === "-webkit-") {
          return "::-webkit-input-placeholder";
        }
        if (prefix === "-ms-") {
          return "::-ms-input-placeholder";
        }
        if (prefix === "-ms- old") {
          return ":-ms-input-placeholder";
        }
        if (prefix === "-moz- old") {
          return ":-moz-placeholder";
        }
        return `::${prefix}placeholder`;
      }
    };
    Placeholder.names = ["::placeholder"];
    module.exports = Placeholder;
  }
});
var require_placeholder_shown = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/placeholder-shown.js"(exports, module) {
    init_process();
    init_buffer();
    var Selector = require_selector();
    var PlaceholderShown = class extends Selector {
      prefixed(prefix) {
        if (prefix === "-ms-") {
          return ":-ms-input-placeholder";
        }
        return `:${prefix}placeholder-shown`;
      }
    };
    PlaceholderShown.names = [":placeholder-shown"];
    module.exports = PlaceholderShown;
  }
});
var require_file_selector_button = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/file-selector-button.js"(exports, module) {
    init_process();
    init_buffer();
    var Selector = require_selector();
    var utils = require_utils();
    var FileSelectorButton = class extends Selector {
      constructor(name, prefixes, all) {
        super(name, prefixes, all);
        if (this.prefixes) {
          this.prefixes = utils.uniq(this.prefixes.map(() => "-webkit-"));
        }
      }
      prefixed(prefix) {
        if (prefix === "-webkit-") {
          return "::-webkit-file-upload-button";
        }
        return `::${prefix}file-selector-button`;
      }
    };
    FileSelectorButton.names = ["::file-selector-button"];
    module.exports = FileSelectorButton;
  }
});
var require_flex_spec = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/flex-spec.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = function(prefix) {
      let spec;
      if (prefix === "-webkit- 2009" || prefix === "-moz-") {
        spec = 2009;
      } else if (prefix === "-ms-") {
        spec = 2012;
      } else if (prefix === "-webkit-") {
        spec = "final";
      }
      if (prefix === "-webkit- 2009") {
        prefix = "-webkit-";
      }
      return [spec, prefix];
    };
  }
});
var require_flex = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/flex.js"(exports, module) {
    init_process();
    init_buffer();
    var list2 = require_postcss().list;
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var Flex = class extends Declaration3 {
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2009) {
          return prefix + "box-flex";
        }
        return super.prefixed(prop, prefix);
      }
      normalize() {
        return "flex";
      }
      set(decl2, prefix) {
        let spec = flexSpec(prefix)[0];
        if (spec === 2009) {
          decl2.value = list2.space(decl2.value)[0];
          decl2.value = Flex.oldValues[decl2.value] || decl2.value;
          return super.set(decl2, prefix);
        }
        if (spec === 2012) {
          let components = list2.space(decl2.value);
          if (components.length === 3 && components[2] === "0") {
            decl2.value = components.slice(0, 2).concat("0px").join(" ");
          }
        }
        return super.set(decl2, prefix);
      }
    };
    Flex.names = ["flex", "box-flex"];
    Flex.oldValues = {
      auto: "1",
      none: "0"
    };
    module.exports = Flex;
  }
});
var require_order = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/order.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var Order = class extends Declaration3 {
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2009) {
          return prefix + "box-ordinal-group";
        }
        if (spec === 2012) {
          return prefix + "flex-order";
        }
        return super.prefixed(prop, prefix);
      }
      normalize() {
        return "order";
      }
      set(decl2, prefix) {
        let spec = flexSpec(prefix)[0];
        if (spec === 2009 && /\d/.test(decl2.value)) {
          decl2.value = (parseInt(decl2.value) + 1).toString();
          return super.set(decl2, prefix);
        }
        return super.set(decl2, prefix);
      }
    };
    Order.names = ["order", "flex-order", "box-ordinal-group"];
    module.exports = Order;
  }
});
var require_filter = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/filter.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var Filter = class extends Declaration3 {
      check(decl2) {
        let v = decl2.value;
        return !v.toLowerCase().includes("alpha(") && !v.includes("DXImageTransform.Microsoft") && !v.includes("data:image/svg+xml");
      }
    };
    Filter.names = ["filter"];
    module.exports = Filter;
  }
});
var require_grid_end = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-end.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var { isPureNumber } = require_utils();
    var GridEnd = class extends Declaration3 {
      insert(decl2, prefix, prefixes, result) {
        if (prefix !== "-ms-")
          return super.insert(decl2, prefix, prefixes);
        let clonedDecl = this.clone(decl2);
        let startProp = decl2.prop.replace(/end$/, "start");
        let spanProp = prefix + decl2.prop.replace(/end$/, "span");
        if (decl2.parent.some((i) => i.prop === spanProp)) {
          return void 0;
        }
        clonedDecl.prop = spanProp;
        if (decl2.value.includes("span")) {
          clonedDecl.value = decl2.value.replace(/span\s/i, "");
        } else {
          let startDecl;
          decl2.parent.walkDecls(startProp, (d) => {
            startDecl = d;
          });
          if (startDecl) {
            if (isPureNumber(startDecl.value)) {
              let value = Number(decl2.value) - Number(startDecl.value) + "";
              clonedDecl.value = value;
            } else {
              return void 0;
            }
          } else {
            decl2.warn(
              result,
              `Can not prefix ${decl2.prop} (${startProp} is not found)`
            );
          }
        }
        decl2.cloneBefore(clonedDecl);
        return void 0;
      }
    };
    GridEnd.names = ["grid-row-end", "grid-column-end"];
    module.exports = GridEnd;
  }
});
var require_animation = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/animation.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var Animation = class extends Declaration3 {
      check(decl2) {
        return !decl2.value.split(/\s+/).some((i) => {
          let lower = i.toLowerCase();
          return lower === "reverse" || lower === "alternate-reverse";
        });
      }
    };
    Animation.names = ["animation", "animation-direction"];
    module.exports = Animation;
  }
});
var require_flex_flow = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/flex-flow.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var FlexFlow = class extends Declaration3 {
      insert(decl2, prefix, prefixes) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec !== 2009) {
          return super.insert(decl2, prefix, prefixes);
        }
        let values = decl2.value.split(/\s+/).filter((i) => i !== "wrap" && i !== "nowrap" && "wrap-reverse");
        if (values.length === 0) {
          return void 0;
        }
        let already = decl2.parent.some(
          (i) => i.prop === prefix + "box-orient" || i.prop === prefix + "box-direction"
        );
        if (already) {
          return void 0;
        }
        let value = values[0];
        let orient = value.includes("row") ? "horizontal" : "vertical";
        let dir = value.includes("reverse") ? "reverse" : "normal";
        let cloned = this.clone(decl2);
        cloned.prop = prefix + "box-orient";
        cloned.value = orient;
        if (this.needCascade(decl2)) {
          cloned.raws.before = this.calcBefore(prefixes, decl2, prefix);
        }
        decl2.parent.insertBefore(decl2, cloned);
        cloned = this.clone(decl2);
        cloned.prop = prefix + "box-direction";
        cloned.value = dir;
        if (this.needCascade(decl2)) {
          cloned.raws.before = this.calcBefore(prefixes, decl2, prefix);
        }
        return decl2.parent.insertBefore(decl2, cloned);
      }
    };
    FlexFlow.names = ["flex-flow", "box-direction", "box-orient"];
    module.exports = FlexFlow;
  }
});
var require_flex_grow = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/flex-grow.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var Flex = class extends Declaration3 {
      normalize() {
        return "flex";
      }
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2009) {
          return prefix + "box-flex";
        }
        if (spec === 2012) {
          return prefix + "flex-positive";
        }
        return super.prefixed(prop, prefix);
      }
    };
    Flex.names = ["flex-grow", "flex-positive"];
    module.exports = Flex;
  }
});
var require_flex_wrap = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/flex-wrap.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var FlexWrap = class extends Declaration3 {
      set(decl2, prefix) {
        let spec = flexSpec(prefix)[0];
        if (spec !== 2009) {
          return super.set(decl2, prefix);
        }
        return void 0;
      }
    };
    FlexWrap.names = ["flex-wrap"];
    module.exports = FlexWrap;
  }
});
var require_grid_area = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-area.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var utils = require_grid_utils();
    var GridArea = class extends Declaration3 {
      insert(decl2, prefix, prefixes, result) {
        if (prefix !== "-ms-")
          return super.insert(decl2, prefix, prefixes);
        let values = utils.parse(decl2);
        let [rowStart, rowSpan] = utils.translate(values, 0, 2);
        let [columnStart, columnSpan] = utils.translate(values, 1, 3);
        [
          ["grid-row", rowStart],
          ["grid-row-span", rowSpan],
          ["grid-column", columnStart],
          ["grid-column-span", columnSpan]
        ].forEach(([prop, value]) => {
          utils.insertDecl(decl2, prop, value);
        });
        utils.warnTemplateSelectorNotFound(decl2, result);
        utils.warnIfGridRowColumnExists(decl2, result);
        return void 0;
      }
    };
    GridArea.names = ["grid-area"];
    module.exports = GridArea;
  }
});
var require_place_self = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/place-self.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var utils = require_grid_utils();
    var PlaceSelf = class extends Declaration3 {
      insert(decl2, prefix, prefixes) {
        if (prefix !== "-ms-")
          return super.insert(decl2, prefix, prefixes);
        if (decl2.parent.some((i) => i.prop === "-ms-grid-row-align")) {
          return void 0;
        }
        let [[first, second]] = utils.parse(decl2);
        if (second) {
          utils.insertDecl(decl2, "grid-row-align", first);
          utils.insertDecl(decl2, "grid-column-align", second);
        } else {
          utils.insertDecl(decl2, "grid-row-align", first);
          utils.insertDecl(decl2, "grid-column-align", first);
        }
        return void 0;
      }
    };
    PlaceSelf.names = ["place-self"];
    module.exports = PlaceSelf;
  }
});
var require_grid_start = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-start.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var GridStart = class extends Declaration3 {
      check(decl2) {
        let value = decl2.value;
        return !value.includes("/") && !value.includes("span");
      }
      normalize(prop) {
        return prop.replace("-start", "");
      }
      prefixed(prop, prefix) {
        let result = super.prefixed(prop, prefix);
        if (prefix === "-ms-") {
          result = result.replace("-start", "");
        }
        return result;
      }
    };
    GridStart.names = ["grid-row-start", "grid-column-start"];
    module.exports = GridStart;
  }
});
var require_align_self = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/align-self.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var AlignSelf = class extends Declaration3 {
      check(decl2) {
        return decl2.parent && !decl2.parent.some((i) => {
          return i.prop && i.prop.startsWith("grid-");
        });
      }
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2012) {
          return prefix + "flex-item-align";
        }
        return super.prefixed(prop, prefix);
      }
      normalize() {
        return "align-self";
      }
      set(decl2, prefix) {
        let spec = flexSpec(prefix)[0];
        if (spec === 2012) {
          decl2.value = AlignSelf.oldValues[decl2.value] || decl2.value;
          return super.set(decl2, prefix);
        }
        if (spec === "final") {
          return super.set(decl2, prefix);
        }
        return void 0;
      }
    };
    AlignSelf.names = ["align-self", "flex-item-align"];
    AlignSelf.oldValues = {
      "flex-end": "end",
      "flex-start": "start"
    };
    module.exports = AlignSelf;
  }
});
var require_appearance = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/appearance.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var utils = require_utils();
    var Appearance = class extends Declaration3 {
      constructor(name, prefixes, all) {
        super(name, prefixes, all);
        if (this.prefixes) {
          this.prefixes = utils.uniq(
            this.prefixes.map((i) => {
              if (i === "-ms-") {
                return "-webkit-";
              }
              return i;
            })
          );
        }
      }
    };
    Appearance.names = ["appearance"];
    module.exports = Appearance;
  }
});
var require_flex_basis = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/flex-basis.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var FlexBasis = class extends Declaration3 {
      normalize() {
        return "flex-basis";
      }
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2012) {
          return prefix + "flex-preferred-size";
        }
        return super.prefixed(prop, prefix);
      }
      set(decl2, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2012 || spec === "final") {
          return super.set(decl2, prefix);
        }
        return void 0;
      }
    };
    FlexBasis.names = ["flex-basis", "flex-preferred-size"];
    module.exports = FlexBasis;
  }
});
var require_mask_border = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/mask-border.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var MaskBorder = class extends Declaration3 {
      normalize() {
        return this.name.replace("box-image", "border");
      }
      prefixed(prop, prefix) {
        let result = super.prefixed(prop, prefix);
        if (prefix === "-webkit-") {
          result = result.replace("border", "box-image");
        }
        return result;
      }
    };
    MaskBorder.names = [
      "mask-border",
      "mask-border-source",
      "mask-border-slice",
      "mask-border-width",
      "mask-border-outset",
      "mask-border-repeat",
      "mask-box-image",
      "mask-box-image-source",
      "mask-box-image-slice",
      "mask-box-image-width",
      "mask-box-image-outset",
      "mask-box-image-repeat"
    ];
    module.exports = MaskBorder;
  }
});
var require_mask_composite = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/mask-composite.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var MaskComposite = class extends Declaration3 {
      insert(decl2, prefix, prefixes) {
        let isCompositeProp = decl2.prop === "mask-composite";
        let compositeValues;
        if (isCompositeProp) {
          compositeValues = decl2.value.split(",");
        } else {
          compositeValues = decl2.value.match(MaskComposite.regexp) || [];
        }
        compositeValues = compositeValues.map((el) => el.trim()).filter((el) => el);
        let hasCompositeValues = compositeValues.length;
        let compositeDecl;
        if (hasCompositeValues) {
          compositeDecl = this.clone(decl2);
          compositeDecl.value = compositeValues.map((value) => MaskComposite.oldValues[value] || value).join(", ");
          if (compositeValues.includes("intersect")) {
            compositeDecl.value += ", xor";
          }
          compositeDecl.prop = prefix + "mask-composite";
        }
        if (isCompositeProp) {
          if (!hasCompositeValues) {
            return void 0;
          }
          if (this.needCascade(decl2)) {
            compositeDecl.raws.before = this.calcBefore(prefixes, decl2, prefix);
          }
          return decl2.parent.insertBefore(decl2, compositeDecl);
        }
        let cloned = this.clone(decl2);
        cloned.prop = prefix + cloned.prop;
        if (hasCompositeValues) {
          cloned.value = cloned.value.replace(MaskComposite.regexp, "");
        }
        if (this.needCascade(decl2)) {
          cloned.raws.before = this.calcBefore(prefixes, decl2, prefix);
        }
        decl2.parent.insertBefore(decl2, cloned);
        if (!hasCompositeValues) {
          return decl2;
        }
        if (this.needCascade(decl2)) {
          compositeDecl.raws.before = this.calcBefore(prefixes, decl2, prefix);
        }
        return decl2.parent.insertBefore(decl2, compositeDecl);
      }
    };
    MaskComposite.names = ["mask", "mask-composite"];
    MaskComposite.oldValues = {
      add: "source-over",
      subtract: "source-out",
      intersect: "source-in",
      exclude: "xor"
    };
    MaskComposite.regexp = new RegExp(
      `\\s+(${Object.keys(MaskComposite.oldValues).join(
        "|"
      )})\\b(?!\\))\\s*(?=[,])`,
      "ig"
    );
    module.exports = MaskComposite;
  }
});
var require_align_items = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/align-items.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var AlignItems = class extends Declaration3 {
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2009) {
          return prefix + "box-align";
        }
        if (spec === 2012) {
          return prefix + "flex-align";
        }
        return super.prefixed(prop, prefix);
      }
      normalize() {
        return "align-items";
      }
      set(decl2, prefix) {
        let spec = flexSpec(prefix)[0];
        if (spec === 2009 || spec === 2012) {
          decl2.value = AlignItems.oldValues[decl2.value] || decl2.value;
        }
        return super.set(decl2, prefix);
      }
    };
    AlignItems.names = ["align-items", "flex-align", "box-align"];
    AlignItems.oldValues = {
      "flex-end": "end",
      "flex-start": "start"
    };
    module.exports = AlignItems;
  }
});
var require_user_select = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/user-select.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var UserSelect = class extends Declaration3 {
      set(decl2, prefix) {
        if (prefix === "-ms-" && decl2.value === "contain") {
          decl2.value = "element";
        }
        return super.set(decl2, prefix);
      }
      insert(decl2, prefix, prefixes) {
        if (decl2.value === "all" && prefix === "-ms-") {
          return void 0;
        } else {
          return super.insert(decl2, prefix, prefixes);
        }
      }
    };
    UserSelect.names = ["user-select"];
    module.exports = UserSelect;
  }
});
var require_flex_shrink = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/flex-shrink.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var FlexShrink = class extends Declaration3 {
      normalize() {
        return "flex-shrink";
      }
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2012) {
          return prefix + "flex-negative";
        }
        return super.prefixed(prop, prefix);
      }
      set(decl2, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2012 || spec === "final") {
          return super.set(decl2, prefix);
        }
        return void 0;
      }
    };
    FlexShrink.names = ["flex-shrink", "flex-negative"];
    module.exports = FlexShrink;
  }
});
var require_break_props = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/break-props.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var BreakProps = class extends Declaration3 {
      prefixed(prop, prefix) {
        return `${prefix}column-${prop}`;
      }
      normalize(prop) {
        if (prop.includes("inside")) {
          return "break-inside";
        }
        if (prop.includes("before")) {
          return "break-before";
        }
        return "break-after";
      }
      set(decl2, prefix) {
        if (decl2.prop === "break-inside" && decl2.value === "avoid-column" || decl2.value === "avoid-page") {
          decl2.value = "avoid";
        }
        return super.set(decl2, prefix);
      }
      insert(decl2, prefix, prefixes) {
        if (decl2.prop !== "break-inside") {
          return super.insert(decl2, prefix, prefixes);
        }
        if (/region/i.test(decl2.value) || /page/i.test(decl2.value)) {
          return void 0;
        }
        return super.insert(decl2, prefix, prefixes);
      }
    };
    BreakProps.names = [
      "break-inside",
      "page-break-inside",
      "column-break-inside",
      "break-before",
      "page-break-before",
      "column-break-before",
      "break-after",
      "page-break-after",
      "column-break-after"
    ];
    module.exports = BreakProps;
  }
});
var require_writing_mode = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/writing-mode.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var WritingMode = class extends Declaration3 {
      insert(decl2, prefix, prefixes) {
        if (prefix === "-ms-") {
          let cloned = this.set(this.clone(decl2), prefix);
          if (this.needCascade(decl2)) {
            cloned.raws.before = this.calcBefore(prefixes, decl2, prefix);
          }
          let direction = "ltr";
          decl2.parent.nodes.forEach((i) => {
            if (i.prop === "direction") {
              if (i.value === "rtl" || i.value === "ltr")
                direction = i.value;
            }
          });
          cloned.value = WritingMode.msValues[direction][decl2.value] || decl2.value;
          return decl2.parent.insertBefore(decl2, cloned);
        }
        return super.insert(decl2, prefix, prefixes);
      }
    };
    WritingMode.names = ["writing-mode"];
    WritingMode.msValues = {
      ltr: {
        "horizontal-tb": "lr-tb",
        "vertical-rl": "tb-rl",
        "vertical-lr": "tb-lr"
      },
      rtl: {
        "horizontal-tb": "rl-tb",
        "vertical-rl": "bt-rl",
        "vertical-lr": "bt-lr"
      }
    };
    module.exports = WritingMode;
  }
});
var require_border_image2 = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/border-image.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var BorderImage = class extends Declaration3 {
      set(decl2, prefix) {
        decl2.value = decl2.value.replace(/\s+fill(\s)/, "$1");
        return super.set(decl2, prefix);
      }
    };
    BorderImage.names = ["border-image"];
    module.exports = BorderImage;
  }
});
var require_align_content = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/align-content.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var AlignContent = class extends Declaration3 {
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2012) {
          return prefix + "flex-line-pack";
        }
        return super.prefixed(prop, prefix);
      }
      normalize() {
        return "align-content";
      }
      set(decl2, prefix) {
        let spec = flexSpec(prefix)[0];
        if (spec === 2012) {
          decl2.value = AlignContent.oldValues[decl2.value] || decl2.value;
          return super.set(decl2, prefix);
        }
        if (spec === "final") {
          return super.set(decl2, prefix);
        }
        return void 0;
      }
    };
    AlignContent.names = ["align-content", "flex-line-pack"];
    AlignContent.oldValues = {
      "flex-end": "end",
      "flex-start": "start",
      "space-between": "justify",
      "space-around": "distribute"
    };
    module.exports = AlignContent;
  }
});
var require_border_radius2 = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/border-radius.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var BorderRadius = class extends Declaration3 {
      prefixed(prop, prefix) {
        if (prefix === "-moz-") {
          return prefix + (BorderRadius.toMozilla[prop] || prop);
        }
        return super.prefixed(prop, prefix);
      }
      normalize(prop) {
        return BorderRadius.toNormal[prop] || prop;
      }
    };
    BorderRadius.names = ["border-radius"];
    BorderRadius.toMozilla = {};
    BorderRadius.toNormal = {};
    for (let ver of ["top", "bottom"]) {
      for (let hor of ["left", "right"]) {
        let normal = `border-${ver}-${hor}-radius`;
        let mozilla = `border-radius-${ver}${hor}`;
        BorderRadius.names.push(normal);
        BorderRadius.names.push(mozilla);
        BorderRadius.toMozilla[normal] = mozilla;
        BorderRadius.toNormal[mozilla] = normal;
      }
    }
    module.exports = BorderRadius;
  }
});
var require_block_logical = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/block-logical.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var BlockLogical = class extends Declaration3 {
      prefixed(prop, prefix) {
        if (prop.includes("-start")) {
          return prefix + prop.replace("-block-start", "-before");
        }
        return prefix + prop.replace("-block-end", "-after");
      }
      normalize(prop) {
        if (prop.includes("-before")) {
          return prop.replace("-before", "-block-start");
        }
        return prop.replace("-after", "-block-end");
      }
    };
    BlockLogical.names = [
      "border-block-start",
      "border-block-end",
      "margin-block-start",
      "margin-block-end",
      "padding-block-start",
      "padding-block-end",
      "border-before",
      "border-after",
      "margin-before",
      "margin-after",
      "padding-before",
      "padding-after"
    ];
    module.exports = BlockLogical;
  }
});
var require_grid_template = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-template.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var {
      parseTemplate,
      warnMissedAreas,
      getGridGap,
      warnGridGap,
      inheritGridGap
    } = require_grid_utils();
    var GridTemplate = class extends Declaration3 {
      insert(decl2, prefix, prefixes, result) {
        if (prefix !== "-ms-")
          return super.insert(decl2, prefix, prefixes);
        if (decl2.parent.some((i) => i.prop === "-ms-grid-rows")) {
          return void 0;
        }
        let gap = getGridGap(decl2);
        let inheritedGap = inheritGridGap(decl2, gap);
        let { rows, columns, areas } = parseTemplate({
          decl: decl2,
          gap: inheritedGap || gap
        });
        let hasAreas = Object.keys(areas).length > 0;
        let hasRows = Boolean(rows);
        let hasColumns = Boolean(columns);
        warnGridGap({
          gap,
          hasColumns,
          decl: decl2,
          result
        });
        warnMissedAreas(areas, decl2, result);
        if (hasRows && hasColumns || hasAreas) {
          decl2.cloneBefore({
            prop: "-ms-grid-rows",
            value: rows,
            raws: {}
          });
        }
        if (hasColumns) {
          decl2.cloneBefore({
            prop: "-ms-grid-columns",
            value: columns,
            raws: {}
          });
        }
        return decl2;
      }
    };
    GridTemplate.names = ["grid-template"];
    module.exports = GridTemplate;
  }
});
var require_inline_logical = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/inline-logical.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var InlineLogical = class extends Declaration3 {
      prefixed(prop, prefix) {
        return prefix + prop.replace("-inline", "");
      }
      normalize(prop) {
        return prop.replace(/(margin|padding|border)-(start|end)/, "$1-inline-$2");
      }
    };
    InlineLogical.names = [
      "border-inline-start",
      "border-inline-end",
      "margin-inline-start",
      "margin-inline-end",
      "padding-inline-start",
      "padding-inline-end",
      "border-start",
      "border-end",
      "margin-start",
      "margin-end",
      "padding-start",
      "padding-end"
    ];
    module.exports = InlineLogical;
  }
});
var require_grid_row_align = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-row-align.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var GridRowAlign = class extends Declaration3 {
      check(decl2) {
        return !decl2.value.includes("flex-") && decl2.value !== "baseline";
      }
      prefixed(prop, prefix) {
        return prefix + "grid-row-align";
      }
      normalize() {
        return "align-self";
      }
    };
    GridRowAlign.names = ["grid-row-align"];
    module.exports = GridRowAlign;
  }
});
var require_transform_decl = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/transform-decl.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var TransformDecl = class extends Declaration3 {
      keyframeParents(decl2) {
        let { parent } = decl2;
        while (parent) {
          if (parent.type === "atrule" && parent.name === "keyframes") {
            return true;
          }
          ;
          ({ parent } = parent);
        }
        return false;
      }
      contain3d(decl2) {
        if (decl2.prop === "transform-origin") {
          return false;
        }
        for (let func of TransformDecl.functions3d) {
          if (decl2.value.includes(`${func}(`)) {
            return true;
          }
        }
        return false;
      }
      set(decl2, prefix) {
        decl2 = super.set(decl2, prefix);
        if (prefix === "-ms-") {
          decl2.value = decl2.value.replace(/rotatez/gi, "rotate");
        }
        return decl2;
      }
      insert(decl2, prefix, prefixes) {
        if (prefix === "-ms-") {
          if (!this.contain3d(decl2) && !this.keyframeParents(decl2)) {
            return super.insert(decl2, prefix, prefixes);
          }
        } else if (prefix === "-o-") {
          if (!this.contain3d(decl2)) {
            return super.insert(decl2, prefix, prefixes);
          }
        } else {
          return super.insert(decl2, prefix, prefixes);
        }
        return void 0;
      }
    };
    TransformDecl.names = ["transform", "transform-origin"];
    TransformDecl.functions3d = [
      "matrix3d",
      "translate3d",
      "translateZ",
      "scale3d",
      "scaleZ",
      "rotate3d",
      "rotateX",
      "rotateY",
      "perspective"
    ];
    module.exports = TransformDecl;
  }
});
var require_flex_direction = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/flex-direction.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var FlexDirection = class extends Declaration3 {
      normalize() {
        return "flex-direction";
      }
      insert(decl2, prefix, prefixes) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec !== 2009) {
          return super.insert(decl2, prefix, prefixes);
        }
        let already = decl2.parent.some(
          (i) => i.prop === prefix + "box-orient" || i.prop === prefix + "box-direction"
        );
        if (already) {
          return void 0;
        }
        let v = decl2.value;
        let orient, dir;
        if (v === "inherit" || v === "initial" || v === "unset") {
          orient = v;
          dir = v;
        } else {
          orient = v.includes("row") ? "horizontal" : "vertical";
          dir = v.includes("reverse") ? "reverse" : "normal";
        }
        let cloned = this.clone(decl2);
        cloned.prop = prefix + "box-orient";
        cloned.value = orient;
        if (this.needCascade(decl2)) {
          cloned.raws.before = this.calcBefore(prefixes, decl2, prefix);
        }
        decl2.parent.insertBefore(decl2, cloned);
        cloned = this.clone(decl2);
        cloned.prop = prefix + "box-direction";
        cloned.value = dir;
        if (this.needCascade(decl2)) {
          cloned.raws.before = this.calcBefore(prefixes, decl2, prefix);
        }
        return decl2.parent.insertBefore(decl2, cloned);
      }
      old(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2009) {
          return [prefix + "box-orient", prefix + "box-direction"];
        } else {
          return super.old(prop, prefix);
        }
      }
    };
    FlexDirection.names = ["flex-direction", "box-direction", "box-orient"];
    module.exports = FlexDirection;
  }
});
var require_image_rendering = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/image-rendering.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var ImageRendering = class extends Declaration3 {
      check(decl2) {
        return decl2.value === "pixelated";
      }
      prefixed(prop, prefix) {
        if (prefix === "-ms-") {
          return "-ms-interpolation-mode";
        }
        return super.prefixed(prop, prefix);
      }
      set(decl2, prefix) {
        if (prefix !== "-ms-")
          return super.set(decl2, prefix);
        decl2.prop = "-ms-interpolation-mode";
        decl2.value = "nearest-neighbor";
        return decl2;
      }
      normalize() {
        return "image-rendering";
      }
      process(node, result) {
        return super.process(node, result);
      }
    };
    ImageRendering.names = ["image-rendering", "interpolation-mode"];
    module.exports = ImageRendering;
  }
});
var require_backdrop_filter = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/backdrop-filter.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var utils = require_utils();
    var BackdropFilter = class extends Declaration3 {
      constructor(name, prefixes, all) {
        super(name, prefixes, all);
        if (this.prefixes) {
          this.prefixes = utils.uniq(
            this.prefixes.map((i) => {
              return i === "-ms-" ? "-webkit-" : i;
            })
          );
        }
      }
    };
    BackdropFilter.names = ["backdrop-filter"];
    module.exports = BackdropFilter;
  }
});
var require_background_clip = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/background-clip.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var utils = require_utils();
    var BackgroundClip = class extends Declaration3 {
      constructor(name, prefixes, all) {
        super(name, prefixes, all);
        if (this.prefixes) {
          this.prefixes = utils.uniq(
            this.prefixes.map((i) => {
              return i === "-ms-" ? "-webkit-" : i;
            })
          );
        }
      }
      check(decl2) {
        return decl2.value.toLowerCase() === "text";
      }
    };
    BackgroundClip.names = ["background-clip"];
    module.exports = BackgroundClip;
  }
});
var require_text_decoration2 = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/text-decoration.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var BASIC = [
      "none",
      "underline",
      "overline",
      "line-through",
      "blink",
      "inherit",
      "initial",
      "unset"
    ];
    var TextDecoration = class extends Declaration3 {
      check(decl2) {
        return decl2.value.split(/\s+/).some((i) => !BASIC.includes(i));
      }
    };
    TextDecoration.names = ["text-decoration"];
    module.exports = TextDecoration;
  }
});
var require_justify_content = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/justify-content.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var Declaration3 = require_declaration2();
    var JustifyContent = class extends Declaration3 {
      prefixed(prop, prefix) {
        let spec;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2009) {
          return prefix + "box-pack";
        }
        if (spec === 2012) {
          return prefix + "flex-pack";
        }
        return super.prefixed(prop, prefix);
      }
      normalize() {
        return "justify-content";
      }
      set(decl2, prefix) {
        let spec = flexSpec(prefix)[0];
        if (spec === 2009 || spec === 2012) {
          let value = JustifyContent.oldValues[decl2.value] || decl2.value;
          decl2.value = value;
          if (spec !== 2009 || value !== "distribute") {
            return super.set(decl2, prefix);
          }
        } else if (spec === "final") {
          return super.set(decl2, prefix);
        }
        return void 0;
      }
    };
    JustifyContent.names = ["justify-content", "flex-pack", "box-pack"];
    JustifyContent.oldValues = {
      "flex-end": "end",
      "flex-start": "start",
      "space-between": "justify",
      "space-around": "distribute"
    };
    module.exports = JustifyContent;
  }
});
var require_background_size = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/background-size.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var BackgroundSize = class extends Declaration3 {
      set(decl2, prefix) {
        let value = decl2.value.toLowerCase();
        if (prefix === "-webkit-" && !value.includes(" ") && value !== "contain" && value !== "cover") {
          decl2.value = decl2.value + " " + decl2.value;
        }
        return super.set(decl2, prefix);
      }
    };
    BackgroundSize.names = ["background-size"];
    module.exports = BackgroundSize;
  }
});
var require_grid_row_column = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-row-column.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var utils = require_grid_utils();
    var GridRowColumn = class extends Declaration3 {
      insert(decl2, prefix, prefixes) {
        if (prefix !== "-ms-")
          return super.insert(decl2, prefix, prefixes);
        let values = utils.parse(decl2);
        let [start, span] = utils.translate(values, 0, 1);
        let hasStartValueSpan = values[0] && values[0].includes("span");
        if (hasStartValueSpan) {
          span = values[0].join("").replace(/\D/g, "");
        }
        ;
        [
          [decl2.prop, start],
          [`${decl2.prop}-span`, span]
        ].forEach(([prop, value]) => {
          utils.insertDecl(decl2, prop, value);
        });
        return void 0;
      }
    };
    GridRowColumn.names = ["grid-row", "grid-column"];
    module.exports = GridRowColumn;
  }
});
var require_grid_rows_columns = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-rows-columns.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var {
      prefixTrackProp,
      prefixTrackValue,
      autoplaceGridItems,
      getGridGap,
      inheritGridGap
    } = require_grid_utils();
    var Processor2 = require_processor2();
    var GridRowsColumns = class extends Declaration3 {
      prefixed(prop, prefix) {
        if (prefix === "-ms-") {
          return prefixTrackProp({ prop, prefix });
        }
        return super.prefixed(prop, prefix);
      }
      normalize(prop) {
        return prop.replace(/^grid-(rows|columns)/, "grid-template-$1");
      }
      insert(decl2, prefix, prefixes, result) {
        if (prefix !== "-ms-")
          return super.insert(decl2, prefix, prefixes);
        let { parent, prop, value } = decl2;
        let isRowProp = prop.includes("rows");
        let isColumnProp = prop.includes("columns");
        let hasGridTemplate = parent.some(
          (i) => i.prop === "grid-template" || i.prop === "grid-template-areas"
        );
        if (hasGridTemplate && isRowProp) {
          return false;
        }
        let processor = new Processor2({ options: {} });
        let status = processor.gridStatus(parent, result);
        let gap = getGridGap(decl2);
        gap = inheritGridGap(decl2, gap) || gap;
        let gapValue = isRowProp ? gap.row : gap.column;
        if ((status === "no-autoplace" || status === true) && !hasGridTemplate) {
          gapValue = null;
        }
        let prefixValue = prefixTrackValue({
          value,
          gap: gapValue
        });
        decl2.cloneBefore({
          prop: prefixTrackProp({ prop, prefix }),
          value: prefixValue
        });
        let autoflow = parent.nodes.find((i) => i.prop === "grid-auto-flow");
        let autoflowValue = "row";
        if (autoflow && !processor.disabled(autoflow, result)) {
          autoflowValue = autoflow.value.trim();
        }
        if (status === "autoplace") {
          let rowDecl = parent.nodes.find((i) => i.prop === "grid-template-rows");
          if (!rowDecl && hasGridTemplate) {
            return void 0;
          } else if (!rowDecl && !hasGridTemplate) {
            decl2.warn(
              result,
              "Autoplacement does not work without grid-template-rows property"
            );
            return void 0;
          }
          let columnDecl = parent.nodes.find((i) => {
            return i.prop === "grid-template-columns";
          });
          if (!columnDecl && !hasGridTemplate) {
            decl2.warn(
              result,
              "Autoplacement does not work without grid-template-columns property"
            );
          }
          if (isColumnProp && !hasGridTemplate) {
            autoplaceGridItems(decl2, result, gap, autoflowValue);
          }
        }
        return void 0;
      }
    };
    GridRowsColumns.names = [
      "grid-template-rows",
      "grid-template-columns",
      "grid-rows",
      "grid-columns"
    ];
    module.exports = GridRowsColumns;
  }
});
var require_grid_column_align = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-column-align.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var GridColumnAlign = class extends Declaration3 {
      check(decl2) {
        return !decl2.value.includes("flex-") && decl2.value !== "baseline";
      }
      prefixed(prop, prefix) {
        return prefix + "grid-column-align";
      }
      normalize() {
        return "justify-self";
      }
    };
    GridColumnAlign.names = ["grid-column-align"];
    module.exports = GridColumnAlign;
  }
});
var require_print_color_adjust = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/print-color-adjust.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var PrintColorAdjust = class extends Declaration3 {
      prefixed(prop, prefix) {
        if (prefix === "-moz-") {
          return "color-adjust";
        } else {
          return prefix + "print-color-adjust";
        }
      }
      normalize() {
        return "print-color-adjust";
      }
    };
    PrintColorAdjust.names = ["print-color-adjust", "color-adjust"];
    module.exports = PrintColorAdjust;
  }
});
var require_overscroll_behavior = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/overscroll-behavior.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var OverscrollBehavior = class extends Declaration3 {
      prefixed(prop, prefix) {
        return prefix + "scroll-chaining";
      }
      normalize() {
        return "overscroll-behavior";
      }
      set(decl2, prefix) {
        if (decl2.value === "auto") {
          decl2.value = "chained";
        } else if (decl2.value === "none" || decl2.value === "contain") {
          decl2.value = "none";
        }
        return super.set(decl2, prefix);
      }
    };
    OverscrollBehavior.names = ["overscroll-behavior", "scroll-chaining"];
    module.exports = OverscrollBehavior;
  }
});
var require_grid_template_areas = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/grid-template-areas.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var {
      parseGridAreas,
      warnMissedAreas,
      prefixTrackProp,
      prefixTrackValue,
      getGridGap,
      warnGridGap,
      inheritGridGap
    } = require_grid_utils();
    function getGridRows(tpl) {
      return tpl.trim().slice(1, -1).split(/["']\s*["']?/g);
    }
    var GridTemplateAreas = class extends Declaration3 {
      insert(decl2, prefix, prefixes, result) {
        if (prefix !== "-ms-")
          return super.insert(decl2, prefix, prefixes);
        let hasColumns = false;
        let hasRows = false;
        let parent = decl2.parent;
        let gap = getGridGap(decl2);
        gap = inheritGridGap(decl2, gap) || gap;
        parent.walkDecls(/-ms-grid-rows/, (i) => i.remove());
        parent.walkDecls(/grid-template-(rows|columns)/, (trackDecl) => {
          if (trackDecl.prop === "grid-template-rows") {
            hasRows = true;
            let { prop, value } = trackDecl;
            trackDecl.cloneBefore({
              prop: prefixTrackProp({ prop, prefix }),
              value: prefixTrackValue({ value, gap: gap.row })
            });
          } else {
            hasColumns = true;
          }
        });
        let gridRows = getGridRows(decl2.value);
        if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {
          decl2.cloneBefore({
            prop: "-ms-grid-rows",
            value: prefixTrackValue({
              value: `repeat(${gridRows.length}, auto)`,
              gap: gap.row
            }),
            raws: {}
          });
        }
        warnGridGap({
          gap,
          hasColumns,
          decl: decl2,
          result
        });
        let areas = parseGridAreas({
          rows: gridRows,
          gap
        });
        warnMissedAreas(areas, decl2, result);
        return decl2;
      }
    };
    GridTemplateAreas.names = ["grid-template-areas"];
    module.exports = GridTemplateAreas;
  }
});
var require_text_emphasis_position = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/text-emphasis-position.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var TextEmphasisPosition = class extends Declaration3 {
      set(decl2, prefix) {
        if (prefix === "-webkit-") {
          decl2.value = decl2.value.replace(/\s*(right|left)\s*/i, "");
        }
        return super.set(decl2, prefix);
      }
    };
    TextEmphasisPosition.names = ["text-emphasis-position"];
    module.exports = TextEmphasisPosition;
  }
});
var require_text_decoration_skip_ink = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/text-decoration-skip-ink.js"(exports, module) {
    init_process();
    init_buffer();
    var Declaration3 = require_declaration2();
    var TextDecorationSkipInk = class extends Declaration3 {
      set(decl2, prefix) {
        if (decl2.prop === "text-decoration-skip-ink" && decl2.value === "auto") {
          decl2.prop = prefix + "text-decoration-skip";
          decl2.value = "ink";
          return decl2;
        } else {
          return super.set(decl2, prefix);
        }
      }
    };
    TextDecorationSkipInk.names = [
      "text-decoration-skip-ink",
      "text-decoration-skip"
    ];
    module.exports = TextDecorationSkipInk;
  }
});
var require_normalize_range = __commonJS({
  "../../node_modules/normalize-range/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    module.exports = {
      wrap: wrapRange,
      limit: limitRange,
      validate: validateRange,
      test: testRange,
      curry,
      name
    };
    function wrapRange(min, max, value) {
      var maxLessMin = max - min;
      return ((value - min) % maxLessMin + maxLessMin) % maxLessMin + min;
    }
    function limitRange(min, max, value) {
      return Math.max(min, Math.min(max, value));
    }
    function validateRange(min, max, value, minExclusive, maxExclusive) {
      if (!testRange(min, max, value, minExclusive, maxExclusive)) {
        throw new Error(value + " is outside of range [" + min + "," + max + ")");
      }
      return value;
    }
    function testRange(min, max, value, minExclusive, maxExclusive) {
      return !(value < min || value > max || maxExclusive && value === max || minExclusive && value === min);
    }
    function name(min, max, minExcl, maxExcl) {
      return (minExcl ? "(" : "[") + min + "," + max + (maxExcl ? ")" : "]");
    }
    function curry(min, max, minExclusive, maxExclusive) {
      var boundNameFn = name.bind(null, min, max, minExclusive, maxExclusive);
      return {
        wrap: wrapRange.bind(null, min, max),
        limit: limitRange.bind(null, min, max),
        validate: function(value) {
          return validateRange(min, max, value, minExclusive, maxExclusive);
        },
        test: function(value) {
          return testRange(min, max, value, minExclusive, maxExclusive);
        },
        toString: boundNameFn,
        name: boundNameFn
      };
    }
  }
});
var require_gradient = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/gradient.js"(exports, module) {
    init_process();
    init_buffer();
    var parser = require_lib();
    var range = require_normalize_range();
    var OldValue = require_old_value();
    var Value = require_value();
    var utils = require_utils();
    var IS_DIRECTION = /top|left|right|bottom/gi;
    var Gradient = class extends Value {
      replace(string, prefix) {
        let ast = parser(string);
        for (let node of ast.nodes) {
          let gradientName = this.name;
          if (node.type === "function" && node.value === gradientName) {
            node.nodes = this.newDirection(node.nodes);
            node.nodes = this.normalize(node.nodes, gradientName);
            if (prefix === "-webkit- old") {
              let changes = this.oldWebkit(node);
              if (!changes) {
                return false;
              }
            } else {
              node.nodes = this.convertDirection(node.nodes);
              node.value = prefix + node.value;
            }
          }
        }
        return ast.toString();
      }
      replaceFirst(params, ...words) {
        let prefix = words.map((i) => {
          if (i === " ") {
            return { type: "space", value: i };
          }
          return { type: "word", value: i };
        });
        return prefix.concat(params.slice(1));
      }
      normalizeUnit(str, full) {
        let num = parseFloat(str);
        let deg = num / full * 360;
        return `${deg}deg`;
      }
      normalize(nodes, gradientName) {
        if (!nodes[0])
          return nodes;
        if (/-?\d+(.\d+)?grad/.test(nodes[0].value)) {
          nodes[0].value = this.normalizeUnit(nodes[0].value, 400);
        } else if (/-?\d+(.\d+)?rad/.test(nodes[0].value)) {
          nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);
        } else if (/-?\d+(.\d+)?turn/.test(nodes[0].value)) {
          nodes[0].value = this.normalizeUnit(nodes[0].value, 1);
        } else if (nodes[0].value.includes("deg")) {
          let num = parseFloat(nodes[0].value);
          num = range.wrap(0, 360, num);
          nodes[0].value = `${num}deg`;
        }
        if (gradientName === "linear-gradient" || gradientName === "repeating-linear-gradient") {
          let direction = nodes[0].value;
          if (direction === "0deg" || direction === "0") {
            nodes = this.replaceFirst(nodes, "to", " ", "top");
          } else if (direction === "90deg") {
            nodes = this.replaceFirst(nodes, "to", " ", "right");
          } else if (direction === "180deg") {
            nodes = this.replaceFirst(nodes, "to", " ", "bottom");
          } else if (direction === "270deg") {
            nodes = this.replaceFirst(nodes, "to", " ", "left");
          }
        }
        return nodes;
      }
      newDirection(params) {
        if (params[0].value === "to") {
          return params;
        }
        IS_DIRECTION.lastIndex = 0;
        if (!IS_DIRECTION.test(params[0].value)) {
          return params;
        }
        params.unshift(
          {
            type: "word",
            value: "to"
          },
          {
            type: "space",
            value: " "
          }
        );
        for (let i = 2; i < params.length; i++) {
          if (params[i].type === "div") {
            break;
          }
          if (params[i].type === "word") {
            params[i].value = this.revertDirection(params[i].value);
          }
        }
        return params;
      }
      isRadial(params) {
        let state = "before";
        for (let param of params) {
          if (state === "before" && param.type === "space") {
            state = "at";
          } else if (state === "at" && param.value === "at") {
            state = "after";
          } else if (state === "after" && param.type === "space") {
            return true;
          } else if (param.type === "div") {
            break;
          } else {
            state = "before";
          }
        }
        return false;
      }
      convertDirection(params) {
        if (params.length > 0) {
          if (params[0].value === "to") {
            this.fixDirection(params);
          } else if (params[0].value.includes("deg")) {
            this.fixAngle(params);
          } else if (this.isRadial(params)) {
            this.fixRadial(params);
          }
        }
        return params;
      }
      fixDirection(params) {
        params.splice(0, 2);
        for (let param of params) {
          if (param.type === "div") {
            break;
          }
          if (param.type === "word") {
            param.value = this.revertDirection(param.value);
          }
        }
      }
      fixAngle(params) {
        let first = params[0].value;
        first = parseFloat(first);
        first = Math.abs(450 - first) % 360;
        first = this.roundFloat(first, 3);
        params[0].value = `${first}deg`;
      }
      fixRadial(params) {
        let first = [];
        let second = [];
        let a, b, c, i, next;
        for (i = 0; i < params.length - 2; i++) {
          a = params[i];
          b = params[i + 1];
          c = params[i + 2];
          if (a.type === "space" && b.value === "at" && c.type === "space") {
            next = i + 3;
            break;
          } else {
            first.push(a);
          }
        }
        let div;
        for (i = next; i < params.length; i++) {
          if (params[i].type === "div") {
            div = params[i];
            break;
          } else {
            second.push(params[i]);
          }
        }
        params.splice(0, i, ...second, div, ...first);
      }
      revertDirection(word) {
        return Gradient.directions[word.toLowerCase()] || word;
      }
      roundFloat(float, digits) {
        return parseFloat(float.toFixed(digits));
      }
      oldWebkit(node) {
        let { nodes } = node;
        let string = parser.stringify(node.nodes);
        if (this.name !== "linear-gradient") {
          return false;
        }
        if (nodes[0] && nodes[0].value.includes("deg")) {
          return false;
        }
        if (string.includes("px") || string.includes("-corner") || string.includes("-side")) {
          return false;
        }
        let params = [[]];
        for (let i of nodes) {
          params[params.length - 1].push(i);
          if (i.type === "div" && i.value === ",") {
            params.push([]);
          }
        }
        this.oldDirection(params);
        this.colorStops(params);
        node.nodes = [];
        for (let param of params) {
          node.nodes = node.nodes.concat(param);
        }
        node.nodes.unshift(
          { type: "word", value: "linear" },
          this.cloneDiv(node.nodes)
        );
        node.value = "-webkit-gradient";
        return true;
      }
      oldDirection(params) {
        let div = this.cloneDiv(params[0]);
        if (params[0][0].value !== "to") {
          return params.unshift([
            { type: "word", value: Gradient.oldDirections.bottom },
            div
          ]);
        } else {
          let words = [];
          for (let node of params[0].slice(2)) {
            if (node.type === "word") {
              words.push(node.value.toLowerCase());
            }
          }
          words = words.join(" ");
          let old = Gradient.oldDirections[words] || words;
          params[0] = [{ type: "word", value: old }, div];
          return params[0];
        }
      }
      cloneDiv(params) {
        for (let i of params) {
          if (i.type === "div" && i.value === ",") {
            return i;
          }
        }
        return { type: "div", value: ",", after: " " };
      }
      colorStops(params) {
        let result = [];
        for (let i = 0; i < params.length; i++) {
          let pos;
          let param = params[i];
          let item;
          if (i === 0) {
            continue;
          }
          let color = parser.stringify(param[0]);
          if (param[1] && param[1].type === "word") {
            pos = param[1].value;
          } else if (param[2] && param[2].type === "word") {
            pos = param[2].value;
          }
          let stop;
          if (i === 1 && (!pos || pos === "0%")) {
            stop = `from(${color})`;
          } else if (i === params.length - 1 && (!pos || pos === "100%")) {
            stop = `to(${color})`;
          } else if (pos) {
            stop = `color-stop(${pos}, ${color})`;
          } else {
            stop = `color-stop(${color})`;
          }
          let div = param[param.length - 1];
          params[i] = [{ type: "word", value: stop }];
          if (div.type === "div" && div.value === ",") {
            item = params[i].push(div);
          }
          result.push(item);
        }
        return result;
      }
      old(prefix) {
        if (prefix === "-webkit-") {
          let type;
          if (this.name === "linear-gradient") {
            type = "linear";
          } else if (this.name === "repeating-linear-gradient") {
            type = "repeating-linear";
          } else if (this.name === "repeating-radial-gradient") {
            type = "repeating-radial";
          } else {
            type = "radial";
          }
          let string = "-gradient";
          let regexp = utils.regexp(
            `-webkit-(${type}-gradient|gradient\\(\\s*${type})`,
            false
          );
          return new OldValue(this.name, prefix + this.name, string, regexp);
        } else {
          return super.old(prefix);
        }
      }
      add(decl2, prefix) {
        let p = decl2.prop;
        if (p.includes("mask")) {
          if (prefix === "-webkit-" || prefix === "-webkit- old") {
            return super.add(decl2, prefix);
          }
        } else if (p === "list-style" || p === "list-style-image" || p === "content") {
          if (prefix === "-webkit-" || prefix === "-webkit- old") {
            return super.add(decl2, prefix);
          }
        } else {
          return super.add(decl2, prefix);
        }
        return void 0;
      }
    };
    Gradient.names = [
      "linear-gradient",
      "repeating-linear-gradient",
      "radial-gradient",
      "repeating-radial-gradient"
    ];
    Gradient.directions = {
      top: "bottom",
      left: "right",
      bottom: "top",
      right: "left"
    };
    Gradient.oldDirections = {
      "top": "left bottom, left top",
      "left": "right top, left top",
      "bottom": "left top, left bottom",
      "right": "left top, right top",
      "top right": "left bottom, right top",
      "top left": "right bottom, left top",
      "right top": "left bottom, right top",
      "right bottom": "left top, right bottom",
      "bottom right": "left top, right bottom",
      "bottom left": "right top, left bottom",
      "left top": "right bottom, left top",
      "left bottom": "right top, left bottom"
    };
    module.exports = Gradient;
  }
});
var require_intrinsic = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/intrinsic.js"(exports, module) {
    init_process();
    init_buffer();
    var OldValue = require_old_value();
    var Value = require_value();
    function regexp(name) {
      return new RegExp(`(^|[\\s,(])(${name}($|[\\s),]))`, "gi");
    }
    var Intrinsic = class extends Value {
      regexp() {
        if (!this.regexpCache)
          this.regexpCache = regexp(this.name);
        return this.regexpCache;
      }
      isStretch() {
        return this.name === "stretch" || this.name === "fill" || this.name === "fill-available";
      }
      replace(string, prefix) {
        if (prefix === "-moz-" && this.isStretch()) {
          return string.replace(this.regexp(), "$1-moz-available$3");
        }
        if (prefix === "-webkit-" && this.isStretch()) {
          return string.replace(this.regexp(), "$1-webkit-fill-available$3");
        }
        return super.replace(string, prefix);
      }
      old(prefix) {
        let prefixed = prefix + this.name;
        if (this.isStretch()) {
          if (prefix === "-moz-") {
            prefixed = "-moz-available";
          } else if (prefix === "-webkit-") {
            prefixed = "-webkit-fill-available";
          }
        }
        return new OldValue(this.name, prefixed, prefixed, regexp(prefixed));
      }
      add(decl2, prefix) {
        if (decl2.prop.includes("grid") && prefix !== "-webkit-") {
          return void 0;
        }
        return super.add(decl2, prefix);
      }
    };
    Intrinsic.names = [
      "max-content",
      "min-content",
      "fit-content",
      "fill",
      "fill-available",
      "stretch"
    ];
    module.exports = Intrinsic;
  }
});
var require_pixelated = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/pixelated.js"(exports, module) {
    init_process();
    init_buffer();
    var OldValue = require_old_value();
    var Value = require_value();
    var Pixelated = class extends Value {
      replace(string, prefix) {
        if (prefix === "-webkit-") {
          return string.replace(this.regexp(), "$1-webkit-optimize-contrast");
        }
        if (prefix === "-moz-") {
          return string.replace(this.regexp(), "$1-moz-crisp-edges");
        }
        return super.replace(string, prefix);
      }
      old(prefix) {
        if (prefix === "-webkit-") {
          return new OldValue(this.name, "-webkit-optimize-contrast");
        }
        if (prefix === "-moz-") {
          return new OldValue(this.name, "-moz-crisp-edges");
        }
        return super.old(prefix);
      }
    };
    Pixelated.names = ["pixelated"];
    module.exports = Pixelated;
  }
});
var require_image_set = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/image-set.js"(exports, module) {
    init_process();
    init_buffer();
    var Value = require_value();
    var ImageSet = class extends Value {
      replace(string, prefix) {
        let fixed = super.replace(string, prefix);
        if (prefix === "-webkit-") {
          fixed = fixed.replace(/("[^"]+"|'[^']+')(\s+\d+\w)/gi, "url($1)$2");
        }
        return fixed;
      }
    };
    ImageSet.names = ["image-set"];
    module.exports = ImageSet;
  }
});
var require_cross_fade = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/cross-fade.js"(exports, module) {
    init_process();
    init_buffer();
    var list2 = require_postcss().list;
    var Value = require_value();
    var CrossFade = class extends Value {
      replace(string, prefix) {
        return list2.space(string).map((value) => {
          if (value.slice(0, +this.name.length + 1) !== this.name + "(") {
            return value;
          }
          let close = value.lastIndexOf(")");
          let after = value.slice(close + 1);
          let args = value.slice(this.name.length + 1, close);
          if (prefix === "-webkit-") {
            let match = args.match(/\d*.?\d+%?/);
            if (match) {
              args = args.slice(match[0].length).trim();
              args += `, ${match[0]}`;
            } else {
              args += ", 0.5";
            }
          }
          return prefix + this.name + "(" + args + ")" + after;
        }).join(" ");
      }
    };
    CrossFade.names = ["cross-fade"];
    module.exports = CrossFade;
  }
});
var require_display_flex = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/display-flex.js"(exports, module) {
    init_process();
    init_buffer();
    var flexSpec = require_flex_spec();
    var OldValue = require_old_value();
    var Value = require_value();
    var DisplayFlex = class extends Value {
      constructor(name, prefixes) {
        super(name, prefixes);
        if (name === "display-flex") {
          this.name = "flex";
        }
      }
      check(decl2) {
        return decl2.prop === "display" && decl2.value === this.name;
      }
      prefixed(prefix) {
        let spec, value;
        [spec, prefix] = flexSpec(prefix);
        if (spec === 2009) {
          if (this.name === "flex") {
            value = "box";
          } else {
            value = "inline-box";
          }
        } else if (spec === 2012) {
          if (this.name === "flex") {
            value = "flexbox";
          } else {
            value = "inline-flexbox";
          }
        } else if (spec === "final") {
          value = this.name;
        }
        return prefix + value;
      }
      replace(string, prefix) {
        return this.prefixed(prefix);
      }
      old(prefix) {
        let prefixed = this.prefixed(prefix);
        if (!prefixed)
          return void 0;
        return new OldValue(this.name, prefixed);
      }
    };
    DisplayFlex.names = ["display-flex", "inline-flex"];
    module.exports = DisplayFlex;
  }
});
var require_display_grid = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/display-grid.js"(exports, module) {
    init_process();
    init_buffer();
    var Value = require_value();
    var DisplayGrid = class extends Value {
      constructor(name, prefixes) {
        super(name, prefixes);
        if (name === "display-grid") {
          this.name = "grid";
        }
      }
      check(decl2) {
        return decl2.prop === "display" && decl2.value === this.name;
      }
    };
    DisplayGrid.names = ["display-grid", "inline-grid"];
    module.exports = DisplayGrid;
  }
});
var require_filter_value = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/filter-value.js"(exports, module) {
    init_process();
    init_buffer();
    var Value = require_value();
    var FilterValue = class extends Value {
      constructor(name, prefixes) {
        super(name, prefixes);
        if (name === "filter-function") {
          this.name = "filter";
        }
      }
    };
    FilterValue.names = ["filter", "filter-function"];
    module.exports = FilterValue;
  }
});
var require_autofill = __commonJS({
  "../../node_modules/autoprefixer/lib/hacks/autofill.js"(exports, module) {
    init_process();
    init_buffer();
    var Selector = require_selector();
    var utils = require_utils();
    var Autofill = class extends Selector {
      constructor(name, prefixes, all) {
        super(name, prefixes, all);
        if (this.prefixes) {
          this.prefixes = utils.uniq(this.prefixes.map(() => "-webkit-"));
        }
      }
      prefixed(prefix) {
        if (prefix === "-webkit-") {
          return ":-webkit-autofill";
        }
        return `:${prefix}autofill`;
      }
    };
    Autofill.names = [":autofill"];
    module.exports = Autofill;
  }
});
var require_prefixes = __commonJS({
  "../../node_modules/autoprefixer/lib/prefixes.js"(exports, module) {
    init_process();
    init_buffer();
    var vendor = require_vendor();
    var Declaration3 = require_declaration2();
    var Resolution = require_resolution();
    var Transition = require_transition();
    var Processor2 = require_processor2();
    var Supports = require_supports();
    var Browsers = require_browsers3();
    var Selector = require_selector();
    var AtRule2 = require_at_rule2();
    var Value = require_value();
    var utils = require_utils();
    var hackFullscreen = require_fullscreen2();
    var hackPlaceholder = require_placeholder();
    var hackPlaceholderShown = require_placeholder_shown();
    var hackFileSelectorButton = require_file_selector_button();
    var hackFlex = require_flex();
    var hackOrder = require_order();
    var hackFilter = require_filter();
    var hackGridEnd = require_grid_end();
    var hackAnimation = require_animation();
    var hackFlexFlow = require_flex_flow();
    var hackFlexGrow = require_flex_grow();
    var hackFlexWrap = require_flex_wrap();
    var hackGridArea = require_grid_area();
    var hackPlaceSelf = require_place_self();
    var hackGridStart = require_grid_start();
    var hackAlignSelf = require_align_self();
    var hackAppearance = require_appearance();
    var hackFlexBasis = require_flex_basis();
    var hackMaskBorder = require_mask_border();
    var hackMaskComposite = require_mask_composite();
    var hackAlignItems = require_align_items();
    var hackUserSelect = require_user_select();
    var hackFlexShrink = require_flex_shrink();
    var hackBreakProps = require_break_props();
    var hackWritingMode = require_writing_mode();
    var hackBorderImage = require_border_image2();
    var hackAlignContent = require_align_content();
    var hackBorderRadius = require_border_radius2();
    var hackBlockLogical = require_block_logical();
    var hackGridTemplate = require_grid_template();
    var hackInlineLogical = require_inline_logical();
    var hackGridRowAlign = require_grid_row_align();
    var hackTransformDecl = require_transform_decl();
    var hackFlexDirection = require_flex_direction();
    var hackImageRendering = require_image_rendering();
    var hackBackdropFilter = require_backdrop_filter();
    var hackBackgroundClip = require_background_clip();
    var hackTextDecoration = require_text_decoration2();
    var hackJustifyContent = require_justify_content();
    var hackBackgroundSize = require_background_size();
    var hackGridRowColumn = require_grid_row_column();
    var hackGridRowsColumns = require_grid_rows_columns();
    var hackGridColumnAlign = require_grid_column_align();
    var hackPrintColorAdjust = require_print_color_adjust();
    var hackOverscrollBehavior = require_overscroll_behavior();
    var hackGridTemplateAreas = require_grid_template_areas();
    var hackTextEmphasisPosition = require_text_emphasis_position();
    var hackTextDecorationSkipInk = require_text_decoration_skip_ink();
    var hackGradient = require_gradient();
    var hackIntrinsic = require_intrinsic();
    var hackPixelated = require_pixelated();
    var hackImageSet = require_image_set();
    var hackCrossFade = require_cross_fade();
    var hackDisplayFlex = require_display_flex();
    var hackDisplayGrid = require_display_grid();
    var hackFilterValue = require_filter_value();
    var hackAutofill = require_autofill();
    Selector.hack(hackAutofill);
    Selector.hack(hackFullscreen);
    Selector.hack(hackPlaceholder);
    Selector.hack(hackPlaceholderShown);
    Selector.hack(hackFileSelectorButton);
    Declaration3.hack(hackFlex);
    Declaration3.hack(hackOrder);
    Declaration3.hack(hackFilter);
    Declaration3.hack(hackGridEnd);
    Declaration3.hack(hackAnimation);
    Declaration3.hack(hackFlexFlow);
    Declaration3.hack(hackFlexGrow);
    Declaration3.hack(hackFlexWrap);
    Declaration3.hack(hackGridArea);
    Declaration3.hack(hackPlaceSelf);
    Declaration3.hack(hackGridStart);
    Declaration3.hack(hackAlignSelf);
    Declaration3.hack(hackAppearance);
    Declaration3.hack(hackFlexBasis);
    Declaration3.hack(hackMaskBorder);
    Declaration3.hack(hackMaskComposite);
    Declaration3.hack(hackAlignItems);
    Declaration3.hack(hackUserSelect);
    Declaration3.hack(hackFlexShrink);
    Declaration3.hack(hackBreakProps);
    Declaration3.hack(hackWritingMode);
    Declaration3.hack(hackBorderImage);
    Declaration3.hack(hackAlignContent);
    Declaration3.hack(hackBorderRadius);
    Declaration3.hack(hackBlockLogical);
    Declaration3.hack(hackGridTemplate);
    Declaration3.hack(hackInlineLogical);
    Declaration3.hack(hackGridRowAlign);
    Declaration3.hack(hackTransformDecl);
    Declaration3.hack(hackFlexDirection);
    Declaration3.hack(hackImageRendering);
    Declaration3.hack(hackBackdropFilter);
    Declaration3.hack(hackBackgroundClip);
    Declaration3.hack(hackTextDecoration);
    Declaration3.hack(hackJustifyContent);
    Declaration3.hack(hackBackgroundSize);
    Declaration3.hack(hackGridRowColumn);
    Declaration3.hack(hackGridRowsColumns);
    Declaration3.hack(hackGridColumnAlign);
    Declaration3.hack(hackOverscrollBehavior);
    Declaration3.hack(hackGridTemplateAreas);
    Declaration3.hack(hackPrintColorAdjust);
    Declaration3.hack(hackTextEmphasisPosition);
    Declaration3.hack(hackTextDecorationSkipInk);
    Value.hack(hackGradient);
    Value.hack(hackIntrinsic);
    Value.hack(hackPixelated);
    Value.hack(hackImageSet);
    Value.hack(hackCrossFade);
    Value.hack(hackDisplayFlex);
    Value.hack(hackDisplayGrid);
    Value.hack(hackFilterValue);
    var declsCache = /* @__PURE__ */ new Map();
    var Prefixes = class {
      constructor(data, browsers, options = {}) {
        this.data = data;
        this.browsers = browsers;
        this.options = options;
        [this.add, this.remove] = this.preprocess(this.select(this.data));
        this.transition = new Transition(this);
        this.processor = new Processor2(this);
      }
      cleaner() {
        if (this.cleanerCache) {
          return this.cleanerCache;
        }
        if (this.browsers.selected.length) {
          let empty = new Browsers(this.browsers.data, []);
          this.cleanerCache = new Prefixes(this.data, empty, this.options);
        } else {
          return this;
        }
        return this.cleanerCache;
      }
      select(list2) {
        let selected = { add: {}, remove: {} };
        for (let name in list2) {
          let data = list2[name];
          let add = data.browsers.map((i) => {
            let params = i.split(" ");
            return {
              browser: `${params[0]} ${params[1]}`,
              note: params[2]
            };
          });
          let notes = add.filter((i) => i.note).map((i) => `${this.browsers.prefix(i.browser)} ${i.note}`);
          notes = utils.uniq(notes);
          add = add.filter((i) => this.browsers.isSelected(i.browser)).map((i) => {
            let prefix = this.browsers.prefix(i.browser);
            if (i.note) {
              return `${prefix} ${i.note}`;
            } else {
              return prefix;
            }
          });
          add = this.sort(utils.uniq(add));
          if (this.options.flexbox === "no-2009") {
            add = add.filter((i) => !i.includes("2009"));
          }
          let all = data.browsers.map((i) => this.browsers.prefix(i));
          if (data.mistakes) {
            all = all.concat(data.mistakes);
          }
          all = all.concat(notes);
          all = utils.uniq(all);
          if (add.length) {
            selected.add[name] = add;
            if (add.length < all.length) {
              selected.remove[name] = all.filter((i) => !add.includes(i));
            }
          } else {
            selected.remove[name] = all;
          }
        }
        return selected;
      }
      sort(prefixes) {
        return prefixes.sort((a, b) => {
          let aLength = utils.removeNote(a).length;
          let bLength = utils.removeNote(b).length;
          if (aLength === bLength) {
            return b.length - a.length;
          } else {
            return bLength - aLength;
          }
        });
      }
      preprocess(selected) {
        let add = {
          "selectors": [],
          "@supports": new Supports(Prefixes, this)
        };
        for (let name in selected.add) {
          let prefixes = selected.add[name];
          if (name === "@keyframes" || name === "@viewport") {
            add[name] = new AtRule2(name, prefixes, this);
          } else if (name === "@resolution") {
            add[name] = new Resolution(name, prefixes, this);
          } else if (this.data[name].selector) {
            add.selectors.push(Selector.load(name, prefixes, this));
          } else {
            let props = this.data[name].props;
            if (props) {
              let value = Value.load(name, prefixes, this);
              for (let prop of props) {
                if (!add[prop]) {
                  add[prop] = { values: [] };
                }
                add[prop].values.push(value);
              }
            } else {
              let values = add[name] && add[name].values || [];
              add[name] = Declaration3.load(name, prefixes, this);
              add[name].values = values;
            }
          }
        }
        let remove = { selectors: [] };
        for (let name in selected.remove) {
          let prefixes = selected.remove[name];
          if (this.data[name].selector) {
            let selector = Selector.load(name, prefixes);
            for (let prefix of prefixes) {
              remove.selectors.push(selector.old(prefix));
            }
          } else if (name === "@keyframes" || name === "@viewport") {
            for (let prefix of prefixes) {
              let prefixed = `@${prefix}${name.slice(1)}`;
              remove[prefixed] = { remove: true };
            }
          } else if (name === "@resolution") {
            remove[name] = new Resolution(name, prefixes, this);
          } else {
            let props = this.data[name].props;
            if (props) {
              let value = Value.load(name, [], this);
              for (let prefix of prefixes) {
                let old = value.old(prefix);
                if (old) {
                  for (let prop of props) {
                    if (!remove[prop]) {
                      remove[prop] = {};
                    }
                    if (!remove[prop].values) {
                      remove[prop].values = [];
                    }
                    remove[prop].values.push(old);
                  }
                }
              }
            } else {
              for (let p of prefixes) {
                let olds = this.decl(name).old(name, p);
                if (name === "align-self") {
                  let a = add[name] && add[name].prefixes;
                  if (a) {
                    if (p === "-webkit- 2009" && a.includes("-webkit-")) {
                      continue;
                    } else if (p === "-webkit-" && a.includes("-webkit- 2009")) {
                      continue;
                    }
                  }
                }
                for (let prefixed of olds) {
                  if (!remove[prefixed]) {
                    remove[prefixed] = {};
                  }
                  remove[prefixed].remove = true;
                }
              }
            }
          }
        }
        return [add, remove];
      }
      decl(prop) {
        if (!declsCache.has(prop)) {
          declsCache.set(prop, Declaration3.load(prop));
        }
        return declsCache.get(prop);
      }
      unprefixed(prop) {
        let value = this.normalize(vendor.unprefixed(prop));
        if (value === "flex-direction") {
          value = "flex-flow";
        }
        return value;
      }
      normalize(prop) {
        return this.decl(prop).normalize(prop);
      }
      prefixed(prop, prefix) {
        prop = vendor.unprefixed(prop);
        return this.decl(prop).prefixed(prop, prefix);
      }
      values(type, prop) {
        let data = this[type];
        let global2 = data["*"] && data["*"].values;
        let values = data[prop] && data[prop].values;
        if (global2 && values) {
          return utils.uniq(global2.concat(values));
        } else {
          return global2 || values || [];
        }
      }
      group(decl2) {
        let rule2 = decl2.parent;
        let index = rule2.index(decl2);
        let { length } = rule2.nodes;
        let unprefixed = this.unprefixed(decl2.prop);
        let checker = (step, callback) => {
          index += step;
          while (index >= 0 && index < length) {
            let other = rule2.nodes[index];
            if (other.type === "decl") {
              if (step === -1 && other.prop === unprefixed) {
                if (!Browsers.withPrefix(other.value)) {
                  break;
                }
              }
              if (this.unprefixed(other.prop) !== unprefixed) {
                break;
              } else if (callback(other) === true) {
                return true;
              }
              if (step === 1 && other.prop === unprefixed) {
                if (!Browsers.withPrefix(other.value)) {
                  break;
                }
              }
            }
            index += step;
          }
          return false;
        };
        return {
          up(callback) {
            return checker(-1, callback);
          },
          down(callback) {
            return checker(1, callback);
          }
        };
      }
    };
    module.exports = Prefixes;
  }
});
var require_prefixes2 = __commonJS({
  "../../node_modules/autoprefixer/data/prefixes.js"(exports, module) {
    init_process();
    init_buffer();
    var unpack = require_unpacker().feature;
    function browsersSort(a, b) {
      a = a.split(" ");
      b = b.split(" ");
      if (a[0] > b[0]) {
        return 1;
      } else if (a[0] < b[0]) {
        return -1;
      } else {
        return Math.sign(parseFloat(a[1]) - parseFloat(b[1]));
      }
    }
    function f(data, opts, callback) {
      data = unpack(data);
      if (!callback) {
        ;
        [callback, opts] = [opts, {}];
      }
      let match = opts.match || /\sx($|\s)/;
      let need = [];
      for (let browser in data.stats) {
        let versions = data.stats[browser];
        for (let version in versions) {
          let support = versions[version];
          if (support.match(match)) {
            need.push(browser + " " + version);
          }
        }
      }
      callback(need.sort(browsersSort));
    }
    var result = {};
    function prefix(names, data) {
      for (let name of names) {
        result[name] = Object.assign({}, data);
      }
    }
    function add(names, data) {
      for (let name of names) {
        result[name].browsers = result[name].browsers.concat(data.browsers).sort(browsersSort);
      }
    }
    module.exports = result;
    var prefixBorderRadius = require_border_radius();
    f(
      prefixBorderRadius,
      (browsers) => prefix(
        [
          "border-radius",
          "border-top-left-radius",
          "border-top-right-radius",
          "border-bottom-right-radius",
          "border-bottom-left-radius"
        ],
        {
          mistakes: ["-khtml-", "-ms-", "-o-"],
          feature: "border-radius",
          browsers
        }
      )
    );
    var prefixBoxshadow = require_css_boxshadow();
    f(
      prefixBoxshadow,
      (browsers) => prefix(["box-shadow"], {
        mistakes: ["-khtml-"],
        feature: "css-boxshadow",
        browsers
      })
    );
    var prefixAnimation = require_css_animation();
    f(
      prefixAnimation,
      (browsers) => prefix(
        [
          "animation",
          "animation-name",
          "animation-duration",
          "animation-delay",
          "animation-direction",
          "animation-fill-mode",
          "animation-iteration-count",
          "animation-play-state",
          "animation-timing-function",
          "@keyframes"
        ],
        {
          mistakes: ["-khtml-", "-ms-"],
          feature: "css-animation",
          browsers
        }
      )
    );
    var prefixTransition = require_css_transitions();
    f(
      prefixTransition,
      (browsers) => prefix(
        [
          "transition",
          "transition-property",
          "transition-duration",
          "transition-delay",
          "transition-timing-function"
        ],
        {
          mistakes: ["-khtml-", "-ms-"],
          browsers,
          feature: "css-transitions"
        }
      )
    );
    var prefixTransform2d = require_transforms2d();
    f(
      prefixTransform2d,
      (browsers) => prefix(["transform", "transform-origin"], {
        feature: "transforms2d",
        browsers
      })
    );
    var prefixTransforms3d = require_transforms3d();
    f(prefixTransforms3d, (browsers) => {
      prefix(["perspective", "perspective-origin"], {
        feature: "transforms3d",
        browsers
      });
      return prefix(["transform-style"], {
        mistakes: ["-ms-", "-o-"],
        browsers,
        feature: "transforms3d"
      });
    });
    f(
      prefixTransforms3d,
      { match: /y\sx|y\s#2/ },
      (browsers) => prefix(["backface-visibility"], {
        mistakes: ["-ms-", "-o-"],
        feature: "transforms3d",
        browsers
      })
    );
    var prefixGradients = require_css_gradients();
    f(
      prefixGradients,
      { match: /y\sx/ },
      (browsers) => prefix(
        [
          "linear-gradient",
          "repeating-linear-gradient",
          "radial-gradient",
          "repeating-radial-gradient"
        ],
        {
          props: [
            "background",
            "background-image",
            "border-image",
            "mask",
            "list-style",
            "list-style-image",
            "content",
            "mask-image"
          ],
          mistakes: ["-ms-"],
          feature: "css-gradients",
          browsers
        }
      )
    );
    f(prefixGradients, { match: /a\sx/ }, (browsers) => {
      browsers = browsers.map((i) => {
        if (/firefox|op/.test(i)) {
          return i;
        } else {
          return `${i} old`;
        }
      });
      return add(
        [
          "linear-gradient",
          "repeating-linear-gradient",
          "radial-gradient",
          "repeating-radial-gradient"
        ],
        {
          feature: "css-gradients",
          browsers
        }
      );
    });
    var prefixBoxsizing = require_css3_boxsizing();
    f(
      prefixBoxsizing,
      (browsers) => prefix(["box-sizing"], {
        feature: "css3-boxsizing",
        browsers
      })
    );
    var prefixFilters = require_css_filters();
    f(
      prefixFilters,
      (browsers) => prefix(["filter"], {
        feature: "css-filters",
        browsers
      })
    );
    var prefixFilterFunction = require_css_filter_function();
    f(
      prefixFilterFunction,
      (browsers) => prefix(["filter-function"], {
        props: [
          "background",
          "background-image",
          "border-image",
          "mask",
          "list-style",
          "list-style-image",
          "content",
          "mask-image"
        ],
        feature: "css-filter-function",
        browsers
      })
    );
    var prefixBackdrop = require_css_backdrop_filter();
    f(
      prefixBackdrop,
      { match: /y\sx|y\s#2/ },
      (browsers) => prefix(["backdrop-filter"], {
        feature: "css-backdrop-filter",
        browsers
      })
    );
    var prefixElementFunction = require_css_element_function();
    f(
      prefixElementFunction,
      (browsers) => prefix(["element"], {
        props: [
          "background",
          "background-image",
          "border-image",
          "mask",
          "list-style",
          "list-style-image",
          "content",
          "mask-image"
        ],
        feature: "css-element-function",
        browsers
      })
    );
    var prefixMulticolumns = require_multicolumn();
    f(prefixMulticolumns, (browsers) => {
      prefix(
        [
          "columns",
          "column-width",
          "column-gap",
          "column-rule",
          "column-rule-color",
          "column-rule-width",
          "column-count",
          "column-rule-style",
          "column-span",
          "column-fill"
        ],
        {
          feature: "multicolumn",
          browsers
        }
      );
      let noff = browsers.filter((i) => !/firefox/.test(i));
      prefix(["break-before", "break-after", "break-inside"], {
        feature: "multicolumn",
        browsers: noff
      });
    });
    var prefixUserSelect = require_user_select_none();
    f(
      prefixUserSelect,
      (browsers) => prefix(["user-select"], {
        mistakes: ["-khtml-"],
        feature: "user-select-none",
        browsers
      })
    );
    var prefixFlexbox = require_flexbox();
    f(prefixFlexbox, { match: /a\sx/ }, (browsers) => {
      browsers = browsers.map((i) => {
        if (/ie|firefox/.test(i)) {
          return i;
        } else {
          return `${i} 2009`;
        }
      });
      prefix(["display-flex", "inline-flex"], {
        props: ["display"],
        feature: "flexbox",
        browsers
      });
      prefix(["flex", "flex-grow", "flex-shrink", "flex-basis"], {
        feature: "flexbox",
        browsers
      });
      prefix(
        [
          "flex-direction",
          "flex-wrap",
          "flex-flow",
          "justify-content",
          "order",
          "align-items",
          "align-self",
          "align-content"
        ],
        {
          feature: "flexbox",
          browsers
        }
      );
    });
    f(prefixFlexbox, { match: /y\sx/ }, (browsers) => {
      add(["display-flex", "inline-flex"], {
        feature: "flexbox",
        browsers
      });
      add(["flex", "flex-grow", "flex-shrink", "flex-basis"], {
        feature: "flexbox",
        browsers
      });
      add(
        [
          "flex-direction",
          "flex-wrap",
          "flex-flow",
          "justify-content",
          "order",
          "align-items",
          "align-self",
          "align-content"
        ],
        {
          feature: "flexbox",
          browsers
        }
      );
    });
    var prefixCalc = require_calc();
    f(
      prefixCalc,
      (browsers) => prefix(["calc"], {
        props: ["*"],
        feature: "calc",
        browsers
      })
    );
    var prefixBackgroundOptions = require_background_img_opts();
    f(
      prefixBackgroundOptions,
      (browsers) => prefix(["background-origin", "background-size"], {
        feature: "background-img-opts",
        browsers
      })
    );
    var prefixBackgroundClipText = require_background_clip_text();
    f(
      prefixBackgroundClipText,
      (browsers) => prefix(["background-clip"], {
        feature: "background-clip-text",
        browsers
      })
    );
    var prefixFontFeature = require_font_feature();
    f(
      prefixFontFeature,
      (browsers) => prefix(
        [
          "font-feature-settings",
          "font-variant-ligatures",
          "font-language-override"
        ],
        {
          feature: "font-feature",
          browsers
        }
      )
    );
    var prefixFontKerning = require_font_kerning();
    f(
      prefixFontKerning,
      (browsers) => prefix(["font-kerning"], {
        feature: "font-kerning",
        browsers
      })
    );
    var prefixBorderImage = require_border_image();
    f(
      prefixBorderImage,
      (browsers) => prefix(["border-image"], {
        feature: "border-image",
        browsers
      })
    );
    var prefixSelection = require_css_selection();
    f(
      prefixSelection,
      (browsers) => prefix(["::selection"], {
        selector: true,
        feature: "css-selection",
        browsers
      })
    );
    var prefixPlaceholder = require_css_placeholder();
    f(prefixPlaceholder, (browsers) => {
      prefix(["::placeholder"], {
        selector: true,
        feature: "css-placeholder",
        browsers: browsers.concat(["ie 10 old", "ie 11 old", "firefox 18 old"])
      });
    });
    var prefixPlaceholderShown = require_css_placeholder_shown();
    f(prefixPlaceholderShown, (browsers) => {
      prefix([":placeholder-shown"], {
        selector: true,
        feature: "css-placeholder-shown",
        browsers
      });
    });
    var prefixHyphens = require_css_hyphens();
    f(
      prefixHyphens,
      (browsers) => prefix(["hyphens"], {
        feature: "css-hyphens",
        browsers
      })
    );
    var prefixFullscreen = require_fullscreen();
    f(
      prefixFullscreen,
      (browsers) => prefix([":fullscreen"], {
        selector: true,
        feature: "fullscreen",
        browsers
      })
    );
    f(
      prefixFullscreen,
      { match: /x(\s#2|$)/ },
      (browsers) => prefix(["::backdrop"], {
        selector: true,
        feature: "fullscreen",
        browsers
      })
    );
    var prefixFileSelectorButton = require_css_file_selector_button();
    f(
      prefixFileSelectorButton,
      (browsers) => prefix(["::file-selector-button"], {
        selector: true,
        feature: "file-selector-button",
        browsers
      })
    );
    var prefixAutofill = require_css_autofill();
    f(
      prefixAutofill,
      (browsers) => prefix([":autofill"], {
        selector: true,
        feature: "css-autofill",
        browsers
      })
    );
    var prefixTabsize = require_css3_tabsize();
    f(
      prefixTabsize,
      (browsers) => prefix(["tab-size"], {
        feature: "css3-tabsize",
        browsers
      })
    );
    var prefixIntrinsic = require_intrinsic_width();
    var sizeProps = [
      "width",
      "min-width",
      "max-width",
      "height",
      "min-height",
      "max-height",
      "inline-size",
      "min-inline-size",
      "max-inline-size",
      "block-size",
      "min-block-size",
      "max-block-size",
      "grid",
      "grid-template",
      "grid-template-rows",
      "grid-template-columns",
      "grid-auto-columns",
      "grid-auto-rows"
    ];
    f(
      prefixIntrinsic,
      (browsers) => prefix(["max-content", "min-content"], {
        props: sizeProps,
        feature: "intrinsic-width",
        browsers
      })
    );
    f(
      prefixIntrinsic,
      { match: /x|\s#4/ },
      (browsers) => prefix(["fill", "fill-available"], {
        props: sizeProps,
        feature: "intrinsic-width",
        browsers
      })
    );
    f(
      prefixIntrinsic,
      { match: /x|\s#5/ },
      (browsers) => prefix(["fit-content"], {
        props: sizeProps,
        feature: "intrinsic-width",
        browsers
      })
    );
    var prefixStretch = require_css_width_stretch();
    f(
      prefixStretch,
      (browsers) => prefix(["stretch"], {
        props: sizeProps,
        feature: "css-width-stretch",
        browsers
      })
    );
    var prefixCursorsNewer = require_css3_cursors_newer();
    f(
      prefixCursorsNewer,
      (browsers) => prefix(["zoom-in", "zoom-out"], {
        props: ["cursor"],
        feature: "css3-cursors-newer",
        browsers
      })
    );
    var prefixCursorsGrab = require_css3_cursors_grab();
    f(
      prefixCursorsGrab,
      (browsers) => prefix(["grab", "grabbing"], {
        props: ["cursor"],
        feature: "css3-cursors-grab",
        browsers
      })
    );
    var prefixSticky = require_css_sticky();
    f(
      prefixSticky,
      (browsers) => prefix(["sticky"], {
        props: ["position"],
        feature: "css-sticky",
        browsers
      })
    );
    var prefixPointer = require_pointer();
    f(
      prefixPointer,
      (browsers) => prefix(["touch-action"], {
        feature: "pointer",
        browsers
      })
    );
    var prefixDecoration = require_text_decoration();
    f(
      prefixDecoration,
      { match: /x.*#[235]/ },
      (browsers) => prefix(["text-decoration-skip", "text-decoration-skip-ink"], {
        feature: "text-decoration",
        browsers
      })
    );
    var prefixDecorationShorthand = require_mdn_text_decoration_shorthand();
    f(
      prefixDecorationShorthand,
      (browsers) => prefix(["text-decoration"], {
        feature: "text-decoration",
        browsers
      })
    );
    var prefixDecorationColor = require_mdn_text_decoration_color();
    f(
      prefixDecorationColor,
      (browsers) => prefix(["text-decoration-color"], {
        feature: "text-decoration",
        browsers
      })
    );
    var prefixDecorationLine = require_mdn_text_decoration_line();
    f(
      prefixDecorationLine,
      (browsers) => prefix(["text-decoration-line"], {
        feature: "text-decoration",
        browsers
      })
    );
    var prefixDecorationStyle = require_mdn_text_decoration_style();
    f(
      prefixDecorationStyle,
      (browsers) => prefix(["text-decoration-style"], {
        feature: "text-decoration",
        browsers
      })
    );
    var prefixTextSizeAdjust = require_text_size_adjust();
    f(
      prefixTextSizeAdjust,
      (browsers) => prefix(["text-size-adjust"], {
        feature: "text-size-adjust",
        browsers
      })
    );
    var prefixCssMasks = require_css_masks();
    f(prefixCssMasks, (browsers) => {
      prefix(
        [
          "mask-clip",
          "mask-composite",
          "mask-image",
          "mask-origin",
          "mask-repeat",
          "mask-border-repeat",
          "mask-border-source"
        ],
        {
          feature: "css-masks",
          browsers
        }
      );
      prefix(
        [
          "mask",
          "mask-position",
          "mask-size",
          "mask-border",
          "mask-border-outset",
          "mask-border-width",
          "mask-border-slice"
        ],
        {
          feature: "css-masks",
          browsers
        }
      );
    });
    var prefixClipPath = require_css_clip_path();
    f(
      prefixClipPath,
      (browsers) => prefix(["clip-path"], {
        feature: "css-clip-path",
        browsers
      })
    );
    var prefixBoxdecoration = require_css_boxdecorationbreak();
    f(
      prefixBoxdecoration,
      (browsers) => prefix(["box-decoration-break"], {
        feature: "css-boxdecorationbreak",
        browsers
      })
    );
    var prefixObjectFit = require_object_fit();
    f(
      prefixObjectFit,
      (browsers) => prefix(["object-fit", "object-position"], {
        feature: "object-fit",
        browsers
      })
    );
    var prefixShapes = require_css_shapes();
    f(
      prefixShapes,
      (browsers) => prefix(["shape-margin", "shape-outside", "shape-image-threshold"], {
        feature: "css-shapes",
        browsers
      })
    );
    var prefixTextOverflow = require_text_overflow();
    f(
      prefixTextOverflow,
      (browsers) => prefix(["text-overflow"], {
        feature: "text-overflow",
        browsers
      })
    );
    var prefixDeviceadaptation = require_css_deviceadaptation();
    f(
      prefixDeviceadaptation,
      (browsers) => prefix(["@viewport"], {
        feature: "css-deviceadaptation",
        browsers
      })
    );
    var prefixResolut = require_css_media_resolution();
    f(
      prefixResolut,
      { match: /( x($| )|a #2)/ },
      (browsers) => prefix(["@resolution"], {
        feature: "css-media-resolution",
        browsers
      })
    );
    var prefixTextAlignLast = require_css_text_align_last();
    f(
      prefixTextAlignLast,
      (browsers) => prefix(["text-align-last"], {
        feature: "css-text-align-last",
        browsers
      })
    );
    var prefixCrispedges = require_css_crisp_edges();
    f(
      prefixCrispedges,
      { match: /y x|a x #1/ },
      (browsers) => prefix(["pixelated"], {
        props: ["image-rendering"],
        feature: "css-crisp-edges",
        browsers
      })
    );
    f(
      prefixCrispedges,
      { match: /a x #2/ },
      (browsers) => prefix(["image-rendering"], {
        feature: "css-crisp-edges",
        browsers
      })
    );
    var prefixLogicalProps = require_css_logical_props();
    f(
      prefixLogicalProps,
      (browsers) => prefix(
        [
          "border-inline-start",
          "border-inline-end",
          "margin-inline-start",
          "margin-inline-end",
          "padding-inline-start",
          "padding-inline-end"
        ],
        {
          feature: "css-logical-props",
          browsers
        }
      )
    );
    f(
      prefixLogicalProps,
      { match: /x\s#2/ },
      (browsers) => prefix(
        [
          "border-block-start",
          "border-block-end",
          "margin-block-start",
          "margin-block-end",
          "padding-block-start",
          "padding-block-end"
        ],
        {
          feature: "css-logical-props",
          browsers
        }
      )
    );
    var prefixAppearance = require_css_appearance();
    f(
      prefixAppearance,
      { match: /#2|x/ },
      (browsers) => prefix(["appearance"], {
        feature: "css-appearance",
        browsers
      })
    );
    var prefixSnappoints = require_css_snappoints();
    f(
      prefixSnappoints,
      (browsers) => prefix(
        [
          "scroll-snap-type",
          "scroll-snap-coordinate",
          "scroll-snap-destination",
          "scroll-snap-points-x",
          "scroll-snap-points-y"
        ],
        {
          feature: "css-snappoints",
          browsers
        }
      )
    );
    var prefixRegions = require_css_regions();
    f(
      prefixRegions,
      (browsers) => prefix(["flow-into", "flow-from", "region-fragment"], {
        feature: "css-regions",
        browsers
      })
    );
    var prefixImageSet = require_css_image_set();
    f(
      prefixImageSet,
      (browsers) => prefix(["image-set"], {
        props: [
          "background",
          "background-image",
          "border-image",
          "cursor",
          "mask",
          "mask-image",
          "list-style",
          "list-style-image",
          "content"
        ],
        feature: "css-image-set",
        browsers
      })
    );
    var prefixWritingMode = require_css_writing_mode();
    f(
      prefixWritingMode,
      { match: /a|x/ },
      (browsers) => prefix(["writing-mode"], {
        feature: "css-writing-mode",
        browsers
      })
    );
    var prefixCrossFade = require_css_cross_fade();
    f(
      prefixCrossFade,
      (browsers) => prefix(["cross-fade"], {
        props: [
          "background",
          "background-image",
          "border-image",
          "mask",
          "list-style",
          "list-style-image",
          "content",
          "mask-image"
        ],
        feature: "css-cross-fade",
        browsers
      })
    );
    var prefixReadOnly = require_css_read_only_write();
    f(
      prefixReadOnly,
      (browsers) => prefix([":read-only", ":read-write"], {
        selector: true,
        feature: "css-read-only-write",
        browsers
      })
    );
    var prefixTextEmphasis = require_text_emphasis();
    f(
      prefixTextEmphasis,
      (browsers) => prefix(
        [
          "text-emphasis",
          "text-emphasis-position",
          "text-emphasis-style",
          "text-emphasis-color"
        ],
        {
          feature: "text-emphasis",
          browsers
        }
      )
    );
    var prefixGrid = require_css_grid();
    f(prefixGrid, (browsers) => {
      prefix(["display-grid", "inline-grid"], {
        props: ["display"],
        feature: "css-grid",
        browsers
      });
      prefix(
        [
          "grid-template-columns",
          "grid-template-rows",
          "grid-row-start",
          "grid-column-start",
          "grid-row-end",
          "grid-column-end",
          "grid-row",
          "grid-column",
          "grid-area",
          "grid-template",
          "grid-template-areas",
          "place-self"
        ],
        {
          feature: "css-grid",
          browsers
        }
      );
    });
    f(
      prefixGrid,
      { match: /a x/ },
      (browsers) => prefix(["grid-column-align", "grid-row-align"], {
        feature: "css-grid",
        browsers
      })
    );
    var prefixTextSpacing = require_css_text_spacing();
    f(
      prefixTextSpacing,
      (browsers) => prefix(["text-spacing"], {
        feature: "css-text-spacing",
        browsers
      })
    );
    var prefixAnyLink = require_css_any_link();
    f(
      prefixAnyLink,
      (browsers) => prefix([":any-link"], {
        selector: true,
        feature: "css-any-link",
        browsers
      })
    );
    var bidiIsolate = require_mdn_css_unicode_bidi_isolate();
    f(
      bidiIsolate,
      (browsers) => prefix(["isolate"], {
        props: ["unicode-bidi"],
        feature: "css-unicode-bidi",
        browsers
      })
    );
    var bidiPlaintext = require_mdn_css_unicode_bidi_plaintext();
    f(
      bidiPlaintext,
      (browsers) => prefix(["plaintext"], {
        props: ["unicode-bidi"],
        feature: "css-unicode-bidi",
        browsers
      })
    );
    var bidiOverride = require_mdn_css_unicode_bidi_isolate_override();
    f(
      bidiOverride,
      { match: /y x/ },
      (browsers) => prefix(["isolate-override"], {
        props: ["unicode-bidi"],
        feature: "css-unicode-bidi",
        browsers
      })
    );
    var prefixOverscroll = require_css_overscroll_behavior();
    f(
      prefixOverscroll,
      { match: /a #1/ },
      (browsers) => prefix(["overscroll-behavior"], {
        feature: "css-overscroll-behavior",
        browsers
      })
    );
    var prefixTextOrientation = require_css_text_orientation();
    f(
      prefixTextOrientation,
      (browsers) => prefix(["text-orientation"], {
        feature: "css-text-orientation",
        browsers
      })
    );
    var prefixPrintAdjust = require_css_print_color_adjust();
    f(
      prefixPrintAdjust,
      (browsers) => prefix(["print-color-adjust", "color-adjust"], {
        feature: "css-print-color-adjust",
        browsers
      })
    );
  }
});
var require_info = __commonJS({
  "../../node_modules/autoprefixer/lib/info.js"(exports, module) {
    init_process();
    init_buffer();
    var browserslist = require_browserslist();
    function capitalize(str) {
      return str.slice(0, 1).toUpperCase() + str.slice(1);
    }
    var NAMES = {
      ie: "IE",
      ie_mob: "IE Mobile",
      ios_saf: "iOS Safari",
      op_mini: "Opera Mini",
      op_mob: "Opera Mobile",
      and_chr: "Chrome for Android",
      and_ff: "Firefox for Android",
      and_uc: "UC for Android",
      and_qq: "QQ Browser",
      kaios: "KaiOS Browser",
      baidu: "Baidu Browser",
      samsung: "Samsung Internet"
    };
    function prefix(name, prefixes, note) {
      let out = `  ${name}`;
      if (note)
        out += " *";
      out += ": ";
      out += prefixes.map((i) => i.replace(/^-(.*)-$/g, "$1")).join(", ");
      out += "\n";
      return out;
    }
    module.exports = function(prefixes) {
      if (prefixes.browsers.selected.length === 0) {
        return "No browsers selected";
      }
      let versions = {};
      for (let browser of prefixes.browsers.selected) {
        let parts = browser.split(" ");
        let name = parts[0];
        let version = parts[1];
        name = NAMES[name] || capitalize(name);
        if (versions[name]) {
          versions[name].push(version);
        } else {
          versions[name] = [version];
        }
      }
      let out = "Browsers:\n";
      for (let browser in versions) {
        let list2 = versions[browser];
        list2 = list2.sort((a, b) => parseFloat(b) - parseFloat(a));
        out += `  ${browser}: ${list2.join(", ")}
`;
      }
      let coverage = browserslist.coverage(prefixes.browsers.selected);
      let round = Math.round(coverage * 100) / 100;
      out += `
These browsers account for ${round}% of all users globally
`;
      let atrules = [];
      for (let name in prefixes.add) {
        let data = prefixes.add[name];
        if (name[0] === "@" && data.prefixes) {
          atrules.push(prefix(name, data.prefixes));
        }
      }
      if (atrules.length > 0) {
        out += `
At-Rules:
${atrules.sort().join("")}`;
      }
      let selectors = [];
      for (let selector of prefixes.add.selectors) {
        if (selector.prefixes) {
          selectors.push(prefix(selector.name, selector.prefixes));
        }
      }
      if (selectors.length > 0) {
        out += `
Selectors:
${selectors.sort().join("")}`;
      }
      let values = [];
      let props = [];
      let hadGrid = false;
      for (let name in prefixes.add) {
        let data = prefixes.add[name];
        if (name[0] !== "@" && data.prefixes) {
          let grid = name.indexOf("grid-") === 0;
          if (grid)
            hadGrid = true;
          props.push(prefix(name, data.prefixes, grid));
        }
        if (!Array.isArray(data.values)) {
          continue;
        }
        for (let value of data.values) {
          let grid = value.name.includes("grid");
          if (grid)
            hadGrid = true;
          let string = prefix(value.name, value.prefixes, grid);
          if (!values.includes(string)) {
            values.push(string);
          }
        }
      }
      if (props.length > 0) {
        out += `
Properties:
${props.sort().join("")}`;
      }
      if (values.length > 0) {
        out += `
Values:
${values.sort().join("")}`;
      }
      if (hadGrid) {
        out += "\n* - Prefixes will be added only on grid: true option.\n";
      }
      if (!atrules.length && !selectors.length && !props.length && !values.length) {
        out += "\nAwesome! Your browsers don't require any vendor prefixes.\nNow you can remove Autoprefixer from build steps.";
      }
      return out;
    };
  }
});
var require_autoprefixer = __commonJS({
  "../../node_modules/autoprefixer/lib/autoprefixer.js"(exports, module) {
    init_process();
    init_buffer();
    var browserslist = require_browserslist();
    var { agents } = require_unpacker();
    var pico = require_picocolors_browser();
    var Browsers = require_browsers3();
    var Prefixes = require_prefixes();
    var dataPrefixes = require_prefixes2();
    var getInfo = require_info();
    var autoprefixerData = { browsers: agents, prefixes: dataPrefixes };
    var WARNING = "\n  Replace Autoprefixer `browsers` option to Browserslist config.\n  Use `browserslist` key in `package.json` or `.browserslistrc` file.\n\n  Using `browsers` option can cause errors. Browserslist config can\n  be used for Babel, Autoprefixer, postcss-normalize and other tools.\n\n  If you really need to use option, rename it to `overrideBrowserslist`.\n\n  Learn more at:\n  https://github.com/browserslist/browserslist#readme\n  https://twitter.com/browserslist\n\n";
    function isPlainObject(obj) {
      return Object.prototype.toString.apply(obj) === "[object Object]";
    }
    var cache = /* @__PURE__ */ new Map();
    function timeCapsule(result, prefixes) {
      if (prefixes.browsers.selected.length === 0) {
        return;
      }
      if (prefixes.add.selectors.length > 0) {
        return;
      }
      if (Object.keys(prefixes.add).length > 2) {
        return;
      }
      result.warn(
        "Autoprefixer target browsers do not need any prefixes.You do not need Autoprefixer anymore.\nCheck your Browserslist config to be sure that your targets are set up correctly.\n\n  Learn more at:\n  https://github.com/postcss/autoprefixer#readme\n  https://github.com/browserslist/browserslist#readme\n\n"
      );
    }
    module.exports = plugin2;
    function plugin2(...reqs) {
      let options;
      if (reqs.length === 1 && isPlainObject(reqs[0])) {
        options = reqs[0];
        reqs = void 0;
      } else if (reqs.length === 0 || reqs.length === 1 && !reqs[0]) {
        reqs = void 0;
      } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {
        options = reqs[1];
        reqs = reqs[0];
      } else if (typeof reqs[reqs.length - 1] === "object") {
        options = reqs.pop();
      }
      if (!options) {
        options = {};
      }
      if (options.browser) {
        throw new Error(
          "Change `browser` option to `overrideBrowserslist` in Autoprefixer"
        );
      } else if (options.browserslist) {
        throw new Error(
          "Change `browserslist` option to `overrideBrowserslist` in Autoprefixer"
        );
      }
      if (options.overrideBrowserslist) {
        reqs = options.overrideBrowserslist;
      } else if (options.browsers) {
        if (typeof console !== "undefined" && console.warn) {
          console.warn(
            pico.red(WARNING.replace(/`[^`]+`/g, (i) => pico.yellow(i.slice(1, -1))))
          );
        }
        reqs = options.browsers;
      }
      let brwlstOpts = {
        ignoreUnknownVersions: options.ignoreUnknownVersions,
        stats: options.stats,
        env: options.env
      };
      function loadPrefixes(opts) {
        let d = autoprefixerData;
        let browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts);
        let key = browsers.selected.join(", ") + JSON.stringify(options);
        if (!cache.has(key)) {
          cache.set(key, new Prefixes(d.prefixes, browsers, options));
        }
        return cache.get(key);
      }
      return {
        postcssPlugin: "autoprefixer",
        prepare(result) {
          let prefixes = loadPrefixes({
            from: result.opts.from,
            env: options.env
          });
          return {
            OnceExit(root2) {
              timeCapsule(result, prefixes);
              if (options.remove !== false) {
                prefixes.processor.remove(root2, result);
              }
              if (options.add !== false) {
                prefixes.processor.add(root2, result);
              }
            }
          };
        },
        info(opts) {
          opts = opts || {};
          opts.from = opts.from || process.cwd();
          return getInfo(loadPrefixes(opts));
        },
        options,
        browsers: reqs
      };
    }
    plugin2.postcss = true;
    plugin2.data = autoprefixerData;
    plugin2.defaults = browserslist.defaults;
    plugin2.info = () => plugin2().info();
  }
});
var fast_glob_exports = {};
__export(fast_glob_exports, {
  default: () => fast_glob_default
});
var fast_glob_default;
var init_fast_glob = __esm({
  "src/fakeModules/fast-glob.js"() {
    init_process();
    init_buffer();
    fast_glob_default = {
      sync: (patterns) => [].concat(patterns)
    };
  }
});
var require_quick_lru = __commonJS({
  "../../node_modules/quick-lru/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var QuickLRU = class {
      constructor(options = {}) {
        if (!(options.maxSize && options.maxSize > 0)) {
          throw new TypeError("`maxSize` must be a number greater than 0");
        }
        this.maxSize = options.maxSize;
        this.onEviction = options.onEviction;
        this.cache = /* @__PURE__ */ new Map();
        this.oldCache = /* @__PURE__ */ new Map();
        this._size = 0;
      }
      _set(key, value) {
        this.cache.set(key, value);
        this._size++;
        if (this._size >= this.maxSize) {
          this._size = 0;
          if (typeof this.onEviction === "function") {
            for (const [key2, value2] of this.oldCache.entries()) {
              this.onEviction(key2, value2);
            }
          }
          this.oldCache = this.cache;
          this.cache = /* @__PURE__ */ new Map();
        }
      }
      get(key) {
        if (this.cache.has(key)) {
          return this.cache.get(key);
        }
        if (this.oldCache.has(key)) {
          const value = this.oldCache.get(key);
          this.oldCache.delete(key);
          this._set(key, value);
          return value;
        }
      }
      set(key, value) {
        if (this.cache.has(key)) {
          this.cache.set(key, value);
        } else {
          this._set(key, value);
        }
        return this;
      }
      has(key) {
        return this.cache.has(key) || this.oldCache.has(key);
      }
      peek(key) {
        if (this.cache.has(key)) {
          return this.cache.get(key);
        }
        if (this.oldCache.has(key)) {
          return this.oldCache.get(key);
        }
      }
      delete(key) {
        const deleted = this.cache.delete(key);
        if (deleted) {
          this._size--;
        }
        return this.oldCache.delete(key) || deleted;
      }
      clear() {
        this.cache.clear();
        this.oldCache.clear();
        this._size = 0;
      }
      *keys() {
        for (const [key] of this) {
          yield key;
        }
      }
      *values() {
        for (const [, value] of this) {
          yield value;
        }
      }
      *[Symbol.iterator]() {
        for (const item of this.cache) {
          yield item;
        }
        for (const item of this.oldCache) {
          const [key] = item;
          if (!this.cache.has(key)) {
            yield item;
          }
        }
      }
      get size() {
        let oldCacheSize = 0;
        for (const key of this.oldCache.keys()) {
          if (!this.cache.has(key)) {
            oldCacheSize++;
          }
        }
        return Math.min(this._size + oldCacheSize, this.maxSize);
      }
    };
    module.exports = QuickLRU;
  }
});
var require_normalize_path = __commonJS({
  "../../node_modules/normalize-path/index.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = function(path, stripTrailing) {
      if (typeof path !== "string") {
        throw new TypeError("expected path to be a string");
      }
      if (path === "\\" || path === "/")
        return "/";
      var len = path.length;
      if (len <= 1)
        return path;
      var prefix = "";
      if (len > 4 && path[3] === "\\") {
        var ch = path[2];
        if ((ch === "?" || ch === ".") && path.slice(0, 2) === "\\\\") {
          path = path.slice(2);
          prefix = "//";
        }
      }
      var segs = path.split(/[/\\]+/);
      if (stripTrailing !== false && segs[segs.length - 1] === "") {
        segs.pop();
      }
      return prefix + segs.join("/");
    };
  }
});
var require_object_hash = __commonJS({
  "../../node_modules/object-hash/dist/object_hash.js"(exports, module) {
    init_process();
    init_buffer();
    !function(e) {
      var t;
      "object" == typeof exports ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : ("undefined" != typeof window ? t = window : "undefined" != typeof globalThis ? t = globalThis : "undefined" != typeof self && (t = self), t.objectHash = e());
    }(function() {
      return function r(o, i, u) {
        function s(n, e2) {
          if (!i[n]) {
            if (!o[n]) {
              var t = "function" == typeof __require && __require;
              if (!e2 && t)
                return t(n, true);
              if (a)
                return a(n, true);
              throw new Error("Cannot find module '" + n + "'");
            }
            e2 = i[n] = { exports: {} };
            o[n][0].call(e2.exports, function(e3) {
              var t2 = o[n][1][e3];
              return s(t2 || e3);
            }, e2, e2.exports, r, o, i, u);
          }
          return i[n].exports;
        }
        for (var a = "function" == typeof __require && __require, e = 0; e < u.length; e++)
          s(u[e]);
        return s;
      }({ 1: [function(w, b, m) {
        !function(e, n, s, c, d, h, p, g, y) {
          "use strict";
          var r = w("crypto");
          function t(e2, t2) {
            t2 = u(e2, t2);
            var n2;
            return void 0 === (n2 = "passthrough" !== t2.algorithm ? r.createHash(t2.algorithm) : new l()).write && (n2.write = n2.update, n2.end = n2.update), f(t2, n2).dispatch(e2), n2.update || n2.end(""), n2.digest ? n2.digest("buffer" === t2.encoding ? void 0 : t2.encoding) : (e2 = n2.read(), "buffer" !== t2.encoding ? e2.toString(t2.encoding) : e2);
          }
          (m = b.exports = t).sha1 = function(e2) {
            return t(e2);
          }, m.keys = function(e2) {
            return t(e2, { excludeValues: true, algorithm: "sha1", encoding: "hex" });
          }, m.MD5 = function(e2) {
            return t(e2, { algorithm: "md5", encoding: "hex" });
          }, m.keysMD5 = function(e2) {
            return t(e2, { algorithm: "md5", encoding: "hex", excludeValues: true });
          };
          var o = r.getHashes ? r.getHashes().slice() : ["sha1", "md5"], i = (o.push("passthrough"), ["buffer", "hex", "binary", "base64"]);
          function u(e2, t2) {
            var n2 = {};
            if (n2.algorithm = (t2 = t2 || {}).algorithm || "sha1", n2.encoding = t2.encoding || "hex", n2.excludeValues = !!t2.excludeValues, n2.algorithm = n2.algorithm.toLowerCase(), n2.encoding = n2.encoding.toLowerCase(), n2.ignoreUnknown = true === t2.ignoreUnknown, n2.respectType = false !== t2.respectType, n2.respectFunctionNames = false !== t2.respectFunctionNames, n2.respectFunctionProperties = false !== t2.respectFunctionProperties, n2.unorderedArrays = true === t2.unorderedArrays, n2.unorderedSets = false !== t2.unorderedSets, n2.unorderedObjects = false !== t2.unorderedObjects, n2.replacer = t2.replacer || void 0, n2.excludeKeys = t2.excludeKeys || void 0, void 0 === e2)
              throw new Error("Object argument required.");
            for (var r2 = 0; r2 < o.length; ++r2)
              o[r2].toLowerCase() === n2.algorithm.toLowerCase() && (n2.algorithm = o[r2]);
            if (-1 === o.indexOf(n2.algorithm))
              throw new Error('Algorithm "' + n2.algorithm + '"  not supported. supported values: ' + o.join(", "));
            if (-1 === i.indexOf(n2.encoding) && "passthrough" !== n2.algorithm)
              throw new Error('Encoding "' + n2.encoding + '"  not supported. supported values: ' + i.join(", "));
            return n2;
          }
          function a(e2) {
            if ("function" == typeof e2)
              return null != /^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i.exec(Function.prototype.toString.call(e2));
          }
          function f(o2, t2, i2) {
            i2 = i2 || [];
            function u2(e2) {
              return t2.update ? t2.update(e2, "utf8") : t2.write(e2, "utf8");
            }
            return { dispatch: function(e2) {
              return this["_" + (null === (e2 = o2.replacer ? o2.replacer(e2) : e2) ? "null" : typeof e2)](e2);
            }, _object: function(t3) {
              var n2, e2 = Object.prototype.toString.call(t3), r2 = /\[object (.*)\]/i.exec(e2);
              r2 = (r2 = r2 ? r2[1] : "unknown:[" + e2 + "]").toLowerCase();
              if (0 <= (e2 = i2.indexOf(t3)))
                return this.dispatch("[CIRCULAR:" + e2 + "]");
              if (i2.push(t3), void 0 !== s && s.isBuffer && s.isBuffer(t3))
                return u2("buffer:"), u2(t3);
              if ("object" === r2 || "function" === r2 || "asyncfunction" === r2)
                return e2 = Object.keys(t3), o2.unorderedObjects && (e2 = e2.sort()), false === o2.respectType || a(t3) || e2.splice(0, 0, "prototype", "__proto__", "constructor"), o2.excludeKeys && (e2 = e2.filter(function(e3) {
                  return !o2.excludeKeys(e3);
                })), u2("object:" + e2.length + ":"), n2 = this, e2.forEach(function(e3) {
                  n2.dispatch(e3), u2(":"), o2.excludeValues || n2.dispatch(t3[e3]), u2(",");
                });
              if (!this["_" + r2]) {
                if (o2.ignoreUnknown)
                  return u2("[" + r2 + "]");
                throw new Error('Unknown object type "' + r2 + '"');
              }
              this["_" + r2](t3);
            }, _array: function(e2, t3) {
              t3 = void 0 !== t3 ? t3 : false !== o2.unorderedArrays;
              var n2 = this;
              if (u2("array:" + e2.length + ":"), !t3 || e2.length <= 1)
                return e2.forEach(function(e3) {
                  return n2.dispatch(e3);
                });
              var r2 = [], t3 = e2.map(function(e3) {
                var t4 = new l(), n3 = i2.slice();
                return f(o2, t4, n3).dispatch(e3), r2 = r2.concat(n3.slice(i2.length)), t4.read().toString();
              });
              return i2 = i2.concat(r2), t3.sort(), this._array(t3, false);
            }, _date: function(e2) {
              return u2("date:" + e2.toJSON());
            }, _symbol: function(e2) {
              return u2("symbol:" + e2.toString());
            }, _error: function(e2) {
              return u2("error:" + e2.toString());
            }, _boolean: function(e2) {
              return u2("bool:" + e2.toString());
            }, _string: function(e2) {
              u2("string:" + e2.length + ":"), u2(e2.toString());
            }, _function: function(e2) {
              u2("fn:"), a(e2) ? this.dispatch("[native]") : this.dispatch(e2.toString()), false !== o2.respectFunctionNames && this.dispatch("function-name:" + String(e2.name)), o2.respectFunctionProperties && this._object(e2);
            }, _number: function(e2) {
              return u2("number:" + e2.toString());
            }, _xml: function(e2) {
              return u2("xml:" + e2.toString());
            }, _null: function() {
              return u2("Null");
            }, _undefined: function() {
              return u2("Undefined");
            }, _regexp: function(e2) {
              return u2("regex:" + e2.toString());
            }, _uint8array: function(e2) {
              return u2("uint8array:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _uint8clampedarray: function(e2) {
              return u2("uint8clampedarray:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _int8array: function(e2) {
              return u2("int8array:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _uint16array: function(e2) {
              return u2("uint16array:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _int16array: function(e2) {
              return u2("int16array:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _uint32array: function(e2) {
              return u2("uint32array:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _int32array: function(e2) {
              return u2("int32array:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _float32array: function(e2) {
              return u2("float32array:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _float64array: function(e2) {
              return u2("float64array:"), this.dispatch(Array.prototype.slice.call(e2));
            }, _arraybuffer: function(e2) {
              return u2("arraybuffer:"), this.dispatch(new Uint8Array(e2));
            }, _url: function(e2) {
              return u2("url:" + e2.toString());
            }, _map: function(e2) {
              u2("map:");
              e2 = Array.from(e2);
              return this._array(e2, false !== o2.unorderedSets);
            }, _set: function(e2) {
              u2("set:");
              e2 = Array.from(e2);
              return this._array(e2, false !== o2.unorderedSets);
            }, _file: function(e2) {
              return u2("file:"), this.dispatch([e2.name, e2.size, e2.type, e2.lastModfied]);
            }, _blob: function() {
              if (o2.ignoreUnknown)
                return u2("[blob]");
              throw Error('Hashing Blob objects is currently not supported\n(see https://github.com/puleos/object-hash/issues/26)\nUse "options.replacer" or "options.ignoreUnknown"\n');
            }, _domwindow: function() {
              return u2("domwindow");
            }, _bigint: function(e2) {
              return u2("bigint:" + e2.toString());
            }, _process: function() {
              return u2("process");
            }, _timer: function() {
              return u2("timer");
            }, _pipe: function() {
              return u2("pipe");
            }, _tcp: function() {
              return u2("tcp");
            }, _udp: function() {
              return u2("udp");
            }, _tty: function() {
              return u2("tty");
            }, _statwatcher: function() {
              return u2("statwatcher");
            }, _securecontext: function() {
              return u2("securecontext");
            }, _connection: function() {
              return u2("connection");
            }, _zlib: function() {
              return u2("zlib");
            }, _context: function() {
              return u2("context");
            }, _nodescript: function() {
              return u2("nodescript");
            }, _httpparser: function() {
              return u2("httpparser");
            }, _dataview: function() {
              return u2("dataview");
            }, _signal: function() {
              return u2("signal");
            }, _fsevent: function() {
              return u2("fsevent");
            }, _tlswrap: function() {
              return u2("tlswrap");
            } };
          }
          function l() {
            return { buf: "", write: function(e2) {
              this.buf += e2;
            }, end: function(e2) {
              this.buf += e2;
            }, read: function() {
              return this.buf;
            } };
          }
          m.writeToStream = function(e2, t2, n2) {
            return void 0 === n2 && (n2 = t2, t2 = {}), f(t2 = u(e2, t2), n2).dispatch(e2);
          };
        }.call(this, w("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, w("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/fake_9a5aa49d.js", "/");
      }, { buffer: 3, crypto: 5, lYpoI2: 11 }], 2: [function(e, t, f) {
        !function(e2, t2, n, r, o, i, u, s, a) {
          !function(e3) {
            "use strict";
            var a2 = "undefined" != typeof Uint8Array ? Uint8Array : Array, t3 = "+".charCodeAt(0), n2 = "/".charCodeAt(0), r2 = "0".charCodeAt(0), o2 = "a".charCodeAt(0), i2 = "A".charCodeAt(0), u2 = "-".charCodeAt(0), s2 = "_".charCodeAt(0);
            function f2(e4) {
              e4 = e4.charCodeAt(0);
              return e4 === t3 || e4 === u2 ? 62 : e4 === n2 || e4 === s2 ? 63 : e4 < r2 ? -1 : e4 < r2 + 10 ? e4 - r2 + 26 + 26 : e4 < i2 + 26 ? e4 - i2 : e4 < o2 + 26 ? e4 - o2 + 26 : void 0;
            }
            e3.toByteArray = function(e4) {
              var t4, n3;
              if (0 < e4.length % 4)
                throw new Error("Invalid string. Length must be a multiple of 4");
              var r3 = e4.length, r3 = "=" === e4.charAt(r3 - 2) ? 2 : "=" === e4.charAt(r3 - 1) ? 1 : 0, o3 = new a2(3 * e4.length / 4 - r3), i3 = 0 < r3 ? e4.length - 4 : e4.length, u3 = 0;
              function s3(e5) {
                o3[u3++] = e5;
              }
              for (t4 = 0; t4 < i3; t4 += 4, 0)
                s3((16711680 & (n3 = f2(e4.charAt(t4)) << 18 | f2(e4.charAt(t4 + 1)) << 12 | f2(e4.charAt(t4 + 2)) << 6 | f2(e4.charAt(t4 + 3)))) >> 16), s3((65280 & n3) >> 8), s3(255 & n3);
              return 2 == r3 ? s3(255 & (n3 = f2(e4.charAt(t4)) << 2 | f2(e4.charAt(t4 + 1)) >> 4)) : 1 == r3 && (s3((n3 = f2(e4.charAt(t4)) << 10 | f2(e4.charAt(t4 + 1)) << 4 | f2(e4.charAt(t4 + 2)) >> 2) >> 8 & 255), s3(255 & n3)), o3;
            }, e3.fromByteArray = function(e4) {
              var t4, n3, r3, o3, i3 = e4.length % 3, u3 = "";
              function s3(e5) {
                return "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(e5);
              }
              for (t4 = 0, r3 = e4.length - i3; t4 < r3; t4 += 3)
                n3 = (e4[t4] << 16) + (e4[t4 + 1] << 8) + e4[t4 + 2], u3 += s3((o3 = n3) >> 18 & 63) + s3(o3 >> 12 & 63) + s3(o3 >> 6 & 63) + s3(63 & o3);
              switch (i3) {
                case 1:
                  u3 = (u3 += s3((n3 = e4[e4.length - 1]) >> 2)) + s3(n3 << 4 & 63) + "==";
                  break;
                case 2:
                  u3 = (u3 = (u3 += s3((n3 = (e4[e4.length - 2] << 8) + e4[e4.length - 1]) >> 10)) + s3(n3 >> 4 & 63)) + s3(n3 << 2 & 63) + "=";
              }
              return u3;
            };
          }(void 0 === f ? this.base64js = {} : f);
        }.call(this, e("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js", "/node_modules/gulp-browserify/node_modules/base64-js/lib");
      }, { buffer: 3, lYpoI2: 11 }], 3: [function(O, e, H) {
        !function(e2, n, f, r, h, p, g, y, w) {
          var a = O("base64-js"), i = O("ieee754");
          function f(e3, t2, n2) {
            if (!(this instanceof f))
              return new f(e3, t2, n2);
            var r2, o2, i2, u2, s2 = typeof e3;
            if ("base64" === t2 && "string" == s2)
              for (e3 = (u2 = e3).trim ? u2.trim() : u2.replace(/^\s+|\s+$/g, ""); e3.length % 4 != 0; )
                e3 += "=";
            if ("number" == s2)
              r2 = j(e3);
            else if ("string" == s2)
              r2 = f.byteLength(e3, t2);
            else {
              if ("object" != s2)
                throw new Error("First argument needs to be a number, array or string.");
              r2 = j(e3.length);
            }
            if (f._useTypedArrays ? o2 = f._augment(new Uint8Array(r2)) : ((o2 = this).length = r2, o2._isBuffer = true), f._useTypedArrays && "number" == typeof e3.byteLength)
              o2._set(e3);
            else if (C(u2 = e3) || f.isBuffer(u2) || u2 && "object" == typeof u2 && "number" == typeof u2.length)
              for (i2 = 0; i2 < r2; i2++)
                f.isBuffer(e3) ? o2[i2] = e3.readUInt8(i2) : o2[i2] = e3[i2];
            else if ("string" == s2)
              o2.write(e3, 0, t2);
            else if ("number" == s2 && !f._useTypedArrays && !n2)
              for (i2 = 0; i2 < r2; i2++)
                o2[i2] = 0;
            return o2;
          }
          function b(e3, t2, n2, r2) {
            return f._charsWritten = c(function(e4) {
              for (var t3 = [], n3 = 0; n3 < e4.length; n3++)
                t3.push(255 & e4.charCodeAt(n3));
              return t3;
            }(t2), e3, n2, r2);
          }
          function m(e3, t2, n2, r2) {
            return f._charsWritten = c(function(e4) {
              for (var t3, n3, r3 = [], o2 = 0; o2 < e4.length; o2++)
                n3 = e4.charCodeAt(o2), t3 = n3 >> 8, n3 = n3 % 256, r3.push(n3), r3.push(t3);
              return r3;
            }(t2), e3, n2, r2);
          }
          function v(e3, t2, n2) {
            var r2 = "";
            n2 = Math.min(e3.length, n2);
            for (var o2 = t2; o2 < n2; o2++)
              r2 += String.fromCharCode(e3[o2]);
            return r2;
          }
          function o(e3, t2, n2, r2) {
            r2 || (d("boolean" == typeof n2, "missing or invalid endian"), d(null != t2, "missing offset"), d(t2 + 1 < e3.length, "Trying to read beyond buffer length"));
            var o2, r2 = e3.length;
            if (!(r2 <= t2))
              return n2 ? (o2 = e3[t2], t2 + 1 < r2 && (o2 |= e3[t2 + 1] << 8)) : (o2 = e3[t2] << 8, t2 + 1 < r2 && (o2 |= e3[t2 + 1])), o2;
          }
          function u(e3, t2, n2, r2) {
            r2 || (d("boolean" == typeof n2, "missing or invalid endian"), d(null != t2, "missing offset"), d(t2 + 3 < e3.length, "Trying to read beyond buffer length"));
            var o2, r2 = e3.length;
            if (!(r2 <= t2))
              return n2 ? (t2 + 2 < r2 && (o2 = e3[t2 + 2] << 16), t2 + 1 < r2 && (o2 |= e3[t2 + 1] << 8), o2 |= e3[t2], t2 + 3 < r2 && (o2 += e3[t2 + 3] << 24 >>> 0)) : (t2 + 1 < r2 && (o2 = e3[t2 + 1] << 16), t2 + 2 < r2 && (o2 |= e3[t2 + 2] << 8), t2 + 3 < r2 && (o2 |= e3[t2 + 3]), o2 += e3[t2] << 24 >>> 0), o2;
          }
          function _(e3, t2, n2, r2) {
            if (r2 || (d("boolean" == typeof n2, "missing or invalid endian"), d(null != t2, "missing offset"), d(t2 + 1 < e3.length, "Trying to read beyond buffer length")), !(e3.length <= t2))
              return r2 = o(e3, t2, n2, true), 32768 & r2 ? -1 * (65535 - r2 + 1) : r2;
          }
          function E(e3, t2, n2, r2) {
            if (r2 || (d("boolean" == typeof n2, "missing or invalid endian"), d(null != t2, "missing offset"), d(t2 + 3 < e3.length, "Trying to read beyond buffer length")), !(e3.length <= t2))
              return r2 = u(e3, t2, n2, true), 2147483648 & r2 ? -1 * (4294967295 - r2 + 1) : r2;
          }
          function I(e3, t2, n2, r2) {
            return r2 || (d("boolean" == typeof n2, "missing or invalid endian"), d(t2 + 3 < e3.length, "Trying to read beyond buffer length")), i.read(e3, t2, n2, 23, 4);
          }
          function A(e3, t2, n2, r2) {
            return r2 || (d("boolean" == typeof n2, "missing or invalid endian"), d(t2 + 7 < e3.length, "Trying to read beyond buffer length")), i.read(e3, t2, n2, 52, 8);
          }
          function s(e3, t2, n2, r2, o2) {
            o2 || (d(null != t2, "missing value"), d("boolean" == typeof r2, "missing or invalid endian"), d(null != n2, "missing offset"), d(n2 + 1 < e3.length, "trying to write beyond buffer length"), Y(t2, 65535));
            o2 = e3.length;
            if (!(o2 <= n2))
              for (var i2 = 0, u2 = Math.min(o2 - n2, 2); i2 < u2; i2++)
                e3[n2 + i2] = (t2 & 255 << 8 * (r2 ? i2 : 1 - i2)) >>> 8 * (r2 ? i2 : 1 - i2);
          }
          function l(e3, t2, n2, r2, o2) {
            o2 || (d(null != t2, "missing value"), d("boolean" == typeof r2, "missing or invalid endian"), d(null != n2, "missing offset"), d(n2 + 3 < e3.length, "trying to write beyond buffer length"), Y(t2, 4294967295));
            o2 = e3.length;
            if (!(o2 <= n2))
              for (var i2 = 0, u2 = Math.min(o2 - n2, 4); i2 < u2; i2++)
                e3[n2 + i2] = t2 >>> 8 * (r2 ? i2 : 3 - i2) & 255;
          }
          function B(e3, t2, n2, r2, o2) {
            o2 || (d(null != t2, "missing value"), d("boolean" == typeof r2, "missing or invalid endian"), d(null != n2, "missing offset"), d(n2 + 1 < e3.length, "Trying to write beyond buffer length"), F(t2, 32767, -32768)), e3.length <= n2 || s(e3, 0 <= t2 ? t2 : 65535 + t2 + 1, n2, r2, o2);
          }
          function L(e3, t2, n2, r2, o2) {
            o2 || (d(null != t2, "missing value"), d("boolean" == typeof r2, "missing or invalid endian"), d(null != n2, "missing offset"), d(n2 + 3 < e3.length, "Trying to write beyond buffer length"), F(t2, 2147483647, -2147483648)), e3.length <= n2 || l(e3, 0 <= t2 ? t2 : 4294967295 + t2 + 1, n2, r2, o2);
          }
          function U(e3, t2, n2, r2, o2) {
            o2 || (d(null != t2, "missing value"), d("boolean" == typeof r2, "missing or invalid endian"), d(null != n2, "missing offset"), d(n2 + 3 < e3.length, "Trying to write beyond buffer length"), D(t2, 34028234663852886e22, -34028234663852886e22)), e3.length <= n2 || i.write(e3, t2, n2, r2, 23, 4);
          }
          function x(e3, t2, n2, r2, o2) {
            o2 || (d(null != t2, "missing value"), d("boolean" == typeof r2, "missing or invalid endian"), d(null != n2, "missing offset"), d(n2 + 7 < e3.length, "Trying to write beyond buffer length"), D(t2, 17976931348623157e292, -17976931348623157e292)), e3.length <= n2 || i.write(e3, t2, n2, r2, 52, 8);
          }
          H.Buffer = f, H.SlowBuffer = f, H.INSPECT_MAX_BYTES = 50, f.poolSize = 8192, f._useTypedArrays = function() {
            try {
              var e3 = new ArrayBuffer(0), t2 = new Uint8Array(e3);
              return t2.foo = function() {
                return 42;
              }, 42 === t2.foo() && "function" == typeof t2.subarray;
            } catch (e4) {
              return false;
            }
          }(), f.isEncoding = function(e3) {
            switch (String(e3).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "binary":
              case "base64":
              case "raw":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return true;
              default:
                return false;
            }
          }, f.isBuffer = function(e3) {
            return !(null == e3 || !e3._isBuffer);
          }, f.byteLength = function(e3, t2) {
            var n2;
            switch (e3 += "", t2 || "utf8") {
              case "hex":
                n2 = e3.length / 2;
                break;
              case "utf8":
              case "utf-8":
                n2 = T(e3).length;
                break;
              case "ascii":
              case "binary":
              case "raw":
                n2 = e3.length;
                break;
              case "base64":
                n2 = M(e3).length;
                break;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                n2 = 2 * e3.length;
                break;
              default:
                throw new Error("Unknown encoding");
            }
            return n2;
          }, f.concat = function(e3, t2) {
            if (d(C(e3), "Usage: Buffer.concat(list, [totalLength])\nlist should be an Array."), 0 === e3.length)
              return new f(0);
            if (1 === e3.length)
              return e3[0];
            if ("number" != typeof t2)
              for (o2 = t2 = 0; o2 < e3.length; o2++)
                t2 += e3[o2].length;
            for (var n2 = new f(t2), r2 = 0, o2 = 0; o2 < e3.length; o2++) {
              var i2 = e3[o2];
              i2.copy(n2, r2), r2 += i2.length;
            }
            return n2;
          }, f.prototype.write = function(e3, t2, n2, r2) {
            isFinite(t2) ? isFinite(n2) || (r2 = n2, n2 = void 0) : (a2 = r2, r2 = t2, t2 = n2, n2 = a2), t2 = Number(t2) || 0;
            var o2, i2, u2, s2, a2 = this.length - t2;
            switch ((!n2 || a2 < (n2 = Number(n2))) && (n2 = a2), r2 = String(r2 || "utf8").toLowerCase()) {
              case "hex":
                o2 = function(e4, t3, n3, r3) {
                  n3 = Number(n3) || 0;
                  var o3 = e4.length - n3;
                  (!r3 || o3 < (r3 = Number(r3))) && (r3 = o3), d((o3 = t3.length) % 2 == 0, "Invalid hex string"), o3 / 2 < r3 && (r3 = o3 / 2);
                  for (var i3 = 0; i3 < r3; i3++) {
                    var u3 = parseInt(t3.substr(2 * i3, 2), 16);
                    d(!isNaN(u3), "Invalid hex string"), e4[n3 + i3] = u3;
                  }
                  return f._charsWritten = 2 * i3, i3;
                }(this, e3, t2, n2);
                break;
              case "utf8":
              case "utf-8":
                i2 = this, u2 = t2, s2 = n2, o2 = f._charsWritten = c(T(e3), i2, u2, s2);
                break;
              case "ascii":
              case "binary":
                o2 = b(this, e3, t2, n2);
                break;
              case "base64":
                i2 = this, u2 = t2, s2 = n2, o2 = f._charsWritten = c(M(e3), i2, u2, s2);
                break;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                o2 = m(this, e3, t2, n2);
                break;
              default:
                throw new Error("Unknown encoding");
            }
            return o2;
          }, f.prototype.toString = function(e3, t2, n2) {
            var r2, o2, i2, u2, s2 = this;
            if (e3 = String(e3 || "utf8").toLowerCase(), t2 = Number(t2) || 0, (n2 = void 0 !== n2 ? Number(n2) : s2.length) === t2)
              return "";
            switch (e3) {
              case "hex":
                r2 = function(e4, t3, n3) {
                  var r3 = e4.length;
                  (!t3 || t3 < 0) && (t3 = 0);
                  (!n3 || n3 < 0 || r3 < n3) && (n3 = r3);
                  for (var o3 = "", i3 = t3; i3 < n3; i3++)
                    o3 += k(e4[i3]);
                  return o3;
                }(s2, t2, n2);
                break;
              case "utf8":
              case "utf-8":
                r2 = function(e4, t3, n3) {
                  var r3 = "", o3 = "";
                  n3 = Math.min(e4.length, n3);
                  for (var i3 = t3; i3 < n3; i3++)
                    e4[i3] <= 127 ? (r3 += N(o3) + String.fromCharCode(e4[i3]), o3 = "") : o3 += "%" + e4[i3].toString(16);
                  return r3 + N(o3);
                }(s2, t2, n2);
                break;
              case "ascii":
              case "binary":
                r2 = v(s2, t2, n2);
                break;
              case "base64":
                o2 = s2, u2 = n2, r2 = 0 === (i2 = t2) && u2 === o2.length ? a.fromByteArray(o2) : a.fromByteArray(o2.slice(i2, u2));
                break;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                r2 = function(e4, t3, n3) {
                  for (var r3 = e4.slice(t3, n3), o3 = "", i3 = 0; i3 < r3.length; i3 += 2)
                    o3 += String.fromCharCode(r3[i3] + 256 * r3[i3 + 1]);
                  return o3;
                }(s2, t2, n2);
                break;
              default:
                throw new Error("Unknown encoding");
            }
            return r2;
          }, f.prototype.toJSON = function() {
            return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
          }, f.prototype.copy = function(e3, t2, n2, r2) {
            if (t2 = t2 || 0, (r2 = r2 || 0 === r2 ? r2 : this.length) !== (n2 = n2 || 0) && 0 !== e3.length && 0 !== this.length) {
              d(n2 <= r2, "sourceEnd < sourceStart"), d(0 <= t2 && t2 < e3.length, "targetStart out of bounds"), d(0 <= n2 && n2 < this.length, "sourceStart out of bounds"), d(0 <= r2 && r2 <= this.length, "sourceEnd out of bounds"), r2 > this.length && (r2 = this.length);
              var o2 = (r2 = e3.length - t2 < r2 - n2 ? e3.length - t2 + n2 : r2) - n2;
              if (o2 < 100 || !f._useTypedArrays)
                for (var i2 = 0; i2 < o2; i2++)
                  e3[i2 + t2] = this[i2 + n2];
              else
                e3._set(this.subarray(n2, n2 + o2), t2);
            }
          }, f.prototype.slice = function(e3, t2) {
            var n2 = this.length;
            if (e3 = S(e3, n2, 0), t2 = S(t2, n2, n2), f._useTypedArrays)
              return f._augment(this.subarray(e3, t2));
            for (var r2 = t2 - e3, o2 = new f(r2, void 0, true), i2 = 0; i2 < r2; i2++)
              o2[i2] = this[i2 + e3];
            return o2;
          }, f.prototype.get = function(e3) {
            return console.log(".get() is deprecated. Access using array indexes instead."), this.readUInt8(e3);
          }, f.prototype.set = function(e3, t2) {
            return console.log(".set() is deprecated. Access using array indexes instead."), this.writeUInt8(e3, t2);
          }, f.prototype.readUInt8 = function(e3, t2) {
            if (t2 || (d(null != e3, "missing offset"), d(e3 < this.length, "Trying to read beyond buffer length")), !(e3 >= this.length))
              return this[e3];
          }, f.prototype.readUInt16LE = function(e3, t2) {
            return o(this, e3, true, t2);
          }, f.prototype.readUInt16BE = function(e3, t2) {
            return o(this, e3, false, t2);
          }, f.prototype.readUInt32LE = function(e3, t2) {
            return u(this, e3, true, t2);
          }, f.prototype.readUInt32BE = function(e3, t2) {
            return u(this, e3, false, t2);
          }, f.prototype.readInt8 = function(e3, t2) {
            if (t2 || (d(null != e3, "missing offset"), d(e3 < this.length, "Trying to read beyond buffer length")), !(e3 >= this.length))
              return 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
          }, f.prototype.readInt16LE = function(e3, t2) {
            return _(this, e3, true, t2);
          }, f.prototype.readInt16BE = function(e3, t2) {
            return _(this, e3, false, t2);
          }, f.prototype.readInt32LE = function(e3, t2) {
            return E(this, e3, true, t2);
          }, f.prototype.readInt32BE = function(e3, t2) {
            return E(this, e3, false, t2);
          }, f.prototype.readFloatLE = function(e3, t2) {
            return I(this, e3, true, t2);
          }, f.prototype.readFloatBE = function(e3, t2) {
            return I(this, e3, false, t2);
          }, f.prototype.readDoubleLE = function(e3, t2) {
            return A(this, e3, true, t2);
          }, f.prototype.readDoubleBE = function(e3, t2) {
            return A(this, e3, false, t2);
          }, f.prototype.writeUInt8 = function(e3, t2, n2) {
            n2 || (d(null != e3, "missing value"), d(null != t2, "missing offset"), d(t2 < this.length, "trying to write beyond buffer length"), Y(e3, 255)), t2 >= this.length || (this[t2] = e3);
          }, f.prototype.writeUInt16LE = function(e3, t2, n2) {
            s(this, e3, t2, true, n2);
          }, f.prototype.writeUInt16BE = function(e3, t2, n2) {
            s(this, e3, t2, false, n2);
          }, f.prototype.writeUInt32LE = function(e3, t2, n2) {
            l(this, e3, t2, true, n2);
          }, f.prototype.writeUInt32BE = function(e3, t2, n2) {
            l(this, e3, t2, false, n2);
          }, f.prototype.writeInt8 = function(e3, t2, n2) {
            n2 || (d(null != e3, "missing value"), d(null != t2, "missing offset"), d(t2 < this.length, "Trying to write beyond buffer length"), F(e3, 127, -128)), t2 >= this.length || (0 <= e3 ? this.writeUInt8(e3, t2, n2) : this.writeUInt8(255 + e3 + 1, t2, n2));
          }, f.prototype.writeInt16LE = function(e3, t2, n2) {
            B(this, e3, t2, true, n2);
          }, f.prototype.writeInt16BE = function(e3, t2, n2) {
            B(this, e3, t2, false, n2);
          }, f.prototype.writeInt32LE = function(e3, t2, n2) {
            L(this, e3, t2, true, n2);
          }, f.prototype.writeInt32BE = function(e3, t2, n2) {
            L(this, e3, t2, false, n2);
          }, f.prototype.writeFloatLE = function(e3, t2, n2) {
            U(this, e3, t2, true, n2);
          }, f.prototype.writeFloatBE = function(e3, t2, n2) {
            U(this, e3, t2, false, n2);
          }, f.prototype.writeDoubleLE = function(e3, t2, n2) {
            x(this, e3, t2, true, n2);
          }, f.prototype.writeDoubleBE = function(e3, t2, n2) {
            x(this, e3, t2, false, n2);
          }, f.prototype.fill = function(e3, t2, n2) {
            if (t2 = t2 || 0, n2 = n2 || this.length, d("number" == typeof (e3 = "string" == typeof (e3 = e3 || 0) ? e3.charCodeAt(0) : e3) && !isNaN(e3), "value is not a number"), d(t2 <= n2, "end < start"), n2 !== t2 && 0 !== this.length) {
              d(0 <= t2 && t2 < this.length, "start out of bounds"), d(0 <= n2 && n2 <= this.length, "end out of bounds");
              for (var r2 = t2; r2 < n2; r2++)
                this[r2] = e3;
            }
          }, f.prototype.inspect = function() {
            for (var e3 = [], t2 = this.length, n2 = 0; n2 < t2; n2++)
              if (e3[n2] = k(this[n2]), n2 === H.INSPECT_MAX_BYTES) {
                e3[n2 + 1] = "...";
                break;
              }
            return "<Buffer " + e3.join(" ") + ">";
          }, f.prototype.toArrayBuffer = function() {
            if ("undefined" == typeof Uint8Array)
              throw new Error("Buffer.toArrayBuffer not supported in this browser");
            if (f._useTypedArrays)
              return new f(this).buffer;
            for (var e3 = new Uint8Array(this.length), t2 = 0, n2 = e3.length; t2 < n2; t2 += 1)
              e3[t2] = this[t2];
            return e3.buffer;
          };
          var t = f.prototype;
          function S(e3, t2, n2) {
            return "number" != typeof e3 ? n2 : t2 <= (e3 = ~~e3) ? t2 : 0 <= e3 || 0 <= (e3 += t2) ? e3 : 0;
          }
          function j(e3) {
            return (e3 = ~~Math.ceil(+e3)) < 0 ? 0 : e3;
          }
          function C(e3) {
            return (Array.isArray || function(e4) {
              return "[object Array]" === Object.prototype.toString.call(e4);
            })(e3);
          }
          function k(e3) {
            return e3 < 16 ? "0" + e3.toString(16) : e3.toString(16);
          }
          function T(e3) {
            for (var t2 = [], n2 = 0; n2 < e3.length; n2++) {
              var r2 = e3.charCodeAt(n2);
              if (r2 <= 127)
                t2.push(e3.charCodeAt(n2));
              else
                for (var o2 = n2, i2 = (55296 <= r2 && r2 <= 57343 && n2++, encodeURIComponent(e3.slice(o2, n2 + 1)).substr(1).split("%")), u2 = 0; u2 < i2.length; u2++)
                  t2.push(parseInt(i2[u2], 16));
            }
            return t2;
          }
          function M(e3) {
            return a.toByteArray(e3);
          }
          function c(e3, t2, n2, r2) {
            for (var o2 = 0; o2 < r2 && !(o2 + n2 >= t2.length || o2 >= e3.length); o2++)
              t2[o2 + n2] = e3[o2];
            return o2;
          }
          function N(e3) {
            try {
              return decodeURIComponent(e3);
            } catch (e4) {
              return String.fromCharCode(65533);
            }
          }
          function Y(e3, t2) {
            d("number" == typeof e3, "cannot write a non-number as a number"), d(0 <= e3, "specified a negative value for writing an unsigned value"), d(e3 <= t2, "value is larger than maximum value for type"), d(Math.floor(e3) === e3, "value has a fractional component");
          }
          function F(e3, t2, n2) {
            d("number" == typeof e3, "cannot write a non-number as a number"), d(e3 <= t2, "value larger than maximum allowed value"), d(n2 <= e3, "value smaller than minimum allowed value"), d(Math.floor(e3) === e3, "value has a fractional component");
          }
          function D(e3, t2, n2) {
            d("number" == typeof e3, "cannot write a non-number as a number"), d(e3 <= t2, "value larger than maximum allowed value"), d(n2 <= e3, "value smaller than minimum allowed value");
          }
          function d(e3, t2) {
            if (!e3)
              throw new Error(t2 || "Failed assertion");
          }
          f._augment = function(e3) {
            return e3._isBuffer = true, e3._get = e3.get, e3._set = e3.set, e3.get = t.get, e3.set = t.set, e3.write = t.write, e3.toString = t.toString, e3.toLocaleString = t.toString, e3.toJSON = t.toJSON, e3.copy = t.copy, e3.slice = t.slice, e3.readUInt8 = t.readUInt8, e3.readUInt16LE = t.readUInt16LE, e3.readUInt16BE = t.readUInt16BE, e3.readUInt32LE = t.readUInt32LE, e3.readUInt32BE = t.readUInt32BE, e3.readInt8 = t.readInt8, e3.readInt16LE = t.readInt16LE, e3.readInt16BE = t.readInt16BE, e3.readInt32LE = t.readInt32LE, e3.readInt32BE = t.readInt32BE, e3.readFloatLE = t.readFloatLE, e3.readFloatBE = t.readFloatBE, e3.readDoubleLE = t.readDoubleLE, e3.readDoubleBE = t.readDoubleBE, e3.writeUInt8 = t.writeUInt8, e3.writeUInt16LE = t.writeUInt16LE, e3.writeUInt16BE = t.writeUInt16BE, e3.writeUInt32LE = t.writeUInt32LE, e3.writeUInt32BE = t.writeUInt32BE, e3.writeInt8 = t.writeInt8, e3.writeInt16LE = t.writeInt16LE, e3.writeInt16BE = t.writeInt16BE, e3.writeInt32LE = t.writeInt32LE, e3.writeInt32BE = t.writeInt32BE, e3.writeFloatLE = t.writeFloatLE, e3.writeFloatBE = t.writeFloatBE, e3.writeDoubleLE = t.writeDoubleLE, e3.writeDoubleBE = t.writeDoubleBE, e3.fill = t.fill, e3.inspect = t.inspect, e3.toArrayBuffer = t.toArrayBuffer, e3;
          };
        }.call(this, O("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, O("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/buffer/index.js", "/node_modules/gulp-browserify/node_modules/buffer");
      }, { "base64-js": 2, buffer: 3, ieee754: 10, lYpoI2: 11 }], 4: [function(c, d, e) {
        !function(e2, t, a, n, r, o, i, u, s) {
          var a = c("buffer").Buffer, f = 4, l = new a(f);
          l.fill(0);
          d.exports = { hash: function(e3, t2, n2, r2) {
            for (var o2 = t2(function(e4, t3) {
              e4.length % f != 0 && (n3 = e4.length + (f - e4.length % f), e4 = a.concat([e4, l], n3));
              for (var n3, r3 = [], o3 = t3 ? e4.readInt32BE : e4.readInt32LE, i3 = 0; i3 < e4.length; i3 += f)
                r3.push(o3.call(e4, i3));
              return r3;
            }(e3 = a.isBuffer(e3) ? e3 : new a(e3), r2), 8 * e3.length), t2 = r2, i2 = new a(n2), u2 = t2 ? i2.writeInt32BE : i2.writeInt32LE, s2 = 0; s2 < o2.length; s2++)
              u2.call(i2, o2[s2], 4 * s2, true);
            return i2;
          } };
        }.call(this, c("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, c("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js", "/node_modules/gulp-browserify/node_modules/crypto-browserify");
      }, { buffer: 3, lYpoI2: 11 }], 5: [function(v, e, _) {
        !function(l, c, u, d, h, p, g, y, w) {
          var u = v("buffer").Buffer, e2 = v("./sha"), t = v("./sha256"), n = v("./rng"), b = { sha1: e2, sha256: t, md5: v("./md5") }, s = 64, a = new u(s);
          function r(e3, n2) {
            var r2 = b[e3 = e3 || "sha1"], o2 = [];
            return r2 || i("algorithm:", e3, "is not yet supported"), { update: function(e4) {
              return u.isBuffer(e4) || (e4 = new u(e4)), o2.push(e4), e4.length, this;
            }, digest: function(e4) {
              var t2 = u.concat(o2), t2 = n2 ? function(e5, t3, n3) {
                u.isBuffer(t3) || (t3 = new u(t3)), u.isBuffer(n3) || (n3 = new u(n3)), t3.length > s ? t3 = e5(t3) : t3.length < s && (t3 = u.concat([t3, a], s));
                for (var r3 = new u(s), o3 = new u(s), i2 = 0; i2 < s; i2++)
                  r3[i2] = 54 ^ t3[i2], o3[i2] = 92 ^ t3[i2];
                return n3 = e5(u.concat([r3, n3])), e5(u.concat([o3, n3]));
              }(r2, n2, t2) : r2(t2);
              return o2 = null, e4 ? t2.toString(e4) : t2;
            } };
          }
          function i() {
            var e3 = [].slice.call(arguments).join(" ");
            throw new Error([e3, "we accept pull requests", "http://github.com/dominictarr/crypto-browserify"].join("\n"));
          }
          a.fill(0), _.createHash = function(e3) {
            return r(e3);
          }, _.createHmac = r, _.randomBytes = function(e3, t2) {
            if (!t2 || !t2.call)
              return new u(n(e3));
            try {
              t2.call(this, void 0, new u(n(e3)));
            } catch (e4) {
              t2(e4);
            }
          };
          var o, f = ["createCredentials", "createCipher", "createCipheriv", "createDecipher", "createDecipheriv", "createSign", "createVerify", "createDiffieHellman", "pbkdf2"], m = function(e3) {
            _[e3] = function() {
              i("sorry,", e3, "is not implemented yet");
            };
          };
          for (o in f)
            m(f[o], o);
        }.call(this, v("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, v("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js", "/node_modules/gulp-browserify/node_modules/crypto-browserify");
      }, { "./md5": 6, "./rng": 7, "./sha": 8, "./sha256": 9, buffer: 3, lYpoI2: 11 }], 6: [function(w, b, e) {
        !function(e2, r, o, i, u, a, f, l, y) {
          var t = w("./helpers");
          function n(e3, t2) {
            e3[t2 >> 5] |= 128 << t2 % 32, e3[14 + (t2 + 64 >>> 9 << 4)] = t2;
            for (var n2 = 1732584193, r2 = -271733879, o2 = -1732584194, i2 = 271733878, u2 = 0; u2 < e3.length; u2 += 16) {
              var s2 = n2, a2 = r2, f2 = o2, l2 = i2, n2 = c(n2, r2, o2, i2, e3[u2 + 0], 7, -680876936), i2 = c(i2, n2, r2, o2, e3[u2 + 1], 12, -389564586), o2 = c(o2, i2, n2, r2, e3[u2 + 2], 17, 606105819), r2 = c(r2, o2, i2, n2, e3[u2 + 3], 22, -1044525330);
              n2 = c(n2, r2, o2, i2, e3[u2 + 4], 7, -176418897), i2 = c(i2, n2, r2, o2, e3[u2 + 5], 12, 1200080426), o2 = c(o2, i2, n2, r2, e3[u2 + 6], 17, -1473231341), r2 = c(r2, o2, i2, n2, e3[u2 + 7], 22, -45705983), n2 = c(n2, r2, o2, i2, e3[u2 + 8], 7, 1770035416), i2 = c(i2, n2, r2, o2, e3[u2 + 9], 12, -1958414417), o2 = c(o2, i2, n2, r2, e3[u2 + 10], 17, -42063), r2 = c(r2, o2, i2, n2, e3[u2 + 11], 22, -1990404162), n2 = c(n2, r2, o2, i2, e3[u2 + 12], 7, 1804603682), i2 = c(i2, n2, r2, o2, e3[u2 + 13], 12, -40341101), o2 = c(o2, i2, n2, r2, e3[u2 + 14], 17, -1502002290), n2 = d(n2, r2 = c(r2, o2, i2, n2, e3[u2 + 15], 22, 1236535329), o2, i2, e3[u2 + 1], 5, -165796510), i2 = d(i2, n2, r2, o2, e3[u2 + 6], 9, -1069501632), o2 = d(o2, i2, n2, r2, e3[u2 + 11], 14, 643717713), r2 = d(r2, o2, i2, n2, e3[u2 + 0], 20, -373897302), n2 = d(n2, r2, o2, i2, e3[u2 + 5], 5, -701558691), i2 = d(i2, n2, r2, o2, e3[u2 + 10], 9, 38016083), o2 = d(o2, i2, n2, r2, e3[u2 + 15], 14, -660478335), r2 = d(r2, o2, i2, n2, e3[u2 + 4], 20, -405537848), n2 = d(n2, r2, o2, i2, e3[u2 + 9], 5, 568446438), i2 = d(i2, n2, r2, o2, e3[u2 + 14], 9, -1019803690), o2 = d(o2, i2, n2, r2, e3[u2 + 3], 14, -187363961), r2 = d(r2, o2, i2, n2, e3[u2 + 8], 20, 1163531501), n2 = d(n2, r2, o2, i2, e3[u2 + 13], 5, -1444681467), i2 = d(i2, n2, r2, o2, e3[u2 + 2], 9, -51403784), o2 = d(o2, i2, n2, r2, e3[u2 + 7], 14, 1735328473), n2 = h(n2, r2 = d(r2, o2, i2, n2, e3[u2 + 12], 20, -1926607734), o2, i2, e3[u2 + 5], 4, -378558), i2 = h(i2, n2, r2, o2, e3[u2 + 8], 11, -2022574463), o2 = h(o2, i2, n2, r2, e3[u2 + 11], 16, 1839030562), r2 = h(r2, o2, i2, n2, e3[u2 + 14], 23, -35309556), n2 = h(n2, r2, o2, i2, e3[u2 + 1], 4, -1530992060), i2 = h(i2, n2, r2, o2, e3[u2 + 4], 11, 1272893353), o2 = h(o2, i2, n2, r2, e3[u2 + 7], 16, -155497632), r2 = h(r2, o2, i2, n2, e3[u2 + 10], 23, -1094730640), n2 = h(n2, r2, o2, i2, e3[u2 + 13], 4, 681279174), i2 = h(i2, n2, r2, o2, e3[u2 + 0], 11, -358537222), o2 = h(o2, i2, n2, r2, e3[u2 + 3], 16, -722521979), r2 = h(r2, o2, i2, n2, e3[u2 + 6], 23, 76029189), n2 = h(n2, r2, o2, i2, e3[u2 + 9], 4, -640364487), i2 = h(i2, n2, r2, o2, e3[u2 + 12], 11, -421815835), o2 = h(o2, i2, n2, r2, e3[u2 + 15], 16, 530742520), n2 = p(n2, r2 = h(r2, o2, i2, n2, e3[u2 + 2], 23, -995338651), o2, i2, e3[u2 + 0], 6, -198630844), i2 = p(i2, n2, r2, o2, e3[u2 + 7], 10, 1126891415), o2 = p(o2, i2, n2, r2, e3[u2 + 14], 15, -1416354905), r2 = p(r2, o2, i2, n2, e3[u2 + 5], 21, -57434055), n2 = p(n2, r2, o2, i2, e3[u2 + 12], 6, 1700485571), i2 = p(i2, n2, r2, o2, e3[u2 + 3], 10, -1894986606), o2 = p(o2, i2, n2, r2, e3[u2 + 10], 15, -1051523), r2 = p(r2, o2, i2, n2, e3[u2 + 1], 21, -2054922799), n2 = p(n2, r2, o2, i2, e3[u2 + 8], 6, 1873313359), i2 = p(i2, n2, r2, o2, e3[u2 + 15], 10, -30611744), o2 = p(o2, i2, n2, r2, e3[u2 + 6], 15, -1560198380), r2 = p(r2, o2, i2, n2, e3[u2 + 13], 21, 1309151649), n2 = p(n2, r2, o2, i2, e3[u2 + 4], 6, -145523070), i2 = p(i2, n2, r2, o2, e3[u2 + 11], 10, -1120210379), o2 = p(o2, i2, n2, r2, e3[u2 + 2], 15, 718787259), r2 = p(r2, o2, i2, n2, e3[u2 + 9], 21, -343485551), n2 = g(n2, s2), r2 = g(r2, a2), o2 = g(o2, f2), i2 = g(i2, l2);
            }
            return Array(n2, r2, o2, i2);
          }
          function s(e3, t2, n2, r2, o2, i2) {
            return g((t2 = g(g(t2, e3), g(r2, i2))) << o2 | t2 >>> 32 - o2, n2);
          }
          function c(e3, t2, n2, r2, o2, i2, u2) {
            return s(t2 & n2 | ~t2 & r2, e3, t2, o2, i2, u2);
          }
          function d(e3, t2, n2, r2, o2, i2, u2) {
            return s(t2 & r2 | n2 & ~r2, e3, t2, o2, i2, u2);
          }
          function h(e3, t2, n2, r2, o2, i2, u2) {
            return s(t2 ^ n2 ^ r2, e3, t2, o2, i2, u2);
          }
          function p(e3, t2, n2, r2, o2, i2, u2) {
            return s(n2 ^ (t2 | ~r2), e3, t2, o2, i2, u2);
          }
          function g(e3, t2) {
            var n2 = (65535 & e3) + (65535 & t2);
            return (e3 >> 16) + (t2 >> 16) + (n2 >> 16) << 16 | 65535 & n2;
          }
          b.exports = function(e3) {
            return t.hash(e3, n, 16);
          };
        }.call(this, w("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, w("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js", "/node_modules/gulp-browserify/node_modules/crypto-browserify");
      }, { "./helpers": 4, buffer: 3, lYpoI2: 11 }], 7: [function(e, l, t) {
        !function(e2, t2, n, r, o, i, u, s, f) {
          var a;
          l.exports = a || function(e3) {
            for (var t3, n2 = new Array(e3), r2 = 0; r2 < e3; r2++)
              0 == (3 & r2) && (t3 = 4294967296 * Math.random()), n2[r2] = t3 >>> ((3 & r2) << 3) & 255;
            return n2;
          };
        }.call(this, e("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js", "/node_modules/gulp-browserify/node_modules/crypto-browserify");
      }, { buffer: 3, lYpoI2: 11 }], 8: [function(c, d, e) {
        !function(e2, t, n, r, o, s, a, f, l) {
          var i = c("./helpers");
          function u(l2, c2) {
            l2[c2 >> 5] |= 128 << 24 - c2 % 32, l2[15 + (c2 + 64 >> 9 << 4)] = c2;
            for (var e3, t2, n2, r2 = Array(80), o2 = 1732584193, i2 = -271733879, u2 = -1732584194, s2 = 271733878, d2 = -1009589776, h = 0; h < l2.length; h += 16) {
              for (var p = o2, g = i2, y = u2, w = s2, b = d2, a2 = 0; a2 < 80; a2++) {
                r2[a2] = a2 < 16 ? l2[h + a2] : v(r2[a2 - 3] ^ r2[a2 - 8] ^ r2[a2 - 14] ^ r2[a2 - 16], 1);
                var f2 = m(m(v(o2, 5), (f2 = i2, t2 = u2, n2 = s2, (e3 = a2) < 20 ? f2 & t2 | ~f2 & n2 : !(e3 < 40) && e3 < 60 ? f2 & t2 | f2 & n2 | t2 & n2 : f2 ^ t2 ^ n2)), m(m(d2, r2[a2]), (e3 = a2) < 20 ? 1518500249 : e3 < 40 ? 1859775393 : e3 < 60 ? -1894007588 : -899497514)), d2 = s2, s2 = u2, u2 = v(i2, 30), i2 = o2, o2 = f2;
              }
              o2 = m(o2, p), i2 = m(i2, g), u2 = m(u2, y), s2 = m(s2, w), d2 = m(d2, b);
            }
            return Array(o2, i2, u2, s2, d2);
          }
          function m(e3, t2) {
            var n2 = (65535 & e3) + (65535 & t2);
            return (e3 >> 16) + (t2 >> 16) + (n2 >> 16) << 16 | 65535 & n2;
          }
          function v(e3, t2) {
            return e3 << t2 | e3 >>> 32 - t2;
          }
          d.exports = function(e3) {
            return i.hash(e3, u, 20, true);
          };
        }.call(this, c("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, c("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js", "/node_modules/gulp-browserify/node_modules/crypto-browserify");
      }, { "./helpers": 4, buffer: 3, lYpoI2: 11 }], 9: [function(c, d, e) {
        !function(e2, t, n, r, u, s, a, f, l) {
          function b(e3, t2) {
            var n2 = (65535 & e3) + (65535 & t2);
            return (e3 >> 16) + (t2 >> 16) + (n2 >> 16) << 16 | 65535 & n2;
          }
          function o(e3, l2) {
            var c2, d2 = new Array(1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298), t2 = new Array(1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225), n2 = new Array(64);
            e3[l2 >> 5] |= 128 << 24 - l2 % 32, e3[15 + (l2 + 64 >> 9 << 4)] = l2;
            for (var r2, o2, h = 0; h < e3.length; h += 16) {
              for (var i2 = t2[0], u2 = t2[1], s2 = t2[2], p = t2[3], a2 = t2[4], g = t2[5], y = t2[6], w = t2[7], f2 = 0; f2 < 64; f2++)
                n2[f2] = f2 < 16 ? e3[f2 + h] : b(b(b((o2 = n2[f2 - 2], m(o2, 17) ^ m(o2, 19) ^ v(o2, 10)), n2[f2 - 7]), (o2 = n2[f2 - 15], m(o2, 7) ^ m(o2, 18) ^ v(o2, 3))), n2[f2 - 16]), c2 = b(b(b(b(w, m(o2 = a2, 6) ^ m(o2, 11) ^ m(o2, 25)), a2 & g ^ ~a2 & y), d2[f2]), n2[f2]), r2 = b(m(r2 = i2, 2) ^ m(r2, 13) ^ m(r2, 22), i2 & u2 ^ i2 & s2 ^ u2 & s2), w = y, y = g, g = a2, a2 = b(p, c2), p = s2, s2 = u2, u2 = i2, i2 = b(c2, r2);
              t2[0] = b(i2, t2[0]), t2[1] = b(u2, t2[1]), t2[2] = b(s2, t2[2]), t2[3] = b(p, t2[3]), t2[4] = b(a2, t2[4]), t2[5] = b(g, t2[5]), t2[6] = b(y, t2[6]), t2[7] = b(w, t2[7]);
            }
            return t2;
          }
          var i = c("./helpers"), m = function(e3, t2) {
            return e3 >>> t2 | e3 << 32 - t2;
          }, v = function(e3, t2) {
            return e3 >>> t2;
          };
          d.exports = function(e3) {
            return i.hash(e3, o, 32, true);
          };
        }.call(this, c("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, c("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js", "/node_modules/gulp-browserify/node_modules/crypto-browserify");
      }, { "./helpers": 4, buffer: 3, lYpoI2: 11 }], 10: [function(e, t, f) {
        !function(e2, t2, n, r, o, i, u, s, a) {
          f.read = function(e3, t3, n2, r2, o2) {
            var i2, u2, l = 8 * o2 - r2 - 1, c = (1 << l) - 1, d = c >> 1, s2 = -7, a2 = n2 ? o2 - 1 : 0, f2 = n2 ? -1 : 1, o2 = e3[t3 + a2];
            for (a2 += f2, i2 = o2 & (1 << -s2) - 1, o2 >>= -s2, s2 += l; 0 < s2; i2 = 256 * i2 + e3[t3 + a2], a2 += f2, s2 -= 8)
              ;
            for (u2 = i2 & (1 << -s2) - 1, i2 >>= -s2, s2 += r2; 0 < s2; u2 = 256 * u2 + e3[t3 + a2], a2 += f2, s2 -= 8)
              ;
            if (0 === i2)
              i2 = 1 - d;
            else {
              if (i2 === c)
                return u2 ? NaN : 1 / 0 * (o2 ? -1 : 1);
              u2 += Math.pow(2, r2), i2 -= d;
            }
            return (o2 ? -1 : 1) * u2 * Math.pow(2, i2 - r2);
          }, f.write = function(e3, t3, l, n2, r2, c) {
            var o2, i2, u2 = 8 * c - r2 - 1, s2 = (1 << u2) - 1, a2 = s2 >> 1, d = 23 === r2 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f2 = n2 ? 0 : c - 1, h = n2 ? 1 : -1, c = t3 < 0 || 0 === t3 && 1 / t3 < 0 ? 1 : 0;
            for (t3 = Math.abs(t3), isNaN(t3) || t3 === 1 / 0 ? (i2 = isNaN(t3) ? 1 : 0, o2 = s2) : (o2 = Math.floor(Math.log(t3) / Math.LN2), t3 * (n2 = Math.pow(2, -o2)) < 1 && (o2--, n2 *= 2), 2 <= (t3 += 1 <= o2 + a2 ? d / n2 : d * Math.pow(2, 1 - a2)) * n2 && (o2++, n2 /= 2), s2 <= o2 + a2 ? (i2 = 0, o2 = s2) : 1 <= o2 + a2 ? (i2 = (t3 * n2 - 1) * Math.pow(2, r2), o2 += a2) : (i2 = t3 * Math.pow(2, a2 - 1) * Math.pow(2, r2), o2 = 0)); 8 <= r2; e3[l + f2] = 255 & i2, f2 += h, i2 /= 256, r2 -= 8)
              ;
            for (o2 = o2 << r2 | i2, u2 += r2; 0 < u2; e3[l + f2] = 255 & o2, f2 += h, o2 /= 256, u2 -= 8)
              ;
            e3[l + f2 - h] |= 128 * c;
          };
        }.call(this, e("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/ieee754/index.js", "/node_modules/gulp-browserify/node_modules/ieee754");
      }, { buffer: 3, lYpoI2: 11 }], 11: [function(e, h, t) {
        !function(e2, t2, n, r, o, f, l, c, d) {
          var i, u, s;
          function a() {
          }
          (e2 = h.exports = {}).nextTick = (u = "undefined" != typeof window && window.setImmediate, s = "undefined" != typeof window && window.postMessage && window.addEventListener, u ? function(e3) {
            return window.setImmediate(e3);
          } : s ? (i = [], window.addEventListener("message", function(e3) {
            var t3 = e3.source;
            t3 !== window && null !== t3 || "process-tick" !== e3.data || (e3.stopPropagation(), 0 < i.length && i.shift()());
          }, true), function(e3) {
            i.push(e3), window.postMessage("process-tick", "*");
          }) : function(e3) {
            setTimeout(e3, 0);
          }), e2.title = "browser", e2.browser = true, e2.env = {}, e2.argv = [], e2.on = a, e2.addListener = a, e2.once = a, e2.off = a, e2.removeListener = a, e2.removeAllListeners = a, e2.emit = a, e2.binding = function(e3) {
            throw new Error("process.binding is not supported");
          }, e2.cwd = function() {
            return "/";
          }, e2.chdir = function(e3) {
            throw new Error("process.chdir is not supported");
          };
        }.call(this, e("lYpoI2"), "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], "/node_modules/gulp-browserify/node_modules/process/browser.js", "/node_modules/gulp-browserify/node_modules/process");
      }, { buffer: 3, lYpoI2: 11 }] }, {}, [1])(1);
    });
  }
});
var require_hashConfig = __commonJS({
  "../../node_modules/tailwindcss/lib/util/hashConfig.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => hashConfig
    });
    var _objectHash = _interopRequireDefault(require_object_hash());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function hashConfig(config) {
      return (0, _objectHash.default)(config, {
        ignoreUnknown: true
      });
    }
  }
});
var require_homedir = __commonJS({
  "../../node_modules/resolve/lib/homedir.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var os = require_main();
    module.exports = os.homedir || function homedir() {
      var home = process.env.HOME;
      var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;
      if (process.platform === "win32") {
        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;
      }
      if (process.platform === "darwin") {
        return home || (user ? "/Users/" + user : null);
      }
      if (process.platform === "linux") {
        return home || (process.getuid() === 0 ? "/root" : user ? "/home/" + user : null);
      }
      return home || null;
    };
  }
});
var require_caller = __commonJS({
  "../../node_modules/resolve/lib/caller.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = function() {
      var origPrepareStackTrace = Error.prepareStackTrace;
      Error.prepareStackTrace = function(_, stack2) {
        return stack2;
      };
      var stack = new Error().stack;
      Error.prepareStackTrace = origPrepareStackTrace;
      return stack[2].getFileName();
    };
  }
});
var require_path_parse = __commonJS({
  "../../node_modules/path-parse/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var isWindows = process.platform === "win32";
    var splitWindowsRe = /^(((?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?[\\\/]?)(?:[^\\\/]*[\\\/])*)((\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))[\\\/]*$/;
    var win32 = {};
    function win32SplitPath(filename) {
      return splitWindowsRe.exec(filename).slice(1);
    }
    win32.parse = function(pathString) {
      if (typeof pathString !== "string") {
        throw new TypeError(
          "Parameter 'pathString' must be a string, not " + typeof pathString
        );
      }
      var allParts = win32SplitPath(pathString);
      if (!allParts || allParts.length !== 5) {
        throw new TypeError("Invalid path '" + pathString + "'");
      }
      return {
        root: allParts[1],
        dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),
        base: allParts[2],
        ext: allParts[4],
        name: allParts[3]
      };
    };
    var splitPathRe = /^((\/?)(?:[^\/]*\/)*)((\.{1,2}|[^\/]+?|)(\.[^.\/]*|))[\/]*$/;
    var posix = {};
    function posixSplitPath(filename) {
      return splitPathRe.exec(filename).slice(1);
    }
    posix.parse = function(pathString) {
      if (typeof pathString !== "string") {
        throw new TypeError(
          "Parameter 'pathString' must be a string, not " + typeof pathString
        );
      }
      var allParts = posixSplitPath(pathString);
      if (!allParts || allParts.length !== 5) {
        throw new TypeError("Invalid path '" + pathString + "'");
      }
      return {
        root: allParts[1],
        dir: allParts[0].slice(0, -1),
        base: allParts[2],
        ext: allParts[4],
        name: allParts[3]
      };
    };
    if (isWindows)
      module.exports = win32.parse;
    else
      module.exports = posix.parse;
    module.exports.posix = posix.parse;
    module.exports.win32 = win32.parse;
  }
});
var require_node_modules_paths = __commonJS({
  "../../node_modules/resolve/lib/node-modules-paths.js"(exports, module) {
    init_process();
    init_buffer();
    var path = require_path_browserify();
    var parse2 = path.parse || require_path_parse();
    var getNodeModulesDirs = function getNodeModulesDirs2(absoluteStart, modules) {
      var prefix = "/";
      if (/^([A-Za-z]:)/.test(absoluteStart)) {
        prefix = "";
      } else if (/^\\\\/.test(absoluteStart)) {
        prefix = "\\\\";
      }
      var paths = [absoluteStart];
      var parsed = parse2(absoluteStart);
      while (parsed.dir !== paths[paths.length - 1]) {
        paths.push(parsed.dir);
        parsed = parse2(parsed.dir);
      }
      return paths.reduce(function(dirs, aPath) {
        return dirs.concat(modules.map(function(moduleDir) {
          return path.resolve(prefix, aPath, moduleDir);
        }));
      }, []);
    };
    module.exports = function nodeModulesPaths(start, opts, request) {
      var modules = opts && opts.moduleDirectory ? [].concat(opts.moduleDirectory) : ["node_modules"];
      if (opts && typeof opts.paths === "function") {
        return opts.paths(
          request,
          start,
          function() {
            return getNodeModulesDirs(start, modules);
          },
          opts
        );
      }
      var dirs = getNodeModulesDirs(start, modules);
      return opts && opts.paths ? dirs.concat(opts.paths) : dirs;
    };
  }
});
var module_exports = {};
__export(module_exports, {
  default: () => module_default
});
var module_default;
var init_module = __esm({
  "src/fakeModules/module.js"() {
    init_process();
    init_buffer();
    module_default = {};
  }
});
var require_normalize_options = __commonJS({
  "../../node_modules/resolve/lib/normalize-options.js"(exports, module) {
    init_process();
    init_buffer();
    var path = require_path_browserify();
    module.exports = function(_, opts) {
      opts = opts || {};
      if (opts.forceNodeResolution || !process.versions.pnp)
        return opts;
      const { findPnpApi } = (init_module(), __toCommonJS(module_exports));
      const runPnpResolution = (request, basedir) => {
        const parts = request.match(/^((?:@[^/]+\/)?[^/]+)(\/.*)?/);
        if (!parts)
          throw new Error(`Assertion failed: Expected the "resolve" package to call the "paths" callback with package names only (got "${request}")`);
        if (basedir.charAt(basedir.length - 1) !== `/`)
          basedir = path.join(basedir, `/`);
        const api = findPnpApi(basedir);
        if (api === null)
          return void 0;
        let manifestPath;
        try {
          manifestPath = api.resolveToUnqualified(`${parts[1]}/package.json`, basedir, { considerBuiltins: false });
        } catch (err) {
          return null;
        }
        if (manifestPath === null)
          throw new Error(`Assertion failed: The resolution thinks that "${parts[1]}" is a Node builtin`);
        const packagePath = path.dirname(manifestPath);
        const unqualifiedPath = typeof parts[2] !== `undefined` ? path.join(packagePath, parts[2]) : packagePath;
        return { packagePath, unqualifiedPath };
      };
      const runPnpResolutionOnArray = (request, paths2) => {
        for (let i = 0; i < paths2.length; i++) {
          const resolution = runPnpResolution(request, paths2[i]);
          if (resolution || i === paths2.length - 1) {
            return resolution;
          }
        }
        return null;
      };
      const originalPaths = Array.isArray(opts.paths) ? opts.paths : [];
      const packageIterator = (request, basedir, getCandidates, opts2) => {
        const pathsToTest = [basedir].concat(originalPaths);
        const resolution = runPnpResolutionOnArray(request, pathsToTest);
        if (resolution == null)
          return getCandidates();
        return [resolution.unqualifiedPath];
      };
      const paths = (request, basedir, getNodeModulePaths, opts2) => {
        const pathsToTest = [basedir].concat(originalPaths);
        const resolution = runPnpResolutionOnArray(request, pathsToTest);
        if (resolution == null)
          return getNodeModulePaths().concat(originalPaths);
        let nodeModules = path.dirname(resolution.packagePath);
        if (request.match(/^@[^/]+\//))
          nodeModules = path.dirname(nodeModules);
        return [nodeModules];
      };
      let isInsideIterator = false;
      if (!opts.__skipPackageIterator) {
        opts.packageIterator = function(request, basedir, getCandidates, opts2) {
          isInsideIterator = true;
          try {
            return packageIterator(request, basedir, getCandidates, opts2);
          } finally {
            isInsideIterator = false;
          }
        };
      }
      opts.paths = function(request, basedir, getNodeModulePaths, opts2) {
        if (isInsideIterator)
          return getNodeModulePaths().concat(originalPaths);
        return paths(request, basedir, getNodeModulePaths, opts2);
      };
      return opts;
    };
  }
});
var require_core = __commonJS({
  "../../node_modules/is-core-module/core.json"(exports, module) {
    module.exports = {
      assert: true,
      "node:assert": [">= 14.18 && < 15", ">= 16"],
      "assert/strict": ">= 15",
      "node:assert/strict": ">= 16",
      async_hooks: ">= 8",
      "node:async_hooks": [">= 14.18 && < 15", ">= 16"],
      buffer_ieee754: ">= 0.5 && < 0.9.7",
      buffer: true,
      "node:buffer": [">= 14.18 && < 15", ">= 16"],
      child_process: true,
      "node:child_process": [">= 14.18 && < 15", ">= 16"],
      cluster: ">= 0.5",
      "node:cluster": [">= 14.18 && < 15", ">= 16"],
      console: true,
      "node:console": [">= 14.18 && < 15", ">= 16"],
      constants: true,
      "node:constants": [">= 14.18 && < 15", ">= 16"],
      crypto: true,
      "node:crypto": [">= 14.18 && < 15", ">= 16"],
      _debug_agent: ">= 1 && < 8",
      _debugger: "< 8",
      dgram: true,
      "node:dgram": [">= 14.18 && < 15", ">= 16"],
      diagnostics_channel: [">= 14.17 && < 15", ">= 15.1"],
      "node:diagnostics_channel": [">= 14.18 && < 15", ">= 16"],
      dns: true,
      "node:dns": [">= 14.18 && < 15", ">= 16"],
      "dns/promises": ">= 15",
      "node:dns/promises": ">= 16",
      domain: ">= 0.7.12",
      "node:domain": [">= 14.18 && < 15", ">= 16"],
      events: true,
      "node:events": [">= 14.18 && < 15", ">= 16"],
      freelist: "< 6",
      fs: true,
      "node:fs": [">= 14.18 && < 15", ">= 16"],
      "fs/promises": [">= 10 && < 10.1", ">= 14"],
      "node:fs/promises": [">= 14.18 && < 15", ">= 16"],
      _http_agent: ">= 0.11.1",
      "node:_http_agent": [">= 14.18 && < 15", ">= 16"],
      _http_client: ">= 0.11.1",
      "node:_http_client": [">= 14.18 && < 15", ">= 16"],
      _http_common: ">= 0.11.1",
      "node:_http_common": [">= 14.18 && < 15", ">= 16"],
      _http_incoming: ">= 0.11.1",
      "node:_http_incoming": [">= 14.18 && < 15", ">= 16"],
      _http_outgoing: ">= 0.11.1",
      "node:_http_outgoing": [">= 14.18 && < 15", ">= 16"],
      _http_server: ">= 0.11.1",
      "node:_http_server": [">= 14.18 && < 15", ">= 16"],
      http: true,
      "node:http": [">= 14.18 && < 15", ">= 16"],
      http2: ">= 8.8",
      "node:http2": [">= 14.18 && < 15", ">= 16"],
      https: true,
      "node:https": [">= 14.18 && < 15", ">= 16"],
      inspector: ">= 8",
      "node:inspector": [">= 14.18 && < 15", ">= 16"],
      _linklist: "< 8",
      module: true,
      "node:module": [">= 14.18 && < 15", ">= 16"],
      net: true,
      "node:net": [">= 14.18 && < 15", ">= 16"],
      "node-inspect/lib/_inspect": ">= 7.6 && < 12",
      "node-inspect/lib/internal/inspect_client": ">= 7.6 && < 12",
      "node-inspect/lib/internal/inspect_repl": ">= 7.6 && < 12",
      os: true,
      "node:os": [">= 14.18 && < 15", ">= 16"],
      path: true,
      "node:path": [">= 14.18 && < 15", ">= 16"],
      "path/posix": ">= 15.3",
      "node:path/posix": ">= 16",
      "path/win32": ">= 15.3",
      "node:path/win32": ">= 16",
      perf_hooks: ">= 8.5",
      "node:perf_hooks": [">= 14.18 && < 15", ">= 16"],
      process: ">= 1",
      "node:process": [">= 14.18 && < 15", ">= 16"],
      punycode: ">= 0.5",
      "node:punycode": [">= 14.18 && < 15", ">= 16"],
      querystring: true,
      "node:querystring": [">= 14.18 && < 15", ">= 16"],
      readline: true,
      "node:readline": [">= 14.18 && < 15", ">= 16"],
      "readline/promises": ">= 17",
      "node:readline/promises": ">= 17",
      repl: true,
      "node:repl": [">= 14.18 && < 15", ">= 16"],
      smalloc: ">= 0.11.5 && < 3",
      _stream_duplex: ">= 0.9.4",
      "node:_stream_duplex": [">= 14.18 && < 15", ">= 16"],
      _stream_transform: ">= 0.9.4",
      "node:_stream_transform": [">= 14.18 && < 15", ">= 16"],
      _stream_wrap: ">= 1.4.1",
      "node:_stream_wrap": [">= 14.18 && < 15", ">= 16"],
      _stream_passthrough: ">= 0.9.4",
      "node:_stream_passthrough": [">= 14.18 && < 15", ">= 16"],
      _stream_readable: ">= 0.9.4",
      "node:_stream_readable": [">= 14.18 && < 15", ">= 16"],
      _stream_writable: ">= 0.9.4",
      "node:_stream_writable": [">= 14.18 && < 15", ">= 16"],
      stream: true,
      "node:stream": [">= 14.18 && < 15", ">= 16"],
      "stream/consumers": ">= 16.7",
      "node:stream/consumers": ">= 16.7",
      "stream/promises": ">= 15",
      "node:stream/promises": ">= 16",
      "stream/web": ">= 16.5",
      "node:stream/web": ">= 16.5",
      string_decoder: true,
      "node:string_decoder": [">= 14.18 && < 15", ">= 16"],
      sys: [">= 0.4 && < 0.7", ">= 0.8"],
      "node:sys": [">= 14.18 && < 15", ">= 16"],
      "node:test": [">= 16.17 && < 17", ">= 18"],
      timers: true,
      "node:timers": [">= 14.18 && < 15", ">= 16"],
      "timers/promises": ">= 15",
      "node:timers/promises": ">= 16",
      _tls_common: ">= 0.11.13",
      "node:_tls_common": [">= 14.18 && < 15", ">= 16"],
      _tls_legacy: ">= 0.11.3 && < 10",
      _tls_wrap: ">= 0.11.3",
      "node:_tls_wrap": [">= 14.18 && < 15", ">= 16"],
      tls: true,
      "node:tls": [">= 14.18 && < 15", ">= 16"],
      trace_events: ">= 10",
      "node:trace_events": [">= 14.18 && < 15", ">= 16"],
      tty: true,
      "node:tty": [">= 14.18 && < 15", ">= 16"],
      url: true,
      "node:url": [">= 14.18 && < 15", ">= 16"],
      util: true,
      "node:util": [">= 14.18 && < 15", ">= 16"],
      "util/types": ">= 15.3",
      "node:util/types": ">= 16",
      "v8/tools/arguments": ">= 10 && < 12",
      "v8/tools/codemap": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/consarray": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/csvparser": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/logreader": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/profile_view": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/splaytree": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      v8: ">= 1",
      "node:v8": [">= 14.18 && < 15", ">= 16"],
      vm: true,
      "node:vm": [">= 14.18 && < 15", ">= 16"],
      wasi: ">= 13.4 && < 13.5",
      worker_threads: ">= 11.7",
      "node:worker_threads": [">= 14.18 && < 15", ">= 16"],
      zlib: ">= 0.5",
      "node:zlib": [">= 14.18 && < 15", ">= 16"]
    };
  }
});
var require_is_core_module = __commonJS({
  "../../node_modules/is-core-module/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var has = require_src();
    function specifierIncluded(current, specifier) {
      var nodeParts = current.split(".");
      var parts = specifier.split(" ");
      var op = parts.length > 1 ? parts[0] : "=";
      var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split(".");
      for (var i = 0; i < 3; ++i) {
        var cur = parseInt(nodeParts[i] || 0, 10);
        var ver = parseInt(versionParts[i] || 0, 10);
        if (cur === ver) {
          continue;
        }
        if (op === "<") {
          return cur < ver;
        }
        if (op === ">=") {
          return cur >= ver;
        }
        return false;
      }
      return op === ">=";
    }
    function matchesRange(current, range) {
      var specifiers = range.split(/ ?&& ?/);
      if (specifiers.length === 0) {
        return false;
      }
      for (var i = 0; i < specifiers.length; ++i) {
        if (!specifierIncluded(current, specifiers[i])) {
          return false;
        }
      }
      return true;
    }
    function versionIncluded(nodeVersion, specifierValue) {
      if (typeof specifierValue === "boolean") {
        return specifierValue;
      }
      var current = typeof nodeVersion === "undefined" ? process.versions && process.versions.node : nodeVersion;
      if (typeof current !== "string") {
        throw new TypeError(typeof nodeVersion === "undefined" ? "Unable to determine current node version" : "If provided, a valid node version is required");
      }
      if (specifierValue && typeof specifierValue === "object") {
        for (var i = 0; i < specifierValue.length; ++i) {
          if (matchesRange(current, specifierValue[i])) {
            return true;
          }
        }
        return false;
      }
      return matchesRange(current, specifierValue);
    }
    var data = require_core();
    module.exports = function isCore(x, nodeVersion) {
      return has(data, x) && versionIncluded(nodeVersion, data[x]);
    };
  }
});
var require_async = __commonJS({
  "../../node_modules/resolve/lib/async.js"(exports, module) {
    init_process();
    init_buffer();
    var fs = require_browserify_fs();
    var getHomedir = require_homedir();
    var path = require_path_browserify();
    var caller = require_caller();
    var nodeModulesPaths = require_node_modules_paths();
    var normalizeOptions = require_normalize_options();
    var isCore = require_is_core_module();
    var realpathFS = process.platform !== "win32" && fs.realpath && typeof fs.realpath.native === "function" ? fs.realpath.native : fs.realpath;
    var homedir = getHomedir();
    var defaultPaths = function() {
      return [
        path.join(homedir, ".node_modules"),
        path.join(homedir, ".node_libraries")
      ];
    };
    var defaultIsFile = function isFile(file, cb) {
      fs.stat(file, function(err, stat) {
        if (!err) {
          return cb(null, stat.isFile() || stat.isFIFO());
        }
        if (err.code === "ENOENT" || err.code === "ENOTDIR")
          return cb(null, false);
        return cb(err);
      });
    };
    var defaultIsDir = function isDirectory(dir, cb) {
      fs.stat(dir, function(err, stat) {
        if (!err) {
          return cb(null, stat.isDirectory());
        }
        if (err.code === "ENOENT" || err.code === "ENOTDIR")
          return cb(null, false);
        return cb(err);
      });
    };
    var defaultRealpath = function realpath(x, cb) {
      realpathFS(x, function(realpathErr, realPath) {
        if (realpathErr && realpathErr.code !== "ENOENT")
          cb(realpathErr);
        else
          cb(null, realpathErr ? x : realPath);
      });
    };
    var maybeRealpath = function maybeRealpath2(realpath, x, opts, cb) {
      if (opts && opts.preserveSymlinks === false) {
        realpath(x, cb);
      } else {
        cb(null, x);
      }
    };
    var defaultReadPackage = function defaultReadPackage2(readFile, pkgfile, cb) {
      readFile(pkgfile, function(readFileErr, body) {
        if (readFileErr)
          cb(readFileErr);
        else {
          try {
            var pkg = JSON.parse(body);
            cb(null, pkg);
          } catch (jsonErr) {
            cb(null);
          }
        }
      });
    };
    var getPackageCandidates = function getPackageCandidates2(x, start, opts) {
      var dirs = nodeModulesPaths(start, opts, x);
      for (var i = 0; i < dirs.length; i++) {
        dirs[i] = path.join(dirs[i], x);
      }
      return dirs;
    };
    module.exports = function resolve(x, options, callback) {
      var cb = callback;
      var opts = options;
      if (typeof options === "function") {
        cb = opts;
        opts = {};
      }
      if (typeof x !== "string") {
        var err = new TypeError("Path must be a string.");
        return process.nextTick(function() {
          cb(err);
        });
      }
      opts = normalizeOptions(x, opts);
      var isFile = opts.isFile || defaultIsFile;
      var isDirectory = opts.isDirectory || defaultIsDir;
      var readFile = opts.readFile || fs.readFile;
      var realpath = opts.realpath || defaultRealpath;
      var readPackage = opts.readPackage || defaultReadPackage;
      if (opts.readFile && opts.readPackage) {
        var conflictErr = new TypeError("`readFile` and `readPackage` are mutually exclusive.");
        return process.nextTick(function() {
          cb(conflictErr);
        });
      }
      var packageIterator = opts.packageIterator;
      var extensions = opts.extensions || [".js"];
      var includeCoreModules = opts.includeCoreModules !== false;
      var basedir = opts.basedir || path.dirname(caller());
      var parent = opts.filename || basedir;
      opts.paths = opts.paths || defaultPaths();
      var absoluteStart = path.resolve(basedir);
      maybeRealpath(
        realpath,
        absoluteStart,
        opts,
        function(err2, realStart) {
          if (err2)
            cb(err2);
          else
            init(realStart);
        }
      );
      var res;
      function init(basedir2) {
        if (/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[/\\])/.test(x)) {
          res = path.resolve(basedir2, x);
          if (x === "." || x === ".." || x.slice(-1) === "/")
            res += "/";
          if (/\/$/.test(x) && res === basedir2) {
            loadAsDirectory(res, opts.package, onfile);
          } else
            loadAsFile(res, opts.package, onfile);
        } else if (includeCoreModules && isCore(x)) {
          return cb(null, x);
        } else
          loadNodeModules(x, basedir2, function(err2, n, pkg) {
            if (err2)
              cb(err2);
            else if (n) {
              return maybeRealpath(realpath, n, opts, function(err3, realN) {
                if (err3) {
                  cb(err3);
                } else {
                  cb(null, realN, pkg);
                }
              });
            } else {
              var moduleError = new Error("Cannot find module '" + x + "' from '" + parent + "'");
              moduleError.code = "MODULE_NOT_FOUND";
              cb(moduleError);
            }
          });
      }
      function onfile(err2, m, pkg) {
        if (err2)
          cb(err2);
        else if (m)
          cb(null, m, pkg);
        else
          loadAsDirectory(res, function(err3, d, pkg2) {
            if (err3)
              cb(err3);
            else if (d) {
              maybeRealpath(realpath, d, opts, function(err4, realD) {
                if (err4) {
                  cb(err4);
                } else {
                  cb(null, realD, pkg2);
                }
              });
            } else {
              var moduleError = new Error("Cannot find module '" + x + "' from '" + parent + "'");
              moduleError.code = "MODULE_NOT_FOUND";
              cb(moduleError);
            }
          });
      }
      function loadAsFile(x2, thePackage, callback2) {
        var loadAsFilePackage = thePackage;
        var cb2 = callback2;
        if (typeof loadAsFilePackage === "function") {
          cb2 = loadAsFilePackage;
          loadAsFilePackage = void 0;
        }
        var exts = [""].concat(extensions);
        load(exts, x2, loadAsFilePackage);
        function load(exts2, x3, loadPackage) {
          if (exts2.length === 0)
            return cb2(null, void 0, loadPackage);
          var file = x3 + exts2[0];
          var pkg = loadPackage;
          if (pkg)
            onpkg(null, pkg);
          else
            loadpkg(path.dirname(file), onpkg);
          function onpkg(err2, pkg_, dir) {
            pkg = pkg_;
            if (err2)
              return cb2(err2);
            if (dir && pkg && opts.pathFilter) {
              var rfile = path.relative(dir, file);
              var rel = rfile.slice(0, rfile.length - exts2[0].length);
              var r = opts.pathFilter(pkg, x3, rel);
              if (r)
                return load(
                  [""].concat(extensions.slice()),
                  path.resolve(dir, r),
                  pkg
                );
            }
            isFile(file, onex);
          }
          function onex(err2, ex) {
            if (err2)
              return cb2(err2);
            if (ex)
              return cb2(null, file, pkg);
            load(exts2.slice(1), x3, pkg);
          }
        }
      }
      function loadpkg(dir, cb2) {
        if (dir === "" || dir === "/")
          return cb2(null);
        if (process.platform === "win32" && /^\w:[/\\]*$/.test(dir)) {
          return cb2(null);
        }
        if (/[/\\]node_modules[/\\]*$/.test(dir))
          return cb2(null);
        maybeRealpath(realpath, dir, opts, function(unwrapErr, pkgdir) {
          if (unwrapErr)
            return loadpkg(path.dirname(dir), cb2);
          var pkgfile = path.join(pkgdir, "package.json");
          isFile(pkgfile, function(err2, ex) {
            if (!ex)
              return loadpkg(path.dirname(dir), cb2);
            readPackage(readFile, pkgfile, function(err3, pkgParam) {
              if (err3)
                cb2(err3);
              var pkg = pkgParam;
              if (pkg && opts.packageFilter) {
                pkg = opts.packageFilter(pkg, pkgfile);
              }
              cb2(null, pkg, dir);
            });
          });
        });
      }
      function loadAsDirectory(x2, loadAsDirectoryPackage, callback2) {
        var cb2 = callback2;
        var fpkg = loadAsDirectoryPackage;
        if (typeof fpkg === "function") {
          cb2 = fpkg;
          fpkg = opts.package;
        }
        maybeRealpath(realpath, x2, opts, function(unwrapErr, pkgdir) {
          if (unwrapErr)
            return cb2(unwrapErr);
          var pkgfile = path.join(pkgdir, "package.json");
          isFile(pkgfile, function(err2, ex) {
            if (err2)
              return cb2(err2);
            if (!ex)
              return loadAsFile(path.join(x2, "index"), fpkg, cb2);
            readPackage(readFile, pkgfile, function(err3, pkgParam) {
              if (err3)
                return cb2(err3);
              var pkg = pkgParam;
              if (pkg && opts.packageFilter) {
                pkg = opts.packageFilter(pkg, pkgfile);
              }
              if (pkg && pkg.main) {
                if (typeof pkg.main !== "string") {
                  var mainError = new TypeError("package \u201C" + pkg.name + "\u201D `main` must be a string");
                  mainError.code = "INVALID_PACKAGE_MAIN";
                  return cb2(mainError);
                }
                if (pkg.main === "." || pkg.main === "./") {
                  pkg.main = "index";
                }
                loadAsFile(path.resolve(x2, pkg.main), pkg, function(err4, m, pkg2) {
                  if (err4)
                    return cb2(err4);
                  if (m)
                    return cb2(null, m, pkg2);
                  if (!pkg2)
                    return loadAsFile(path.join(x2, "index"), pkg2, cb2);
                  var dir = path.resolve(x2, pkg2.main);
                  loadAsDirectory(dir, pkg2, function(err5, n, pkg3) {
                    if (err5)
                      return cb2(err5);
                    if (n)
                      return cb2(null, n, pkg3);
                    loadAsFile(path.join(x2, "index"), pkg3, cb2);
                  });
                });
                return;
              }
              loadAsFile(path.join(x2, "/index"), pkg, cb2);
            });
          });
        });
      }
      function processDirs(cb2, dirs) {
        if (dirs.length === 0)
          return cb2(null, void 0);
        var dir = dirs[0];
        isDirectory(path.dirname(dir), isdir);
        function isdir(err2, isdir2) {
          if (err2)
            return cb2(err2);
          if (!isdir2)
            return processDirs(cb2, dirs.slice(1));
          loadAsFile(dir, opts.package, onfile2);
        }
        function onfile2(err2, m, pkg) {
          if (err2)
            return cb2(err2);
          if (m)
            return cb2(null, m, pkg);
          loadAsDirectory(dir, opts.package, ondir);
        }
        function ondir(err2, n, pkg) {
          if (err2)
            return cb2(err2);
          if (n)
            return cb2(null, n, pkg);
          processDirs(cb2, dirs.slice(1));
        }
      }
      function loadNodeModules(x2, start, cb2) {
        var thunk = function() {
          return getPackageCandidates(x2, start, opts);
        };
        processDirs(
          cb2,
          packageIterator ? packageIterator(x2, start, thunk, opts) : thunk()
        );
      }
    };
  }
});
var require_core2 = __commonJS({
  "../../node_modules/resolve/lib/core.json"(exports, module) {
    module.exports = {
      assert: true,
      "node:assert": [">= 14.18 && < 15", ">= 16"],
      "assert/strict": ">= 15",
      "node:assert/strict": ">= 16",
      async_hooks: ">= 8",
      "node:async_hooks": [">= 14.18 && < 15", ">= 16"],
      buffer_ieee754: ">= 0.5 && < 0.9.7",
      buffer: true,
      "node:buffer": [">= 14.18 && < 15", ">= 16"],
      child_process: true,
      "node:child_process": [">= 14.18 && < 15", ">= 16"],
      cluster: ">= 0.5",
      "node:cluster": [">= 14.18 && < 15", ">= 16"],
      console: true,
      "node:console": [">= 14.18 && < 15", ">= 16"],
      constants: true,
      "node:constants": [">= 14.18 && < 15", ">= 16"],
      crypto: true,
      "node:crypto": [">= 14.18 && < 15", ">= 16"],
      _debug_agent: ">= 1 && < 8",
      _debugger: "< 8",
      dgram: true,
      "node:dgram": [">= 14.18 && < 15", ">= 16"],
      diagnostics_channel: [">= 14.17 && < 15", ">= 15.1"],
      "node:diagnostics_channel": [">= 14.18 && < 15", ">= 16"],
      dns: true,
      "node:dns": [">= 14.18 && < 15", ">= 16"],
      "dns/promises": ">= 15",
      "node:dns/promises": ">= 16",
      domain: ">= 0.7.12",
      "node:domain": [">= 14.18 && < 15", ">= 16"],
      events: true,
      "node:events": [">= 14.18 && < 15", ">= 16"],
      freelist: "< 6",
      fs: true,
      "node:fs": [">= 14.18 && < 15", ">= 16"],
      "fs/promises": [">= 10 && < 10.1", ">= 14"],
      "node:fs/promises": [">= 14.18 && < 15", ">= 16"],
      _http_agent: ">= 0.11.1",
      "node:_http_agent": [">= 14.18 && < 15", ">= 16"],
      _http_client: ">= 0.11.1",
      "node:_http_client": [">= 14.18 && < 15", ">= 16"],
      _http_common: ">= 0.11.1",
      "node:_http_common": [">= 14.18 && < 15", ">= 16"],
      _http_incoming: ">= 0.11.1",
      "node:_http_incoming": [">= 14.18 && < 15", ">= 16"],
      _http_outgoing: ">= 0.11.1",
      "node:_http_outgoing": [">= 14.18 && < 15", ">= 16"],
      _http_server: ">= 0.11.1",
      "node:_http_server": [">= 14.18 && < 15", ">= 16"],
      http: true,
      "node:http": [">= 14.18 && < 15", ">= 16"],
      http2: ">= 8.8",
      "node:http2": [">= 14.18 && < 15", ">= 16"],
      https: true,
      "node:https": [">= 14.18 && < 15", ">= 16"],
      inspector: ">= 8",
      "node:inspector": [">= 14.18 && < 15", ">= 16"],
      _linklist: "< 8",
      module: true,
      "node:module": [">= 14.18 && < 15", ">= 16"],
      net: true,
      "node:net": [">= 14.18 && < 15", ">= 16"],
      "node-inspect/lib/_inspect": ">= 7.6 && < 12",
      "node-inspect/lib/internal/inspect_client": ">= 7.6 && < 12",
      "node-inspect/lib/internal/inspect_repl": ">= 7.6 && < 12",
      os: true,
      "node:os": [">= 14.18 && < 15", ">= 16"],
      path: true,
      "node:path": [">= 14.18 && < 15", ">= 16"],
      "path/posix": ">= 15.3",
      "node:path/posix": ">= 16",
      "path/win32": ">= 15.3",
      "node:path/win32": ">= 16",
      perf_hooks: ">= 8.5",
      "node:perf_hooks": [">= 14.18 && < 15", ">= 16"],
      process: ">= 1",
      "node:process": [">= 14.18 && < 15", ">= 16"],
      punycode: ">= 0.5",
      "node:punycode": [">= 14.18 && < 15", ">= 16"],
      querystring: true,
      "node:querystring": [">= 14.18 && < 15", ">= 16"],
      readline: true,
      "node:readline": [">= 14.18 && < 15", ">= 16"],
      "readline/promises": ">= 17",
      "node:readline/promises": ">= 17",
      repl: true,
      "node:repl": [">= 14.18 && < 15", ">= 16"],
      smalloc: ">= 0.11.5 && < 3",
      _stream_duplex: ">= 0.9.4",
      "node:_stream_duplex": [">= 14.18 && < 15", ">= 16"],
      _stream_transform: ">= 0.9.4",
      "node:_stream_transform": [">= 14.18 && < 15", ">= 16"],
      _stream_wrap: ">= 1.4.1",
      "node:_stream_wrap": [">= 14.18 && < 15", ">= 16"],
      _stream_passthrough: ">= 0.9.4",
      "node:_stream_passthrough": [">= 14.18 && < 15", ">= 16"],
      _stream_readable: ">= 0.9.4",
      "node:_stream_readable": [">= 14.18 && < 15", ">= 16"],
      _stream_writable: ">= 0.9.4",
      "node:_stream_writable": [">= 14.18 && < 15", ">= 16"],
      stream: true,
      "node:stream": [">= 14.18 && < 15", ">= 16"],
      "stream/consumers": ">= 16.7",
      "node:stream/consumers": ">= 16.7",
      "stream/promises": ">= 15",
      "node:stream/promises": ">= 16",
      "stream/web": ">= 16.5",
      "node:stream/web": ">= 16.5",
      string_decoder: true,
      "node:string_decoder": [">= 14.18 && < 15", ">= 16"],
      sys: [">= 0.4 && < 0.7", ">= 0.8"],
      "node:sys": [">= 14.18 && < 15", ">= 16"],
      "node:test": ">= 18",
      timers: true,
      "node:timers": [">= 14.18 && < 15", ">= 16"],
      "timers/promises": ">= 15",
      "node:timers/promises": ">= 16",
      _tls_common: ">= 0.11.13",
      "node:_tls_common": [">= 14.18 && < 15", ">= 16"],
      _tls_legacy: ">= 0.11.3 && < 10",
      _tls_wrap: ">= 0.11.3",
      "node:_tls_wrap": [">= 14.18 && < 15", ">= 16"],
      tls: true,
      "node:tls": [">= 14.18 && < 15", ">= 16"],
      trace_events: ">= 10",
      "node:trace_events": [">= 14.18 && < 15", ">= 16"],
      tty: true,
      "node:tty": [">= 14.18 && < 15", ">= 16"],
      url: true,
      "node:url": [">= 14.18 && < 15", ">= 16"],
      util: true,
      "node:util": [">= 14.18 && < 15", ">= 16"],
      "util/types": ">= 15.3",
      "node:util/types": ">= 16",
      "v8/tools/arguments": ">= 10 && < 12",
      "v8/tools/codemap": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/consarray": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/csvparser": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/logreader": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/profile_view": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      "v8/tools/splaytree": [">= 4.4 && < 5", ">= 5.2 && < 12"],
      v8: ">= 1",
      "node:v8": [">= 14.18 && < 15", ">= 16"],
      vm: true,
      "node:vm": [">= 14.18 && < 15", ">= 16"],
      wasi: ">= 13.4 && < 13.5",
      worker_threads: ">= 11.7",
      "node:worker_threads": [">= 14.18 && < 15", ">= 16"],
      zlib: ">= 0.5",
      "node:zlib": [">= 14.18 && < 15", ">= 16"]
    };
  }
});
var require_core3 = __commonJS({
  "../../node_modules/resolve/lib/core.js"(exports, module) {
    init_process();
    init_buffer();
    var current = process.versions && process.versions.node && process.versions.node.split(".") || [];
    function specifierIncluded(specifier) {
      var parts = specifier.split(" ");
      var op = parts.length > 1 ? parts[0] : "=";
      var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split(".");
      for (var i = 0; i < 3; ++i) {
        var cur = parseInt(current[i] || 0, 10);
        var ver = parseInt(versionParts[i] || 0, 10);
        if (cur === ver) {
          continue;
        }
        if (op === "<") {
          return cur < ver;
        } else if (op === ">=") {
          return cur >= ver;
        }
        return false;
      }
      return op === ">=";
    }
    function matchesRange(range) {
      var specifiers = range.split(/ ?&& ?/);
      if (specifiers.length === 0) {
        return false;
      }
      for (var i = 0; i < specifiers.length; ++i) {
        if (!specifierIncluded(specifiers[i])) {
          return false;
        }
      }
      return true;
    }
    function versionIncluded(specifierValue) {
      if (typeof specifierValue === "boolean") {
        return specifierValue;
      }
      if (specifierValue && typeof specifierValue === "object") {
        for (var i = 0; i < specifierValue.length; ++i) {
          if (matchesRange(specifierValue[i])) {
            return true;
          }
        }
        return false;
      }
      return matchesRange(specifierValue);
    }
    var data = require_core2();
    var core = {};
    for (mod in data) {
      if (Object.prototype.hasOwnProperty.call(data, mod)) {
        core[mod] = versionIncluded(data[mod]);
      }
    }
    var mod;
    module.exports = core;
  }
});
var require_is_core = __commonJS({
  "../../node_modules/resolve/lib/is-core.js"(exports, module) {
    init_process();
    init_buffer();
    var isCoreModule = require_is_core_module();
    module.exports = function isCore(x) {
      return isCoreModule(x);
    };
  }
});
var require_sync = __commonJS({
  "../../node_modules/resolve/lib/sync.js"(exports, module) {
    init_process();
    init_buffer();
    var isCore = require_is_core_module();
    var fs = require_browserify_fs();
    var path = require_path_browserify();
    var getHomedir = require_homedir();
    var caller = require_caller();
    var nodeModulesPaths = require_node_modules_paths();
    var normalizeOptions = require_normalize_options();
    var realpathFS = process.platform !== "win32" && fs.realpathSync && typeof fs.realpathSync.native === "function" ? fs.realpathSync.native : fs.realpathSync;
    var homedir = getHomedir();
    var defaultPaths = function() {
      return [
        path.join(homedir, ".node_modules"),
        path.join(homedir, ".node_libraries")
      ];
    };
    var defaultIsFile = function isFile(file) {
      try {
        var stat = fs.statSync(file, { throwIfNoEntry: false });
      } catch (e) {
        if (e && (e.code === "ENOENT" || e.code === "ENOTDIR"))
          return false;
        throw e;
      }
      return !!stat && (stat.isFile() || stat.isFIFO());
    };
    var defaultIsDir = function isDirectory(dir) {
      try {
        var stat = fs.statSync(dir, { throwIfNoEntry: false });
      } catch (e) {
        if (e && (e.code === "ENOENT" || e.code === "ENOTDIR"))
          return false;
        throw e;
      }
      return !!stat && stat.isDirectory();
    };
    var defaultRealpathSync = function realpathSync(x) {
      try {
        return realpathFS(x);
      } catch (realpathErr) {
        if (realpathErr.code !== "ENOENT") {
          throw realpathErr;
        }
      }
      return x;
    };
    var maybeRealpathSync = function maybeRealpathSync2(realpathSync, x, opts) {
      if (opts && opts.preserveSymlinks === false) {
        return realpathSync(x);
      }
      return x;
    };
    var defaultReadPackageSync = function defaultReadPackageSync2(readFileSync, pkgfile) {
      var body = readFileSync(pkgfile);
      try {
        var pkg = JSON.parse(body);
        return pkg;
      } catch (jsonErr) {
      }
    };
    var getPackageCandidates = function getPackageCandidates2(x, start, opts) {
      var dirs = nodeModulesPaths(start, opts, x);
      for (var i = 0; i < dirs.length; i++) {
        dirs[i] = path.join(dirs[i], x);
      }
      return dirs;
    };
    module.exports = function resolveSync(x, options) {
      if (typeof x !== "string") {
        throw new TypeError("Path must be a string.");
      }
      var opts = normalizeOptions(x, options);
      var isFile = opts.isFile || defaultIsFile;
      var readFileSync = opts.readFileSync || fs.readFileSync;
      var isDirectory = opts.isDirectory || defaultIsDir;
      var realpathSync = opts.realpathSync || defaultRealpathSync;
      var readPackageSync = opts.readPackageSync || defaultReadPackageSync;
      if (opts.readFileSync && opts.readPackageSync) {
        throw new TypeError("`readFileSync` and `readPackageSync` are mutually exclusive.");
      }
      var packageIterator = opts.packageIterator;
      var extensions = opts.extensions || [".js"];
      var includeCoreModules = opts.includeCoreModules !== false;
      var basedir = opts.basedir || path.dirname(caller());
      var parent = opts.filename || basedir;
      opts.paths = opts.paths || defaultPaths();
      var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);
      if (/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[/\\])/.test(x)) {
        var res = path.resolve(absoluteStart, x);
        if (x === "." || x === ".." || x.slice(-1) === "/")
          res += "/";
        var m = loadAsFileSync(res) || loadAsDirectorySync(res);
        if (m)
          return maybeRealpathSync(realpathSync, m, opts);
      } else if (includeCoreModules && isCore(x)) {
        return x;
      } else {
        var n = loadNodeModulesSync(x, absoluteStart);
        if (n)
          return maybeRealpathSync(realpathSync, n, opts);
      }
      var err = new Error("Cannot find module '" + x + "' from '" + parent + "'");
      err.code = "MODULE_NOT_FOUND";
      throw err;
      function loadAsFileSync(x2) {
        var pkg = loadpkg(path.dirname(x2));
        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {
          var rfile = path.relative(pkg.dir, x2);
          var r = opts.pathFilter(pkg.pkg, x2, rfile);
          if (r) {
            x2 = path.resolve(pkg.dir, r);
          }
        }
        if (isFile(x2)) {
          return x2;
        }
        for (var i = 0; i < extensions.length; i++) {
          var file = x2 + extensions[i];
          if (isFile(file)) {
            return file;
          }
        }
      }
      function loadpkg(dir) {
        if (dir === "" || dir === "/")
          return;
        if (process.platform === "win32" && /^\w:[/\\]*$/.test(dir)) {
          return;
        }
        if (/[/\\]node_modules[/\\]*$/.test(dir))
          return;
        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), "package.json");
        if (!isFile(pkgfile)) {
          return loadpkg(path.dirname(dir));
        }
        var pkg = readPackageSync(readFileSync, pkgfile);
        if (pkg && opts.packageFilter) {
          pkg = opts.packageFilter(pkg, dir);
        }
        return { pkg, dir };
      }
      function loadAsDirectorySync(x2) {
        var pkgfile = path.join(maybeRealpathSync(realpathSync, x2, opts), "/package.json");
        if (isFile(pkgfile)) {
          try {
            var pkg = readPackageSync(readFileSync, pkgfile);
          } catch (e) {
          }
          if (pkg && opts.packageFilter) {
            pkg = opts.packageFilter(pkg, x2);
          }
          if (pkg && pkg.main) {
            if (typeof pkg.main !== "string") {
              var mainError = new TypeError("package \u201C" + pkg.name + "\u201D `main` must be a string");
              mainError.code = "INVALID_PACKAGE_MAIN";
              throw mainError;
            }
            if (pkg.main === "." || pkg.main === "./") {
              pkg.main = "index";
            }
            try {
              var m2 = loadAsFileSync(path.resolve(x2, pkg.main));
              if (m2)
                return m2;
              var n2 = loadAsDirectorySync(path.resolve(x2, pkg.main));
              if (n2)
                return n2;
            } catch (e) {
            }
          }
        }
        return loadAsFileSync(path.join(x2, "/index"));
      }
      function loadNodeModulesSync(x2, start) {
        var thunk = function() {
          return getPackageCandidates(x2, start, opts);
        };
        var dirs = packageIterator ? packageIterator(x2, start, thunk, opts) : thunk();
        for (var i = 0; i < dirs.length; i++) {
          var dir = dirs[i];
          if (isDirectory(path.dirname(dir))) {
            var m2 = loadAsFileSync(dir);
            if (m2)
              return m2;
            var n2 = loadAsDirectorySync(dir);
            if (n2)
              return n2;
          }
        }
      }
    };
  }
});
var require_resolve = __commonJS({
  "../../node_modules/resolve/index.js"(exports, module) {
    init_process();
    init_buffer();
    var async = require_async();
    async.core = require_core3();
    async.isCore = require_is_core();
    async.sync = require_sync();
    module.exports = async;
  }
});
var require_acorn = __commonJS({
  "../../node_modules/acorn-node/node_modules/acorn/dist/acorn.js"(exports, module) {
    init_process();
    init_buffer();
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = global2 || self, factory(global2.acorn = {}));
    })(exports, function(exports2) {
      "use strict";
      var reservedWords = {
        3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
        5: "class enum extends super const export import",
        6: "enum",
        strict: "implements interface let package private protected public static yield",
        strictBind: "eval arguments"
      };
      var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";
      var keywords = {
        5: ecma5AndLessKeywords,
        "5module": ecma5AndLessKeywords + " export import",
        6: ecma5AndLessKeywords + " const class extends export import super"
      };
      var keywordRelationalOperator = /^in(stanceof)?$/;
      var nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
      var nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";
      var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
      var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
      nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;
      var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];
      var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
      function isInAstralSet(code, set) {
        var pos = 65536;
        for (var i = 0; i < set.length; i += 2) {
          pos += set[i];
          if (pos > code) {
            return false;
          }
          pos += set[i + 1];
          if (pos >= code) {
            return true;
          }
        }
      }
      function isIdentifierStart(code, astral) {
        if (code < 65) {
          return code === 36;
        }
        if (code < 91) {
          return true;
        }
        if (code < 97) {
          return code === 95;
        }
        if (code < 123) {
          return true;
        }
        if (code <= 65535) {
          return code >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code));
        }
        if (astral === false) {
          return false;
        }
        return isInAstralSet(code, astralIdentifierStartCodes);
      }
      function isIdentifierChar(code, astral) {
        if (code < 48) {
          return code === 36;
        }
        if (code < 58) {
          return true;
        }
        if (code < 65) {
          return false;
        }
        if (code < 91) {
          return true;
        }
        if (code < 97) {
          return code === 95;
        }
        if (code < 123) {
          return true;
        }
        if (code <= 65535) {
          return code >= 170 && nonASCIIidentifier.test(String.fromCharCode(code));
        }
        if (astral === false) {
          return false;
        }
        return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
      }
      var TokenType = function TokenType2(label, conf) {
        if (conf === void 0)
          conf = {};
        this.label = label;
        this.keyword = conf.keyword;
        this.beforeExpr = !!conf.beforeExpr;
        this.startsExpr = !!conf.startsExpr;
        this.isLoop = !!conf.isLoop;
        this.isAssign = !!conf.isAssign;
        this.prefix = !!conf.prefix;
        this.postfix = !!conf.postfix;
        this.binop = conf.binop || null;
        this.updateContext = null;
      };
      function binop(name, prec) {
        return new TokenType(name, { beforeExpr: true, binop: prec });
      }
      var beforeExpr = { beforeExpr: true }, startsExpr = { startsExpr: true };
      var keywords$1 = {};
      function kw(name, options) {
        if (options === void 0)
          options = {};
        options.keyword = name;
        return keywords$1[name] = new TokenType(name, options);
      }
      var types = {
        num: new TokenType("num", startsExpr),
        regexp: new TokenType("regexp", startsExpr),
        string: new TokenType("string", startsExpr),
        name: new TokenType("name", startsExpr),
        eof: new TokenType("eof"),
        bracketL: new TokenType("[", { beforeExpr: true, startsExpr: true }),
        bracketR: new TokenType("]"),
        braceL: new TokenType("{", { beforeExpr: true, startsExpr: true }),
        braceR: new TokenType("}"),
        parenL: new TokenType("(", { beforeExpr: true, startsExpr: true }),
        parenR: new TokenType(")"),
        comma: new TokenType(",", beforeExpr),
        semi: new TokenType(";", beforeExpr),
        colon: new TokenType(":", beforeExpr),
        dot: new TokenType("."),
        question: new TokenType("?", beforeExpr),
        questionDot: new TokenType("?."),
        arrow: new TokenType("=>", beforeExpr),
        template: new TokenType("template"),
        invalidTemplate: new TokenType("invalidTemplate"),
        ellipsis: new TokenType("...", beforeExpr),
        backQuote: new TokenType("`", startsExpr),
        dollarBraceL: new TokenType("${", { beforeExpr: true, startsExpr: true }),
        eq: new TokenType("=", { beforeExpr: true, isAssign: true }),
        assign: new TokenType("_=", { beforeExpr: true, isAssign: true }),
        incDec: new TokenType("++/--", { prefix: true, postfix: true, startsExpr: true }),
        prefix: new TokenType("!/~", { beforeExpr: true, prefix: true, startsExpr: true }),
        logicalOR: binop("||", 1),
        logicalAND: binop("&&", 2),
        bitwiseOR: binop("|", 3),
        bitwiseXOR: binop("^", 4),
        bitwiseAND: binop("&", 5),
        equality: binop("==/!=/===/!==", 6),
        relational: binop("</>/<=/>=", 7),
        bitShift: binop("<</>>/>>>", 8),
        plusMin: new TokenType("+/-", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }),
        modulo: binop("%", 10),
        star: binop("*", 10),
        slash: binop("/", 10),
        starstar: new TokenType("**", { beforeExpr: true }),
        coalesce: binop("??", 1),
        _break: kw("break"),
        _case: kw("case", beforeExpr),
        _catch: kw("catch"),
        _continue: kw("continue"),
        _debugger: kw("debugger"),
        _default: kw("default", beforeExpr),
        _do: kw("do", { isLoop: true, beforeExpr: true }),
        _else: kw("else", beforeExpr),
        _finally: kw("finally"),
        _for: kw("for", { isLoop: true }),
        _function: kw("function", startsExpr),
        _if: kw("if"),
        _return: kw("return", beforeExpr),
        _switch: kw("switch"),
        _throw: kw("throw", beforeExpr),
        _try: kw("try"),
        _var: kw("var"),
        _const: kw("const"),
        _while: kw("while", { isLoop: true }),
        _with: kw("with"),
        _new: kw("new", { beforeExpr: true, startsExpr: true }),
        _this: kw("this", startsExpr),
        _super: kw("super", startsExpr),
        _class: kw("class", startsExpr),
        _extends: kw("extends", beforeExpr),
        _export: kw("export"),
        _import: kw("import", startsExpr),
        _null: kw("null", startsExpr),
        _true: kw("true", startsExpr),
        _false: kw("false", startsExpr),
        _in: kw("in", { beforeExpr: true, binop: 7 }),
        _instanceof: kw("instanceof", { beforeExpr: true, binop: 7 }),
        _typeof: kw("typeof", { beforeExpr: true, prefix: true, startsExpr: true }),
        _void: kw("void", { beforeExpr: true, prefix: true, startsExpr: true }),
        _delete: kw("delete", { beforeExpr: true, prefix: true, startsExpr: true })
      };
      var lineBreak = /\r\n?|\n|\u2028|\u2029/;
      var lineBreakG = new RegExp(lineBreak.source, "g");
      function isNewLine(code, ecma2019String) {
        return code === 10 || code === 13 || !ecma2019String && (code === 8232 || code === 8233);
      }
      var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
      var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
      var ref = Object.prototype;
      var hasOwnProperty = ref.hasOwnProperty;
      var toString = ref.toString;
      function has(obj, propName) {
        return hasOwnProperty.call(obj, propName);
      }
      var isArray = Array.isArray || function(obj) {
        return toString.call(obj) === "[object Array]";
      };
      function wordsRegexp(words) {
        return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$");
      }
      var Position = function Position2(line, col) {
        this.line = line;
        this.column = col;
      };
      Position.prototype.offset = function offset(n) {
        return new Position(this.line, this.column + n);
      };
      var SourceLocation = function SourceLocation2(p, start, end) {
        this.start = start;
        this.end = end;
        if (p.sourceFile !== null) {
          this.source = p.sourceFile;
        }
      };
      function getLineInfo(input, offset) {
        for (var line = 1, cur = 0; ; ) {
          lineBreakG.lastIndex = cur;
          var match = lineBreakG.exec(input);
          if (match && match.index < offset) {
            ++line;
            cur = match.index + match[0].length;
          } else {
            return new Position(line, offset - cur);
          }
        }
      }
      var defaultOptions = {
        ecmaVersion: 10,
        sourceType: "script",
        onInsertedSemicolon: null,
        onTrailingComma: null,
        allowReserved: null,
        allowReturnOutsideFunction: false,
        allowImportExportEverywhere: false,
        allowAwaitOutsideFunction: false,
        allowHashBang: false,
        locations: false,
        onToken: null,
        onComment: null,
        ranges: false,
        program: null,
        sourceFile: null,
        directSourceFile: null,
        preserveParens: false
      };
      function getOptions(opts) {
        var options = {};
        for (var opt in defaultOptions) {
          options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt];
        }
        if (options.ecmaVersion >= 2015) {
          options.ecmaVersion -= 2009;
        }
        if (options.allowReserved == null) {
          options.allowReserved = options.ecmaVersion < 5;
        }
        if (isArray(options.onToken)) {
          var tokens = options.onToken;
          options.onToken = function(token) {
            return tokens.push(token);
          };
        }
        if (isArray(options.onComment)) {
          options.onComment = pushComment(options, options.onComment);
        }
        return options;
      }
      function pushComment(options, array) {
        return function(block, text, start, end, startLoc, endLoc) {
          var comment2 = {
            type: block ? "Block" : "Line",
            value: text,
            start,
            end
          };
          if (options.locations) {
            comment2.loc = new SourceLocation(this, startLoc, endLoc);
          }
          if (options.ranges) {
            comment2.range = [start, end];
          }
          array.push(comment2);
        };
      }
      var SCOPE_TOP = 1, SCOPE_FUNCTION = 2, SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION, SCOPE_ASYNC = 4, SCOPE_GENERATOR = 8, SCOPE_ARROW = 16, SCOPE_SIMPLE_CATCH = 32, SCOPE_SUPER = 64, SCOPE_DIRECT_SUPER = 128;
      function functionFlags(async, generator) {
        return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);
      }
      var BIND_NONE = 0, BIND_VAR = 1, BIND_LEXICAL = 2, BIND_FUNCTION = 3, BIND_SIMPLE_CATCH = 4, BIND_OUTSIDE = 5;
      var Parser = function Parser2(options, input, startPos) {
        this.options = options = getOptions(options);
        this.sourceFile = options.sourceFile;
        this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
        var reserved = "";
        if (options.allowReserved !== true) {
          for (var v = options.ecmaVersion; ; v--) {
            if (reserved = reservedWords[v]) {
              break;
            }
          }
          if (options.sourceType === "module") {
            reserved += " await";
          }
        }
        this.reservedWords = wordsRegexp(reserved);
        var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
        this.reservedWordsStrict = wordsRegexp(reservedStrict);
        this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);
        this.input = String(input);
        this.containsEsc = false;
        if (startPos) {
          this.pos = startPos;
          this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
          this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
        } else {
          this.pos = this.lineStart = 0;
          this.curLine = 1;
        }
        this.type = types.eof;
        this.value = null;
        this.start = this.end = this.pos;
        this.startLoc = this.endLoc = this.curPosition();
        this.lastTokEndLoc = this.lastTokStartLoc = null;
        this.lastTokStart = this.lastTokEnd = this.pos;
        this.context = this.initialContext();
        this.exprAllowed = true;
        this.inModule = options.sourceType === "module";
        this.strict = this.inModule || this.strictDirective(this.pos);
        this.potentialArrowAt = -1;
        this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
        this.labels = [];
        this.undefinedExports = {};
        if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!") {
          this.skipLineComment(2);
        }
        this.scopeStack = [];
        this.enterScope(SCOPE_TOP);
        this.regexpState = null;
      };
      var prototypeAccessors = { inFunction: { configurable: true }, inGenerator: { configurable: true }, inAsync: { configurable: true }, allowSuper: { configurable: true }, allowDirectSuper: { configurable: true }, treatFunctionsAsVar: { configurable: true } };
      Parser.prototype.parse = function parse3() {
        var node = this.options.program || this.startNode();
        this.nextToken();
        return this.parseTopLevel(node);
      };
      prototypeAccessors.inFunction.get = function() {
        return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;
      };
      prototypeAccessors.inGenerator.get = function() {
        return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0;
      };
      prototypeAccessors.inAsync.get = function() {
        return (this.currentVarScope().flags & SCOPE_ASYNC) > 0;
      };
      prototypeAccessors.allowSuper.get = function() {
        return (this.currentThisScope().flags & SCOPE_SUPER) > 0;
      };
      prototypeAccessors.allowDirectSuper.get = function() {
        return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;
      };
      prototypeAccessors.treatFunctionsAsVar.get = function() {
        return this.treatFunctionsAsVarInScope(this.currentScope());
      };
      Parser.prototype.inNonArrowFunction = function inNonArrowFunction() {
        return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;
      };
      Parser.extend = function extend() {
        var plugins = [], len = arguments.length;
        while (len--)
          plugins[len] = arguments[len];
        var cls = this;
        for (var i = 0; i < plugins.length; i++) {
          cls = plugins[i](cls);
        }
        return cls;
      };
      Parser.parse = function parse3(input, options) {
        return new this(options, input).parse();
      };
      Parser.parseExpressionAt = function parseExpressionAt2(input, pos, options) {
        var parser = new this(options, input, pos);
        parser.nextToken();
        return parser.parseExpression();
      };
      Parser.tokenizer = function tokenizer2(input, options) {
        return new this(options, input);
      };
      Object.defineProperties(Parser.prototype, prototypeAccessors);
      var pp = Parser.prototype;
      var literal = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;
      pp.strictDirective = function(start) {
        for (; ; ) {
          skipWhiteSpace.lastIndex = start;
          start += skipWhiteSpace.exec(this.input)[0].length;
          var match = literal.exec(this.input.slice(start));
          if (!match) {
            return false;
          }
          if ((match[1] || match[2]) === "use strict") {
            skipWhiteSpace.lastIndex = start + match[0].length;
            var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;
            var next = this.input.charAt(end);
            return next === ";" || next === "}" || lineBreak.test(spaceAfter[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "=");
          }
          start += match[0].length;
          skipWhiteSpace.lastIndex = start;
          start += skipWhiteSpace.exec(this.input)[0].length;
          if (this.input[start] === ";") {
            start++;
          }
        }
      };
      pp.eat = function(type) {
        if (this.type === type) {
          this.next();
          return true;
        } else {
          return false;
        }
      };
      pp.isContextual = function(name) {
        return this.type === types.name && this.value === name && !this.containsEsc;
      };
      pp.eatContextual = function(name) {
        if (!this.isContextual(name)) {
          return false;
        }
        this.next();
        return true;
      };
      pp.expectContextual = function(name) {
        if (!this.eatContextual(name)) {
          this.unexpected();
        }
      };
      pp.canInsertSemicolon = function() {
        return this.type === types.eof || this.type === types.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
      };
      pp.insertSemicolon = function() {
        if (this.canInsertSemicolon()) {
          if (this.options.onInsertedSemicolon) {
            this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);
          }
          return true;
        }
      };
      pp.semicolon = function() {
        if (!this.eat(types.semi) && !this.insertSemicolon()) {
          this.unexpected();
        }
      };
      pp.afterTrailingComma = function(tokType, notNext) {
        if (this.type === tokType) {
          if (this.options.onTrailingComma) {
            this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);
          }
          if (!notNext) {
            this.next();
          }
          return true;
        }
      };
      pp.expect = function(type) {
        this.eat(type) || this.unexpected();
      };
      pp.unexpected = function(pos) {
        this.raise(pos != null ? pos : this.start, "Unexpected token");
      };
      function DestructuringErrors() {
        this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
      }
      pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {
        if (!refDestructuringErrors) {
          return;
        }
        if (refDestructuringErrors.trailingComma > -1) {
          this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element");
        }
        var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
        if (parens > -1) {
          this.raiseRecoverable(parens, "Parenthesized pattern");
        }
      };
      pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
        if (!refDestructuringErrors) {
          return false;
        }
        var shorthandAssign = refDestructuringErrors.shorthandAssign;
        var doubleProto = refDestructuringErrors.doubleProto;
        if (!andThrow) {
          return shorthandAssign >= 0 || doubleProto >= 0;
        }
        if (shorthandAssign >= 0) {
          this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns");
        }
        if (doubleProto >= 0) {
          this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property");
        }
      };
      pp.checkYieldAwaitInDefaultParams = function() {
        if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {
          this.raise(this.yieldPos, "Yield expression cannot be a default value");
        }
        if (this.awaitPos) {
          this.raise(this.awaitPos, "Await expression cannot be a default value");
        }
      };
      pp.isSimpleAssignTarget = function(expr) {
        if (expr.type === "ParenthesizedExpression") {
          return this.isSimpleAssignTarget(expr.expression);
        }
        return expr.type === "Identifier" || expr.type === "MemberExpression";
      };
      var pp$1 = Parser.prototype;
      pp$1.parseTopLevel = function(node) {
        var exports3 = {};
        if (!node.body) {
          node.body = [];
        }
        while (this.type !== types.eof) {
          var stmt = this.parseStatement(null, true, exports3);
          node.body.push(stmt);
        }
        if (this.inModule) {
          for (var i = 0, list2 = Object.keys(this.undefinedExports); i < list2.length; i += 1) {
            var name = list2[i];
            this.raiseRecoverable(this.undefinedExports[name].start, "Export '" + name + "' is not defined");
          }
        }
        this.adaptDirectivePrologue(node.body);
        this.next();
        node.sourceType = this.options.sourceType;
        return this.finishNode(node, "Program");
      };
      var loopLabel = { kind: "loop" }, switchLabel = { kind: "switch" };
      pp$1.isLet = function(context) {
        if (this.options.ecmaVersion < 6 || !this.isContextual("let")) {
          return false;
        }
        skipWhiteSpace.lastIndex = this.pos;
        var skip = skipWhiteSpace.exec(this.input);
        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
        if (nextCh === 91) {
          return true;
        }
        if (context) {
          return false;
        }
        if (nextCh === 123) {
          return true;
        }
        if (isIdentifierStart(nextCh, true)) {
          var pos = next + 1;
          while (isIdentifierChar(this.input.charCodeAt(pos), true)) {
            ++pos;
          }
          var ident = this.input.slice(next, pos);
          if (!keywordRelationalOperator.test(ident)) {
            return true;
          }
        }
        return false;
      };
      pp$1.isAsyncFunction = function() {
        if (this.options.ecmaVersion < 8 || !this.isContextual("async")) {
          return false;
        }
        skipWhiteSpace.lastIndex = this.pos;
        var skip = skipWhiteSpace.exec(this.input);
        var next = this.pos + skip[0].length;
        return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === "function" && (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)));
      };
      pp$1.parseStatement = function(context, topLevel, exports3) {
        var starttype = this.type, node = this.startNode(), kind;
        if (this.isLet(context)) {
          starttype = types._var;
          kind = "let";
        }
        switch (starttype) {
          case types._break:
          case types._continue:
            return this.parseBreakContinueStatement(node, starttype.keyword);
          case types._debugger:
            return this.parseDebuggerStatement(node);
          case types._do:
            return this.parseDoStatement(node);
          case types._for:
            return this.parseForStatement(node);
          case types._function:
            if (context && (this.strict || context !== "if" && context !== "label") && this.options.ecmaVersion >= 6) {
              this.unexpected();
            }
            return this.parseFunctionStatement(node, false, !context);
          case types._class:
            if (context) {
              this.unexpected();
            }
            return this.parseClass(node, true);
          case types._if:
            return this.parseIfStatement(node);
          case types._return:
            return this.parseReturnStatement(node);
          case types._switch:
            return this.parseSwitchStatement(node);
          case types._throw:
            return this.parseThrowStatement(node);
          case types._try:
            return this.parseTryStatement(node);
          case types._const:
          case types._var:
            kind = kind || this.value;
            if (context && kind !== "var") {
              this.unexpected();
            }
            return this.parseVarStatement(node, kind);
          case types._while:
            return this.parseWhileStatement(node);
          case types._with:
            return this.parseWithStatement(node);
          case types.braceL:
            return this.parseBlock(true, node);
          case types.semi:
            return this.parseEmptyStatement(node);
          case types._export:
          case types._import:
            if (this.options.ecmaVersion > 10 && starttype === types._import) {
              skipWhiteSpace.lastIndex = this.pos;
              var skip = skipWhiteSpace.exec(this.input);
              var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
              if (nextCh === 40 || nextCh === 46) {
                return this.parseExpressionStatement(node, this.parseExpression());
              }
            }
            if (!this.options.allowImportExportEverywhere) {
              if (!topLevel) {
                this.raise(this.start, "'import' and 'export' may only appear at the top level");
              }
              if (!this.inModule) {
                this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'");
              }
            }
            return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports3);
          default:
            if (this.isAsyncFunction()) {
              if (context) {
                this.unexpected();
              }
              this.next();
              return this.parseFunctionStatement(node, true, !context);
            }
            var maybeName = this.value, expr = this.parseExpression();
            if (starttype === types.name && expr.type === "Identifier" && this.eat(types.colon)) {
              return this.parseLabeledStatement(node, maybeName, expr, context);
            } else {
              return this.parseExpressionStatement(node, expr);
            }
        }
      };
      pp$1.parseBreakContinueStatement = function(node, keyword) {
        var isBreak = keyword === "break";
        this.next();
        if (this.eat(types.semi) || this.insertSemicolon()) {
          node.label = null;
        } else if (this.type !== types.name) {
          this.unexpected();
        } else {
          node.label = this.parseIdent();
          this.semicolon();
        }
        var i = 0;
        for (; i < this.labels.length; ++i) {
          var lab = this.labels[i];
          if (node.label == null || lab.name === node.label.name) {
            if (lab.kind != null && (isBreak || lab.kind === "loop")) {
              break;
            }
            if (node.label && isBreak) {
              break;
            }
          }
        }
        if (i === this.labels.length) {
          this.raise(node.start, "Unsyntactic " + keyword);
        }
        return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
      };
      pp$1.parseDebuggerStatement = function(node) {
        this.next();
        this.semicolon();
        return this.finishNode(node, "DebuggerStatement");
      };
      pp$1.parseDoStatement = function(node) {
        this.next();
        this.labels.push(loopLabel);
        node.body = this.parseStatement("do");
        this.labels.pop();
        this.expect(types._while);
        node.test = this.parseParenExpression();
        if (this.options.ecmaVersion >= 6) {
          this.eat(types.semi);
        } else {
          this.semicolon();
        }
        return this.finishNode(node, "DoWhileStatement");
      };
      pp$1.parseForStatement = function(node) {
        this.next();
        var awaitAt = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual("await") ? this.lastTokStart : -1;
        this.labels.push(loopLabel);
        this.enterScope(0);
        this.expect(types.parenL);
        if (this.type === types.semi) {
          if (awaitAt > -1) {
            this.unexpected(awaitAt);
          }
          return this.parseFor(node, null);
        }
        var isLet = this.isLet();
        if (this.type === types._var || this.type === types._const || isLet) {
          var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
          this.next();
          this.parseVar(init$1, true, kind);
          this.finishNode(init$1, "VariableDeclaration");
          if ((this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && init$1.declarations.length === 1) {
            if (this.options.ecmaVersion >= 9) {
              if (this.type === types._in) {
                if (awaitAt > -1) {
                  this.unexpected(awaitAt);
                }
              } else {
                node.await = awaitAt > -1;
              }
            }
            return this.parseForIn(node, init$1);
          }
          if (awaitAt > -1) {
            this.unexpected(awaitAt);
          }
          return this.parseFor(node, init$1);
        }
        var refDestructuringErrors = new DestructuringErrors();
        var init = this.parseExpression(true, refDestructuringErrors);
        if (this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) {
          if (this.options.ecmaVersion >= 9) {
            if (this.type === types._in) {
              if (awaitAt > -1) {
                this.unexpected(awaitAt);
              }
            } else {
              node.await = awaitAt > -1;
            }
          }
          this.toAssignable(init, false, refDestructuringErrors);
          this.checkLVal(init);
          return this.parseForIn(node, init);
        } else {
          this.checkExpressionErrors(refDestructuringErrors, true);
        }
        if (awaitAt > -1) {
          this.unexpected(awaitAt);
        }
        return this.parseFor(node, init);
      };
      pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {
        this.next();
        return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);
      };
      pp$1.parseIfStatement = function(node) {
        this.next();
        node.test = this.parseParenExpression();
        node.consequent = this.parseStatement("if");
        node.alternate = this.eat(types._else) ? this.parseStatement("if") : null;
        return this.finishNode(node, "IfStatement");
      };
      pp$1.parseReturnStatement = function(node) {
        if (!this.inFunction && !this.options.allowReturnOutsideFunction) {
          this.raise(this.start, "'return' outside of function");
        }
        this.next();
        if (this.eat(types.semi) || this.insertSemicolon()) {
          node.argument = null;
        } else {
          node.argument = this.parseExpression();
          this.semicolon();
        }
        return this.finishNode(node, "ReturnStatement");
      };
      pp$1.parseSwitchStatement = function(node) {
        this.next();
        node.discriminant = this.parseParenExpression();
        node.cases = [];
        this.expect(types.braceL);
        this.labels.push(switchLabel);
        this.enterScope(0);
        var cur;
        for (var sawDefault = false; this.type !== types.braceR; ) {
          if (this.type === types._case || this.type === types._default) {
            var isCase = this.type === types._case;
            if (cur) {
              this.finishNode(cur, "SwitchCase");
            }
            node.cases.push(cur = this.startNode());
            cur.consequent = [];
            this.next();
            if (isCase) {
              cur.test = this.parseExpression();
            } else {
              if (sawDefault) {
                this.raiseRecoverable(this.lastTokStart, "Multiple default clauses");
              }
              sawDefault = true;
              cur.test = null;
            }
            this.expect(types.colon);
          } else {
            if (!cur) {
              this.unexpected();
            }
            cur.consequent.push(this.parseStatement(null));
          }
        }
        this.exitScope();
        if (cur) {
          this.finishNode(cur, "SwitchCase");
        }
        this.next();
        this.labels.pop();
        return this.finishNode(node, "SwitchStatement");
      };
      pp$1.parseThrowStatement = function(node) {
        this.next();
        if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {
          this.raise(this.lastTokEnd, "Illegal newline after throw");
        }
        node.argument = this.parseExpression();
        this.semicolon();
        return this.finishNode(node, "ThrowStatement");
      };
      var empty = [];
      pp$1.parseTryStatement = function(node) {
        this.next();
        node.block = this.parseBlock();
        node.handler = null;
        if (this.type === types._catch) {
          var clause = this.startNode();
          this.next();
          if (this.eat(types.parenL)) {
            clause.param = this.parseBindingAtom();
            var simple = clause.param.type === "Identifier";
            this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);
            this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);
            this.expect(types.parenR);
          } else {
            if (this.options.ecmaVersion < 10) {
              this.unexpected();
            }
            clause.param = null;
            this.enterScope(0);
          }
          clause.body = this.parseBlock(false);
          this.exitScope();
          node.handler = this.finishNode(clause, "CatchClause");
        }
        node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;
        if (!node.handler && !node.finalizer) {
          this.raise(node.start, "Missing catch or finally clause");
        }
        return this.finishNode(node, "TryStatement");
      };
      pp$1.parseVarStatement = function(node, kind) {
        this.next();
        this.parseVar(node, false, kind);
        this.semicolon();
        return this.finishNode(node, "VariableDeclaration");
      };
      pp$1.parseWhileStatement = function(node) {
        this.next();
        node.test = this.parseParenExpression();
        this.labels.push(loopLabel);
        node.body = this.parseStatement("while");
        this.labels.pop();
        return this.finishNode(node, "WhileStatement");
      };
      pp$1.parseWithStatement = function(node) {
        if (this.strict) {
          this.raise(this.start, "'with' in strict mode");
        }
        this.next();
        node.object = this.parseParenExpression();
        node.body = this.parseStatement("with");
        return this.finishNode(node, "WithStatement");
      };
      pp$1.parseEmptyStatement = function(node) {
        this.next();
        return this.finishNode(node, "EmptyStatement");
      };
      pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {
        for (var i$1 = 0, list2 = this.labels; i$1 < list2.length; i$1 += 1) {
          var label = list2[i$1];
          if (label.name === maybeName) {
            this.raise(expr.start, "Label '" + maybeName + "' is already declared");
          }
        }
        var kind = this.type.isLoop ? "loop" : this.type === types._switch ? "switch" : null;
        for (var i = this.labels.length - 1; i >= 0; i--) {
          var label$1 = this.labels[i];
          if (label$1.statementStart === node.start) {
            label$1.statementStart = this.start;
            label$1.kind = kind;
          } else {
            break;
          }
        }
        this.labels.push({ name: maybeName, kind, statementStart: this.start });
        node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
        this.labels.pop();
        node.label = expr;
        return this.finishNode(node, "LabeledStatement");
      };
      pp$1.parseExpressionStatement = function(node, expr) {
        node.expression = expr;
        this.semicolon();
        return this.finishNode(node, "ExpressionStatement");
      };
      pp$1.parseBlock = function(createNewLexicalScope, node, exitStrict) {
        if (createNewLexicalScope === void 0)
          createNewLexicalScope = true;
        if (node === void 0)
          node = this.startNode();
        node.body = [];
        this.expect(types.braceL);
        if (createNewLexicalScope) {
          this.enterScope(0);
        }
        while (this.type !== types.braceR) {
          var stmt = this.parseStatement(null);
          node.body.push(stmt);
        }
        if (exitStrict) {
          this.strict = false;
        }
        this.next();
        if (createNewLexicalScope) {
          this.exitScope();
        }
        return this.finishNode(node, "BlockStatement");
      };
      pp$1.parseFor = function(node, init) {
        node.init = init;
        this.expect(types.semi);
        node.test = this.type === types.semi ? null : this.parseExpression();
        this.expect(types.semi);
        node.update = this.type === types.parenR ? null : this.parseExpression();
        this.expect(types.parenR);
        node.body = this.parseStatement("for");
        this.exitScope();
        this.labels.pop();
        return this.finishNode(node, "ForStatement");
      };
      pp$1.parseForIn = function(node, init) {
        var isForIn = this.type === types._in;
        this.next();
        if (init.type === "VariableDeclaration" && init.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init.kind !== "var" || init.declarations[0].id.type !== "Identifier")) {
          this.raise(
            init.start,
            (isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"
          );
        } else if (init.type === "AssignmentPattern") {
          this.raise(init.start, "Invalid left-hand side in for-loop");
        }
        node.left = init;
        node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
        this.expect(types.parenR);
        node.body = this.parseStatement("for");
        this.exitScope();
        this.labels.pop();
        return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement");
      };
      pp$1.parseVar = function(node, isFor, kind) {
        node.declarations = [];
        node.kind = kind;
        for (; ; ) {
          var decl2 = this.startNode();
          this.parseVarId(decl2, kind);
          if (this.eat(types.eq)) {
            decl2.init = this.parseMaybeAssign(isFor);
          } else if (kind === "const" && !(this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
            this.unexpected();
          } else if (decl2.id.type !== "Identifier" && !(isFor && (this.type === types._in || this.isContextual("of")))) {
            this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
          } else {
            decl2.init = null;
          }
          node.declarations.push(this.finishNode(decl2, "VariableDeclarator"));
          if (!this.eat(types.comma)) {
            break;
          }
        }
        return node;
      };
      pp$1.parseVarId = function(decl2, kind) {
        decl2.id = this.parseBindingAtom();
        this.checkLVal(decl2.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);
      };
      var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;
      pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {
        this.initFunction(node);
        if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
          if (this.type === types.star && statement & FUNC_HANGING_STATEMENT) {
            this.unexpected();
          }
          node.generator = this.eat(types.star);
        }
        if (this.options.ecmaVersion >= 8) {
          node.async = !!isAsync;
        }
        if (statement & FUNC_STATEMENT) {
          node.id = statement & FUNC_NULLABLE_ID && this.type !== types.name ? null : this.parseIdent();
          if (node.id && !(statement & FUNC_HANGING_STATEMENT)) {
            this.checkLVal(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);
          }
        }
        var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
        this.yieldPos = 0;
        this.awaitPos = 0;
        this.awaitIdentPos = 0;
        this.enterScope(functionFlags(node.async, node.generator));
        if (!(statement & FUNC_STATEMENT)) {
          node.id = this.type === types.name ? this.parseIdent() : null;
        }
        this.parseFunctionParams(node);
        this.parseFunctionBody(node, allowExpressionBody, false);
        this.yieldPos = oldYieldPos;
        this.awaitPos = oldAwaitPos;
        this.awaitIdentPos = oldAwaitIdentPos;
        return this.finishNode(node, statement & FUNC_STATEMENT ? "FunctionDeclaration" : "FunctionExpression");
      };
      pp$1.parseFunctionParams = function(node) {
        this.expect(types.parenL);
        node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);
        this.checkYieldAwaitInDefaultParams();
      };
      pp$1.parseClass = function(node, isStatement) {
        this.next();
        var oldStrict = this.strict;
        this.strict = true;
        this.parseClassId(node, isStatement);
        this.parseClassSuper(node);
        var classBody = this.startNode();
        var hadConstructor = false;
        classBody.body = [];
        this.expect(types.braceL);
        while (this.type !== types.braceR) {
          var element = this.parseClassElement(node.superClass !== null);
          if (element) {
            classBody.body.push(element);
            if (element.type === "MethodDefinition" && element.kind === "constructor") {
              if (hadConstructor) {
                this.raise(element.start, "Duplicate constructor in the same class");
              }
              hadConstructor = true;
            }
          }
        }
        this.strict = oldStrict;
        this.next();
        node.body = this.finishNode(classBody, "ClassBody");
        return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
      };
      pp$1.parseClassElement = function(constructorAllowsSuper) {
        var this$1 = this;
        if (this.eat(types.semi)) {
          return null;
        }
        var method = this.startNode();
        var tryContextual = function(k, noLineBreak) {
          if (noLineBreak === void 0)
            noLineBreak = false;
          var start = this$1.start, startLoc = this$1.startLoc;
          if (!this$1.eatContextual(k)) {
            return false;
          }
          if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {
            return true;
          }
          if (method.key) {
            this$1.unexpected();
          }
          method.computed = false;
          method.key = this$1.startNodeAt(start, startLoc);
          method.key.name = k;
          this$1.finishNode(method.key, "Identifier");
          return false;
        };
        method.kind = "method";
        method.static = tryContextual("static");
        var isGenerator = this.eat(types.star);
        var isAsync = false;
        if (!isGenerator) {
          if (this.options.ecmaVersion >= 8 && tryContextual("async", true)) {
            isAsync = true;
            isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);
          } else if (tryContextual("get")) {
            method.kind = "get";
          } else if (tryContextual("set")) {
            method.kind = "set";
          }
        }
        if (!method.key) {
          this.parsePropertyName(method);
        }
        var key = method.key;
        var allowsDirectSuper = false;
        if (!method.computed && !method.static && (key.type === "Identifier" && key.name === "constructor" || key.type === "Literal" && key.value === "constructor")) {
          if (method.kind !== "method") {
            this.raise(key.start, "Constructor can't have get/set modifier");
          }
          if (isGenerator) {
            this.raise(key.start, "Constructor can't be a generator");
          }
          if (isAsync) {
            this.raise(key.start, "Constructor can't be an async method");
          }
          method.kind = "constructor";
          allowsDirectSuper = constructorAllowsSuper;
        } else if (method.static && key.type === "Identifier" && key.name === "prototype") {
          this.raise(key.start, "Classes may not have a static property named prototype");
        }
        this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);
        if (method.kind === "get" && method.value.params.length !== 0) {
          this.raiseRecoverable(method.value.start, "getter should have no params");
        }
        if (method.kind === "set" && method.value.params.length !== 1) {
          this.raiseRecoverable(method.value.start, "setter should have exactly one param");
        }
        if (method.kind === "set" && method.value.params[0].type === "RestElement") {
          this.raiseRecoverable(method.value.params[0].start, "Setter cannot use rest params");
        }
        return method;
      };
      pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {
        method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);
        return this.finishNode(method, "MethodDefinition");
      };
      pp$1.parseClassId = function(node, isStatement) {
        if (this.type === types.name) {
          node.id = this.parseIdent();
          if (isStatement) {
            this.checkLVal(node.id, BIND_LEXICAL, false);
          }
        } else {
          if (isStatement === true) {
            this.unexpected();
          }
          node.id = null;
        }
      };
      pp$1.parseClassSuper = function(node) {
        node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;
      };
      pp$1.parseExport = function(node, exports3) {
        this.next();
        if (this.eat(types.star)) {
          if (this.options.ecmaVersion >= 11) {
            if (this.eatContextual("as")) {
              node.exported = this.parseIdent(true);
              this.checkExport(exports3, node.exported.name, this.lastTokStart);
            } else {
              node.exported = null;
            }
          }
          this.expectContextual("from");
          if (this.type !== types.string) {
            this.unexpected();
          }
          node.source = this.parseExprAtom();
          this.semicolon();
          return this.finishNode(node, "ExportAllDeclaration");
        }
        if (this.eat(types._default)) {
          this.checkExport(exports3, "default", this.lastTokStart);
          var isAsync;
          if (this.type === types._function || (isAsync = this.isAsyncFunction())) {
            var fNode = this.startNode();
            this.next();
            if (isAsync) {
              this.next();
            }
            node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);
          } else if (this.type === types._class) {
            var cNode = this.startNode();
            node.declaration = this.parseClass(cNode, "nullableID");
          } else {
            node.declaration = this.parseMaybeAssign();
            this.semicolon();
          }
          return this.finishNode(node, "ExportDefaultDeclaration");
        }
        if (this.shouldParseExportStatement()) {
          node.declaration = this.parseStatement(null);
          if (node.declaration.type === "VariableDeclaration") {
            this.checkVariableExport(exports3, node.declaration.declarations);
          } else {
            this.checkExport(exports3, node.declaration.id.name, node.declaration.id.start);
          }
          node.specifiers = [];
          node.source = null;
        } else {
          node.declaration = null;
          node.specifiers = this.parseExportSpecifiers(exports3);
          if (this.eatContextual("from")) {
            if (this.type !== types.string) {
              this.unexpected();
            }
            node.source = this.parseExprAtom();
          } else {
            for (var i = 0, list2 = node.specifiers; i < list2.length; i += 1) {
              var spec = list2[i];
              this.checkUnreserved(spec.local);
              this.checkLocalExport(spec.local);
            }
            node.source = null;
          }
          this.semicolon();
        }
        return this.finishNode(node, "ExportNamedDeclaration");
      };
      pp$1.checkExport = function(exports3, name, pos) {
        if (!exports3) {
          return;
        }
        if (has(exports3, name)) {
          this.raiseRecoverable(pos, "Duplicate export '" + name + "'");
        }
        exports3[name] = true;
      };
      pp$1.checkPatternExport = function(exports3, pat) {
        var type = pat.type;
        if (type === "Identifier") {
          this.checkExport(exports3, pat.name, pat.start);
        } else if (type === "ObjectPattern") {
          for (var i = 0, list2 = pat.properties; i < list2.length; i += 1) {
            var prop = list2[i];
            this.checkPatternExport(exports3, prop);
          }
        } else if (type === "ArrayPattern") {
          for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
            var elt = list$1[i$1];
            if (elt) {
              this.checkPatternExport(exports3, elt);
            }
          }
        } else if (type === "Property") {
          this.checkPatternExport(exports3, pat.value);
        } else if (type === "AssignmentPattern") {
          this.checkPatternExport(exports3, pat.left);
        } else if (type === "RestElement") {
          this.checkPatternExport(exports3, pat.argument);
        } else if (type === "ParenthesizedExpression") {
          this.checkPatternExport(exports3, pat.expression);
        }
      };
      pp$1.checkVariableExport = function(exports3, decls) {
        if (!exports3) {
          return;
        }
        for (var i = 0, list2 = decls; i < list2.length; i += 1) {
          var decl2 = list2[i];
          this.checkPatternExport(exports3, decl2.id);
        }
      };
      pp$1.shouldParseExportStatement = function() {
        return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();
      };
      pp$1.parseExportSpecifiers = function(exports3) {
        var nodes = [], first = true;
        this.expect(types.braceL);
        while (!this.eat(types.braceR)) {
          if (!first) {
            this.expect(types.comma);
            if (this.afterTrailingComma(types.braceR)) {
              break;
            }
          } else {
            first = false;
          }
          var node = this.startNode();
          node.local = this.parseIdent(true);
          node.exported = this.eatContextual("as") ? this.parseIdent(true) : node.local;
          this.checkExport(exports3, node.exported.name, node.exported.start);
          nodes.push(this.finishNode(node, "ExportSpecifier"));
        }
        return nodes;
      };
      pp$1.parseImport = function(node) {
        this.next();
        if (this.type === types.string) {
          node.specifiers = empty;
          node.source = this.parseExprAtom();
        } else {
          node.specifiers = this.parseImportSpecifiers();
          this.expectContextual("from");
          node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();
        }
        this.semicolon();
        return this.finishNode(node, "ImportDeclaration");
      };
      pp$1.parseImportSpecifiers = function() {
        var nodes = [], first = true;
        if (this.type === types.name) {
          var node = this.startNode();
          node.local = this.parseIdent();
          this.checkLVal(node.local, BIND_LEXICAL);
          nodes.push(this.finishNode(node, "ImportDefaultSpecifier"));
          if (!this.eat(types.comma)) {
            return nodes;
          }
        }
        if (this.type === types.star) {
          var node$1 = this.startNode();
          this.next();
          this.expectContextual("as");
          node$1.local = this.parseIdent();
          this.checkLVal(node$1.local, BIND_LEXICAL);
          nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));
          return nodes;
        }
        this.expect(types.braceL);
        while (!this.eat(types.braceR)) {
          if (!first) {
            this.expect(types.comma);
            if (this.afterTrailingComma(types.braceR)) {
              break;
            }
          } else {
            first = false;
          }
          var node$2 = this.startNode();
          node$2.imported = this.parseIdent(true);
          if (this.eatContextual("as")) {
            node$2.local = this.parseIdent();
          } else {
            this.checkUnreserved(node$2.imported);
            node$2.local = node$2.imported;
          }
          this.checkLVal(node$2.local, BIND_LEXICAL);
          nodes.push(this.finishNode(node$2, "ImportSpecifier"));
        }
        return nodes;
      };
      pp$1.adaptDirectivePrologue = function(statements) {
        for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {
          statements[i].directive = statements[i].expression.raw.slice(1, -1);
        }
      };
      pp$1.isDirectiveCandidate = function(statement) {
        return statement.type === "ExpressionStatement" && statement.expression.type === "Literal" && typeof statement.expression.value === "string" && (this.input[statement.start] === '"' || this.input[statement.start] === "'");
      };
      var pp$2 = Parser.prototype;
      pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {
        if (this.options.ecmaVersion >= 6 && node) {
          switch (node.type) {
            case "Identifier":
              if (this.inAsync && node.name === "await") {
                this.raise(node.start, "Cannot use 'await' as identifier inside an async function");
              }
              break;
            case "ObjectPattern":
            case "ArrayPattern":
            case "RestElement":
              break;
            case "ObjectExpression":
              node.type = "ObjectPattern";
              if (refDestructuringErrors) {
                this.checkPatternErrors(refDestructuringErrors, true);
              }
              for (var i = 0, list2 = node.properties; i < list2.length; i += 1) {
                var prop = list2[i];
                this.toAssignable(prop, isBinding);
                if (prop.type === "RestElement" && (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")) {
                  this.raise(prop.argument.start, "Unexpected token");
                }
              }
              break;
            case "Property":
              if (node.kind !== "init") {
                this.raise(node.key.start, "Object pattern can't contain getter or setter");
              }
              this.toAssignable(node.value, isBinding);
              break;
            case "ArrayExpression":
              node.type = "ArrayPattern";
              if (refDestructuringErrors) {
                this.checkPatternErrors(refDestructuringErrors, true);
              }
              this.toAssignableList(node.elements, isBinding);
              break;
            case "SpreadElement":
              node.type = "RestElement";
              this.toAssignable(node.argument, isBinding);
              if (node.argument.type === "AssignmentPattern") {
                this.raise(node.argument.start, "Rest elements cannot have a default value");
              }
              break;
            case "AssignmentExpression":
              if (node.operator !== "=") {
                this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
              }
              node.type = "AssignmentPattern";
              delete node.operator;
              this.toAssignable(node.left, isBinding);
            case "AssignmentPattern":
              break;
            case "ParenthesizedExpression":
              this.toAssignable(node.expression, isBinding, refDestructuringErrors);
              break;
            case "ChainExpression":
              this.raiseRecoverable(node.start, "Optional chaining cannot appear in left-hand side");
              break;
            case "MemberExpression":
              if (!isBinding) {
                break;
              }
            default:
              this.raise(node.start, "Assigning to rvalue");
          }
        } else if (refDestructuringErrors) {
          this.checkPatternErrors(refDestructuringErrors, true);
        }
        return node;
      };
      pp$2.toAssignableList = function(exprList, isBinding) {
        var end = exprList.length;
        for (var i = 0; i < end; i++) {
          var elt = exprList[i];
          if (elt) {
            this.toAssignable(elt, isBinding);
          }
        }
        if (end) {
          var last = exprList[end - 1];
          if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier") {
            this.unexpected(last.argument.start);
          }
        }
        return exprList;
      };
      pp$2.parseSpread = function(refDestructuringErrors) {
        var node = this.startNode();
        this.next();
        node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
        return this.finishNode(node, "SpreadElement");
      };
      pp$2.parseRestBinding = function() {
        var node = this.startNode();
        this.next();
        if (this.options.ecmaVersion === 6 && this.type !== types.name) {
          this.unexpected();
        }
        node.argument = this.parseBindingAtom();
        return this.finishNode(node, "RestElement");
      };
      pp$2.parseBindingAtom = function() {
        if (this.options.ecmaVersion >= 6) {
          switch (this.type) {
            case types.bracketL:
              var node = this.startNode();
              this.next();
              node.elements = this.parseBindingList(types.bracketR, true, true);
              return this.finishNode(node, "ArrayPattern");
            case types.braceL:
              return this.parseObj(true);
          }
        }
        return this.parseIdent();
      };
      pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {
        var elts = [], first = true;
        while (!this.eat(close)) {
          if (first) {
            first = false;
          } else {
            this.expect(types.comma);
          }
          if (allowEmpty && this.type === types.comma) {
            elts.push(null);
          } else if (allowTrailingComma && this.afterTrailingComma(close)) {
            break;
          } else if (this.type === types.ellipsis) {
            var rest = this.parseRestBinding();
            this.parseBindingListItem(rest);
            elts.push(rest);
            if (this.type === types.comma) {
              this.raise(this.start, "Comma is not permitted after the rest element");
            }
            this.expect(close);
            break;
          } else {
            var elem = this.parseMaybeDefault(this.start, this.startLoc);
            this.parseBindingListItem(elem);
            elts.push(elem);
          }
        }
        return elts;
      };
      pp$2.parseBindingListItem = function(param) {
        return param;
      };
      pp$2.parseMaybeDefault = function(startPos, startLoc, left) {
        left = left || this.parseBindingAtom();
        if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) {
          return left;
        }
        var node = this.startNodeAt(startPos, startLoc);
        node.left = left;
        node.right = this.parseMaybeAssign();
        return this.finishNode(node, "AssignmentPattern");
      };
      pp$2.checkLVal = function(expr, bindingType, checkClashes) {
        if (bindingType === void 0)
          bindingType = BIND_NONE;
        switch (expr.type) {
          case "Identifier":
            if (bindingType === BIND_LEXICAL && expr.name === "let") {
              this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name");
            }
            if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {
              this.raiseRecoverable(expr.start, (bindingType ? "Binding " : "Assigning to ") + expr.name + " in strict mode");
            }
            if (checkClashes) {
              if (has(checkClashes, expr.name)) {
                this.raiseRecoverable(expr.start, "Argument name clash");
              }
              checkClashes[expr.name] = true;
            }
            if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) {
              this.declareName(expr.name, bindingType, expr.start);
            }
            break;
          case "ChainExpression":
            this.raiseRecoverable(expr.start, "Optional chaining cannot appear in left-hand side");
            break;
          case "MemberExpression":
            if (bindingType) {
              this.raiseRecoverable(expr.start, "Binding member expression");
            }
            break;
          case "ObjectPattern":
            for (var i = 0, list2 = expr.properties; i < list2.length; i += 1) {
              var prop = list2[i];
              this.checkLVal(prop, bindingType, checkClashes);
            }
            break;
          case "Property":
            this.checkLVal(expr.value, bindingType, checkClashes);
            break;
          case "ArrayPattern":
            for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
              var elem = list$1[i$1];
              if (elem) {
                this.checkLVal(elem, bindingType, checkClashes);
              }
            }
            break;
          case "AssignmentPattern":
            this.checkLVal(expr.left, bindingType, checkClashes);
            break;
          case "RestElement":
            this.checkLVal(expr.argument, bindingType, checkClashes);
            break;
          case "ParenthesizedExpression":
            this.checkLVal(expr.expression, bindingType, checkClashes);
            break;
          default:
            this.raise(expr.start, (bindingType ? "Binding" : "Assigning to") + " rvalue");
        }
      };
      var pp$3 = Parser.prototype;
      pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {
        if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement") {
          return;
        }
        if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {
          return;
        }
        var key = prop.key;
        var name;
        switch (key.type) {
          case "Identifier":
            name = key.name;
            break;
          case "Literal":
            name = String(key.value);
            break;
          default:
            return;
        }
        var kind = prop.kind;
        if (this.options.ecmaVersion >= 6) {
          if (name === "__proto__" && kind === "init") {
            if (propHash.proto) {
              if (refDestructuringErrors) {
                if (refDestructuringErrors.doubleProto < 0) {
                  refDestructuringErrors.doubleProto = key.start;
                }
              } else {
                this.raiseRecoverable(key.start, "Redefinition of __proto__ property");
              }
            }
            propHash.proto = true;
          }
          return;
        }
        name = "$" + name;
        var other = propHash[name];
        if (other) {
          var redefinition;
          if (kind === "init") {
            redefinition = this.strict && other.init || other.get || other.set;
          } else {
            redefinition = other.init || other[kind];
          }
          if (redefinition) {
            this.raiseRecoverable(key.start, "Redefinition of property");
          }
        } else {
          other = propHash[name] = {
            init: false,
            get: false,
            set: false
          };
        }
        other[kind] = true;
      };
      pp$3.parseExpression = function(noIn, refDestructuringErrors) {
        var startPos = this.start, startLoc = this.startLoc;
        var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);
        if (this.type === types.comma) {
          var node = this.startNodeAt(startPos, startLoc);
          node.expressions = [expr];
          while (this.eat(types.comma)) {
            node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors));
          }
          return this.finishNode(node, "SequenceExpression");
        }
        return expr;
      };
      pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {
        if (this.isContextual("yield")) {
          if (this.inGenerator) {
            return this.parseYield(noIn);
          } else {
            this.exprAllowed = false;
          }
        }
        var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;
        if (refDestructuringErrors) {
          oldParenAssign = refDestructuringErrors.parenthesizedAssign;
          oldTrailingComma = refDestructuringErrors.trailingComma;
          refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
        } else {
          refDestructuringErrors = new DestructuringErrors();
          ownDestructuringErrors = true;
        }
        var startPos = this.start, startLoc = this.startLoc;
        if (this.type === types.parenL || this.type === types.name) {
          this.potentialArrowAt = this.start;
        }
        var left = this.parseMaybeConditional(noIn, refDestructuringErrors);
        if (afterLeftParse) {
          left = afterLeftParse.call(this, left, startPos, startLoc);
        }
        if (this.type.isAssign) {
          var node = this.startNodeAt(startPos, startLoc);
          node.operator = this.value;
          node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;
          if (!ownDestructuringErrors) {
            refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
          }
          if (refDestructuringErrors.shorthandAssign >= node.left.start) {
            refDestructuringErrors.shorthandAssign = -1;
          }
          this.checkLVal(left);
          this.next();
          node.right = this.parseMaybeAssign(noIn);
          return this.finishNode(node, "AssignmentExpression");
        } else {
          if (ownDestructuringErrors) {
            this.checkExpressionErrors(refDestructuringErrors, true);
          }
        }
        if (oldParenAssign > -1) {
          refDestructuringErrors.parenthesizedAssign = oldParenAssign;
        }
        if (oldTrailingComma > -1) {
          refDestructuringErrors.trailingComma = oldTrailingComma;
        }
        return left;
      };
      pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {
        var startPos = this.start, startLoc = this.startLoc;
        var expr = this.parseExprOps(noIn, refDestructuringErrors);
        if (this.checkExpressionErrors(refDestructuringErrors)) {
          return expr;
        }
        if (this.eat(types.question)) {
          var node = this.startNodeAt(startPos, startLoc);
          node.test = expr;
          node.consequent = this.parseMaybeAssign();
          this.expect(types.colon);
          node.alternate = this.parseMaybeAssign(noIn);
          return this.finishNode(node, "ConditionalExpression");
        }
        return expr;
      };
      pp$3.parseExprOps = function(noIn, refDestructuringErrors) {
        var startPos = this.start, startLoc = this.startLoc;
        var expr = this.parseMaybeUnary(refDestructuringErrors, false);
        if (this.checkExpressionErrors(refDestructuringErrors)) {
          return expr;
        }
        return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn);
      };
      pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {
        var prec = this.type.binop;
        if (prec != null && (!noIn || this.type !== types._in)) {
          if (prec > minPrec) {
            var logical = this.type === types.logicalOR || this.type === types.logicalAND;
            var coalesce = this.type === types.coalesce;
            if (coalesce) {
              prec = types.logicalAND.binop;
            }
            var op = this.value;
            this.next();
            var startPos = this.start, startLoc = this.startLoc;
            var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);
            var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);
            if (logical && this.type === types.coalesce || coalesce && (this.type === types.logicalOR || this.type === types.logicalAND)) {
              this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");
            }
            return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);
          }
        }
        return left;
      };
      pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {
        var node = this.startNodeAt(startPos, startLoc);
        node.left = left;
        node.operator = op;
        node.right = right;
        return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression");
      };
      pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {
        var startPos = this.start, startLoc = this.startLoc, expr;
        if (this.isContextual("await") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) {
          expr = this.parseAwait();
          sawUnary = true;
        } else if (this.type.prefix) {
          var node = this.startNode(), update = this.type === types.incDec;
          node.operator = this.value;
          node.prefix = true;
          this.next();
          node.argument = this.parseMaybeUnary(null, true);
          this.checkExpressionErrors(refDestructuringErrors, true);
          if (update) {
            this.checkLVal(node.argument);
          } else if (this.strict && node.operator === "delete" && node.argument.type === "Identifier") {
            this.raiseRecoverable(node.start, "Deleting local variable in strict mode");
          } else {
            sawUnary = true;
          }
          expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
        } else {
          expr = this.parseExprSubscripts(refDestructuringErrors);
          if (this.checkExpressionErrors(refDestructuringErrors)) {
            return expr;
          }
          while (this.type.postfix && !this.canInsertSemicolon()) {
            var node$1 = this.startNodeAt(startPos, startLoc);
            node$1.operator = this.value;
            node$1.prefix = false;
            node$1.argument = expr;
            this.checkLVal(expr);
            this.next();
            expr = this.finishNode(node$1, "UpdateExpression");
          }
        }
        if (!sawUnary && this.eat(types.starstar)) {
          return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), "**", false);
        } else {
          return expr;
        }
      };
      pp$3.parseExprSubscripts = function(refDestructuringErrors) {
        var startPos = this.start, startLoc = this.startLoc;
        var expr = this.parseExprAtom(refDestructuringErrors);
        if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")") {
          return expr;
        }
        var result = this.parseSubscripts(expr, startPos, startLoc);
        if (refDestructuringErrors && result.type === "MemberExpression") {
          if (refDestructuringErrors.parenthesizedAssign >= result.start) {
            refDestructuringErrors.parenthesizedAssign = -1;
          }
          if (refDestructuringErrors.parenthesizedBind >= result.start) {
            refDestructuringErrors.parenthesizedBind = -1;
          }
        }
        return result;
      };
      pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {
        var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && this.potentialArrowAt === base.start;
        var optionalChained = false;
        while (true) {
          var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained);
          if (element.optional) {
            optionalChained = true;
          }
          if (element === base || element.type === "ArrowFunctionExpression") {
            if (optionalChained) {
              var chainNode = this.startNodeAt(startPos, startLoc);
              chainNode.expression = element;
              element = this.finishNode(chainNode, "ChainExpression");
            }
            return element;
          }
          base = element;
        }
      };
      pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained) {
        var optionalSupported = this.options.ecmaVersion >= 11;
        var optional = optionalSupported && this.eat(types.questionDot);
        if (noCalls && optional) {
          this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
        }
        var computed = this.eat(types.bracketL);
        if (computed || optional && this.type !== types.parenL && this.type !== types.backQuote || this.eat(types.dot)) {
          var node = this.startNodeAt(startPos, startLoc);
          node.object = base;
          node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== "never");
          node.computed = !!computed;
          if (computed) {
            this.expect(types.bracketR);
          }
          if (optionalSupported) {
            node.optional = optional;
          }
          base = this.finishNode(node, "MemberExpression");
        } else if (!noCalls && this.eat(types.parenL)) {
          var refDestructuringErrors = new DestructuringErrors(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
          this.yieldPos = 0;
          this.awaitPos = 0;
          this.awaitIdentPos = 0;
          var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
          if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types.arrow)) {
            this.checkPatternErrors(refDestructuringErrors, false);
            this.checkYieldAwaitInDefaultParams();
            if (this.awaitIdentPos > 0) {
              this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function");
            }
            this.yieldPos = oldYieldPos;
            this.awaitPos = oldAwaitPos;
            this.awaitIdentPos = oldAwaitIdentPos;
            return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true);
          }
          this.checkExpressionErrors(refDestructuringErrors, true);
          this.yieldPos = oldYieldPos || this.yieldPos;
          this.awaitPos = oldAwaitPos || this.awaitPos;
          this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
          var node$1 = this.startNodeAt(startPos, startLoc);
          node$1.callee = base;
          node$1.arguments = exprList;
          if (optionalSupported) {
            node$1.optional = optional;
          }
          base = this.finishNode(node$1, "CallExpression");
        } else if (this.type === types.backQuote) {
          if (optional || optionalChained) {
            this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
          }
          var node$2 = this.startNodeAt(startPos, startLoc);
          node$2.tag = base;
          node$2.quasi = this.parseTemplate({ isTagged: true });
          base = this.finishNode(node$2, "TaggedTemplateExpression");
        }
        return base;
      };
      pp$3.parseExprAtom = function(refDestructuringErrors) {
        if (this.type === types.slash) {
          this.readRegexp();
        }
        var node, canBeArrow = this.potentialArrowAt === this.start;
        switch (this.type) {
          case types._super:
            if (!this.allowSuper) {
              this.raise(this.start, "'super' keyword outside a method");
            }
            node = this.startNode();
            this.next();
            if (this.type === types.parenL && !this.allowDirectSuper) {
              this.raise(node.start, "super() call outside constructor of a subclass");
            }
            if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL) {
              this.unexpected();
            }
            return this.finishNode(node, "Super");
          case types._this:
            node = this.startNode();
            this.next();
            return this.finishNode(node, "ThisExpression");
          case types.name:
            var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
            var id = this.parseIdent(false);
            if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types._function)) {
              return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true);
            }
            if (canBeArrow && !this.canInsertSemicolon()) {
              if (this.eat(types.arrow)) {
                return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false);
              }
              if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types.name && !containsEsc) {
                id = this.parseIdent(false);
                if (this.canInsertSemicolon() || !this.eat(types.arrow)) {
                  this.unexpected();
                }
                return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true);
              }
            }
            return id;
          case types.regexp:
            var value = this.value;
            node = this.parseLiteral(value.value);
            node.regex = { pattern: value.pattern, flags: value.flags };
            return node;
          case types.num:
          case types.string:
            return this.parseLiteral(this.value);
          case types._null:
          case types._true:
          case types._false:
            node = this.startNode();
            node.value = this.type === types._null ? null : this.type === types._true;
            node.raw = this.type.keyword;
            this.next();
            return this.finishNode(node, "Literal");
          case types.parenL:
            var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);
            if (refDestructuringErrors) {
              if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {
                refDestructuringErrors.parenthesizedAssign = start;
              }
              if (refDestructuringErrors.parenthesizedBind < 0) {
                refDestructuringErrors.parenthesizedBind = start;
              }
            }
            return expr;
          case types.bracketL:
            node = this.startNode();
            this.next();
            node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);
            return this.finishNode(node, "ArrayExpression");
          case types.braceL:
            return this.parseObj(false, refDestructuringErrors);
          case types._function:
            node = this.startNode();
            this.next();
            return this.parseFunction(node, 0);
          case types._class:
            return this.parseClass(this.startNode(), false);
          case types._new:
            return this.parseNew();
          case types.backQuote:
            return this.parseTemplate();
          case types._import:
            if (this.options.ecmaVersion >= 11) {
              return this.parseExprImport();
            } else {
              return this.unexpected();
            }
          default:
            this.unexpected();
        }
      };
      pp$3.parseExprImport = function() {
        var node = this.startNode();
        if (this.containsEsc) {
          this.raiseRecoverable(this.start, "Escape sequence in keyword import");
        }
        var meta = this.parseIdent(true);
        switch (this.type) {
          case types.parenL:
            return this.parseDynamicImport(node);
          case types.dot:
            node.meta = meta;
            return this.parseImportMeta(node);
          default:
            this.unexpected();
        }
      };
      pp$3.parseDynamicImport = function(node) {
        this.next();
        node.source = this.parseMaybeAssign();
        if (!this.eat(types.parenR)) {
          var errorPos = this.start;
          if (this.eat(types.comma) && this.eat(types.parenR)) {
            this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
          } else {
            this.unexpected(errorPos);
          }
        }
        return this.finishNode(node, "ImportExpression");
      };
      pp$3.parseImportMeta = function(node) {
        this.next();
        var containsEsc = this.containsEsc;
        node.property = this.parseIdent(true);
        if (node.property.name !== "meta") {
          this.raiseRecoverable(node.property.start, "The only valid meta property for import is 'import.meta'");
        }
        if (containsEsc) {
          this.raiseRecoverable(node.start, "'import.meta' must not contain escaped characters");
        }
        if (this.options.sourceType !== "module") {
          this.raiseRecoverable(node.start, "Cannot use 'import.meta' outside a module");
        }
        return this.finishNode(node, "MetaProperty");
      };
      pp$3.parseLiteral = function(value) {
        var node = this.startNode();
        node.value = value;
        node.raw = this.input.slice(this.start, this.end);
        if (node.raw.charCodeAt(node.raw.length - 1) === 110) {
          node.bigint = node.raw.slice(0, -1).replace(/_/g, "");
        }
        this.next();
        return this.finishNode(node, "Literal");
      };
      pp$3.parseParenExpression = function() {
        this.expect(types.parenL);
        var val = this.parseExpression();
        this.expect(types.parenR);
        return val;
      };
      pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {
        var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
        if (this.options.ecmaVersion >= 6) {
          this.next();
          var innerStartPos = this.start, innerStartLoc = this.startLoc;
          var exprList = [], first = true, lastIsComma = false;
          var refDestructuringErrors = new DestructuringErrors(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
          this.yieldPos = 0;
          this.awaitPos = 0;
          while (this.type !== types.parenR) {
            first ? first = false : this.expect(types.comma);
            if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {
              lastIsComma = true;
              break;
            } else if (this.type === types.ellipsis) {
              spreadStart = this.start;
              exprList.push(this.parseParenItem(this.parseRestBinding()));
              if (this.type === types.comma) {
                this.raise(this.start, "Comma is not permitted after the rest element");
              }
              break;
            } else {
              exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
            }
          }
          var innerEndPos = this.start, innerEndLoc = this.startLoc;
          this.expect(types.parenR);
          if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {
            this.checkPatternErrors(refDestructuringErrors, false);
            this.checkYieldAwaitInDefaultParams();
            this.yieldPos = oldYieldPos;
            this.awaitPos = oldAwaitPos;
            return this.parseParenArrowList(startPos, startLoc, exprList);
          }
          if (!exprList.length || lastIsComma) {
            this.unexpected(this.lastTokStart);
          }
          if (spreadStart) {
            this.unexpected(spreadStart);
          }
          this.checkExpressionErrors(refDestructuringErrors, true);
          this.yieldPos = oldYieldPos || this.yieldPos;
          this.awaitPos = oldAwaitPos || this.awaitPos;
          if (exprList.length > 1) {
            val = this.startNodeAt(innerStartPos, innerStartLoc);
            val.expressions = exprList;
            this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
          } else {
            val = exprList[0];
          }
        } else {
          val = this.parseParenExpression();
        }
        if (this.options.preserveParens) {
          var par = this.startNodeAt(startPos, startLoc);
          par.expression = val;
          return this.finishNode(par, "ParenthesizedExpression");
        } else {
          return val;
        }
      };
      pp$3.parseParenItem = function(item) {
        return item;
      };
      pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {
        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);
      };
      var empty$1 = [];
      pp$3.parseNew = function() {
        if (this.containsEsc) {
          this.raiseRecoverable(this.start, "Escape sequence in keyword new");
        }
        var node = this.startNode();
        var meta = this.parseIdent(true);
        if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {
          node.meta = meta;
          var containsEsc = this.containsEsc;
          node.property = this.parseIdent(true);
          if (node.property.name !== "target") {
            this.raiseRecoverable(node.property.start, "The only valid meta property for new is 'new.target'");
          }
          if (containsEsc) {
            this.raiseRecoverable(node.start, "'new.target' must not contain escaped characters");
          }
          if (!this.inNonArrowFunction()) {
            this.raiseRecoverable(node.start, "'new.target' can only be used in functions");
          }
          return this.finishNode(node, "MetaProperty");
        }
        var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;
        node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);
        if (isImport && node.callee.type === "ImportExpression") {
          this.raise(startPos, "Cannot use new with import()");
        }
        if (this.eat(types.parenL)) {
          node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false);
        } else {
          node.arguments = empty$1;
        }
        return this.finishNode(node, "NewExpression");
      };
      pp$3.parseTemplateElement = function(ref2) {
        var isTagged = ref2.isTagged;
        var elem = this.startNode();
        if (this.type === types.invalidTemplate) {
          if (!isTagged) {
            this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
          }
          elem.value = {
            raw: this.value,
            cooked: null
          };
        } else {
          elem.value = {
            raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
            cooked: this.value
          };
        }
        this.next();
        elem.tail = this.type === types.backQuote;
        return this.finishNode(elem, "TemplateElement");
      };
      pp$3.parseTemplate = function(ref2) {
        if (ref2 === void 0)
          ref2 = {};
        var isTagged = ref2.isTagged;
        if (isTagged === void 0)
          isTagged = false;
        var node = this.startNode();
        this.next();
        node.expressions = [];
        var curElt = this.parseTemplateElement({ isTagged });
        node.quasis = [curElt];
        while (!curElt.tail) {
          if (this.type === types.eof) {
            this.raise(this.pos, "Unterminated template literal");
          }
          this.expect(types.dollarBraceL);
          node.expressions.push(this.parseExpression());
          this.expect(types.braceR);
          node.quasis.push(curElt = this.parseTemplateElement({ isTagged }));
        }
        this.next();
        return this.finishNode(node, "TemplateLiteral");
      };
      pp$3.isAsyncProp = function(prop) {
        return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" && (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
      };
      pp$3.parseObj = function(isPattern, refDestructuringErrors) {
        var node = this.startNode(), first = true, propHash = {};
        node.properties = [];
        this.next();
        while (!this.eat(types.braceR)) {
          if (!first) {
            this.expect(types.comma);
            if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) {
              break;
            }
          } else {
            first = false;
          }
          var prop = this.parseProperty(isPattern, refDestructuringErrors);
          if (!isPattern) {
            this.checkPropClash(prop, propHash, refDestructuringErrors);
          }
          node.properties.push(prop);
        }
        return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
      };
      pp$3.parseProperty = function(isPattern, refDestructuringErrors) {
        var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
        if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {
          if (isPattern) {
            prop.argument = this.parseIdent(false);
            if (this.type === types.comma) {
              this.raise(this.start, "Comma is not permitted after the rest element");
            }
            return this.finishNode(prop, "RestElement");
          }
          if (this.type === types.parenL && refDestructuringErrors) {
            if (refDestructuringErrors.parenthesizedAssign < 0) {
              refDestructuringErrors.parenthesizedAssign = this.start;
            }
            if (refDestructuringErrors.parenthesizedBind < 0) {
              refDestructuringErrors.parenthesizedBind = this.start;
            }
          }
          prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
          if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
            refDestructuringErrors.trailingComma = this.start;
          }
          return this.finishNode(prop, "SpreadElement");
        }
        if (this.options.ecmaVersion >= 6) {
          prop.method = false;
          prop.shorthand = false;
          if (isPattern || refDestructuringErrors) {
            startPos = this.start;
            startLoc = this.startLoc;
          }
          if (!isPattern) {
            isGenerator = this.eat(types.star);
          }
        }
        var containsEsc = this.containsEsc;
        this.parsePropertyName(prop);
        if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
          isAsync = true;
          isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);
          this.parsePropertyName(prop, refDestructuringErrors);
        } else {
          isAsync = false;
        }
        this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
        return this.finishNode(prop, "Property");
      };
      pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
        if ((isGenerator || isAsync) && this.type === types.colon) {
          this.unexpected();
        }
        if (this.eat(types.colon)) {
          prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
          prop.kind = "init";
        } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {
          if (isPattern) {
            this.unexpected();
          }
          prop.kind = "init";
          prop.method = true;
          prop.value = this.parseMethod(isGenerator, isAsync);
        } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && (this.type !== types.comma && this.type !== types.braceR && this.type !== types.eq)) {
          if (isGenerator || isAsync) {
            this.unexpected();
          }
          prop.kind = prop.key.name;
          this.parsePropertyName(prop);
          prop.value = this.parseMethod(false);
          var paramCount = prop.kind === "get" ? 0 : 1;
          if (prop.value.params.length !== paramCount) {
            var start = prop.value.start;
            if (prop.kind === "get") {
              this.raiseRecoverable(start, "getter should have no params");
            } else {
              this.raiseRecoverable(start, "setter should have exactly one param");
            }
          } else {
            if (prop.kind === "set" && prop.value.params[0].type === "RestElement") {
              this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params");
            }
          }
        } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
          if (isGenerator || isAsync) {
            this.unexpected();
          }
          this.checkUnreserved(prop.key);
          if (prop.key.name === "await" && !this.awaitIdentPos) {
            this.awaitIdentPos = startPos;
          }
          prop.kind = "init";
          if (isPattern) {
            prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);
          } else if (this.type === types.eq && refDestructuringErrors) {
            if (refDestructuringErrors.shorthandAssign < 0) {
              refDestructuringErrors.shorthandAssign = this.start;
            }
            prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);
          } else {
            prop.value = prop.key;
          }
          prop.shorthand = true;
        } else {
          this.unexpected();
        }
      };
      pp$3.parsePropertyName = function(prop) {
        if (this.options.ecmaVersion >= 6) {
          if (this.eat(types.bracketL)) {
            prop.computed = true;
            prop.key = this.parseMaybeAssign();
            this.expect(types.bracketR);
            return prop.key;
          } else {
            prop.computed = false;
          }
        }
        return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
      };
      pp$3.initFunction = function(node) {
        node.id = null;
        if (this.options.ecmaVersion >= 6) {
          node.generator = node.expression = false;
        }
        if (this.options.ecmaVersion >= 8) {
          node.async = false;
        }
      };
      pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {
        var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
        this.initFunction(node);
        if (this.options.ecmaVersion >= 6) {
          node.generator = isGenerator;
        }
        if (this.options.ecmaVersion >= 8) {
          node.async = !!isAsync;
        }
        this.yieldPos = 0;
        this.awaitPos = 0;
        this.awaitIdentPos = 0;
        this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));
        this.expect(types.parenL);
        node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);
        this.checkYieldAwaitInDefaultParams();
        this.parseFunctionBody(node, false, true);
        this.yieldPos = oldYieldPos;
        this.awaitPos = oldAwaitPos;
        this.awaitIdentPos = oldAwaitIdentPos;
        return this.finishNode(node, "FunctionExpression");
      };
      pp$3.parseArrowExpression = function(node, params, isAsync) {
        var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
        this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);
        this.initFunction(node);
        if (this.options.ecmaVersion >= 8) {
          node.async = !!isAsync;
        }
        this.yieldPos = 0;
        this.awaitPos = 0;
        this.awaitIdentPos = 0;
        node.params = this.toAssignableList(params, true);
        this.parseFunctionBody(node, true, false);
        this.yieldPos = oldYieldPos;
        this.awaitPos = oldAwaitPos;
        this.awaitIdentPos = oldAwaitIdentPos;
        return this.finishNode(node, "ArrowFunctionExpression");
      };
      pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {
        var isExpression = isArrowFunction && this.type !== types.braceL;
        var oldStrict = this.strict, useStrict = false;
        if (isExpression) {
          node.body = this.parseMaybeAssign();
          node.expression = true;
          this.checkParams(node, false);
        } else {
          var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
          if (!oldStrict || nonSimple) {
            useStrict = this.strictDirective(this.end);
            if (useStrict && nonSimple) {
              this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list");
            }
          }
          var oldLabels = this.labels;
          this.labels = [];
          if (useStrict) {
            this.strict = true;
          }
          this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
          if (this.strict && node.id) {
            this.checkLVal(node.id, BIND_OUTSIDE);
          }
          node.body = this.parseBlock(false, void 0, useStrict && !oldStrict);
          node.expression = false;
          this.adaptDirectivePrologue(node.body.body);
          this.labels = oldLabels;
        }
        this.exitScope();
      };
      pp$3.isSimpleParamList = function(params) {
        for (var i = 0, list2 = params; i < list2.length; i += 1) {
          var param = list2[i];
          if (param.type !== "Identifier") {
            return false;
          }
        }
        return true;
      };
      pp$3.checkParams = function(node, allowDuplicates) {
        var nameHash = {};
        for (var i = 0, list2 = node.params; i < list2.length; i += 1) {
          var param = list2[i];
          this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);
        }
      };
      pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
        var elts = [], first = true;
        while (!this.eat(close)) {
          if (!first) {
            this.expect(types.comma);
            if (allowTrailingComma && this.afterTrailingComma(close)) {
              break;
            }
          } else {
            first = false;
          }
          var elt = void 0;
          if (allowEmpty && this.type === types.comma) {
            elt = null;
          } else if (this.type === types.ellipsis) {
            elt = this.parseSpread(refDestructuringErrors);
            if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0) {
              refDestructuringErrors.trailingComma = this.start;
            }
          } else {
            elt = this.parseMaybeAssign(false, refDestructuringErrors);
          }
          elts.push(elt);
        }
        return elts;
      };
      pp$3.checkUnreserved = function(ref2) {
        var start = ref2.start;
        var end = ref2.end;
        var name = ref2.name;
        if (this.inGenerator && name === "yield") {
          this.raiseRecoverable(start, "Cannot use 'yield' as identifier inside a generator");
        }
        if (this.inAsync && name === "await") {
          this.raiseRecoverable(start, "Cannot use 'await' as identifier inside an async function");
        }
        if (this.keywords.test(name)) {
          this.raise(start, "Unexpected keyword '" + name + "'");
        }
        if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf("\\") !== -1) {
          return;
        }
        var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
        if (re.test(name)) {
          if (!this.inAsync && name === "await") {
            this.raiseRecoverable(start, "Cannot use keyword 'await' outside an async function");
          }
          this.raiseRecoverable(start, "The keyword '" + name + "' is reserved");
        }
      };
      pp$3.parseIdent = function(liberal, isBinding) {
        var node = this.startNode();
        if (this.type === types.name) {
          node.name = this.value;
        } else if (this.type.keyword) {
          node.name = this.type.keyword;
          if ((node.name === "class" || node.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
            this.context.pop();
          }
        } else {
          this.unexpected();
        }
        this.next(!!liberal);
        this.finishNode(node, "Identifier");
        if (!liberal) {
          this.checkUnreserved(node);
          if (node.name === "await" && !this.awaitIdentPos) {
            this.awaitIdentPos = node.start;
          }
        }
        return node;
      };
      pp$3.parseYield = function(noIn) {
        if (!this.yieldPos) {
          this.yieldPos = this.start;
        }
        var node = this.startNode();
        this.next();
        if (this.type === types.semi || this.canInsertSemicolon() || this.type !== types.star && !this.type.startsExpr) {
          node.delegate = false;
          node.argument = null;
        } else {
          node.delegate = this.eat(types.star);
          node.argument = this.parseMaybeAssign(noIn);
        }
        return this.finishNode(node, "YieldExpression");
      };
      pp$3.parseAwait = function() {
        if (!this.awaitPos) {
          this.awaitPos = this.start;
        }
        var node = this.startNode();
        this.next();
        node.argument = this.parseMaybeUnary(null, false);
        return this.finishNode(node, "AwaitExpression");
      };
      var pp$4 = Parser.prototype;
      pp$4.raise = function(pos, message) {
        var loc = getLineInfo(this.input, pos);
        message += " (" + loc.line + ":" + loc.column + ")";
        var err = new SyntaxError(message);
        err.pos = pos;
        err.loc = loc;
        err.raisedAt = this.pos;
        throw err;
      };
      pp$4.raiseRecoverable = pp$4.raise;
      pp$4.curPosition = function() {
        if (this.options.locations) {
          return new Position(this.curLine, this.pos - this.lineStart);
        }
      };
      var pp$5 = Parser.prototype;
      var Scope = function Scope2(flags) {
        this.flags = flags;
        this.var = [];
        this.lexical = [];
        this.functions = [];
      };
      pp$5.enterScope = function(flags) {
        this.scopeStack.push(new Scope(flags));
      };
      pp$5.exitScope = function() {
        this.scopeStack.pop();
      };
      pp$5.treatFunctionsAsVarInScope = function(scope) {
        return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;
      };
      pp$5.declareName = function(name, bindingType, pos) {
        var redeclared = false;
        if (bindingType === BIND_LEXICAL) {
          var scope = this.currentScope();
          redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
          scope.lexical.push(name);
          if (this.inModule && scope.flags & SCOPE_TOP) {
            delete this.undefinedExports[name];
          }
        } else if (bindingType === BIND_SIMPLE_CATCH) {
          var scope$1 = this.currentScope();
          scope$1.lexical.push(name);
        } else if (bindingType === BIND_FUNCTION) {
          var scope$2 = this.currentScope();
          if (this.treatFunctionsAsVar) {
            redeclared = scope$2.lexical.indexOf(name) > -1;
          } else {
            redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;
          }
          scope$2.functions.push(name);
        } else {
          for (var i = this.scopeStack.length - 1; i >= 0; --i) {
            var scope$3 = this.scopeStack[i];
            if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
              redeclared = true;
              break;
            }
            scope$3.var.push(name);
            if (this.inModule && scope$3.flags & SCOPE_TOP) {
              delete this.undefinedExports[name];
            }
            if (scope$3.flags & SCOPE_VAR) {
              break;
            }
          }
        }
        if (redeclared) {
          this.raiseRecoverable(pos, "Identifier '" + name + "' has already been declared");
        }
      };
      pp$5.checkLocalExport = function(id) {
        if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) {
          this.undefinedExports[id.name] = id;
        }
      };
      pp$5.currentScope = function() {
        return this.scopeStack[this.scopeStack.length - 1];
      };
      pp$5.currentVarScope = function() {
        for (var i = this.scopeStack.length - 1; ; i--) {
          var scope = this.scopeStack[i];
          if (scope.flags & SCOPE_VAR) {
            return scope;
          }
        }
      };
      pp$5.currentThisScope = function() {
        for (var i = this.scopeStack.length - 1; ; i--) {
          var scope = this.scopeStack[i];
          if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {
            return scope;
          }
        }
      };
      var Node2 = function Node3(parser, pos, loc) {
        this.type = "";
        this.start = pos;
        this.end = 0;
        if (parser.options.locations) {
          this.loc = new SourceLocation(parser, loc);
        }
        if (parser.options.directSourceFile) {
          this.sourceFile = parser.options.directSourceFile;
        }
        if (parser.options.ranges) {
          this.range = [pos, 0];
        }
      };
      var pp$6 = Parser.prototype;
      pp$6.startNode = function() {
        return new Node2(this, this.start, this.startLoc);
      };
      pp$6.startNodeAt = function(pos, loc) {
        return new Node2(this, pos, loc);
      };
      function finishNodeAt(node, type, pos, loc) {
        node.type = type;
        node.end = pos;
        if (this.options.locations) {
          node.loc.end = loc;
        }
        if (this.options.ranges) {
          node.range[1] = pos;
        }
        return node;
      }
      pp$6.finishNode = function(node, type) {
        return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);
      };
      pp$6.finishNodeAt = function(node, type, pos, loc) {
        return finishNodeAt.call(this, node, type, pos, loc);
      };
      var TokContext = function TokContext2(token, isExpr, preserveSpace, override, generator) {
        this.token = token;
        this.isExpr = !!isExpr;
        this.preserveSpace = !!preserveSpace;
        this.override = override;
        this.generator = !!generator;
      };
      var types$1 = {
        b_stat: new TokContext("{", false),
        b_expr: new TokContext("{", true),
        b_tmpl: new TokContext("${", false),
        p_stat: new TokContext("(", false),
        p_expr: new TokContext("(", true),
        q_tmpl: new TokContext("`", true, true, function(p) {
          return p.tryReadTemplateToken();
        }),
        f_stat: new TokContext("function", false),
        f_expr: new TokContext("function", true),
        f_expr_gen: new TokContext("function", true, false, null, true),
        f_gen: new TokContext("function", false, false, null, true)
      };
      var pp$7 = Parser.prototype;
      pp$7.initialContext = function() {
        return [types$1.b_stat];
      };
      pp$7.braceIsBlock = function(prevType) {
        var parent = this.curContext();
        if (parent === types$1.f_expr || parent === types$1.f_stat) {
          return true;
        }
        if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr)) {
          return !parent.isExpr;
        }
        if (prevType === types._return || prevType === types.name && this.exprAllowed) {
          return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
        }
        if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {
          return true;
        }
        if (prevType === types.braceL) {
          return parent === types$1.b_stat;
        }
        if (prevType === types._var || prevType === types._const || prevType === types.name) {
          return false;
        }
        return !this.exprAllowed;
      };
      pp$7.inGeneratorContext = function() {
        for (var i = this.context.length - 1; i >= 1; i--) {
          var context = this.context[i];
          if (context.token === "function") {
            return context.generator;
          }
        }
        return false;
      };
      pp$7.updateContext = function(prevType) {
        var update, type = this.type;
        if (type.keyword && prevType === types.dot) {
          this.exprAllowed = false;
        } else if (update = type.updateContext) {
          update.call(this, prevType);
        } else {
          this.exprAllowed = type.beforeExpr;
        }
      };
      types.parenR.updateContext = types.braceR.updateContext = function() {
        if (this.context.length === 1) {
          this.exprAllowed = true;
          return;
        }
        var out = this.context.pop();
        if (out === types$1.b_stat && this.curContext().token === "function") {
          out = this.context.pop();
        }
        this.exprAllowed = !out.isExpr;
      };
      types.braceL.updateContext = function(prevType) {
        this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);
        this.exprAllowed = true;
      };
      types.dollarBraceL.updateContext = function() {
        this.context.push(types$1.b_tmpl);
        this.exprAllowed = true;
      };
      types.parenL.updateContext = function(prevType) {
        var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;
        this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);
        this.exprAllowed = true;
      };
      types.incDec.updateContext = function() {
      };
      types._function.updateContext = types._class.updateContext = function(prevType) {
        if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {
          this.context.push(types$1.f_expr);
        } else {
          this.context.push(types$1.f_stat);
        }
        this.exprAllowed = false;
      };
      types.backQuote.updateContext = function() {
        if (this.curContext() === types$1.q_tmpl) {
          this.context.pop();
        } else {
          this.context.push(types$1.q_tmpl);
        }
        this.exprAllowed = false;
      };
      types.star.updateContext = function(prevType) {
        if (prevType === types._function) {
          var index = this.context.length - 1;
          if (this.context[index] === types$1.f_expr) {
            this.context[index] = types$1.f_expr_gen;
          } else {
            this.context[index] = types$1.f_gen;
          }
        }
        this.exprAllowed = true;
      };
      types.name.updateContext = function(prevType) {
        var allowed = false;
        if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {
          if (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) {
            allowed = true;
          }
        }
        this.exprAllowed = allowed;
      };
      var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
      var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";
      var ecma11BinaryProperties = ecma10BinaryProperties;
      var unicodeBinaryProperties = {
        9: ecma9BinaryProperties,
        10: ecma10BinaryProperties,
        11: ecma11BinaryProperties
      };
      var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";
      var ecma9ScriptValues = "Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
      var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
      var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
      var unicodeScriptValues = {
        9: ecma9ScriptValues,
        10: ecma10ScriptValues,
        11: ecma11ScriptValues
      };
      var data = {};
      function buildUnicodeData(ecmaVersion) {
        var d = data[ecmaVersion] = {
          binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),
          nonBinary: {
            General_Category: wordsRegexp(unicodeGeneralCategoryValues),
            Script: wordsRegexp(unicodeScriptValues[ecmaVersion])
          }
        };
        d.nonBinary.Script_Extensions = d.nonBinary.Script;
        d.nonBinary.gc = d.nonBinary.General_Category;
        d.nonBinary.sc = d.nonBinary.Script;
        d.nonBinary.scx = d.nonBinary.Script_Extensions;
      }
      buildUnicodeData(9);
      buildUnicodeData(10);
      buildUnicodeData(11);
      var pp$8 = Parser.prototype;
      var RegExpValidationState = function RegExpValidationState2(parser) {
        this.parser = parser;
        this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "");
        this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];
        this.source = "";
        this.flags = "";
        this.start = 0;
        this.switchU = false;
        this.switchN = false;
        this.pos = 0;
        this.lastIntValue = 0;
        this.lastStringValue = "";
        this.lastAssertionIsQuantifiable = false;
        this.numCapturingParens = 0;
        this.maxBackReference = 0;
        this.groupNames = [];
        this.backReferenceNames = [];
      };
      RegExpValidationState.prototype.reset = function reset(start, pattern, flags) {
        var unicode = flags.indexOf("u") !== -1;
        this.start = start | 0;
        this.source = pattern + "";
        this.flags = flags;
        this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
        this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
      };
      RegExpValidationState.prototype.raise = function raise(message) {
        this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + message);
      };
      RegExpValidationState.prototype.at = function at(i, forceU) {
        if (forceU === void 0)
          forceU = false;
        var s = this.source;
        var l = s.length;
        if (i >= l) {
          return -1;
        }
        var c = s.charCodeAt(i);
        if (!(forceU || this.switchU) || c <= 55295 || c >= 57344 || i + 1 >= l) {
          return c;
        }
        var next = s.charCodeAt(i + 1);
        return next >= 56320 && next <= 57343 ? (c << 10) + next - 56613888 : c;
      };
      RegExpValidationState.prototype.nextIndex = function nextIndex(i, forceU) {
        if (forceU === void 0)
          forceU = false;
        var s = this.source;
        var l = s.length;
        if (i >= l) {
          return l;
        }
        var c = s.charCodeAt(i), next;
        if (!(forceU || this.switchU) || c <= 55295 || c >= 57344 || i + 1 >= l || (next = s.charCodeAt(i + 1)) < 56320 || next > 57343) {
          return i + 1;
        }
        return i + 2;
      };
      RegExpValidationState.prototype.current = function current(forceU) {
        if (forceU === void 0)
          forceU = false;
        return this.at(this.pos, forceU);
      };
      RegExpValidationState.prototype.lookahead = function lookahead(forceU) {
        if (forceU === void 0)
          forceU = false;
        return this.at(this.nextIndex(this.pos, forceU), forceU);
      };
      RegExpValidationState.prototype.advance = function advance(forceU) {
        if (forceU === void 0)
          forceU = false;
        this.pos = this.nextIndex(this.pos, forceU);
      };
      RegExpValidationState.prototype.eat = function eat(ch, forceU) {
        if (forceU === void 0)
          forceU = false;
        if (this.current(forceU) === ch) {
          this.advance(forceU);
          return true;
        }
        return false;
      };
      function codePointToString(ch) {
        if (ch <= 65535) {
          return String.fromCharCode(ch);
        }
        ch -= 65536;
        return String.fromCharCode((ch >> 10) + 55296, (ch & 1023) + 56320);
      }
      pp$8.validateRegExpFlags = function(state) {
        var validFlags = state.validFlags;
        var flags = state.flags;
        for (var i = 0; i < flags.length; i++) {
          var flag = flags.charAt(i);
          if (validFlags.indexOf(flag) === -1) {
            this.raise(state.start, "Invalid regular expression flag");
          }
          if (flags.indexOf(flag, i + 1) > -1) {
            this.raise(state.start, "Duplicate regular expression flag");
          }
        }
      };
      pp$8.validateRegExpPattern = function(state) {
        this.regexp_pattern(state);
        if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {
          state.switchN = true;
          this.regexp_pattern(state);
        }
      };
      pp$8.regexp_pattern = function(state) {
        state.pos = 0;
        state.lastIntValue = 0;
        state.lastStringValue = "";
        state.lastAssertionIsQuantifiable = false;
        state.numCapturingParens = 0;
        state.maxBackReference = 0;
        state.groupNames.length = 0;
        state.backReferenceNames.length = 0;
        this.regexp_disjunction(state);
        if (state.pos !== state.source.length) {
          if (state.eat(41)) {
            state.raise("Unmatched ')'");
          }
          if (state.eat(93) || state.eat(125)) {
            state.raise("Lone quantifier brackets");
          }
        }
        if (state.maxBackReference > state.numCapturingParens) {
          state.raise("Invalid escape");
        }
        for (var i = 0, list2 = state.backReferenceNames; i < list2.length; i += 1) {
          var name = list2[i];
          if (state.groupNames.indexOf(name) === -1) {
            state.raise("Invalid named capture referenced");
          }
        }
      };
      pp$8.regexp_disjunction = function(state) {
        this.regexp_alternative(state);
        while (state.eat(124)) {
          this.regexp_alternative(state);
        }
        if (this.regexp_eatQuantifier(state, true)) {
          state.raise("Nothing to repeat");
        }
        if (state.eat(123)) {
          state.raise("Lone quantifier brackets");
        }
      };
      pp$8.regexp_alternative = function(state) {
        while (state.pos < state.source.length && this.regexp_eatTerm(state)) {
        }
      };
      pp$8.regexp_eatTerm = function(state) {
        if (this.regexp_eatAssertion(state)) {
          if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
            if (state.switchU) {
              state.raise("Invalid quantifier");
            }
          }
          return true;
        }
        if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
          this.regexp_eatQuantifier(state);
          return true;
        }
        return false;
      };
      pp$8.regexp_eatAssertion = function(state) {
        var start = state.pos;
        state.lastAssertionIsQuantifiable = false;
        if (state.eat(94) || state.eat(36)) {
          return true;
        }
        if (state.eat(92)) {
          if (state.eat(66) || state.eat(98)) {
            return true;
          }
          state.pos = start;
        }
        if (state.eat(40) && state.eat(63)) {
          var lookbehind = false;
          if (this.options.ecmaVersion >= 9) {
            lookbehind = state.eat(60);
          }
          if (state.eat(61) || state.eat(33)) {
            this.regexp_disjunction(state);
            if (!state.eat(41)) {
              state.raise("Unterminated group");
            }
            state.lastAssertionIsQuantifiable = !lookbehind;
            return true;
          }
        }
        state.pos = start;
        return false;
      };
      pp$8.regexp_eatQuantifier = function(state, noError) {
        if (noError === void 0)
          noError = false;
        if (this.regexp_eatQuantifierPrefix(state, noError)) {
          state.eat(63);
          return true;
        }
        return false;
      };
      pp$8.regexp_eatQuantifierPrefix = function(state, noError) {
        return state.eat(42) || state.eat(43) || state.eat(63) || this.regexp_eatBracedQuantifier(state, noError);
      };
      pp$8.regexp_eatBracedQuantifier = function(state, noError) {
        var start = state.pos;
        if (state.eat(123)) {
          var min = 0, max = -1;
          if (this.regexp_eatDecimalDigits(state)) {
            min = state.lastIntValue;
            if (state.eat(44) && this.regexp_eatDecimalDigits(state)) {
              max = state.lastIntValue;
            }
            if (state.eat(125)) {
              if (max !== -1 && max < min && !noError) {
                state.raise("numbers out of order in {} quantifier");
              }
              return true;
            }
          }
          if (state.switchU && !noError) {
            state.raise("Incomplete quantifier");
          }
          state.pos = start;
        }
        return false;
      };
      pp$8.regexp_eatAtom = function(state) {
        return this.regexp_eatPatternCharacters(state) || state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);
      };
      pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {
        var start = state.pos;
        if (state.eat(92)) {
          if (this.regexp_eatAtomEscape(state)) {
            return true;
          }
          state.pos = start;
        }
        return false;
      };
      pp$8.regexp_eatUncapturingGroup = function(state) {
        var start = state.pos;
        if (state.eat(40)) {
          if (state.eat(63) && state.eat(58)) {
            this.regexp_disjunction(state);
            if (state.eat(41)) {
              return true;
            }
            state.raise("Unterminated group");
          }
          state.pos = start;
        }
        return false;
      };
      pp$8.regexp_eatCapturingGroup = function(state) {
        if (state.eat(40)) {
          if (this.options.ecmaVersion >= 9) {
            this.regexp_groupSpecifier(state);
          } else if (state.current() === 63) {
            state.raise("Invalid group");
          }
          this.regexp_disjunction(state);
          if (state.eat(41)) {
            state.numCapturingParens += 1;
            return true;
          }
          state.raise("Unterminated group");
        }
        return false;
      };
      pp$8.regexp_eatExtendedAtom = function(state) {
        return state.eat(46) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);
      };
      pp$8.regexp_eatInvalidBracedQuantifier = function(state) {
        if (this.regexp_eatBracedQuantifier(state, true)) {
          state.raise("Nothing to repeat");
        }
        return false;
      };
      pp$8.regexp_eatSyntaxCharacter = function(state) {
        var ch = state.current();
        if (isSyntaxCharacter(ch)) {
          state.lastIntValue = ch;
          state.advance();
          return true;
        }
        return false;
      };
      function isSyntaxCharacter(ch) {
        return ch === 36 || ch >= 40 && ch <= 43 || ch === 46 || ch === 63 || ch >= 91 && ch <= 94 || ch >= 123 && ch <= 125;
      }
      pp$8.regexp_eatPatternCharacters = function(state) {
        var start = state.pos;
        var ch = 0;
        while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
          state.advance();
        }
        return state.pos !== start;
      };
      pp$8.regexp_eatExtendedPatternCharacter = function(state) {
        var ch = state.current();
        if (ch !== -1 && ch !== 36 && !(ch >= 40 && ch <= 43) && ch !== 46 && ch !== 63 && ch !== 91 && ch !== 94 && ch !== 124) {
          state.advance();
          return true;
        }
        return false;
      };
      pp$8.regexp_groupSpecifier = function(state) {
        if (state.eat(63)) {
          if (this.regexp_eatGroupName(state)) {
            if (state.groupNames.indexOf(state.lastStringValue) !== -1) {
              state.raise("Duplicate capture group name");
            }
            state.groupNames.push(state.lastStringValue);
            return;
          }
          state.raise("Invalid group");
        }
      };
      pp$8.regexp_eatGroupName = function(state) {
        state.lastStringValue = "";
        if (state.eat(60)) {
          if (this.regexp_eatRegExpIdentifierName(state) && state.eat(62)) {
            return true;
          }
          state.raise("Invalid capture group name");
        }
        return false;
      };
      pp$8.regexp_eatRegExpIdentifierName = function(state) {
        state.lastStringValue = "";
        if (this.regexp_eatRegExpIdentifierStart(state)) {
          state.lastStringValue += codePointToString(state.lastIntValue);
          while (this.regexp_eatRegExpIdentifierPart(state)) {
            state.lastStringValue += codePointToString(state.lastIntValue);
          }
          return true;
        }
        return false;
      };
      pp$8.regexp_eatRegExpIdentifierStart = function(state) {
        var start = state.pos;
        var forceU = this.options.ecmaVersion >= 11;
        var ch = state.current(forceU);
        state.advance(forceU);
        if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
          ch = state.lastIntValue;
        }
        if (isRegExpIdentifierStart(ch)) {
          state.lastIntValue = ch;
          return true;
        }
        state.pos = start;
        return false;
      };
      function isRegExpIdentifierStart(ch) {
        return isIdentifierStart(ch, true) || ch === 36 || ch === 95;
      }
      pp$8.regexp_eatRegExpIdentifierPart = function(state) {
        var start = state.pos;
        var forceU = this.options.ecmaVersion >= 11;
        var ch = state.current(forceU);
        state.advance(forceU);
        if (ch === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
          ch = state.lastIntValue;
        }
        if (isRegExpIdentifierPart(ch)) {
          state.lastIntValue = ch;
          return true;
        }
        state.pos = start;
        return false;
      };
      function isRegExpIdentifierPart(ch) {
        return isIdentifierChar(ch, true) || ch === 36 || ch === 95 || ch === 8204 || ch === 8205;
      }
      pp$8.regexp_eatAtomEscape = function(state) {
        if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {
          return true;
        }
        if (state.switchU) {
          if (state.current() === 99) {
            state.raise("Invalid unicode escape");
          }
          state.raise("Invalid escape");
        }
        return false;
      };
      pp$8.regexp_eatBackReference = function(state) {
        var start = state.pos;
        if (this.regexp_eatDecimalEscape(state)) {
          var n = state.lastIntValue;
          if (state.switchU) {
            if (n > state.maxBackReference) {
              state.maxBackReference = n;
            }
            return true;
          }
          if (n <= state.numCapturingParens) {
            return true;
          }
          state.pos = start;
        }
        return false;
      };
      pp$8.regexp_eatKGroupName = function(state) {
        if (state.eat(107)) {
          if (this.regexp_eatGroupName(state)) {
            state.backReferenceNames.push(state.lastStringValue);
            return true;
          }
          state.raise("Invalid named reference");
        }
        return false;
      };
      pp$8.regexp_eatCharacterEscape = function(state) {
        return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state, false) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);
      };
      pp$8.regexp_eatCControlLetter = function(state) {
        var start = state.pos;
        if (state.eat(99)) {
          if (this.regexp_eatControlLetter(state)) {
            return true;
          }
          state.pos = start;
        }
        return false;
      };
      pp$8.regexp_eatZero = function(state) {
        if (state.current() === 48 && !isDecimalDigit(state.lookahead())) {
          state.lastIntValue = 0;
          state.advance();
          return true;
        }
        return false;
      };
      pp$8.regexp_eatControlEscape = function(state) {
        var ch = state.current();
        if (ch === 116) {
          state.lastIntValue = 9;
          state.advance();
          return true;
        }
        if (ch === 110) {
          state.lastIntValue = 10;
          state.advance();
          return true;
        }
        if (ch === 118) {
          state.lastIntValue = 11;
          state.advance();
          return true;
        }
        if (ch === 102) {
          state.lastIntValue = 12;
          state.advance();
          return true;
        }
        if (ch === 114) {
          state.lastIntValue = 13;
          state.advance();
          return true;
        }
        return false;
      };
      pp$8.regexp_eatControlLetter = function(state) {
        var ch = state.current();
        if (isControlLetter(ch)) {
          state.lastIntValue = ch % 32;
          state.advance();
          return true;
        }
        return false;
      };
      function isControlLetter(ch) {
        return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122;
      }
      pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {
        if (forceU === void 0)
          forceU = false;
        var start = state.pos;
        var switchU = forceU || state.switchU;
        if (state.eat(117)) {
          if (this.regexp_eatFixedHexDigits(state, 4)) {
            var lead = state.lastIntValue;
            if (switchU && lead >= 55296 && lead <= 56319) {
              var leadSurrogateEnd = state.pos;
              if (state.eat(92) && state.eat(117) && this.regexp_eatFixedHexDigits(state, 4)) {
                var trail = state.lastIntValue;
                if (trail >= 56320 && trail <= 57343) {
                  state.lastIntValue = (lead - 55296) * 1024 + (trail - 56320) + 65536;
                  return true;
                }
              }
              state.pos = leadSurrogateEnd;
              state.lastIntValue = lead;
            }
            return true;
          }
          if (switchU && state.eat(123) && this.regexp_eatHexDigits(state) && state.eat(125) && isValidUnicode(state.lastIntValue)) {
            return true;
          }
          if (switchU) {
            state.raise("Invalid unicode escape");
          }
          state.pos = start;
        }
        return false;
      };
      function isValidUnicode(ch) {
        return ch >= 0 && ch <= 1114111;
      }
      pp$8.regexp_eatIdentityEscape = function(state) {
        if (state.switchU) {
          if (this.regexp_eatSyntaxCharacter(state)) {
            return true;
          }
          if (state.eat(47)) {
            state.lastIntValue = 47;
            return true;
          }
          return false;
        }
        var ch = state.current();
        if (ch !== 99 && (!state.switchN || ch !== 107)) {
          state.lastIntValue = ch;
          state.advance();
          return true;
        }
        return false;
      };
      pp$8.regexp_eatDecimalEscape = function(state) {
        state.lastIntValue = 0;
        var ch = state.current();
        if (ch >= 49 && ch <= 57) {
          do {
            state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
            state.advance();
          } while ((ch = state.current()) >= 48 && ch <= 57);
          return true;
        }
        return false;
      };
      pp$8.regexp_eatCharacterClassEscape = function(state) {
        var ch = state.current();
        if (isCharacterClassEscape(ch)) {
          state.lastIntValue = -1;
          state.advance();
          return true;
        }
        if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 80 || ch === 112)) {
          state.lastIntValue = -1;
          state.advance();
          if (state.eat(123) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(125)) {
            return true;
          }
          state.raise("Invalid property name");
        }
        return false;
      };
      function isCharacterClassEscape(ch) {
        return ch === 100 || ch === 68 || ch === 115 || ch === 83 || ch === 119 || ch === 87;
      }
      pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {
        var start = state.pos;
        if (this.regexp_eatUnicodePropertyName(state) && state.eat(61)) {
          var name = state.lastStringValue;
          if (this.regexp_eatUnicodePropertyValue(state)) {
            var value = state.lastStringValue;
            this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
            return true;
          }
        }
        state.pos = start;
        if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
          var nameOrValue = state.lastStringValue;
          this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);
          return true;
        }
        return false;
      };
      pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
        if (!has(state.unicodeProperties.nonBinary, name)) {
          state.raise("Invalid property name");
        }
        if (!state.unicodeProperties.nonBinary[name].test(value)) {
          state.raise("Invalid property value");
        }
      };
      pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
        if (!state.unicodeProperties.binary.test(nameOrValue)) {
          state.raise("Invalid property name");
        }
      };
      pp$8.regexp_eatUnicodePropertyName = function(state) {
        var ch = 0;
        state.lastStringValue = "";
        while (isUnicodePropertyNameCharacter(ch = state.current())) {
          state.lastStringValue += codePointToString(ch);
          state.advance();
        }
        return state.lastStringValue !== "";
      };
      function isUnicodePropertyNameCharacter(ch) {
        return isControlLetter(ch) || ch === 95;
      }
      pp$8.regexp_eatUnicodePropertyValue = function(state) {
        var ch = 0;
        state.lastStringValue = "";
        while (isUnicodePropertyValueCharacter(ch = state.current())) {
          state.lastStringValue += codePointToString(ch);
          state.advance();
        }
        return state.lastStringValue !== "";
      };
      function isUnicodePropertyValueCharacter(ch) {
        return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);
      }
      pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
        return this.regexp_eatUnicodePropertyValue(state);
      };
      pp$8.regexp_eatCharacterClass = function(state) {
        if (state.eat(91)) {
          state.eat(94);
          this.regexp_classRanges(state);
          if (state.eat(93)) {
            return true;
          }
          state.raise("Unterminated character class");
        }
        return false;
      };
      pp$8.regexp_classRanges = function(state) {
        while (this.regexp_eatClassAtom(state)) {
          var left = state.lastIntValue;
          if (state.eat(45) && this.regexp_eatClassAtom(state)) {
            var right = state.lastIntValue;
            if (state.switchU && (left === -1 || right === -1)) {
              state.raise("Invalid character class");
            }
            if (left !== -1 && right !== -1 && left > right) {
              state.raise("Range out of order in character class");
            }
          }
        }
      };
      pp$8.regexp_eatClassAtom = function(state) {
        var start = state.pos;
        if (state.eat(92)) {
          if (this.regexp_eatClassEscape(state)) {
            return true;
          }
          if (state.switchU) {
            var ch$1 = state.current();
            if (ch$1 === 99 || isOctalDigit(ch$1)) {
              state.raise("Invalid class escape");
            }
            state.raise("Invalid escape");
          }
          state.pos = start;
        }
        var ch = state.current();
        if (ch !== 93) {
          state.lastIntValue = ch;
          state.advance();
          return true;
        }
        return false;
      };
      pp$8.regexp_eatClassEscape = function(state) {
        var start = state.pos;
        if (state.eat(98)) {
          state.lastIntValue = 8;
          return true;
        }
        if (state.switchU && state.eat(45)) {
          state.lastIntValue = 45;
          return true;
        }
        if (!state.switchU && state.eat(99)) {
          if (this.regexp_eatClassControlLetter(state)) {
            return true;
          }
          state.pos = start;
        }
        return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);
      };
      pp$8.regexp_eatClassControlLetter = function(state) {
        var ch = state.current();
        if (isDecimalDigit(ch) || ch === 95) {
          state.lastIntValue = ch % 32;
          state.advance();
          return true;
        }
        return false;
      };
      pp$8.regexp_eatHexEscapeSequence = function(state) {
        var start = state.pos;
        if (state.eat(120)) {
          if (this.regexp_eatFixedHexDigits(state, 2)) {
            return true;
          }
          if (state.switchU) {
            state.raise("Invalid escape");
          }
          state.pos = start;
        }
        return false;
      };
      pp$8.regexp_eatDecimalDigits = function(state) {
        var start = state.pos;
        var ch = 0;
        state.lastIntValue = 0;
        while (isDecimalDigit(ch = state.current())) {
          state.lastIntValue = 10 * state.lastIntValue + (ch - 48);
          state.advance();
        }
        return state.pos !== start;
      };
      function isDecimalDigit(ch) {
        return ch >= 48 && ch <= 57;
      }
      pp$8.regexp_eatHexDigits = function(state) {
        var start = state.pos;
        var ch = 0;
        state.lastIntValue = 0;
        while (isHexDigit(ch = state.current())) {
          state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
          state.advance();
        }
        return state.pos !== start;
      };
      function isHexDigit(ch) {
        return ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102;
      }
      function hexToInt(ch) {
        if (ch >= 65 && ch <= 70) {
          return 10 + (ch - 65);
        }
        if (ch >= 97 && ch <= 102) {
          return 10 + (ch - 97);
        }
        return ch - 48;
      }
      pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {
        if (this.regexp_eatOctalDigit(state)) {
          var n1 = state.lastIntValue;
          if (this.regexp_eatOctalDigit(state)) {
            var n2 = state.lastIntValue;
            if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
              state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
            } else {
              state.lastIntValue = n1 * 8 + n2;
            }
          } else {
            state.lastIntValue = n1;
          }
          return true;
        }
        return false;
      };
      pp$8.regexp_eatOctalDigit = function(state) {
        var ch = state.current();
        if (isOctalDigit(ch)) {
          state.lastIntValue = ch - 48;
          state.advance();
          return true;
        }
        state.lastIntValue = 0;
        return false;
      };
      function isOctalDigit(ch) {
        return ch >= 48 && ch <= 55;
      }
      pp$8.regexp_eatFixedHexDigits = function(state, length) {
        var start = state.pos;
        state.lastIntValue = 0;
        for (var i = 0; i < length; ++i) {
          var ch = state.current();
          if (!isHexDigit(ch)) {
            state.pos = start;
            return false;
          }
          state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
          state.advance();
        }
        return true;
      };
      var Token = function Token2(p) {
        this.type = p.type;
        this.value = p.value;
        this.start = p.start;
        this.end = p.end;
        if (p.options.locations) {
          this.loc = new SourceLocation(p, p.startLoc, p.endLoc);
        }
        if (p.options.ranges) {
          this.range = [p.start, p.end];
        }
      };
      var pp$9 = Parser.prototype;
      pp$9.next = function(ignoreEscapeSequenceInKeyword) {
        if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) {
          this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword);
        }
        if (this.options.onToken) {
          this.options.onToken(new Token(this));
        }
        this.lastTokEnd = this.end;
        this.lastTokStart = this.start;
        this.lastTokEndLoc = this.endLoc;
        this.lastTokStartLoc = this.startLoc;
        this.nextToken();
      };
      pp$9.getToken = function() {
        this.next();
        return new Token(this);
      };
      if (typeof Symbol !== "undefined") {
        pp$9[Symbol.iterator] = function() {
          var this$1 = this;
          return {
            next: function() {
              var token = this$1.getToken();
              return {
                done: token.type === types.eof,
                value: token
              };
            }
          };
        };
      }
      pp$9.curContext = function() {
        return this.context[this.context.length - 1];
      };
      pp$9.nextToken = function() {
        var curContext = this.curContext();
        if (!curContext || !curContext.preserveSpace) {
          this.skipSpace();
        }
        this.start = this.pos;
        if (this.options.locations) {
          this.startLoc = this.curPosition();
        }
        if (this.pos >= this.input.length) {
          return this.finishToken(types.eof);
        }
        if (curContext.override) {
          return curContext.override(this);
        } else {
          this.readToken(this.fullCharCodeAtPos());
        }
      };
      pp$9.readToken = function(code) {
        if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92) {
          return this.readWord();
        }
        return this.getTokenFromCode(code);
      };
      pp$9.fullCharCodeAtPos = function() {
        var code = this.input.charCodeAt(this.pos);
        if (code <= 55295 || code >= 57344) {
          return code;
        }
        var next = this.input.charCodeAt(this.pos + 1);
        return (code << 10) + next - 56613888;
      };
      pp$9.skipBlockComment = function() {
        var startLoc = this.options.onComment && this.curPosition();
        var start = this.pos, end = this.input.indexOf("*/", this.pos += 2);
        if (end === -1) {
          this.raise(this.pos - 2, "Unterminated comment");
        }
        this.pos = end + 2;
        if (this.options.locations) {
          lineBreakG.lastIndex = start;
          var match;
          while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {
            ++this.curLine;
            this.lineStart = match.index + match[0].length;
          }
        }
        if (this.options.onComment) {
          this.options.onComment(
            true,
            this.input.slice(start + 2, end),
            start,
            this.pos,
            startLoc,
            this.curPosition()
          );
        }
      };
      pp$9.skipLineComment = function(startSkip) {
        var start = this.pos;
        var startLoc = this.options.onComment && this.curPosition();
        var ch = this.input.charCodeAt(this.pos += startSkip);
        while (this.pos < this.input.length && !isNewLine(ch)) {
          ch = this.input.charCodeAt(++this.pos);
        }
        if (this.options.onComment) {
          this.options.onComment(
            false,
            this.input.slice(start + startSkip, this.pos),
            start,
            this.pos,
            startLoc,
            this.curPosition()
          );
        }
      };
      pp$9.skipSpace = function() {
        loop:
          while (this.pos < this.input.length) {
            var ch = this.input.charCodeAt(this.pos);
            switch (ch) {
              case 32:
              case 160:
                ++this.pos;
                break;
              case 13:
                if (this.input.charCodeAt(this.pos + 1) === 10) {
                  ++this.pos;
                }
              case 10:
              case 8232:
              case 8233:
                ++this.pos;
                if (this.options.locations) {
                  ++this.curLine;
                  this.lineStart = this.pos;
                }
                break;
              case 47:
                switch (this.input.charCodeAt(this.pos + 1)) {
                  case 42:
                    this.skipBlockComment();
                    break;
                  case 47:
                    this.skipLineComment(2);
                    break;
                  default:
                    break loop;
                }
                break;
              default:
                if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
                  ++this.pos;
                } else {
                  break loop;
                }
            }
          }
      };
      pp$9.finishToken = function(type, val) {
        this.end = this.pos;
        if (this.options.locations) {
          this.endLoc = this.curPosition();
        }
        var prevType = this.type;
        this.type = type;
        this.value = val;
        this.updateContext(prevType);
      };
      pp$9.readToken_dot = function() {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next >= 48 && next <= 57) {
          return this.readNumber(true);
        }
        var next2 = this.input.charCodeAt(this.pos + 2);
        if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {
          this.pos += 3;
          return this.finishToken(types.ellipsis);
        } else {
          ++this.pos;
          return this.finishToken(types.dot);
        }
      };
      pp$9.readToken_slash = function() {
        var next = this.input.charCodeAt(this.pos + 1);
        if (this.exprAllowed) {
          ++this.pos;
          return this.readRegexp();
        }
        if (next === 61) {
          return this.finishOp(types.assign, 2);
        }
        return this.finishOp(types.slash, 1);
      };
      pp$9.readToken_mult_modulo_exp = function(code) {
        var next = this.input.charCodeAt(this.pos + 1);
        var size = 1;
        var tokentype = code === 42 ? types.star : types.modulo;
        if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {
          ++size;
          tokentype = types.starstar;
          next = this.input.charCodeAt(this.pos + 2);
        }
        if (next === 61) {
          return this.finishOp(types.assign, size + 1);
        }
        return this.finishOp(tokentype, size);
      };
      pp$9.readToken_pipe_amp = function(code) {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === code) {
          if (this.options.ecmaVersion >= 12) {
            var next2 = this.input.charCodeAt(this.pos + 2);
            if (next2 === 61) {
              return this.finishOp(types.assign, 3);
            }
          }
          return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);
        }
        if (next === 61) {
          return this.finishOp(types.assign, 2);
        }
        return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);
      };
      pp$9.readToken_caret = function() {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === 61) {
          return this.finishOp(types.assign, 2);
        }
        return this.finishOp(types.bitwiseXOR, 1);
      };
      pp$9.readToken_plus_min = function(code) {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === code) {
          if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
            this.skipLineComment(3);
            this.skipSpace();
            return this.nextToken();
          }
          return this.finishOp(types.incDec, 2);
        }
        if (next === 61) {
          return this.finishOp(types.assign, 2);
        }
        return this.finishOp(types.plusMin, 1);
      };
      pp$9.readToken_lt_gt = function(code) {
        var next = this.input.charCodeAt(this.pos + 1);
        var size = 1;
        if (next === code) {
          size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
          if (this.input.charCodeAt(this.pos + size) === 61) {
            return this.finishOp(types.assign, size + 1);
          }
          return this.finishOp(types.bitShift, size);
        }
        if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {
          this.skipLineComment(4);
          this.skipSpace();
          return this.nextToken();
        }
        if (next === 61) {
          size = 2;
        }
        return this.finishOp(types.relational, size);
      };
      pp$9.readToken_eq_excl = function(code) {
        var next = this.input.charCodeAt(this.pos + 1);
        if (next === 61) {
          return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);
        }
        if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {
          this.pos += 2;
          return this.finishToken(types.arrow);
        }
        return this.finishOp(code === 61 ? types.eq : types.prefix, 1);
      };
      pp$9.readToken_question = function() {
        var ecmaVersion = this.options.ecmaVersion;
        if (ecmaVersion >= 11) {
          var next = this.input.charCodeAt(this.pos + 1);
          if (next === 46) {
            var next2 = this.input.charCodeAt(this.pos + 2);
            if (next2 < 48 || next2 > 57) {
              return this.finishOp(types.questionDot, 2);
            }
          }
          if (next === 63) {
            if (ecmaVersion >= 12) {
              var next2$1 = this.input.charCodeAt(this.pos + 2);
              if (next2$1 === 61) {
                return this.finishOp(types.assign, 3);
              }
            }
            return this.finishOp(types.coalesce, 2);
          }
        }
        return this.finishOp(types.question, 1);
      };
      pp$9.getTokenFromCode = function(code) {
        switch (code) {
          case 46:
            return this.readToken_dot();
          case 40:
            ++this.pos;
            return this.finishToken(types.parenL);
          case 41:
            ++this.pos;
            return this.finishToken(types.parenR);
          case 59:
            ++this.pos;
            return this.finishToken(types.semi);
          case 44:
            ++this.pos;
            return this.finishToken(types.comma);
          case 91:
            ++this.pos;
            return this.finishToken(types.bracketL);
          case 93:
            ++this.pos;
            return this.finishToken(types.bracketR);
          case 123:
            ++this.pos;
            return this.finishToken(types.braceL);
          case 125:
            ++this.pos;
            return this.finishToken(types.braceR);
          case 58:
            ++this.pos;
            return this.finishToken(types.colon);
          case 96:
            if (this.options.ecmaVersion < 6) {
              break;
            }
            ++this.pos;
            return this.finishToken(types.backQuote);
          case 48:
            var next = this.input.charCodeAt(this.pos + 1);
            if (next === 120 || next === 88) {
              return this.readRadixNumber(16);
            }
            if (this.options.ecmaVersion >= 6) {
              if (next === 111 || next === 79) {
                return this.readRadixNumber(8);
              }
              if (next === 98 || next === 66) {
                return this.readRadixNumber(2);
              }
            }
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            return this.readNumber(false);
          case 34:
          case 39:
            return this.readString(code);
          case 47:
            return this.readToken_slash();
          case 37:
          case 42:
            return this.readToken_mult_modulo_exp(code);
          case 124:
          case 38:
            return this.readToken_pipe_amp(code);
          case 94:
            return this.readToken_caret();
          case 43:
          case 45:
            return this.readToken_plus_min(code);
          case 60:
          case 62:
            return this.readToken_lt_gt(code);
          case 61:
          case 33:
            return this.readToken_eq_excl(code);
          case 63:
            return this.readToken_question();
          case 126:
            return this.finishOp(types.prefix, 1);
        }
        this.raise(this.pos, "Unexpected character '" + codePointToString$1(code) + "'");
      };
      pp$9.finishOp = function(type, size) {
        var str = this.input.slice(this.pos, this.pos + size);
        this.pos += size;
        return this.finishToken(type, str);
      };
      pp$9.readRegexp = function() {
        var escaped, inClass, start = this.pos;
        for (; ; ) {
          if (this.pos >= this.input.length) {
            this.raise(start, "Unterminated regular expression");
          }
          var ch = this.input.charAt(this.pos);
          if (lineBreak.test(ch)) {
            this.raise(start, "Unterminated regular expression");
          }
          if (!escaped) {
            if (ch === "[") {
              inClass = true;
            } else if (ch === "]" && inClass) {
              inClass = false;
            } else if (ch === "/" && !inClass) {
              break;
            }
            escaped = ch === "\\";
          } else {
            escaped = false;
          }
          ++this.pos;
        }
        var pattern = this.input.slice(start, this.pos);
        ++this.pos;
        var flagsStart = this.pos;
        var flags = this.readWord1();
        if (this.containsEsc) {
          this.unexpected(flagsStart);
        }
        var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
        state.reset(start, pattern, flags);
        this.validateRegExpFlags(state);
        this.validateRegExpPattern(state);
        var value = null;
        try {
          value = new RegExp(pattern, flags);
        } catch (e) {
        }
        return this.finishToken(types.regexp, { pattern, flags, value });
      };
      pp$9.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {
        var allowSeparators = this.options.ecmaVersion >= 12 && len === void 0;
        var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;
        var start = this.pos, total = 0, lastCode = 0;
        for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {
          var code = this.input.charCodeAt(this.pos), val = void 0;
          if (allowSeparators && code === 95) {
            if (isLegacyOctalNumericLiteral) {
              this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals");
            }
            if (lastCode === 95) {
              this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore");
            }
            if (i === 0) {
              this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits");
            }
            lastCode = code;
            continue;
          }
          if (code >= 97) {
            val = code - 97 + 10;
          } else if (code >= 65) {
            val = code - 65 + 10;
          } else if (code >= 48 && code <= 57) {
            val = code - 48;
          } else {
            val = Infinity;
          }
          if (val >= radix) {
            break;
          }
          lastCode = code;
          total = total * radix + val;
        }
        if (allowSeparators && lastCode === 95) {
          this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits");
        }
        if (this.pos === start || len != null && this.pos - start !== len) {
          return null;
        }
        return total;
      };
      function stringToNumber(str, isLegacyOctalNumericLiteral) {
        if (isLegacyOctalNumericLiteral) {
          return parseInt(str, 8);
        }
        return parseFloat(str.replace(/_/g, ""));
      }
      function stringToBigInt(str) {
        if (typeof BigInt !== "function") {
          return null;
        }
        return BigInt(str.replace(/_/g, ""));
      }
      pp$9.readRadixNumber = function(radix) {
        var start = this.pos;
        this.pos += 2;
        var val = this.readInt(radix);
        if (val == null) {
          this.raise(this.start + 2, "Expected number in radix " + radix);
        }
        if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
          val = stringToBigInt(this.input.slice(start, this.pos));
          ++this.pos;
        } else if (isIdentifierStart(this.fullCharCodeAtPos())) {
          this.raise(this.pos, "Identifier directly after number");
        }
        return this.finishToken(types.num, val);
      };
      pp$9.readNumber = function(startsWithDot) {
        var start = this.pos;
        if (!startsWithDot && this.readInt(10, void 0, true) === null) {
          this.raise(start, "Invalid number");
        }
        var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
        if (octal && this.strict) {
          this.raise(start, "Invalid number");
        }
        var next = this.input.charCodeAt(this.pos);
        if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
          var val$1 = stringToBigInt(this.input.slice(start, this.pos));
          ++this.pos;
          if (isIdentifierStart(this.fullCharCodeAtPos())) {
            this.raise(this.pos, "Identifier directly after number");
          }
          return this.finishToken(types.num, val$1);
        }
        if (octal && /[89]/.test(this.input.slice(start, this.pos))) {
          octal = false;
        }
        if (next === 46 && !octal) {
          ++this.pos;
          this.readInt(10);
          next = this.input.charCodeAt(this.pos);
        }
        if ((next === 69 || next === 101) && !octal) {
          next = this.input.charCodeAt(++this.pos);
          if (next === 43 || next === 45) {
            ++this.pos;
          }
          if (this.readInt(10) === null) {
            this.raise(start, "Invalid number");
          }
        }
        if (isIdentifierStart(this.fullCharCodeAtPos())) {
          this.raise(this.pos, "Identifier directly after number");
        }
        var val = stringToNumber(this.input.slice(start, this.pos), octal);
        return this.finishToken(types.num, val);
      };
      pp$9.readCodePoint = function() {
        var ch = this.input.charCodeAt(this.pos), code;
        if (ch === 123) {
          if (this.options.ecmaVersion < 6) {
            this.unexpected();
          }
          var codePos = ++this.pos;
          code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
          ++this.pos;
          if (code > 1114111) {
            this.invalidStringToken(codePos, "Code point out of bounds");
          }
        } else {
          code = this.readHexChar(4);
        }
        return code;
      };
      function codePointToString$1(code) {
        if (code <= 65535) {
          return String.fromCharCode(code);
        }
        code -= 65536;
        return String.fromCharCode((code >> 10) + 55296, (code & 1023) + 56320);
      }
      pp$9.readString = function(quote) {
        var out = "", chunkStart = ++this.pos;
        for (; ; ) {
          if (this.pos >= this.input.length) {
            this.raise(this.start, "Unterminated string constant");
          }
          var ch = this.input.charCodeAt(this.pos);
          if (ch === quote) {
            break;
          }
          if (ch === 92) {
            out += this.input.slice(chunkStart, this.pos);
            out += this.readEscapedChar(false);
            chunkStart = this.pos;
          } else {
            if (isNewLine(ch, this.options.ecmaVersion >= 10)) {
              this.raise(this.start, "Unterminated string constant");
            }
            ++this.pos;
          }
        }
        out += this.input.slice(chunkStart, this.pos++);
        return this.finishToken(types.string, out);
      };
      var INVALID_TEMPLATE_ESCAPE_ERROR = {};
      pp$9.tryReadTemplateToken = function() {
        this.inTemplateElement = true;
        try {
          this.readTmplToken();
        } catch (err) {
          if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
            this.readInvalidTemplateToken();
          } else {
            throw err;
          }
        }
        this.inTemplateElement = false;
      };
      pp$9.invalidStringToken = function(position, message) {
        if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
          throw INVALID_TEMPLATE_ESCAPE_ERROR;
        } else {
          this.raise(position, message);
        }
      };
      pp$9.readTmplToken = function() {
        var out = "", chunkStart = this.pos;
        for (; ; ) {
          if (this.pos >= this.input.length) {
            this.raise(this.start, "Unterminated template");
          }
          var ch = this.input.charCodeAt(this.pos);
          if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {
            if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {
              if (ch === 36) {
                this.pos += 2;
                return this.finishToken(types.dollarBraceL);
              } else {
                ++this.pos;
                return this.finishToken(types.backQuote);
              }
            }
            out += this.input.slice(chunkStart, this.pos);
            return this.finishToken(types.template, out);
          }
          if (ch === 92) {
            out += this.input.slice(chunkStart, this.pos);
            out += this.readEscapedChar(true);
            chunkStart = this.pos;
          } else if (isNewLine(ch)) {
            out += this.input.slice(chunkStart, this.pos);
            ++this.pos;
            switch (ch) {
              case 13:
                if (this.input.charCodeAt(this.pos) === 10) {
                  ++this.pos;
                }
              case 10:
                out += "\n";
                break;
              default:
                out += String.fromCharCode(ch);
                break;
            }
            if (this.options.locations) {
              ++this.curLine;
              this.lineStart = this.pos;
            }
            chunkStart = this.pos;
          } else {
            ++this.pos;
          }
        }
      };
      pp$9.readInvalidTemplateToken = function() {
        for (; this.pos < this.input.length; this.pos++) {
          switch (this.input[this.pos]) {
            case "\\":
              ++this.pos;
              break;
            case "$":
              if (this.input[this.pos + 1] !== "{") {
                break;
              }
            case "`":
              return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos));
          }
        }
        this.raise(this.start, "Unterminated template");
      };
      pp$9.readEscapedChar = function(inTemplate) {
        var ch = this.input.charCodeAt(++this.pos);
        ++this.pos;
        switch (ch) {
          case 110:
            return "\n";
          case 114:
            return "\r";
          case 120:
            return String.fromCharCode(this.readHexChar(2));
          case 117:
            return codePointToString$1(this.readCodePoint());
          case 116:
            return "	";
          case 98:
            return "\b";
          case 118:
            return "\v";
          case 102:
            return "\f";
          case 13:
            if (this.input.charCodeAt(this.pos) === 10) {
              ++this.pos;
            }
          case 10:
            if (this.options.locations) {
              this.lineStart = this.pos;
              ++this.curLine;
            }
            return "";
          case 56:
          case 57:
            if (inTemplate) {
              var codePos = this.pos - 1;
              this.invalidStringToken(
                codePos,
                "Invalid escape sequence in template string"
              );
              return null;
            }
          default:
            if (ch >= 48 && ch <= 55) {
              var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
              var octal = parseInt(octalStr, 8);
              if (octal > 255) {
                octalStr = octalStr.slice(0, -1);
                octal = parseInt(octalStr, 8);
              }
              this.pos += octalStr.length - 1;
              ch = this.input.charCodeAt(this.pos);
              if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
                this.invalidStringToken(
                  this.pos - 1 - octalStr.length,
                  inTemplate ? "Octal literal in template string" : "Octal literal in strict mode"
                );
              }
              return String.fromCharCode(octal);
            }
            if (isNewLine(ch)) {
              return "";
            }
            return String.fromCharCode(ch);
        }
      };
      pp$9.readHexChar = function(len) {
        var codePos = this.pos;
        var n = this.readInt(16, len);
        if (n === null) {
          this.invalidStringToken(codePos, "Bad character escape sequence");
        }
        return n;
      };
      pp$9.readWord1 = function() {
        this.containsEsc = false;
        var word = "", first = true, chunkStart = this.pos;
        var astral = this.options.ecmaVersion >= 6;
        while (this.pos < this.input.length) {
          var ch = this.fullCharCodeAtPos();
          if (isIdentifierChar(ch, astral)) {
            this.pos += ch <= 65535 ? 1 : 2;
          } else if (ch === 92) {
            this.containsEsc = true;
            word += this.input.slice(chunkStart, this.pos);
            var escStart = this.pos;
            if (this.input.charCodeAt(++this.pos) !== 117) {
              this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX");
            }
            ++this.pos;
            var esc = this.readCodePoint();
            if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {
              this.invalidStringToken(escStart, "Invalid Unicode escape");
            }
            word += codePointToString$1(esc);
            chunkStart = this.pos;
          } else {
            break;
          }
          first = false;
        }
        return word + this.input.slice(chunkStart, this.pos);
      };
      pp$9.readWord = function() {
        var word = this.readWord1();
        var type = types.name;
        if (this.keywords.test(word)) {
          type = keywords$1[word];
        }
        return this.finishToken(type, word);
      };
      var version = "7.4.1";
      Parser.acorn = {
        Parser,
        version,
        defaultOptions,
        Position,
        SourceLocation,
        getLineInfo,
        Node: Node2,
        TokenType,
        tokTypes: types,
        keywordTypes: keywords$1,
        TokContext,
        tokContexts: types$1,
        isIdentifierChar,
        isIdentifierStart,
        Token,
        isNewLine,
        lineBreak,
        lineBreakG,
        nonASCIIwhitespace
      };
      function parse2(input, options) {
        return Parser.parse(input, options);
      }
      function parseExpressionAt(input, pos, options) {
        return Parser.parseExpressionAt(input, pos, options);
      }
      function tokenizer(input, options) {
        return Parser.tokenizer(input, options);
      }
      exports2.Node = Node2;
      exports2.Parser = Parser;
      exports2.Position = Position;
      exports2.SourceLocation = SourceLocation;
      exports2.TokContext = TokContext;
      exports2.Token = Token;
      exports2.TokenType = TokenType;
      exports2.defaultOptions = defaultOptions;
      exports2.getLineInfo = getLineInfo;
      exports2.isIdentifierChar = isIdentifierChar;
      exports2.isIdentifierStart = isIdentifierStart;
      exports2.isNewLine = isNewLine;
      exports2.keywordTypes = keywords$1;
      exports2.lineBreak = lineBreak;
      exports2.lineBreakG = lineBreakG;
      exports2.nonASCIIwhitespace = nonASCIIwhitespace;
      exports2.parse = parse2;
      exports2.parseExpressionAt = parseExpressionAt;
      exports2.tokContexts = types$1;
      exports2.tokTypes = types;
      exports2.tokenizer = tokenizer;
      exports2.version = version;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});
var require_immutable = __commonJS({
  "../../node_modules/xtend/immutable.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = extend;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    function extend() {
      var target = {};
      for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    }
  }
});
var require_bigint2 = __commonJS({
  "../../node_modules/acorn-node/lib/bigint/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var acorn = require_acorn();
    var tt = acorn.tokTypes;
    var isIdentifierStart = acorn.isIdentifierStart;
    module.exports = function(Parser) {
      return function(Parser2) {
        function anonymous() {
          Parser2.apply(this, arguments);
        }
        if (Parser2)
          anonymous.__proto__ = Parser2;
        anonymous.prototype = Object.create(Parser2 && Parser2.prototype);
        anonymous.prototype.constructor = anonymous;
        anonymous.prototype.parseLiteral = function parseLiteral(value) {
          var node = Parser2.prototype.parseLiteral.call(this, value);
          if (node.raw.charCodeAt(node.raw.length - 1) == 110) {
            node.bigint = this.getNumberInput(node.start, node.end);
          }
          return node;
        };
        anonymous.prototype.readRadixNumber = function readRadixNumber(radix) {
          var start = this.pos;
          this.pos += 2;
          var val = this.readInt(radix);
          if (val === null) {
            this.raise(this.start + 2, "Expected number in radix " + radix);
          }
          if (this.input.charCodeAt(this.pos) == 110) {
            var str = this.getNumberInput(start, this.pos);
            val = typeof BigInt !== "undefined" ? BigInt(str) : null;
            ++this.pos;
          } else if (isIdentifierStart(this.fullCharCodeAtPos())) {
            this.raise(this.pos, "Identifier directly after number");
          }
          return this.finishToken(tt.num, val);
        };
        anonymous.prototype.readNumber = function readNumber(startsWithDot) {
          var start = this.pos;
          if (startsWithDot) {
            return Parser2.prototype.readNumber.call(this, startsWithDot);
          }
          if (this.input.charCodeAt(start) === 48 && this.input.charCodeAt(start + 1) !== 110) {
            return Parser2.prototype.readNumber.call(this, startsWithDot);
          }
          if (this.readInt(10) === null) {
            this.raise(start, "Invalid number");
          }
          if (this.input.charCodeAt(this.pos) != 110) {
            this.pos = start;
            return Parser2.prototype.readNumber.call(this, startsWithDot);
          }
          var str = this.getNumberInput(start, this.pos);
          var val = typeof BigInt !== "undefined" ? BigInt(str) : null;
          ++this.pos;
          return this.finishToken(tt.num, val);
        };
        anonymous.prototype.getNumberInput = function getNumberInput(start, end) {
          if (Parser2.prototype.getNumberInput) {
            return Parser2.prototype.getNumberInput.call(this, start, end);
          }
          return this.input.slice(start, end);
        };
        return anonymous;
      }(Parser);
    };
  }
});
var require_private_class_elements = __commonJS({
  "../../node_modules/acorn-node/lib/private-class-elements/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var acorn = require_acorn();
    if (false) {
      throw new Error("acorn-private-class-elements requires acorn@^6.1.0, not " + acorn.version);
    }
    var tt = acorn.tokTypes;
    var TokenType = acorn.TokenType;
    module.exports = function(Parser) {
      if (Parser.prototype.parsePrivateName) {
        return Parser;
      }
      var cur = Parser;
      while (cur && cur !== acorn.Parser) {
        cur = cur.__proto__;
      }
      if (cur !== acorn.Parser) {
        throw new Error("acorn-private-class-elements does not support mixing different acorn copies");
      }
      Parser = function(Parser2) {
        function Parser_() {
          Parser2.apply(this, arguments);
        }
        if (Parser2)
          Parser_.__proto__ = Parser2;
        Parser_.prototype = Object.create(Parser2 && Parser2.prototype);
        Parser_.prototype.constructor = Parser_;
        Parser_.prototype._branch = function _branch() {
          this.__branch = this.__branch || new Parser2({ ecmaVersion: this.options.ecmaVersion }, this.input);
          this.__branch.end = this.end;
          this.__branch.pos = this.pos;
          this.__branch.type = this.type;
          this.__branch.value = this.value;
          this.__branch.containsEsc = this.containsEsc;
          return this.__branch;
        };
        Parser_.prototype.parsePrivateClassElementName = function parsePrivateClassElementName(element) {
          element.computed = false;
          element.key = this.parsePrivateName();
          if (element.key.name == "constructor") {
            this.raise(element.key.start, "Classes may not have a private element named constructor");
          }
          var accept = { get: "set", set: "get" }[element.kind];
          var privateBoundNames = this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1];
          if (Object.prototype.hasOwnProperty.call(privateBoundNames, element.key.name) && privateBoundNames[element.key.name] !== accept) {
            this.raise(element.start, "Duplicate private element");
          }
          privateBoundNames[element.key.name] = element.kind || true;
          delete this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][element.key.name];
          return element.key;
        };
        Parser_.prototype.parsePrivateName = function parsePrivateName() {
          var node = this.startNode();
          node.name = this.value;
          this.next();
          this.finishNode(node, "PrivateName");
          if (this.options.allowReserved == "never") {
            this.checkUnreserved(node);
          }
          return node;
        };
        Parser_.prototype.getTokenFromCode = function getTokenFromCode(code) {
          if (code === 35) {
            ++this.pos;
            var word = this.readWord1();
            return this.finishToken(this.privateNameToken, word);
          }
          return Parser2.prototype.getTokenFromCode.call(this, code);
        };
        Parser_.prototype.parseClass = function parseClass(node, isStatement) {
          this._privateBoundNamesStack = this._privateBoundNamesStack || [];
          var privateBoundNames = Object.create(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1] || null);
          this._privateBoundNamesStack.push(privateBoundNames);
          this._unresolvedPrivateNamesStack = this._unresolvedPrivateNamesStack || [];
          var unresolvedPrivateNames = /* @__PURE__ */ Object.create(null);
          this._unresolvedPrivateNamesStack.push(unresolvedPrivateNames);
          var _return = Parser2.prototype.parseClass.call(this, node, isStatement);
          this._privateBoundNamesStack.pop();
          this._unresolvedPrivateNamesStack.pop();
          if (!this._unresolvedPrivateNamesStack.length) {
            var names = Object.keys(unresolvedPrivateNames);
            if (names.length) {
              names.sort(function(n1, n2) {
                return unresolvedPrivateNames[n1] - unresolvedPrivateNames[n2];
              });
              this.raise(unresolvedPrivateNames[names[0]], "Usage of undeclared private name");
            }
          } else {
            Object.assign(this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1], unresolvedPrivateNames);
          }
          return _return;
        };
        Parser_.prototype.parseSubscript = function parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow) {
          if (!this.eat(tt.dot)) {
            return Parser2.prototype.parseSubscript.call(this, base, startPos, startLoc, noCalls, maybeAsyncArrow);
          }
          var node = this.startNodeAt(startPos, startLoc);
          node.object = base;
          node.computed = false;
          if (this.type == this.privateNameToken) {
            node.property = this.parsePrivateName();
            if (!this._privateBoundNamesStack.length || !this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.property.name]) {
              this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.property.name] = node.property.start;
            }
          } else {
            node.property = this.parseIdent(true);
          }
          return this.finishNode(node, "MemberExpression");
        };
        Parser_.prototype.parseMaybeUnary = function parseMaybeUnary(refDestructuringErrors, sawUnary) {
          var _return = Parser2.prototype.parseMaybeUnary.call(this, refDestructuringErrors, sawUnary);
          if (_return.operator == "delete") {
            if (_return.argument.type == "MemberExpression" && _return.argument.property.type == "PrivateName") {
              this.raise(_return.start, "Private elements may not be deleted");
            }
          }
          return _return;
        };
        return Parser_;
      }(Parser);
      Parser.prototype.privateNameToken = new TokenType("privateName");
      return Parser;
    };
  }
});
var require_class_fields = __commonJS({
  "../../node_modules/acorn-node/lib/class-fields/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var acorn = require_acorn();
    var tt = acorn.tokTypes;
    var privateClassElements = require_private_class_elements();
    function maybeParseFieldValue(field) {
      if (this.eat(tt.eq)) {
        var oldInFieldValue = this._inFieldValue;
        this._inFieldValue = true;
        field.value = this.parseExpression();
        this._inFieldValue = oldInFieldValue;
      } else {
        field.value = null;
      }
    }
    module.exports = function(Parser) {
      Parser = privateClassElements(Parser);
      return function(Parser2) {
        function anonymous() {
          Parser2.apply(this, arguments);
        }
        if (Parser2)
          anonymous.__proto__ = Parser2;
        anonymous.prototype = Object.create(Parser2 && Parser2.prototype);
        anonymous.prototype.constructor = anonymous;
        anonymous.prototype.parseClassElement = function parseClassElement(_constructorAllowsSuper) {
          if (this.options.ecmaVersion >= 8 && (this.type == tt.name || this.type == this.privateNameToken || this.type == tt.bracketL || this.type == tt.string)) {
            var branch = this._branch();
            if (branch.type == tt.bracketL) {
              var count = 0;
              do {
                if (branch.eat(tt.bracketL)) {
                  ++count;
                } else if (branch.eat(tt.bracketR)) {
                  --count;
                } else {
                  branch.next();
                }
              } while (count > 0);
            } else {
              branch.next();
            }
            if (branch.type == tt.eq || branch.canInsertSemicolon() || branch.type == tt.semi) {
              var node = this.startNode();
              if (this.type == this.privateNameToken) {
                this.parsePrivateClassElementName(node);
              } else {
                this.parsePropertyName(node);
              }
              if (node.key.type === "Identifier" && node.key.name === "constructor" || node.key.type === "Literal" && node.key.value === "constructor") {
                this.raise(node.key.start, "Classes may not have a field called constructor");
              }
              maybeParseFieldValue.call(this, node);
              this.finishNode(node, "FieldDefinition");
              this.semicolon();
              return node;
            }
          }
          return Parser2.prototype.parseClassElement.apply(this, arguments);
        };
        anonymous.prototype.parseIdent = function parseIdent(liberal, isBinding) {
          var ident = Parser2.prototype.parseIdent.call(this, liberal, isBinding);
          if (this._inFieldValue && ident.name == "arguments") {
            this.raise(ident.start, "A class field initializer may not contain arguments");
          }
          return ident;
        };
        return anonymous;
      }(Parser);
    };
  }
});
var require_static_class_features = __commonJS({
  "../../node_modules/acorn-node/lib/static-class-features/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
    var acorn = require_acorn();
    var tt = acorn.tokTypes;
    function maybeParseFieldValue(field) {
      if (this.eat(tt.eq)) {
        var oldInFieldValue = this._inStaticFieldValue;
        this._inStaticFieldValue = true;
        field.value = this.parseExpression();
        this._inStaticFieldValue = oldInFieldValue;
      } else {
        field.value = null;
      }
    }
    var privateClassElements = require_private_class_elements();
    module.exports = function(Parser) {
      var ExtendedParser = privateClassElements(Parser);
      return function(ExtendedParser2) {
        function anonymous() {
          ExtendedParser2.apply(this, arguments);
        }
        if (ExtendedParser2)
          anonymous.__proto__ = ExtendedParser2;
        anonymous.prototype = Object.create(ExtendedParser2 && ExtendedParser2.prototype);
        anonymous.prototype.constructor = anonymous;
        anonymous.prototype.parseClassElement = function parseClassElement(_constructorAllowsSuper) {
          var this$1 = this;
          if (this.eat(tt.semi)) {
            return null;
          }
          var node = this.startNode();
          var tryContextual = function(k, noLineBreak) {
            if (typeof noLineBreak == "undefined") {
              noLineBreak = false;
            }
            var start = this$1.start, startLoc = this$1.startLoc;
            if (!this$1.eatContextual(k)) {
              return false;
            }
            if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {
              return true;
            }
            if (node.key) {
              this$1.unexpected();
            }
            node.computed = false;
            node.key = this$1.startNodeAt(start, startLoc);
            node.key.name = k;
            this$1.finishNode(node.key, "Identifier");
            return false;
          };
          node.static = tryContextual("static");
          if (!node.static) {
            return ExtendedParser2.prototype.parseClassElement.apply(this, arguments);
          }
          var isGenerator = this.eat(tt.star);
          var isAsync = false;
          if (!isGenerator) {
            if (this.options.ecmaVersion >= 8 && this.isContextual("async")) {
              skipWhiteSpace.lastIndex = this.pos;
              var skip = skipWhiteSpace.exec(this.input);
              var next = this.input.charAt(this.pos + skip[0].length);
              if (next === ";" || next === "=") {
                node.key = this.parseIdent(true);
                node.computed = false;
                maybeParseFieldValue.call(this, node);
                this.finishNode(node, "FieldDefinition");
                this.semicolon();
                return node;
              } else if (this.options.ecmaVersion >= 8 && tryContextual("async", true)) {
                isAsync = true;
                isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star);
              }
            } else if (tryContextual("get")) {
              node.kind = "get";
            } else if (tryContextual("set")) {
              node.kind = "set";
            }
          }
          if (this.type === this.privateNameToken) {
            this.parsePrivateClassElementName(node);
            if (this.type !== tt.parenL) {
              if (node.key.name === "prototype") {
                this.raise(node.key.start, "Classes may not have a private static property named prototype");
              }
              maybeParseFieldValue.call(this, node);
              this.finishNode(node, "FieldDefinition");
              this.semicolon();
              return node;
            }
          } else if (!node.key) {
            this.parsePropertyName(node);
            if ((node.key.name || node.key.value) === "prototype" && !node.computed) {
              this.raise(node.key.start, "Classes may not have a static property named prototype");
            }
          }
          if (!node.kind) {
            node.kind = "method";
          }
          this.parseClassMethod(node, isGenerator, isAsync);
          if (!node.kind && (node.key.name || node.key.value) === "constructor" && !node.computed) {
            this.raise(node.key.start, "Classes may not have a static field named constructor");
          }
          if (node.kind === "get" && node.value.params.length !== 0) {
            this.raiseRecoverable(node.value.start, "getter should have no params");
          }
          if (node.kind === "set" && node.value.params.length !== 1) {
            this.raiseRecoverable(node.value.start, "setter should have exactly one param");
          }
          if (node.kind === "set" && node.value.params[0].type === "RestElement") {
            this.raiseRecoverable(node.value.params[0].start, "Setter cannot use rest params");
          }
          return node;
        };
        anonymous.prototype.parseClassMethod = function parseClassMethod(method, isGenerator, isAsync, _allowsDirectSuper) {
          if (isGenerator || isAsync || method.kind != "method" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {
            return ExtendedParser2.prototype.parseClassMethod.apply(this, arguments);
          }
          maybeParseFieldValue.call(this, method);
          delete method.kind;
          method = this.finishNode(method, "FieldDefinition");
          this.semicolon();
          return method;
        };
        anonymous.prototype.parseIdent = function parseIdent(liberal, isBinding) {
          var ident = ExtendedParser2.prototype.parseIdent.call(this, liberal, isBinding);
          if (this._inStaticFieldValue && ident.name == "arguments") {
            this.raise(ident.start, "A static class field initializer may not contain arguments");
          }
          return ident;
        };
        return anonymous;
      }(ExtendedParser);
    };
  }
});
var require_numeric_separator = __commonJS({
  "../../node_modules/acorn-node/lib/numeric-separator/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    module.exports = function(Parser) {
      return function(Parser2) {
        function anonymous() {
          Parser2.apply(this, arguments);
        }
        if (Parser2)
          anonymous.__proto__ = Parser2;
        anonymous.prototype = Object.create(Parser2 && Parser2.prototype);
        anonymous.prototype.constructor = anonymous;
        anonymous.prototype.readInt = function readInt(radix, len) {
          if (len != null) {
            return Parser2.prototype.readInt.call(this, radix, len);
          }
          var start = this.pos, total = 0, acceptUnderscore = false;
          for (; ; ) {
            var code = this.input.charCodeAt(this.pos), val = void 0;
            if (code >= 97) {
              val = code - 97 + 10;
            } else if (code == 95) {
              if (!acceptUnderscore) {
                this.raise(this.pos, "Invalid numeric separator");
              }
              ++this.pos;
              acceptUnderscore = false;
              continue;
            } else if (code >= 65) {
              val = code - 65 + 10;
            } else if (code >= 48 && code <= 57) {
              val = code - 48;
            } else {
              val = Infinity;
            }
            if (val >= radix) {
              break;
            }
            ++this.pos;
            total = total * radix + val;
            acceptUnderscore = true;
          }
          if (this.pos === start) {
            return null;
          }
          if (!acceptUnderscore) {
            this.raise(this.pos - 1, "Invalid numeric separator");
          }
          return total;
        };
        anonymous.prototype.readNumber = function readNumber(startsWithDot) {
          var token = Parser2.prototype.readNumber.call(this, startsWithDot);
          var octal = this.end - this.start >= 2 && this.input.charCodeAt(this.start) === 48;
          var stripped = this.getNumberInput(this.start, this.end);
          if (stripped.length < this.end - this.start) {
            if (octal) {
              this.raise(this.start, "Invalid number");
            }
            this.value = parseFloat(stripped);
          }
          return token;
        };
        anonymous.prototype.getNumberInput = function getNumberInput(start, end) {
          return this.input.slice(start, end).replace(/_/g, "");
        };
        return anonymous;
      }(Parser);
    };
  }
});
var require_dynamic_import = __commonJS({
  "../../node_modules/acorn-node/lib/dynamic-import/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DynamicImportKey = void 0;
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) {
            descriptor.writable = true;
          }
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps) {
          defineProperties(Constructor.prototype, protoProps);
        }
        if (staticProps) {
          defineProperties(Constructor, staticProps);
        }
        return Constructor;
      };
    }();
    var _get = function() {
      function get(object, property, receiver) {
        if (object === null) {
          object = Function.prototype;
        }
        var desc = Object.getOwnPropertyDescriptor(object, property);
        if (desc === void 0) {
          var parent = Object.getPrototypeOf(object);
          if (parent === null) {
            return void 0;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;
          if (getter === void 0) {
            return void 0;
          }
          return getter.call(receiver);
        }
      }
      return get;
    }();
    exports["default"] = dynamicImport;
    var _acorn = require_acorn();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass) {
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
    }
    var DynamicImportKey = exports.DynamicImportKey = "Import";
    _acorn.tokTypes._import.startsExpr = true;
    function parseDynamicImport() {
      var node = this.startNode();
      this.next();
      if (this.type !== _acorn.tokTypes.parenL) {
        this.unexpected();
      }
      return this.finishNode(node, DynamicImportKey);
    }
    function parenAfter() {
      return /^(\s|\/\/.*|\/\*[^]*?\*\/)*\(/.test(this.input.slice(this.pos));
    }
    function dynamicImport(Parser) {
      return function(_Parser) {
        _inherits(_class, _Parser);
        function _class() {
          _classCallCheck(this, _class);
          return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
        }
        _createClass(_class, [{
          key: "parseStatement",
          value: function() {
            function parseStatement(context, topLevel, exports2) {
              if (this.type === _acorn.tokTypes._import && parenAfter.call(this)) {
                return this.parseExpressionStatement(this.startNode(), this.parseExpression());
              }
              return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), "parseStatement", this).call(this, context, topLevel, exports2);
            }
            return parseStatement;
          }()
        }, {
          key: "parseExprAtom",
          value: function() {
            function parseExprAtom(refDestructuringErrors) {
              if (this.type === _acorn.tokTypes._import) {
                return parseDynamicImport.call(this);
              }
              return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), "parseExprAtom", this).call(this, refDestructuringErrors);
            }
            return parseExprAtom;
          }()
        }]);
        return _class;
      }(Parser);
    }
  }
});
var require_export_ns_from = __commonJS({
  "../../node_modules/acorn-node/lib/export-ns-from/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
    var tt = require_acorn().tokTypes;
    module.exports = function(Parser) {
      return function(Parser2) {
        function anonymous() {
          Parser2.apply(this, arguments);
        }
        if (Parser2)
          anonymous.__proto__ = Parser2;
        anonymous.prototype = Object.create(Parser2 && Parser2.prototype);
        anonymous.prototype.constructor = anonymous;
        anonymous.prototype.parseExport = function parseExport(node, exports2) {
          skipWhiteSpace.lastIndex = this.pos;
          var skip = skipWhiteSpace.exec(this.input);
          var next = this.input.charAt(this.pos + skip[0].length);
          if (next !== "*") {
            return Parser2.prototype.parseExport.call(this, node, exports2);
          }
          this.next();
          var specifier = this.startNode();
          this.expect(tt.star);
          if (this.eatContextual("as")) {
            node.declaration = null;
            specifier.exported = this.parseIdent(true);
            this.checkExport(exports2, specifier.exported.name, this.lastTokStart);
            node.specifiers = [this.finishNode(specifier, "ExportNamespaceSpecifier")];
          }
          this.expectContextual("from");
          if (this.type !== tt.string) {
            this.unexpected();
          }
          node.source = this.parseExprAtom();
          this.semicolon();
          return this.finishNode(node, node.specifiers ? "ExportNamedDeclaration" : "ExportAllDeclaration");
        };
        return anonymous;
      }(Parser);
    };
  }
});
var require_import_meta = __commonJS({
  "../../node_modules/acorn-node/lib/import-meta/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var tt = require_acorn().tokTypes;
    var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
    var nextTokenIsDot = function(parser) {
      skipWhiteSpace.lastIndex = parser.pos;
      var skip = skipWhiteSpace.exec(parser.input);
      var next = parser.pos + skip[0].length;
      return parser.input.slice(next, next + 1) === ".";
    };
    module.exports = function(Parser) {
      return function(Parser2) {
        function anonymous() {
          Parser2.apply(this, arguments);
        }
        if (Parser2)
          anonymous.__proto__ = Parser2;
        anonymous.prototype = Object.create(Parser2 && Parser2.prototype);
        anonymous.prototype.constructor = anonymous;
        anonymous.prototype.parseExprAtom = function parseExprAtom(refDestructuringErrors) {
          if (this.type !== tt._import || !nextTokenIsDot(this)) {
            return Parser2.prototype.parseExprAtom.call(this, refDestructuringErrors);
          }
          if (!this.options.allowImportExportEverywhere && !this.inModule) {
            this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'");
          }
          var node = this.startNode();
          node.meta = this.parseIdent(true);
          this.expect(tt.dot);
          node.property = this.parseIdent(true);
          if (node.property.name !== "meta") {
            this.raiseRecoverable(node.property.start, "The only valid meta property for import is import.meta");
          }
          return this.finishNode(node, "MetaProperty");
        };
        anonymous.prototype.parseStatement = function parseStatement(context, topLevel, exports2) {
          if (this.type !== tt._import || !nextTokenIsDot(this)) {
            return Parser2.prototype.parseStatement.call(this, context, topLevel, exports2);
          }
          var node = this.startNode();
          var expr = this.parseExpression();
          return this.parseExpressionStatement(node, expr);
        };
        return anonymous;
      }(Parser);
    };
  }
});
var require_acorn_node = __commonJS({
  "../../node_modules/acorn-node/index.js"(exports, module) {
    init_process();
    init_buffer();
    var acorn = require_acorn();
    var xtend = require_immutable();
    var CJSParser = acorn.Parser.extend(require_bigint2()).extend(require_class_fields()).extend(require_static_class_features()).extend(require_numeric_separator()).extend(require_dynamic_import().default);
    var ESModulesParser = CJSParser.extend(require_export_ns_from()).extend(require_import_meta());
    function mapOptions(opts) {
      if (!opts)
        opts = {};
      return xtend({
        ecmaVersion: 2020,
        allowHashBang: true,
        allowReturnOutsideFunction: true
      }, opts);
    }
    function getParser(opts) {
      if (!opts)
        opts = {};
      return opts.sourceType === "module" ? ESModulesParser : CJSParser;
    }
    module.exports = exports = xtend(acorn, {
      parse: function parse2(src, opts) {
        return getParser(opts).parse(src, mapOptions(opts));
      },
      parseExpressionAt: function parseExpressionAt(src, offset, opts) {
        return getParser(opts).parseExpressionAt(src, offset, mapOptions(opts));
      },
      tokenizer: function tokenizer(src, opts) {
        return getParser(opts).tokenizer(src, mapOptions(opts));
      }
    });
  }
});
var require_walk2 = __commonJS({
  "../../node_modules/acorn-walk/dist/walk.js"(exports, module) {
    init_process();
    init_buffer();
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = global2 || self, factory((global2.acorn = global2.acorn || {}, global2.acorn.walk = {})));
    })(exports, function(exports2) {
      "use strict";
      function simple(node, visitors, baseVisitor, state, override) {
        if (!baseVisitor) {
          baseVisitor = base;
        }
        (function c(node2, st, override2) {
          var type = override2 || node2.type, found = visitors[type];
          baseVisitor[type](node2, st, c);
          if (found) {
            found(node2, st);
          }
        })(node, state, override);
      }
      function ancestor(node, visitors, baseVisitor, state, override) {
        var ancestors = [];
        if (!baseVisitor) {
          baseVisitor = base;
        }
        (function c(node2, st, override2) {
          var type = override2 || node2.type, found = visitors[type];
          var isNew = node2 !== ancestors[ancestors.length - 1];
          if (isNew) {
            ancestors.push(node2);
          }
          baseVisitor[type](node2, st, c);
          if (found) {
            found(node2, st || ancestors, ancestors);
          }
          if (isNew) {
            ancestors.pop();
          }
        })(node, state, override);
      }
      function recursive(node, state, funcs, baseVisitor, override) {
        var visitor = funcs ? make(funcs, baseVisitor || void 0) : baseVisitor;
        (function c(node2, st, override2) {
          visitor[override2 || node2.type](node2, st, c);
        })(node, state, override);
      }
      function makeTest(test) {
        if (typeof test === "string") {
          return function(type) {
            return type === test;
          };
        } else if (!test) {
          return function() {
            return true;
          };
        } else {
          return test;
        }
      }
      var Found = function Found2(node, state) {
        this.node = node;
        this.state = state;
      };
      function full(node, callback, baseVisitor, state, override) {
        if (!baseVisitor) {
          baseVisitor = base;
        }
        (function c(node2, st, override2) {
          var type = override2 || node2.type;
          baseVisitor[type](node2, st, c);
          if (!override2) {
            callback(node2, st, type);
          }
        })(node, state, override);
      }
      function fullAncestor(node, callback, baseVisitor, state) {
        if (!baseVisitor) {
          baseVisitor = base;
        }
        var ancestors = [];
        (function c(node2, st, override) {
          var type = override || node2.type;
          var isNew = node2 !== ancestors[ancestors.length - 1];
          if (isNew) {
            ancestors.push(node2);
          }
          baseVisitor[type](node2, st, c);
          if (!override) {
            callback(node2, st || ancestors, ancestors, type);
          }
          if (isNew) {
            ancestors.pop();
          }
        })(node, state);
      }
      function findNodeAt(node, start, end, test, baseVisitor, state) {
        if (!baseVisitor) {
          baseVisitor = base;
        }
        test = makeTest(test);
        try {
          (function c(node2, st, override) {
            var type = override || node2.type;
            if ((start == null || node2.start <= start) && (end == null || node2.end >= end)) {
              baseVisitor[type](node2, st, c);
            }
            if ((start == null || node2.start === start) && (end == null || node2.end === end) && test(type, node2)) {
              throw new Found(node2, st);
            }
          })(node, state);
        } catch (e) {
          if (e instanceof Found) {
            return e;
          }
          throw e;
        }
      }
      function findNodeAround(node, pos, test, baseVisitor, state) {
        test = makeTest(test);
        if (!baseVisitor) {
          baseVisitor = base;
        }
        try {
          (function c(node2, st, override) {
            var type = override || node2.type;
            if (node2.start > pos || node2.end < pos) {
              return;
            }
            baseVisitor[type](node2, st, c);
            if (test(type, node2)) {
              throw new Found(node2, st);
            }
          })(node, state);
        } catch (e) {
          if (e instanceof Found) {
            return e;
          }
          throw e;
        }
      }
      function findNodeAfter(node, pos, test, baseVisitor, state) {
        test = makeTest(test);
        if (!baseVisitor) {
          baseVisitor = base;
        }
        try {
          (function c(node2, st, override) {
            if (node2.end < pos) {
              return;
            }
            var type = override || node2.type;
            if (node2.start >= pos && test(type, node2)) {
              throw new Found(node2, st);
            }
            baseVisitor[type](node2, st, c);
          })(node, state);
        } catch (e) {
          if (e instanceof Found) {
            return e;
          }
          throw e;
        }
      }
      function findNodeBefore(node, pos, test, baseVisitor, state) {
        test = makeTest(test);
        if (!baseVisitor) {
          baseVisitor = base;
        }
        var max;
        (function c(node2, st, override) {
          if (node2.start > pos) {
            return;
          }
          var type = override || node2.type;
          if (node2.end <= pos && (!max || max.node.end < node2.end) && test(type, node2)) {
            max = new Found(node2, st);
          }
          baseVisitor[type](node2, st, c);
        })(node, state);
        return max;
      }
      var create = Object.create || function(proto) {
        function Ctor() {
        }
        Ctor.prototype = proto;
        return new Ctor();
      };
      function make(funcs, baseVisitor) {
        var visitor = create(baseVisitor || base);
        for (var type in funcs) {
          visitor[type] = funcs[type];
        }
        return visitor;
      }
      function skipThrough(node, st, c) {
        c(node, st);
      }
      function ignore(_node, _st, _c) {
      }
      var base = {};
      base.Program = base.BlockStatement = function(node, st, c) {
        for (var i = 0, list2 = node.body; i < list2.length; i += 1) {
          var stmt = list2[i];
          c(stmt, st, "Statement");
        }
      };
      base.Statement = skipThrough;
      base.EmptyStatement = ignore;
      base.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression = function(node, st, c) {
        return c(node.expression, st, "Expression");
      };
      base.IfStatement = function(node, st, c) {
        c(node.test, st, "Expression");
        c(node.consequent, st, "Statement");
        if (node.alternate) {
          c(node.alternate, st, "Statement");
        }
      };
      base.LabeledStatement = function(node, st, c) {
        return c(node.body, st, "Statement");
      };
      base.BreakStatement = base.ContinueStatement = ignore;
      base.WithStatement = function(node, st, c) {
        c(node.object, st, "Expression");
        c(node.body, st, "Statement");
      };
      base.SwitchStatement = function(node, st, c) {
        c(node.discriminant, st, "Expression");
        for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {
          var cs = list$1[i$1];
          if (cs.test) {
            c(cs.test, st, "Expression");
          }
          for (var i = 0, list2 = cs.consequent; i < list2.length; i += 1) {
            var cons = list2[i];
            c(cons, st, "Statement");
          }
        }
      };
      base.SwitchCase = function(node, st, c) {
        if (node.test) {
          c(node.test, st, "Expression");
        }
        for (var i = 0, list2 = node.consequent; i < list2.length; i += 1) {
          var cons = list2[i];
          c(cons, st, "Statement");
        }
      };
      base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function(node, st, c) {
        if (node.argument) {
          c(node.argument, st, "Expression");
        }
      };
      base.ThrowStatement = base.SpreadElement = function(node, st, c) {
        return c(node.argument, st, "Expression");
      };
      base.TryStatement = function(node, st, c) {
        c(node.block, st, "Statement");
        if (node.handler) {
          c(node.handler, st);
        }
        if (node.finalizer) {
          c(node.finalizer, st, "Statement");
        }
      };
      base.CatchClause = function(node, st, c) {
        if (node.param) {
          c(node.param, st, "Pattern");
        }
        c(node.body, st, "Statement");
      };
      base.WhileStatement = base.DoWhileStatement = function(node, st, c) {
        c(node.test, st, "Expression");
        c(node.body, st, "Statement");
      };
      base.ForStatement = function(node, st, c) {
        if (node.init) {
          c(node.init, st, "ForInit");
        }
        if (node.test) {
          c(node.test, st, "Expression");
        }
        if (node.update) {
          c(node.update, st, "Expression");
        }
        c(node.body, st, "Statement");
      };
      base.ForInStatement = base.ForOfStatement = function(node, st, c) {
        c(node.left, st, "ForInit");
        c(node.right, st, "Expression");
        c(node.body, st, "Statement");
      };
      base.ForInit = function(node, st, c) {
        if (node.type === "VariableDeclaration") {
          c(node, st);
        } else {
          c(node, st, "Expression");
        }
      };
      base.DebuggerStatement = ignore;
      base.FunctionDeclaration = function(node, st, c) {
        return c(node, st, "Function");
      };
      base.VariableDeclaration = function(node, st, c) {
        for (var i = 0, list2 = node.declarations; i < list2.length; i += 1) {
          var decl2 = list2[i];
          c(decl2, st);
        }
      };
      base.VariableDeclarator = function(node, st, c) {
        c(node.id, st, "Pattern");
        if (node.init) {
          c(node.init, st, "Expression");
        }
      };
      base.Function = function(node, st, c) {
        if (node.id) {
          c(node.id, st, "Pattern");
        }
        for (var i = 0, list2 = node.params; i < list2.length; i += 1) {
          var param = list2[i];
          c(param, st, "Pattern");
        }
        c(node.body, st, node.expression ? "Expression" : "Statement");
      };
      base.Pattern = function(node, st, c) {
        if (node.type === "Identifier") {
          c(node, st, "VariablePattern");
        } else if (node.type === "MemberExpression") {
          c(node, st, "MemberPattern");
        } else {
          c(node, st);
        }
      };
      base.VariablePattern = ignore;
      base.MemberPattern = skipThrough;
      base.RestElement = function(node, st, c) {
        return c(node.argument, st, "Pattern");
      };
      base.ArrayPattern = function(node, st, c) {
        for (var i = 0, list2 = node.elements; i < list2.length; i += 1) {
          var elt = list2[i];
          if (elt) {
            c(elt, st, "Pattern");
          }
        }
      };
      base.ObjectPattern = function(node, st, c) {
        for (var i = 0, list2 = node.properties; i < list2.length; i += 1) {
          var prop = list2[i];
          if (prop.type === "Property") {
            if (prop.computed) {
              c(prop.key, st, "Expression");
            }
            c(prop.value, st, "Pattern");
          } else if (prop.type === "RestElement") {
            c(prop.argument, st, "Pattern");
          }
        }
      };
      base.Expression = skipThrough;
      base.ThisExpression = base.Super = base.MetaProperty = ignore;
      base.ArrayExpression = function(node, st, c) {
        for (var i = 0, list2 = node.elements; i < list2.length; i += 1) {
          var elt = list2[i];
          if (elt) {
            c(elt, st, "Expression");
          }
        }
      };
      base.ObjectExpression = function(node, st, c) {
        for (var i = 0, list2 = node.properties; i < list2.length; i += 1) {
          var prop = list2[i];
          c(prop, st);
        }
      };
      base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;
      base.SequenceExpression = function(node, st, c) {
        for (var i = 0, list2 = node.expressions; i < list2.length; i += 1) {
          var expr = list2[i];
          c(expr, st, "Expression");
        }
      };
      base.TemplateLiteral = function(node, st, c) {
        for (var i = 0, list2 = node.quasis; i < list2.length; i += 1) {
          var quasi = list2[i];
          c(quasi, st);
        }
        for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1) {
          var expr = list$1[i$1];
          c(expr, st, "Expression");
        }
      };
      base.TemplateElement = ignore;
      base.UnaryExpression = base.UpdateExpression = function(node, st, c) {
        c(node.argument, st, "Expression");
      };
      base.BinaryExpression = base.LogicalExpression = function(node, st, c) {
        c(node.left, st, "Expression");
        c(node.right, st, "Expression");
      };
      base.AssignmentExpression = base.AssignmentPattern = function(node, st, c) {
        c(node.left, st, "Pattern");
        c(node.right, st, "Expression");
      };
      base.ConditionalExpression = function(node, st, c) {
        c(node.test, st, "Expression");
        c(node.consequent, st, "Expression");
        c(node.alternate, st, "Expression");
      };
      base.NewExpression = base.CallExpression = function(node, st, c) {
        c(node.callee, st, "Expression");
        if (node.arguments) {
          for (var i = 0, list2 = node.arguments; i < list2.length; i += 1) {
            var arg = list2[i];
            c(arg, st, "Expression");
          }
        }
      };
      base.MemberExpression = function(node, st, c) {
        c(node.object, st, "Expression");
        if (node.computed) {
          c(node.property, st, "Expression");
        }
      };
      base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function(node, st, c) {
        if (node.declaration) {
          c(node.declaration, st, node.type === "ExportNamedDeclaration" || node.declaration.id ? "Statement" : "Expression");
        }
        if (node.source) {
          c(node.source, st, "Expression");
        }
      };
      base.ExportAllDeclaration = function(node, st, c) {
        if (node.exported) {
          c(node.exported, st);
        }
        c(node.source, st, "Expression");
      };
      base.ImportDeclaration = function(node, st, c) {
        for (var i = 0, list2 = node.specifiers; i < list2.length; i += 1) {
          var spec = list2[i];
          c(spec, st);
        }
        c(node.source, st, "Expression");
      };
      base.ImportExpression = function(node, st, c) {
        c(node.source, st, "Expression");
      };
      base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.Literal = ignore;
      base.TaggedTemplateExpression = function(node, st, c) {
        c(node.tag, st, "Expression");
        c(node.quasi, st, "Expression");
      };
      base.ClassDeclaration = base.ClassExpression = function(node, st, c) {
        return c(node, st, "Class");
      };
      base.Class = function(node, st, c) {
        if (node.id) {
          c(node.id, st, "Pattern");
        }
        if (node.superClass) {
          c(node.superClass, st, "Expression");
        }
        c(node.body, st);
      };
      base.ClassBody = function(node, st, c) {
        for (var i = 0, list2 = node.body; i < list2.length; i += 1) {
          var elt = list2[i];
          c(elt, st);
        }
      };
      base.MethodDefinition = base.Property = function(node, st, c) {
        if (node.computed) {
          c(node.key, st, "Expression");
        }
        c(node.value, st, "Expression");
      };
      exports2.ancestor = ancestor;
      exports2.base = base;
      exports2.findNodeAfter = findNodeAfter;
      exports2.findNodeAround = findNodeAround;
      exports2.findNodeAt = findNodeAt;
      exports2.findNodeBefore = findNodeBefore;
      exports2.full = full;
      exports2.fullAncestor = fullAncestor;
      exports2.make = make;
      exports2.recursive = recursive;
      exports2.simple = simple;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});
var require_walk3 = __commonJS({
  "../../node_modules/acorn-node/walk.js"(exports) {
    init_process();
    init_buffer();
    var xtend = require_immutable();
    var walk = require_walk2();
    var base = xtend(walk.base);
    base.Import = function() {
    };
    function simple(node, visitors, baseVisitor, state, override) {
      return walk.simple(node, visitors, baseVisitor || base, state, override);
    }
    function ancestor(node, visitors, baseVisitor, state) {
      return walk.ancestor(node, visitors, baseVisitor || base, state);
    }
    function recursive(node, state, funcs, baseVisitor, override) {
      return walk.recursive(node, state, funcs, baseVisitor || base, override);
    }
    function full(node, callback, baseVisitor, state, override) {
      return walk.full(node, callback, baseVisitor || base, state, override);
    }
    function fullAncestor(node, callback, baseVisitor, state) {
      return walk.fullAncestor(node, callback, baseVisitor || base, state);
    }
    function findNodeAt(node, start, end, test, baseVisitor, state) {
      return walk.findNodeAt(node, start, end, test, baseVisitor || base, state);
    }
    function findNodeAround(node, pos, test, baseVisitor, state) {
      return walk.findNodeAround(node, pos, test, baseVisitor || base, state);
    }
    function findNodeAfter(node, pos, test, baseVisitor, state) {
      return walk.findNodeAfter(node, pos, test, baseVisitor || base, state);
    }
    function findNodeBefore(node, pos, test, baseVisitor, state) {
      return walk.findNodeBefore(node, pos, test, baseVisitor || base, state);
    }
    function make(funcs, baseVisitor) {
      return walk.make(funcs, baseVisitor || base);
    }
    exports.simple = simple;
    exports.ancestor = ancestor;
    exports.recursive = recursive;
    exports.full = full;
    exports.fullAncestor = fullAncestor;
    exports.findNodeAt = findNodeAt;
    exports.findNodeAround = findNodeAround;
    exports.findNodeAfter = findNodeAfter;
    exports.findNodeBefore = findNodeBefore;
    exports.make = make;
    exports.base = base;
  }
});
var require_defined = __commonJS({
  "../../node_modules/defined/index.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = function() {
      for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] !== void 0)
          return arguments[i];
      }
    };
  }
});
var require_detective = __commonJS({
  "../../node_modules/detective/index.js"(exports, module) {
    init_process();
    init_buffer();
    var acorn = require_acorn_node();
    var walk = require_walk3();
    var defined = require_defined();
    var requireRe = /\brequire\b/;
    function parse2(src, opts) {
      if (!opts)
        opts = {};
      var acornOpts = {
        ranges: defined(opts.ranges, opts.range),
        locations: defined(opts.locations, opts.loc),
        allowReserved: defined(opts.allowReserved, true),
        allowImportExportEverywhere: defined(opts.allowImportExportEverywhere, false)
      };
      if (opts.ecmaVersion != null)
        acornOpts.ecmaVersion = opts.ecmaVersion;
      if (opts.sourceType != null)
        acornOpts.sourceType = opts.sourceType;
      if (opts.allowHashBang != null)
        acornOpts.allowHashBang = opts.allowHashBang;
      if (opts.allowReturnOutsideFunction != null)
        acornOpts.allowReturnOutsideFunction = opts.allowReturnOutsideFunction;
      return acorn.parse(src, acornOpts);
    }
    var exports = module.exports = function(src, opts) {
      return exports.find(src, opts).strings;
    };
    exports.find = function(src, opts) {
      if (!opts)
        opts = {};
      var word = opts.word === void 0 ? "require" : opts.word;
      if (typeof src !== "string")
        src = String(src);
      var isRequire = opts.isRequire || function(node) {
        return node.callee.type === "Identifier" && node.callee.name === word;
      };
      var modules = { strings: [], expressions: [] };
      if (opts.nodes)
        modules.nodes = [];
      var wordRe = word === "require" ? requireRe : RegExp("\\b" + word + "\\b");
      if (!wordRe.test(src))
        return modules;
      var ast = parse2(src, opts.parse);
      function visit(node, st, c) {
        var hasRequire = wordRe.test(src.slice(node.start, node.end));
        if (!hasRequire)
          return;
        walk.base[node.type](node, st, c);
        if (node.type !== "CallExpression")
          return;
        if (isRequire(node)) {
          if (node.arguments.length) {
            var arg = node.arguments[0];
            if (arg.type === "Literal") {
              modules.strings.push(arg.value);
            } else if (arg.type === "TemplateLiteral" && arg.quasis.length === 1 && arg.expressions.length === 0) {
              modules.strings.push(arg.quasis[0].value.raw);
            } else {
              modules.expressions.push(src.slice(arg.start, arg.end));
            }
          }
          if (opts.nodes)
            modules.nodes.push(node);
        }
      }
      walk.recursive(ast, null, {
        Statement: visit,
        Expression: visit
      });
      return modules;
    };
  }
});
var require_getModuleDependencies = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/getModuleDependencies.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => getModuleDependencies
    });
    var _fs = _interopRequireDefault(require_browserify_fs());
    var _path = _interopRequireDefault(require_path_browserify());
    var _resolve = _interopRequireDefault(require_resolve());
    var _detective = _interopRequireDefault(require_detective());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function createModule(file) {
      const source = _fs.default.readFileSync(file, "utf-8");
      const requires = (0, _detective.default)(source);
      return {
        file,
        requires
      };
    }
    function getModuleDependencies(entryFile) {
      const rootModule = createModule(entryFile);
      const modules = [
        rootModule
      ];
      for (const mdl of modules) {
        mdl.requires.filter((dep) => {
          return dep.startsWith("./") || dep.startsWith("../");
        }).forEach((dep) => {
          try {
            const basedir = _path.default.dirname(mdl.file);
            const depPath = _resolve.default.sync(dep, {
              basedir
            });
            const depModule = createModule(depPath);
            modules.push(depModule);
          } catch (_err) {
          }
        });
      }
      return modules;
    }
  }
});
var require_negateValue = __commonJS({
  "../../node_modules/tailwindcss/lib/util/negateValue.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    function _default(value) {
      value = `${value}`;
      if (value === "0") {
        return "0";
      }
      if (/^[+-]?(\d+|\d*\.\d+)(e[+-]?\d+)?(%|\w+)?$/.test(value)) {
        return value.replace(/^[+-]?/, (sign) => sign === "-" ? "" : "-");
      }
      if (value.includes("var(") || value.includes("calc(")) {
        return `calc(${value} * -1)`;
      }
    }
  }
});
var require_corePluginList = __commonJS({
  "../../node_modules/tailwindcss/lib/corePluginList.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    var _default = [
      "preflight",
      "container",
      "accessibility",
      "pointerEvents",
      "visibility",
      "position",
      "inset",
      "isolation",
      "zIndex",
      "order",
      "gridColumn",
      "gridColumnStart",
      "gridColumnEnd",
      "gridRow",
      "gridRowStart",
      "gridRowEnd",
      "float",
      "clear",
      "margin",
      "boxSizing",
      "display",
      "aspectRatio",
      "height",
      "maxHeight",
      "minHeight",
      "width",
      "minWidth",
      "maxWidth",
      "flex",
      "flexShrink",
      "flexGrow",
      "flexBasis",
      "tableLayout",
      "borderCollapse",
      "borderSpacing",
      "transformOrigin",
      "translate",
      "rotate",
      "skew",
      "scale",
      "transform",
      "animation",
      "cursor",
      "touchAction",
      "userSelect",
      "resize",
      "scrollSnapType",
      "scrollSnapAlign",
      "scrollSnapStop",
      "scrollMargin",
      "scrollPadding",
      "listStylePosition",
      "listStyleType",
      "appearance",
      "columns",
      "breakBefore",
      "breakInside",
      "breakAfter",
      "gridAutoColumns",
      "gridAutoFlow",
      "gridAutoRows",
      "gridTemplateColumns",
      "gridTemplateRows",
      "flexDirection",
      "flexWrap",
      "placeContent",
      "placeItems",
      "alignContent",
      "alignItems",
      "justifyContent",
      "justifyItems",
      "gap",
      "space",
      "divideWidth",
      "divideStyle",
      "divideColor",
      "divideOpacity",
      "placeSelf",
      "alignSelf",
      "justifySelf",
      "overflow",
      "overscrollBehavior",
      "scrollBehavior",
      "textOverflow",
      "whitespace",
      "wordBreak",
      "borderRadius",
      "borderWidth",
      "borderStyle",
      "borderColor",
      "borderOpacity",
      "backgroundColor",
      "backgroundOpacity",
      "backgroundImage",
      "gradientColorStops",
      "boxDecorationBreak",
      "backgroundSize",
      "backgroundAttachment",
      "backgroundClip",
      "backgroundPosition",
      "backgroundRepeat",
      "backgroundOrigin",
      "fill",
      "stroke",
      "strokeWidth",
      "objectFit",
      "objectPosition",
      "padding",
      "textAlign",
      "textIndent",
      "verticalAlign",
      "fontFamily",
      "fontSize",
      "fontWeight",
      "textTransform",
      "fontStyle",
      "fontVariantNumeric",
      "lineHeight",
      "letterSpacing",
      "textColor",
      "textOpacity",
      "textDecoration",
      "textDecorationColor",
      "textDecorationStyle",
      "textDecorationThickness",
      "textUnderlineOffset",
      "fontSmoothing",
      "placeholderColor",
      "placeholderOpacity",
      "caretColor",
      "accentColor",
      "opacity",
      "backgroundBlendMode",
      "mixBlendMode",
      "boxShadow",
      "boxShadowColor",
      "outlineStyle",
      "outlineWidth",
      "outlineOffset",
      "outlineColor",
      "ringWidth",
      "ringColor",
      "ringOpacity",
      "ringOffsetWidth",
      "ringOffsetColor",
      "blur",
      "brightness",
      "contrast",
      "dropShadow",
      "grayscale",
      "hueRotate",
      "invert",
      "saturate",
      "sepia",
      "filter",
      "backdropBlur",
      "backdropBrightness",
      "backdropContrast",
      "backdropGrayscale",
      "backdropHueRotate",
      "backdropInvert",
      "backdropOpacity",
      "backdropSaturate",
      "backdropSepia",
      "backdropFilter",
      "transitionProperty",
      "transitionDelay",
      "transitionDuration",
      "transitionTimingFunction",
      "willChange",
      "content"
    ];
  }
});
var require_configurePlugins = __commonJS({
  "../../node_modules/tailwindcss/lib/util/configurePlugins.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    function _default(pluginConfig, plugins) {
      if (pluginConfig === void 0) {
        return plugins;
      }
      const pluginNames = Array.isArray(pluginConfig) ? pluginConfig : [
        ...new Set(plugins.filter((pluginName) => {
          return pluginConfig !== false && pluginConfig[pluginName] !== false;
        }).concat(Object.keys(pluginConfig).filter((pluginName) => {
          return pluginConfig[pluginName] !== false;
        })))
      ];
      return pluginNames;
    }
  }
});
var require_defaultConfig_stub = __commonJS({
  "../../node_modules/tailwindcss/stubs/defaultConfig.stub.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = {
      content: [],
      presets: [],
      darkMode: "media",
      theme: {
        screens: {
          sm: "640px",
          md: "768px",
          lg: "1024px",
          xl: "1280px",
          "2xl": "1536px"
        },
        colors: ({ colors }) => ({
          inherit: colors.inherit,
          current: colors.current,
          transparent: colors.transparent,
          black: colors.black,
          white: colors.white,
          slate: colors.slate,
          gray: colors.gray,
          zinc: colors.zinc,
          neutral: colors.neutral,
          stone: colors.stone,
          red: colors.red,
          orange: colors.orange,
          amber: colors.amber,
          yellow: colors.yellow,
          lime: colors.lime,
          green: colors.green,
          emerald: colors.emerald,
          teal: colors.teal,
          cyan: colors.cyan,
          sky: colors.sky,
          blue: colors.blue,
          indigo: colors.indigo,
          violet: colors.violet,
          purple: colors.purple,
          fuchsia: colors.fuchsia,
          pink: colors.pink,
          rose: colors.rose
        }),
        columns: {
          auto: "auto",
          1: "1",
          2: "2",
          3: "3",
          4: "4",
          5: "5",
          6: "6",
          7: "7",
          8: "8",
          9: "9",
          10: "10",
          11: "11",
          12: "12",
          "3xs": "16rem",
          "2xs": "18rem",
          xs: "20rem",
          sm: "24rem",
          md: "28rem",
          lg: "32rem",
          xl: "36rem",
          "2xl": "42rem",
          "3xl": "48rem",
          "4xl": "56rem",
          "5xl": "64rem",
          "6xl": "72rem",
          "7xl": "80rem"
        },
        spacing: {
          px: "1px",
          0: "0px",
          0.5: "0.125rem",
          1: "0.25rem",
          1.5: "0.375rem",
          2: "0.5rem",
          2.5: "0.625rem",
          3: "0.75rem",
          3.5: "0.875rem",
          4: "1rem",
          5: "1.25rem",
          6: "1.5rem",
          7: "1.75rem",
          8: "2rem",
          9: "2.25rem",
          10: "2.5rem",
          11: "2.75rem",
          12: "3rem",
          14: "3.5rem",
          16: "4rem",
          20: "5rem",
          24: "6rem",
          28: "7rem",
          32: "8rem",
          36: "9rem",
          40: "10rem",
          44: "11rem",
          48: "12rem",
          52: "13rem",
          56: "14rem",
          60: "15rem",
          64: "16rem",
          72: "18rem",
          80: "20rem",
          96: "24rem"
        },
        animation: {
          none: "none",
          spin: "spin 1s linear infinite",
          ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",
          pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
          bounce: "bounce 1s infinite"
        },
        aspectRatio: {
          auto: "auto",
          square: "1 / 1",
          video: "16 / 9"
        },
        backdropBlur: ({ theme }) => theme("blur"),
        backdropBrightness: ({ theme }) => theme("brightness"),
        backdropContrast: ({ theme }) => theme("contrast"),
        backdropGrayscale: ({ theme }) => theme("grayscale"),
        backdropHueRotate: ({ theme }) => theme("hueRotate"),
        backdropInvert: ({ theme }) => theme("invert"),
        backdropOpacity: ({ theme }) => theme("opacity"),
        backdropSaturate: ({ theme }) => theme("saturate"),
        backdropSepia: ({ theme }) => theme("sepia"),
        backgroundColor: ({ theme }) => theme("colors"),
        backgroundImage: {
          none: "none",
          "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))",
          "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))",
          "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))",
          "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))",
          "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))",
          "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))",
          "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))",
          "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))"
        },
        backgroundOpacity: ({ theme }) => theme("opacity"),
        backgroundPosition: {
          bottom: "bottom",
          center: "center",
          left: "left",
          "left-bottom": "left bottom",
          "left-top": "left top",
          right: "right",
          "right-bottom": "right bottom",
          "right-top": "right top",
          top: "top"
        },
        backgroundSize: {
          auto: "auto",
          cover: "cover",
          contain: "contain"
        },
        blur: {
          0: "0",
          none: "0",
          sm: "4px",
          DEFAULT: "8px",
          md: "12px",
          lg: "16px",
          xl: "24px",
          "2xl": "40px",
          "3xl": "64px"
        },
        brightness: {
          0: "0",
          50: ".5",
          75: ".75",
          90: ".9",
          95: ".95",
          100: "1",
          105: "1.05",
          110: "1.1",
          125: "1.25",
          150: "1.5",
          200: "2"
        },
        borderColor: ({ theme }) => ({
          ...theme("colors"),
          DEFAULT: theme("colors.gray.200", "currentColor")
        }),
        borderOpacity: ({ theme }) => theme("opacity"),
        borderRadius: {
          none: "0px",
          sm: "0.125rem",
          DEFAULT: "0.25rem",
          md: "0.375rem",
          lg: "0.5rem",
          xl: "0.75rem",
          "2xl": "1rem",
          "3xl": "1.5rem",
          full: "9999px"
        },
        borderSpacing: ({ theme }) => ({
          ...theme("spacing")
        }),
        borderWidth: {
          DEFAULT: "1px",
          0: "0px",
          2: "2px",
          4: "4px",
          8: "8px"
        },
        boxShadow: {
          sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
          DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
          md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
          lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
          xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
          "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)",
          inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
          none: "none"
        },
        boxShadowColor: ({ theme }) => theme("colors"),
        caretColor: ({ theme }) => theme("colors"),
        accentColor: ({ theme }) => ({
          ...theme("colors"),
          auto: "auto"
        }),
        contrast: {
          0: "0",
          50: ".5",
          75: ".75",
          100: "1",
          125: "1.25",
          150: "1.5",
          200: "2"
        },
        container: {},
        content: {
          none: "none"
        },
        cursor: {
          auto: "auto",
          default: "default",
          pointer: "pointer",
          wait: "wait",
          text: "text",
          move: "move",
          help: "help",
          "not-allowed": "not-allowed",
          none: "none",
          "context-menu": "context-menu",
          progress: "progress",
          cell: "cell",
          crosshair: "crosshair",
          "vertical-text": "vertical-text",
          alias: "alias",
          copy: "copy",
          "no-drop": "no-drop",
          grab: "grab",
          grabbing: "grabbing",
          "all-scroll": "all-scroll",
          "col-resize": "col-resize",
          "row-resize": "row-resize",
          "n-resize": "n-resize",
          "e-resize": "e-resize",
          "s-resize": "s-resize",
          "w-resize": "w-resize",
          "ne-resize": "ne-resize",
          "nw-resize": "nw-resize",
          "se-resize": "se-resize",
          "sw-resize": "sw-resize",
          "ew-resize": "ew-resize",
          "ns-resize": "ns-resize",
          "nesw-resize": "nesw-resize",
          "nwse-resize": "nwse-resize",
          "zoom-in": "zoom-in",
          "zoom-out": "zoom-out"
        },
        divideColor: ({ theme }) => theme("borderColor"),
        divideOpacity: ({ theme }) => theme("borderOpacity"),
        divideWidth: ({ theme }) => theme("borderWidth"),
        dropShadow: {
          sm: "0 1px 1px rgb(0 0 0 / 0.05)",
          DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"],
          md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"],
          lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"],
          xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"],
          "2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
          none: "0 0 #0000"
        },
        fill: ({ theme }) => theme("colors"),
        grayscale: {
          0: "0",
          DEFAULT: "100%"
        },
        hueRotate: {
          0: "0deg",
          15: "15deg",
          30: "30deg",
          60: "60deg",
          90: "90deg",
          180: "180deg"
        },
        invert: {
          0: "0",
          DEFAULT: "100%"
        },
        flex: {
          1: "1 1 0%",
          auto: "1 1 auto",
          initial: "0 1 auto",
          none: "none"
        },
        flexBasis: ({ theme }) => ({
          auto: "auto",
          ...theme("spacing"),
          "1/2": "50%",
          "1/3": "33.333333%",
          "2/3": "66.666667%",
          "1/4": "25%",
          "2/4": "50%",
          "3/4": "75%",
          "1/5": "20%",
          "2/5": "40%",
          "3/5": "60%",
          "4/5": "80%",
          "1/6": "16.666667%",
          "2/6": "33.333333%",
          "3/6": "50%",
          "4/6": "66.666667%",
          "5/6": "83.333333%",
          "1/12": "8.333333%",
          "2/12": "16.666667%",
          "3/12": "25%",
          "4/12": "33.333333%",
          "5/12": "41.666667%",
          "6/12": "50%",
          "7/12": "58.333333%",
          "8/12": "66.666667%",
          "9/12": "75%",
          "10/12": "83.333333%",
          "11/12": "91.666667%",
          full: "100%"
        }),
        flexGrow: {
          0: "0",
          DEFAULT: "1"
        },
        flexShrink: {
          0: "0",
          DEFAULT: "1"
        },
        fontFamily: {
          sans: [
            "ui-sans-serif",
            "system-ui",
            "-apple-system",
            "BlinkMacSystemFont",
            '"Segoe UI"',
            "Roboto",
            '"Helvetica Neue"',
            "Arial",
            '"Noto Sans"',
            "sans-serif",
            '"Apple Color Emoji"',
            '"Segoe UI Emoji"',
            '"Segoe UI Symbol"',
            '"Noto Color Emoji"'
          ],
          serif: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"],
          mono: [
            "ui-monospace",
            "SFMono-Regular",
            "Menlo",
            "Monaco",
            "Consolas",
            '"Liberation Mono"',
            '"Courier New"',
            "monospace"
          ]
        },
        fontSize: {
          xs: ["0.75rem", { lineHeight: "1rem" }],
          sm: ["0.875rem", { lineHeight: "1.25rem" }],
          base: ["1rem", { lineHeight: "1.5rem" }],
          lg: ["1.125rem", { lineHeight: "1.75rem" }],
          xl: ["1.25rem", { lineHeight: "1.75rem" }],
          "2xl": ["1.5rem", { lineHeight: "2rem" }],
          "3xl": ["1.875rem", { lineHeight: "2.25rem" }],
          "4xl": ["2.25rem", { lineHeight: "2.5rem" }],
          "5xl": ["3rem", { lineHeight: "1" }],
          "6xl": ["3.75rem", { lineHeight: "1" }],
          "7xl": ["4.5rem", { lineHeight: "1" }],
          "8xl": ["6rem", { lineHeight: "1" }],
          "9xl": ["8rem", { lineHeight: "1" }]
        },
        fontWeight: {
          thin: "100",
          extralight: "200",
          light: "300",
          normal: "400",
          medium: "500",
          semibold: "600",
          bold: "700",
          extrabold: "800",
          black: "900"
        },
        gap: ({ theme }) => theme("spacing"),
        gradientColorStops: ({ theme }) => theme("colors"),
        gridAutoColumns: {
          auto: "auto",
          min: "min-content",
          max: "max-content",
          fr: "minmax(0, 1fr)"
        },
        gridAutoRows: {
          auto: "auto",
          min: "min-content",
          max: "max-content",
          fr: "minmax(0, 1fr)"
        },
        gridColumn: {
          auto: "auto",
          "span-1": "span 1 / span 1",
          "span-2": "span 2 / span 2",
          "span-3": "span 3 / span 3",
          "span-4": "span 4 / span 4",
          "span-5": "span 5 / span 5",
          "span-6": "span 6 / span 6",
          "span-7": "span 7 / span 7",
          "span-8": "span 8 / span 8",
          "span-9": "span 9 / span 9",
          "span-10": "span 10 / span 10",
          "span-11": "span 11 / span 11",
          "span-12": "span 12 / span 12",
          "span-full": "1 / -1"
        },
        gridColumnEnd: {
          auto: "auto",
          1: "1",
          2: "2",
          3: "3",
          4: "4",
          5: "5",
          6: "6",
          7: "7",
          8: "8",
          9: "9",
          10: "10",
          11: "11",
          12: "12",
          13: "13"
        },
        gridColumnStart: {
          auto: "auto",
          1: "1",
          2: "2",
          3: "3",
          4: "4",
          5: "5",
          6: "6",
          7: "7",
          8: "8",
          9: "9",
          10: "10",
          11: "11",
          12: "12",
          13: "13"
        },
        gridRow: {
          auto: "auto",
          "span-1": "span 1 / span 1",
          "span-2": "span 2 / span 2",
          "span-3": "span 3 / span 3",
          "span-4": "span 4 / span 4",
          "span-5": "span 5 / span 5",
          "span-6": "span 6 / span 6",
          "span-full": "1 / -1"
        },
        gridRowStart: {
          auto: "auto",
          1: "1",
          2: "2",
          3: "3",
          4: "4",
          5: "5",
          6: "6",
          7: "7"
        },
        gridRowEnd: {
          auto: "auto",
          1: "1",
          2: "2",
          3: "3",
          4: "4",
          5: "5",
          6: "6",
          7: "7"
        },
        gridTemplateColumns: {
          none: "none",
          1: "repeat(1, minmax(0, 1fr))",
          2: "repeat(2, minmax(0, 1fr))",
          3: "repeat(3, minmax(0, 1fr))",
          4: "repeat(4, minmax(0, 1fr))",
          5: "repeat(5, minmax(0, 1fr))",
          6: "repeat(6, minmax(0, 1fr))",
          7: "repeat(7, minmax(0, 1fr))",
          8: "repeat(8, minmax(0, 1fr))",
          9: "repeat(9, minmax(0, 1fr))",
          10: "repeat(10, minmax(0, 1fr))",
          11: "repeat(11, minmax(0, 1fr))",
          12: "repeat(12, minmax(0, 1fr))"
        },
        gridTemplateRows: {
          none: "none",
          1: "repeat(1, minmax(0, 1fr))",
          2: "repeat(2, minmax(0, 1fr))",
          3: "repeat(3, minmax(0, 1fr))",
          4: "repeat(4, minmax(0, 1fr))",
          5: "repeat(5, minmax(0, 1fr))",
          6: "repeat(6, minmax(0, 1fr))"
        },
        height: ({ theme }) => ({
          auto: "auto",
          ...theme("spacing"),
          "1/2": "50%",
          "1/3": "33.333333%",
          "2/3": "66.666667%",
          "1/4": "25%",
          "2/4": "50%",
          "3/4": "75%",
          "1/5": "20%",
          "2/5": "40%",
          "3/5": "60%",
          "4/5": "80%",
          "1/6": "16.666667%",
          "2/6": "33.333333%",
          "3/6": "50%",
          "4/6": "66.666667%",
          "5/6": "83.333333%",
          full: "100%",
          screen: "100vh",
          min: "min-content",
          max: "max-content",
          fit: "fit-content"
        }),
        inset: ({ theme }) => ({
          auto: "auto",
          ...theme("spacing"),
          "1/2": "50%",
          "1/3": "33.333333%",
          "2/3": "66.666667%",
          "1/4": "25%",
          "2/4": "50%",
          "3/4": "75%",
          full: "100%"
        }),
        keyframes: {
          spin: {
            to: {
              transform: "rotate(360deg)"
            }
          },
          ping: {
            "75%, 100%": {
              transform: "scale(2)",
              opacity: "0"
            }
          },
          pulse: {
            "50%": {
              opacity: ".5"
            }
          },
          bounce: {
            "0%, 100%": {
              transform: "translateY(-25%)",
              animationTimingFunction: "cubic-bezier(0.8,0,1,1)"
            },
            "50%": {
              transform: "none",
              animationTimingFunction: "cubic-bezier(0,0,0.2,1)"
            }
          }
        },
        letterSpacing: {
          tighter: "-0.05em",
          tight: "-0.025em",
          normal: "0em",
          wide: "0.025em",
          wider: "0.05em",
          widest: "0.1em"
        },
        lineHeight: {
          none: "1",
          tight: "1.25",
          snug: "1.375",
          normal: "1.5",
          relaxed: "1.625",
          loose: "2",
          3: ".75rem",
          4: "1rem",
          5: "1.25rem",
          6: "1.5rem",
          7: "1.75rem",
          8: "2rem",
          9: "2.25rem",
          10: "2.5rem"
        },
        listStyleType: {
          none: "none",
          disc: "disc",
          decimal: "decimal"
        },
        margin: ({ theme }) => ({
          auto: "auto",
          ...theme("spacing")
        }),
        maxHeight: ({ theme }) => ({
          ...theme("spacing"),
          full: "100%",
          screen: "100vh",
          min: "min-content",
          max: "max-content",
          fit: "fit-content"
        }),
        maxWidth: ({ theme, breakpoints }) => ({
          none: "none",
          0: "0rem",
          xs: "20rem",
          sm: "24rem",
          md: "28rem",
          lg: "32rem",
          xl: "36rem",
          "2xl": "42rem",
          "3xl": "48rem",
          "4xl": "56rem",
          "5xl": "64rem",
          "6xl": "72rem",
          "7xl": "80rem",
          full: "100%",
          min: "min-content",
          max: "max-content",
          fit: "fit-content",
          prose: "65ch",
          ...breakpoints(theme("screens"))
        }),
        minHeight: {
          0: "0px",
          full: "100%",
          screen: "100vh",
          min: "min-content",
          max: "max-content",
          fit: "fit-content"
        },
        minWidth: {
          0: "0px",
          full: "100%",
          min: "min-content",
          max: "max-content",
          fit: "fit-content"
        },
        objectPosition: {
          bottom: "bottom",
          center: "center",
          left: "left",
          "left-bottom": "left bottom",
          "left-top": "left top",
          right: "right",
          "right-bottom": "right bottom",
          "right-top": "right top",
          top: "top"
        },
        opacity: {
          0: "0",
          5: "0.05",
          10: "0.1",
          20: "0.2",
          25: "0.25",
          30: "0.3",
          40: "0.4",
          50: "0.5",
          60: "0.6",
          70: "0.7",
          75: "0.75",
          80: "0.8",
          90: "0.9",
          95: "0.95",
          100: "1"
        },
        order: {
          first: "-9999",
          last: "9999",
          none: "0",
          1: "1",
          2: "2",
          3: "3",
          4: "4",
          5: "5",
          6: "6",
          7: "7",
          8: "8",
          9: "9",
          10: "10",
          11: "11",
          12: "12"
        },
        padding: ({ theme }) => theme("spacing"),
        placeholderColor: ({ theme }) => theme("colors"),
        placeholderOpacity: ({ theme }) => theme("opacity"),
        outlineColor: ({ theme }) => theme("colors"),
        outlineOffset: {
          0: "0px",
          1: "1px",
          2: "2px",
          4: "4px",
          8: "8px"
        },
        outlineWidth: {
          0: "0px",
          1: "1px",
          2: "2px",
          4: "4px",
          8: "8px"
        },
        ringColor: ({ theme }) => ({
          DEFAULT: theme(`colors.blue.500`, "#3b82f6"),
          ...theme("colors")
        }),
        ringOffsetColor: ({ theme }) => theme("colors"),
        ringOffsetWidth: {
          0: "0px",
          1: "1px",
          2: "2px",
          4: "4px",
          8: "8px"
        },
        ringOpacity: ({ theme }) => ({
          DEFAULT: "0.5",
          ...theme("opacity")
        }),
        ringWidth: {
          DEFAULT: "3px",
          0: "0px",
          1: "1px",
          2: "2px",
          4: "4px",
          8: "8px"
        },
        rotate: {
          0: "0deg",
          1: "1deg",
          2: "2deg",
          3: "3deg",
          6: "6deg",
          12: "12deg",
          45: "45deg",
          90: "90deg",
          180: "180deg"
        },
        saturate: {
          0: "0",
          50: ".5",
          100: "1",
          150: "1.5",
          200: "2"
        },
        scale: {
          0: "0",
          50: ".5",
          75: ".75",
          90: ".9",
          95: ".95",
          100: "1",
          105: "1.05",
          110: "1.1",
          125: "1.25",
          150: "1.5"
        },
        scrollMargin: ({ theme }) => ({
          ...theme("spacing")
        }),
        scrollPadding: ({ theme }) => theme("spacing"),
        sepia: {
          0: "0",
          DEFAULT: "100%"
        },
        skew: {
          0: "0deg",
          1: "1deg",
          2: "2deg",
          3: "3deg",
          6: "6deg",
          12: "12deg"
        },
        space: ({ theme }) => ({
          ...theme("spacing")
        }),
        stroke: ({ theme }) => theme("colors"),
        strokeWidth: {
          0: "0",
          1: "1",
          2: "2"
        },
        textColor: ({ theme }) => theme("colors"),
        textDecorationColor: ({ theme }) => theme("colors"),
        textDecorationThickness: {
          auto: "auto",
          "from-font": "from-font",
          0: "0px",
          1: "1px",
          2: "2px",
          4: "4px",
          8: "8px"
        },
        textUnderlineOffset: {
          auto: "auto",
          0: "0px",
          1: "1px",
          2: "2px",
          4: "4px",
          8: "8px"
        },
        textIndent: ({ theme }) => ({
          ...theme("spacing")
        }),
        textOpacity: ({ theme }) => theme("opacity"),
        transformOrigin: {
          center: "center",
          top: "top",
          "top-right": "top right",
          right: "right",
          "bottom-right": "bottom right",
          bottom: "bottom",
          "bottom-left": "bottom left",
          left: "left",
          "top-left": "top left"
        },
        transitionDelay: {
          75: "75ms",
          100: "100ms",
          150: "150ms",
          200: "200ms",
          300: "300ms",
          500: "500ms",
          700: "700ms",
          1e3: "1000ms"
        },
        transitionDuration: {
          DEFAULT: "150ms",
          75: "75ms",
          100: "100ms",
          150: "150ms",
          200: "200ms",
          300: "300ms",
          500: "500ms",
          700: "700ms",
          1e3: "1000ms"
        },
        transitionProperty: {
          none: "none",
          all: "all",
          DEFAULT: "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
          colors: "color, background-color, border-color, text-decoration-color, fill, stroke",
          opacity: "opacity",
          shadow: "box-shadow",
          transform: "transform"
        },
        transitionTimingFunction: {
          DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)",
          linear: "linear",
          in: "cubic-bezier(0.4, 0, 1, 1)",
          out: "cubic-bezier(0, 0, 0.2, 1)",
          "in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
        },
        translate: ({ theme }) => ({
          ...theme("spacing"),
          "1/2": "50%",
          "1/3": "33.333333%",
          "2/3": "66.666667%",
          "1/4": "25%",
          "2/4": "50%",
          "3/4": "75%",
          full: "100%"
        }),
        width: ({ theme }) => ({
          auto: "auto",
          ...theme("spacing"),
          "1/2": "50%",
          "1/3": "33.333333%",
          "2/3": "66.666667%",
          "1/4": "25%",
          "2/4": "50%",
          "3/4": "75%",
          "1/5": "20%",
          "2/5": "40%",
          "3/5": "60%",
          "4/5": "80%",
          "1/6": "16.666667%",
          "2/6": "33.333333%",
          "3/6": "50%",
          "4/6": "66.666667%",
          "5/6": "83.333333%",
          "1/12": "8.333333%",
          "2/12": "16.666667%",
          "3/12": "25%",
          "4/12": "33.333333%",
          "5/12": "41.666667%",
          "6/12": "50%",
          "7/12": "58.333333%",
          "8/12": "66.666667%",
          "9/12": "75%",
          "10/12": "83.333333%",
          "11/12": "91.666667%",
          full: "100%",
          screen: "100vw",
          min: "min-content",
          max: "max-content",
          fit: "fit-content"
        }),
        willChange: {
          auto: "auto",
          scroll: "scroll-position",
          contents: "contents",
          transform: "transform"
        },
        zIndex: {
          auto: "auto",
          0: "0",
          10: "10",
          20: "20",
          30: "30",
          40: "40",
          50: "50"
        }
      },
      variantOrder: [
        "first",
        "last",
        "odd",
        "even",
        "visited",
        "checked",
        "empty",
        "read-only",
        "group-hover",
        "group-focus",
        "focus-within",
        "hover",
        "focus",
        "focus-visible",
        "active",
        "disabled"
      ],
      plugins: []
    };
  }
});
var require_log = __commonJS({
  "../../node_modules/tailwindcss/lib/util/log.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      dim: () => dim,
      default: () => _default
    });
    var _picocolors = _interopRequireDefault(require_picocolors_browser());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var alreadyShown = /* @__PURE__ */ new Set();
    function log(type, messages, key) {
      if (typeof process !== "undefined" && process.env.JEST_WORKER_ID)
        return;
      if (key && alreadyShown.has(key))
        return;
      if (key)
        alreadyShown.add(key);
      console.warn("");
      messages.forEach((message) => console.warn(type, "-", message));
    }
    function dim(input) {
      return _picocolors.default.dim(input);
    }
    var _default = {
      info(key, messages) {
        log(_picocolors.default.bold(_picocolors.default.cyan("info")), ...Array.isArray(key) ? [
          key
        ] : [
          messages,
          key
        ]);
      },
      warn(key, messages) {
        log(_picocolors.default.bold(_picocolors.default.yellow("warn")), ...Array.isArray(key) ? [
          key
        ] : [
          messages,
          key
        ]);
      },
      risk(key, messages) {
        log(_picocolors.default.bold(_picocolors.default.magenta("risk")), ...Array.isArray(key) ? [
          key
        ] : [
          messages,
          key
        ]);
      }
    };
  }
});
var require_colors = __commonJS({
  "../../node_modules/tailwindcss/lib/public/colors.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    var _log = _interopRequireDefault(require_log());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function warn({ version, from, to }) {
      _log.default.warn(`${from}-color-renamed`, [
        `As of Tailwind CSS ${version}, \`${from}\` has been renamed to \`${to}\`.`,
        "Update your configuration file to silence this warning."
      ]);
    }
    var _default = {
      inherit: "inherit",
      current: "currentColor",
      transparent: "transparent",
      black: "#000",
      white: "#fff",
      slate: {
        50: "#f8fafc",
        100: "#f1f5f9",
        200: "#e2e8f0",
        300: "#cbd5e1",
        400: "#94a3b8",
        500: "#64748b",
        600: "#475569",
        700: "#334155",
        800: "#1e293b",
        900: "#0f172a"
      },
      gray: {
        50: "#f9fafb",
        100: "#f3f4f6",
        200: "#e5e7eb",
        300: "#d1d5db",
        400: "#9ca3af",
        500: "#6b7280",
        600: "#4b5563",
        700: "#374151",
        800: "#1f2937",
        900: "#111827"
      },
      zinc: {
        50: "#fafafa",
        100: "#f4f4f5",
        200: "#e4e4e7",
        300: "#d4d4d8",
        400: "#a1a1aa",
        500: "#71717a",
        600: "#52525b",
        700: "#3f3f46",
        800: "#27272a",
        900: "#18181b"
      },
      neutral: {
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#e5e5e5",
        300: "#d4d4d4",
        400: "#a3a3a3",
        500: "#737373",
        600: "#525252",
        700: "#404040",
        800: "#262626",
        900: "#171717"
      },
      stone: {
        50: "#fafaf9",
        100: "#f5f5f4",
        200: "#e7e5e4",
        300: "#d6d3d1",
        400: "#a8a29e",
        500: "#78716c",
        600: "#57534e",
        700: "#44403c",
        800: "#292524",
        900: "#1c1917"
      },
      red: {
        50: "#fef2f2",
        100: "#fee2e2",
        200: "#fecaca",
        300: "#fca5a5",
        400: "#f87171",
        500: "#ef4444",
        600: "#dc2626",
        700: "#b91c1c",
        800: "#991b1b",
        900: "#7f1d1d"
      },
      orange: {
        50: "#fff7ed",
        100: "#ffedd5",
        200: "#fed7aa",
        300: "#fdba74",
        400: "#fb923c",
        500: "#f97316",
        600: "#ea580c",
        700: "#c2410c",
        800: "#9a3412",
        900: "#7c2d12"
      },
      amber: {
        50: "#fffbeb",
        100: "#fef3c7",
        200: "#fde68a",
        300: "#fcd34d",
        400: "#fbbf24",
        500: "#f59e0b",
        600: "#d97706",
        700: "#b45309",
        800: "#92400e",
        900: "#78350f"
      },
      yellow: {
        50: "#fefce8",
        100: "#fef9c3",
        200: "#fef08a",
        300: "#fde047",
        400: "#facc15",
        500: "#eab308",
        600: "#ca8a04",
        700: "#a16207",
        800: "#854d0e",
        900: "#713f12"
      },
      lime: {
        50: "#f7fee7",
        100: "#ecfccb",
        200: "#d9f99d",
        300: "#bef264",
        400: "#a3e635",
        500: "#84cc16",
        600: "#65a30d",
        700: "#4d7c0f",
        800: "#3f6212",
        900: "#365314"
      },
      green: {
        50: "#f0fdf4",
        100: "#dcfce7",
        200: "#bbf7d0",
        300: "#86efac",
        400: "#4ade80",
        500: "#22c55e",
        600: "#16a34a",
        700: "#15803d",
        800: "#166534",
        900: "#14532d"
      },
      emerald: {
        50: "#ecfdf5",
        100: "#d1fae5",
        200: "#a7f3d0",
        300: "#6ee7b7",
        400: "#34d399",
        500: "#10b981",
        600: "#059669",
        700: "#047857",
        800: "#065f46",
        900: "#064e3b"
      },
      teal: {
        50: "#f0fdfa",
        100: "#ccfbf1",
        200: "#99f6e4",
        300: "#5eead4",
        400: "#2dd4bf",
        500: "#14b8a6",
        600: "#0d9488",
        700: "#0f766e",
        800: "#115e59",
        900: "#134e4a"
      },
      cyan: {
        50: "#ecfeff",
        100: "#cffafe",
        200: "#a5f3fc",
        300: "#67e8f9",
        400: "#22d3ee",
        500: "#06b6d4",
        600: "#0891b2",
        700: "#0e7490",
        800: "#155e75",
        900: "#164e63"
      },
      sky: {
        50: "#f0f9ff",
        100: "#e0f2fe",
        200: "#bae6fd",
        300: "#7dd3fc",
        400: "#38bdf8",
        500: "#0ea5e9",
        600: "#0284c7",
        700: "#0369a1",
        800: "#075985",
        900: "#0c4a6e"
      },
      blue: {
        50: "#eff6ff",
        100: "#dbeafe",
        200: "#bfdbfe",
        300: "#93c5fd",
        400: "#60a5fa",
        500: "#3b82f6",
        600: "#2563eb",
        700: "#1d4ed8",
        800: "#1e40af",
        900: "#1e3a8a"
      },
      indigo: {
        50: "#eef2ff",
        100: "#e0e7ff",
        200: "#c7d2fe",
        300: "#a5b4fc",
        400: "#818cf8",
        500: "#6366f1",
        600: "#4f46e5",
        700: "#4338ca",
        800: "#3730a3",
        900: "#312e81"
      },
      violet: {
        50: "#f5f3ff",
        100: "#ede9fe",
        200: "#ddd6fe",
        300: "#c4b5fd",
        400: "#a78bfa",
        500: "#8b5cf6",
        600: "#7c3aed",
        700: "#6d28d9",
        800: "#5b21b6",
        900: "#4c1d95"
      },
      purple: {
        50: "#faf5ff",
        100: "#f3e8ff",
        200: "#e9d5ff",
        300: "#d8b4fe",
        400: "#c084fc",
        500: "#a855f7",
        600: "#9333ea",
        700: "#7e22ce",
        800: "#6b21a8",
        900: "#581c87"
      },
      fuchsia: {
        50: "#fdf4ff",
        100: "#fae8ff",
        200: "#f5d0fe",
        300: "#f0abfc",
        400: "#e879f9",
        500: "#d946ef",
        600: "#c026d3",
        700: "#a21caf",
        800: "#86198f",
        900: "#701a75"
      },
      pink: {
        50: "#fdf2f8",
        100: "#fce7f3",
        200: "#fbcfe8",
        300: "#f9a8d4",
        400: "#f472b6",
        500: "#ec4899",
        600: "#db2777",
        700: "#be185d",
        800: "#9d174d",
        900: "#831843"
      },
      rose: {
        50: "#fff1f2",
        100: "#ffe4e6",
        200: "#fecdd3",
        300: "#fda4af",
        400: "#fb7185",
        500: "#f43f5e",
        600: "#e11d48",
        700: "#be123c",
        800: "#9f1239",
        900: "#881337"
      },
      get lightBlue() {
        warn({
          version: "v2.2",
          from: "lightBlue",
          to: "sky"
        });
        return this.sky;
      },
      get warmGray() {
        warn({
          version: "v3.0",
          from: "warmGray",
          to: "stone"
        });
        return this.stone;
      },
      get trueGray() {
        warn({
          version: "v3.0",
          from: "trueGray",
          to: "neutral"
        });
        return this.neutral;
      },
      get coolGray() {
        warn({
          version: "v3.0",
          from: "coolGray",
          to: "gray"
        });
        return this.gray;
      },
      get blueGray() {
        warn({
          version: "v3.0",
          from: "blueGray",
          to: "slate"
        });
        return this.slate;
      }
    };
  }
});
var require_defaults = __commonJS({
  "../../node_modules/tailwindcss/lib/util/defaults.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "defaults", {
      enumerable: true,
      get: () => defaults
    });
    function defaults(target, ...sources) {
      for (let source of sources) {
        for (let k in source) {
          var ref;
          if (!(target === null || target === void 0 ? void 0 : (ref = target.hasOwnProperty) === null || ref === void 0 ? void 0 : ref.call(target, k))) {
            target[k] = source[k];
          }
        }
        for (let k1 of Object.getOwnPropertySymbols(source)) {
          var ref1;
          if (!(target === null || target === void 0 ? void 0 : (ref1 = target.hasOwnProperty) === null || ref1 === void 0 ? void 0 : ref1.call(target, k1))) {
            target[k1] = source[k1];
          }
        }
      }
      return target;
    }
  }
});
var require_toPath = __commonJS({
  "../../node_modules/tailwindcss/lib/util/toPath.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "toPath", {
      enumerable: true,
      get: () => toPath
    });
    function toPath(path) {
      if (Array.isArray(path))
        return path;
      let openBrackets = path.split("[").length - 1;
      let closedBrackets = path.split("]").length - 1;
      if (openBrackets !== closedBrackets) {
        throw new Error(`Path is invalid. Has unbalanced brackets: ${path}`);
      }
      return path.split(/\.(?![^\[]*\])|[\[\]]/g).filter(Boolean);
    }
  }
});
var require_normalizeConfig = __commonJS({
  "../../node_modules/tailwindcss/lib/util/normalizeConfig.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "normalizeConfig", {
      enumerable: true,
      get: () => normalizeConfig
    });
    var _log = _interopRequireWildcard(require_log());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function normalizeConfig(config) {
      let valid = (() => {
        if (config.purge) {
          return false;
        }
        if (!config.content) {
          return false;
        }
        if (!Array.isArray(config.content) && !(typeof config.content === "object" && config.content !== null)) {
          return false;
        }
        if (Array.isArray(config.content)) {
          return config.content.every((path) => {
            if (typeof path === "string")
              return true;
            if (typeof (path === null || path === void 0 ? void 0 : path.raw) !== "string")
              return false;
            if ((path === null || path === void 0 ? void 0 : path.extension) && typeof (path === null || path === void 0 ? void 0 : path.extension) !== "string") {
              return false;
            }
            return true;
          });
        }
        if (typeof config.content === "object" && config.content !== null) {
          if (Object.keys(config.content).some((key) => ![
            "files",
            "extract",
            "transform"
          ].includes(key))) {
            return false;
          }
          if (Array.isArray(config.content.files)) {
            if (!config.content.files.every((path) => {
              if (typeof path === "string")
                return true;
              if (typeof (path === null || path === void 0 ? void 0 : path.raw) !== "string")
                return false;
              if ((path === null || path === void 0 ? void 0 : path.extension) && typeof (path === null || path === void 0 ? void 0 : path.extension) !== "string") {
                return false;
              }
              return true;
            })) {
              return false;
            }
            if (typeof config.content.extract === "object") {
              for (let value of Object.values(config.content.extract)) {
                if (typeof value !== "function") {
                  return false;
                }
              }
            } else if (!(config.content.extract === void 0 || typeof config.content.extract === "function")) {
              return false;
            }
            if (typeof config.content.transform === "object") {
              for (let value1 of Object.values(config.content.transform)) {
                if (typeof value1 !== "function") {
                  return false;
                }
              }
            } else if (!(config.content.transform === void 0 || typeof config.content.transform === "function")) {
              return false;
            }
          }
          return true;
        }
        return false;
      })();
      if (!valid) {
        _log.default.warn("purge-deprecation", [
          "The `purge`/`content` options have changed in Tailwind CSS v3.0.",
          "Update your configuration file to eliminate this warning.",
          "https://tailwindcss.com/docs/upgrade-guide#configure-content-sources"
        ]);
      }
      config.safelist = (() => {
        var ref;
        let { content, purge, safelist } = config;
        if (Array.isArray(safelist))
          return safelist;
        if (Array.isArray(content === null || content === void 0 ? void 0 : content.safelist))
          return content.safelist;
        if (Array.isArray(purge === null || purge === void 0 ? void 0 : purge.safelist))
          return purge.safelist;
        if (Array.isArray(purge === null || purge === void 0 ? void 0 : (ref = purge.options) === null || ref === void 0 ? void 0 : ref.safelist))
          return purge.options.safelist;
        return [];
      })();
      if (typeof config.prefix === "function") {
        _log.default.warn("prefix-function", [
          "As of Tailwind CSS v3.0, `prefix` cannot be a function.",
          "Update `prefix` in your configuration to be a string to eliminate this warning.",
          "https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function"
        ]);
        config.prefix = "";
      } else {
        var _prefix;
        config.prefix = (_prefix = config.prefix) !== null && _prefix !== void 0 ? _prefix : "";
      }
      config.content = {
        files: (() => {
          let { content, purge } = config;
          if (Array.isArray(purge))
            return purge;
          if (Array.isArray(purge === null || purge === void 0 ? void 0 : purge.content))
            return purge.content;
          if (Array.isArray(content))
            return content;
          if (Array.isArray(content === null || content === void 0 ? void 0 : content.content))
            return content.content;
          if (Array.isArray(content === null || content === void 0 ? void 0 : content.files))
            return content.files;
          return [];
        })(),
        extract: (() => {
          let extract = (() => {
            var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9;
            if ((ref = config.purge) === null || ref === void 0 ? void 0 : ref.extract)
              return config.purge.extract;
            if ((ref1 = config.content) === null || ref1 === void 0 ? void 0 : ref1.extract)
              return config.content.extract;
            if ((ref2 = config.purge) === null || ref2 === void 0 ? void 0 : (ref3 = ref2.extract) === null || ref3 === void 0 ? void 0 : ref3.DEFAULT)
              return config.purge.extract.DEFAULT;
            if ((ref4 = config.content) === null || ref4 === void 0 ? void 0 : (ref5 = ref4.extract) === null || ref5 === void 0 ? void 0 : ref5.DEFAULT)
              return config.content.extract.DEFAULT;
            if ((ref6 = config.purge) === null || ref6 === void 0 ? void 0 : (ref7 = ref6.options) === null || ref7 === void 0 ? void 0 : ref7.extractors)
              return config.purge.options.extractors;
            if ((ref8 = config.content) === null || ref8 === void 0 ? void 0 : (ref9 = ref8.options) === null || ref9 === void 0 ? void 0 : ref9.extractors)
              return config.content.options.extractors;
            return {};
          })();
          let extractors = {};
          let defaultExtractor = (() => {
            var ref, ref1, ref2, ref3;
            if ((ref = config.purge) === null || ref === void 0 ? void 0 : (ref1 = ref.options) === null || ref1 === void 0 ? void 0 : ref1.defaultExtractor) {
              return config.purge.options.defaultExtractor;
            }
            if ((ref2 = config.content) === null || ref2 === void 0 ? void 0 : (ref3 = ref2.options) === null || ref3 === void 0 ? void 0 : ref3.defaultExtractor) {
              return config.content.options.defaultExtractor;
            }
            return void 0;
          })();
          if (defaultExtractor !== void 0) {
            extractors.DEFAULT = defaultExtractor;
          }
          if (typeof extract === "function") {
            extractors.DEFAULT = extract;
          } else if (Array.isArray(extract)) {
            for (let { extensions, extractor } of extract !== null && extract !== void 0 ? extract : []) {
              for (let extension of extensions) {
                extractors[extension] = extractor;
              }
            }
          } else if (typeof extract === "object" && extract !== null) {
            Object.assign(extractors, extract);
          }
          return extractors;
        })(),
        transform: (() => {
          let transform = (() => {
            var ref, ref1, ref2, ref3, ref4, ref5;
            if ((ref = config.purge) === null || ref === void 0 ? void 0 : ref.transform)
              return config.purge.transform;
            if ((ref1 = config.content) === null || ref1 === void 0 ? void 0 : ref1.transform)
              return config.content.transform;
            if ((ref2 = config.purge) === null || ref2 === void 0 ? void 0 : (ref3 = ref2.transform) === null || ref3 === void 0 ? void 0 : ref3.DEFAULT)
              return config.purge.transform.DEFAULT;
            if ((ref4 = config.content) === null || ref4 === void 0 ? void 0 : (ref5 = ref4.transform) === null || ref5 === void 0 ? void 0 : ref5.DEFAULT)
              return config.content.transform.DEFAULT;
            return {};
          })();
          let transformers = {};
          if (typeof transform === "function") {
            transformers.DEFAULT = transform;
          }
          if (typeof transform === "object" && transform !== null) {
            Object.assign(transformers, transform);
          }
          return transformers;
        })()
      };
      for (let file of config.content.files) {
        if (typeof file === "string" && /{([^,]*?)}/g.test(file)) {
          _log.default.warn("invalid-glob-braces", [
            `The glob pattern ${(0, _log.dim)(file)} in your Tailwind CSS configuration is invalid.`,
            `Update it to ${(0, _log.dim)(file.replace(/{([^,]*?)}/g, "$1"))} to silence this warning.`
          ]);
          break;
        }
      }
      return config;
    }
  }
});
var require_isPlainObject = __commonJS({
  "../../node_modules/tailwindcss/lib/util/isPlainObject.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => isPlainObject
    });
    function isPlainObject(value) {
      if (Object.prototype.toString.call(value) !== "[object Object]") {
        return false;
      }
      const prototype = Object.getPrototypeOf(value);
      return prototype === null || prototype === Object.prototype;
    }
  }
});
var require_cloneDeep = __commonJS({
  "../../node_modules/tailwindcss/lib/util/cloneDeep.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "cloneDeep", {
      enumerable: true,
      get: () => cloneDeep
    });
    function cloneDeep(value) {
      if (Array.isArray(value)) {
        return value.map((child) => cloneDeep(child));
      }
      if (typeof value === "object" && value !== null) {
        return Object.fromEntries(Object.entries(value).map(([k, v]) => [
          k,
          cloneDeep(v)
        ]));
      }
      return value;
    }
  }
});
var require_unesc = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/util/unesc.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = unesc;
    function gobbleHex(str) {
      var lower = str.toLowerCase();
      var hex = "";
      var spaceTerminated = false;
      for (var i = 0; i < 6 && lower[i] !== void 0; i++) {
        var code = lower.charCodeAt(i);
        var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;
        spaceTerminated = code === 32;
        if (!valid) {
          break;
        }
        hex += lower[i];
      }
      if (hex.length === 0) {
        return void 0;
      }
      var codePoint = parseInt(hex, 16);
      var isSurrogate = codePoint >= 55296 && codePoint <= 57343;
      if (isSurrogate || codePoint === 0 || codePoint > 1114111) {
        return ["\uFFFD", hex.length + (spaceTerminated ? 1 : 0)];
      }
      return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];
    }
    var CONTAINS_ESCAPE = /\\/;
    function unesc(str) {
      var needToProcess = CONTAINS_ESCAPE.test(str);
      if (!needToProcess) {
        return str;
      }
      var ret = "";
      for (var i = 0; i < str.length; i++) {
        if (str[i] === "\\") {
          var gobbled = gobbleHex(str.slice(i + 1, i + 7));
          if (gobbled !== void 0) {
            ret += gobbled[0];
            i += gobbled[1];
            continue;
          }
          if (str[i + 1] === "\\") {
            ret += "\\";
            i++;
            continue;
          }
          if (str.length === i + 1) {
            ret += str[i];
          }
          continue;
        }
        ret += str[i];
      }
      return ret;
    }
    module.exports = exports.default;
  }
});
var require_getProp = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/util/getProp.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = getProp;
    function getProp(obj) {
      for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        props[_key - 1] = arguments[_key];
      }
      while (props.length > 0) {
        var prop = props.shift();
        if (!obj[prop]) {
          return void 0;
        }
        obj = obj[prop];
      }
      return obj;
    }
    module.exports = exports.default;
  }
});
var require_ensureObject = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/util/ensureObject.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = ensureObject;
    function ensureObject(obj) {
      for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        props[_key - 1] = arguments[_key];
      }
      while (props.length > 0) {
        var prop = props.shift();
        if (!obj[prop]) {
          obj[prop] = {};
        }
        obj = obj[prop];
      }
    }
    module.exports = exports.default;
  }
});
var require_stripComments = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/util/stripComments.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = stripComments;
    function stripComments(str) {
      var s = "";
      var commentStart = str.indexOf("/*");
      var lastEnd = 0;
      while (commentStart >= 0) {
        s = s + str.slice(lastEnd, commentStart);
        var commentEnd = str.indexOf("*/", commentStart + 2);
        if (commentEnd < 0) {
          return s;
        }
        lastEnd = commentEnd + 2;
        commentStart = str.indexOf("/*", lastEnd);
      }
      s = s + str.slice(lastEnd);
      return s;
    }
    module.exports = exports.default;
  }
});
var require_util2 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/util/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports.stripComments = exports.ensureObject = exports.getProp = exports.unesc = void 0;
    var _unesc = _interopRequireDefault(require_unesc());
    exports.unesc = _unesc["default"];
    var _getProp = _interopRequireDefault(require_getProp());
    exports.getProp = _getProp["default"];
    var _ensureObject = _interopRequireDefault(require_ensureObject());
    exports.ensureObject = _ensureObject["default"];
    var _stripComments = _interopRequireDefault(require_stripComments());
    exports.stripComments = _stripComments["default"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
  }
});
var require_node2 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/node.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _util = require_util2();
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var cloneNode = function cloneNode2(obj, parent) {
      if (typeof obj !== "object" || obj === null) {
        return obj;
      }
      var cloned = new obj.constructor();
      for (var i in obj) {
        if (!obj.hasOwnProperty(i)) {
          continue;
        }
        var value = obj[i];
        var type = typeof value;
        if (i === "parent" && type === "object") {
          if (parent) {
            cloned[i] = parent;
          }
        } else if (value instanceof Array) {
          cloned[i] = value.map(function(j) {
            return cloneNode2(j, cloned);
          });
        } else {
          cloned[i] = cloneNode2(value, cloned);
        }
      }
      return cloned;
    };
    var Node2 = function() {
      function Node3(opts) {
        if (opts === void 0) {
          opts = {};
        }
        Object.assign(this, opts);
        this.spaces = this.spaces || {};
        this.spaces.before = this.spaces.before || "";
        this.spaces.after = this.spaces.after || "";
      }
      var _proto = Node3.prototype;
      _proto.remove = function remove() {
        if (this.parent) {
          this.parent.removeChild(this);
        }
        this.parent = void 0;
        return this;
      };
      _proto.replaceWith = function replaceWith() {
        if (this.parent) {
          for (var index in arguments) {
            this.parent.insertBefore(this, arguments[index]);
          }
          this.remove();
        }
        return this;
      };
      _proto.next = function next() {
        return this.parent.at(this.parent.index(this) + 1);
      };
      _proto.prev = function prev() {
        return this.parent.at(this.parent.index(this) - 1);
      };
      _proto.clone = function clone(overrides) {
        if (overrides === void 0) {
          overrides = {};
        }
        var cloned = cloneNode(this);
        for (var name in overrides) {
          cloned[name] = overrides[name];
        }
        return cloned;
      };
      _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {
        if (!this.raws) {
          this.raws = {};
        }
        var originalValue = this[name];
        var originalEscaped = this.raws[name];
        this[name] = originalValue + value;
        if (originalEscaped || valueEscaped !== value) {
          this.raws[name] = (originalEscaped || originalValue) + valueEscaped;
        } else {
          delete this.raws[name];
        }
      };
      _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {
        if (!this.raws) {
          this.raws = {};
        }
        this[name] = value;
        this.raws[name] = valueEscaped;
      };
      _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {
        this[name] = value;
        if (this.raws) {
          delete this.raws[name];
        }
      };
      _proto.isAtPosition = function isAtPosition(line, column) {
        if (this.source && this.source.start && this.source.end) {
          if (this.source.start.line > line) {
            return false;
          }
          if (this.source.end.line < line) {
            return false;
          }
          if (this.source.start.line === line && this.source.start.column > column) {
            return false;
          }
          if (this.source.end.line === line && this.source.end.column < column) {
            return false;
          }
          return true;
        }
        return void 0;
      };
      _proto.stringifyProperty = function stringifyProperty(name) {
        return this.raws && this.raws[name] || this[name];
      };
      _proto.valueToString = function valueToString() {
        return String(this.stringifyProperty("value"));
      };
      _proto.toString = function toString() {
        return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join("");
      };
      _createClass(Node3, [{
        key: "rawSpaceBefore",
        get: function get() {
          var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;
          if (rawSpace === void 0) {
            rawSpace = this.spaces && this.spaces.before;
          }
          return rawSpace || "";
        },
        set: function set(raw) {
          (0, _util.ensureObject)(this, "raws", "spaces");
          this.raws.spaces.before = raw;
        }
      }, {
        key: "rawSpaceAfter",
        get: function get() {
          var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;
          if (rawSpace === void 0) {
            rawSpace = this.spaces.after;
          }
          return rawSpace || "";
        },
        set: function set(raw) {
          (0, _util.ensureObject)(this, "raws", "spaces");
          this.raws.spaces.after = raw;
        }
      }]);
      return Node3;
    }();
    exports["default"] = Node2;
    module.exports = exports.default;
  }
});
var require_types = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/types.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports.UNIVERSAL = exports.ATTRIBUTE = exports.CLASS = exports.COMBINATOR = exports.COMMENT = exports.ID = exports.NESTING = exports.PSEUDO = exports.ROOT = exports.SELECTOR = exports.STRING = exports.TAG = void 0;
    var TAG = "tag";
    exports.TAG = TAG;
    var STRING = "string";
    exports.STRING = STRING;
    var SELECTOR = "selector";
    exports.SELECTOR = SELECTOR;
    var ROOT = "root";
    exports.ROOT = ROOT;
    var PSEUDO = "pseudo";
    exports.PSEUDO = PSEUDO;
    var NESTING = "nesting";
    exports.NESTING = NESTING;
    var ID = "id";
    exports.ID = ID;
    var COMMENT = "comment";
    exports.COMMENT = COMMENT;
    var COMBINATOR = "combinator";
    exports.COMBINATOR = COMBINATOR;
    var CLASS = "class";
    exports.CLASS = CLASS;
    var ATTRIBUTE = "attribute";
    exports.ATTRIBUTE = ATTRIBUTE;
    var UNIVERSAL = "universal";
    exports.UNIVERSAL = UNIVERSAL;
  }
});
var require_container2 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/container.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node2());
    var types = _interopRequireWildcard(require_types());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _createForOfIteratorHelperLoose(o, allowArrayLike) {
      var it;
      if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it)
            o = it;
          var i = 0;
          return function() {
            if (i >= o.length)
              return { done: true };
            return { done: false, value: o[i++] };
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      it = o[Symbol.iterator]();
      return it.next.bind(it);
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Container2 = function(_Node) {
      _inheritsLoose(Container3, _Node);
      function Container3(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        if (!_this.nodes) {
          _this.nodes = [];
        }
        return _this;
      }
      var _proto = Container3.prototype;
      _proto.append = function append(selector) {
        selector.parent = this;
        this.nodes.push(selector);
        return this;
      };
      _proto.prepend = function prepend(selector) {
        selector.parent = this;
        this.nodes.unshift(selector);
        return this;
      };
      _proto.at = function at(index) {
        return this.nodes[index];
      };
      _proto.index = function index(child) {
        if (typeof child === "number") {
          return child;
        }
        return this.nodes.indexOf(child);
      };
      _proto.removeChild = function removeChild(child) {
        child = this.index(child);
        this.at(child).parent = void 0;
        this.nodes.splice(child, 1);
        var index;
        for (var id in this.indexes) {
          index = this.indexes[id];
          if (index >= child) {
            this.indexes[id] = index - 1;
          }
        }
        return this;
      };
      _proto.removeAll = function removeAll() {
        for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done; ) {
          var node = _step.value;
          node.parent = void 0;
        }
        this.nodes = [];
        return this;
      };
      _proto.empty = function empty() {
        return this.removeAll();
      };
      _proto.insertAfter = function insertAfter(oldNode, newNode) {
        newNode.parent = this;
        var oldIndex = this.index(oldNode);
        this.nodes.splice(oldIndex + 1, 0, newNode);
        newNode.parent = this;
        var index;
        for (var id in this.indexes) {
          index = this.indexes[id];
          if (oldIndex <= index) {
            this.indexes[id] = index + 1;
          }
        }
        return this;
      };
      _proto.insertBefore = function insertBefore(oldNode, newNode) {
        newNode.parent = this;
        var oldIndex = this.index(oldNode);
        this.nodes.splice(oldIndex, 0, newNode);
        newNode.parent = this;
        var index;
        for (var id in this.indexes) {
          index = this.indexes[id];
          if (index <= oldIndex) {
            this.indexes[id] = index + 1;
          }
        }
        return this;
      };
      _proto._findChildAtPosition = function _findChildAtPosition(line, col) {
        var found = void 0;
        this.each(function(node) {
          if (node.atPosition) {
            var foundChild = node.atPosition(line, col);
            if (foundChild) {
              found = foundChild;
              return false;
            }
          } else if (node.isAtPosition(line, col)) {
            found = node;
            return false;
          }
        });
        return found;
      };
      _proto.atPosition = function atPosition(line, col) {
        if (this.isAtPosition(line, col)) {
          return this._findChildAtPosition(line, col) || this;
        } else {
          return void 0;
        }
      };
      _proto._inferEndPosition = function _inferEndPosition() {
        if (this.last && this.last.source && this.last.source.end) {
          this.source = this.source || {};
          this.source.end = this.source.end || {};
          Object.assign(this.source.end, this.last.source.end);
        }
      };
      _proto.each = function each(callback) {
        if (!this.lastEach) {
          this.lastEach = 0;
        }
        if (!this.indexes) {
          this.indexes = {};
        }
        this.lastEach++;
        var id = this.lastEach;
        this.indexes[id] = 0;
        if (!this.length) {
          return void 0;
        }
        var index, result;
        while (this.indexes[id] < this.length) {
          index = this.indexes[id];
          result = callback(this.at(index), index);
          if (result === false) {
            break;
          }
          this.indexes[id] += 1;
        }
        delete this.indexes[id];
        if (result === false) {
          return false;
        }
      };
      _proto.walk = function walk(callback) {
        return this.each(function(node, i) {
          var result = callback(node, i);
          if (result !== false && node.length) {
            result = node.walk(callback);
          }
          if (result === false) {
            return false;
          }
        });
      };
      _proto.walkAttributes = function walkAttributes(callback) {
        var _this2 = this;
        return this.walk(function(selector) {
          if (selector.type === types.ATTRIBUTE) {
            return callback.call(_this2, selector);
          }
        });
      };
      _proto.walkClasses = function walkClasses(callback) {
        var _this3 = this;
        return this.walk(function(selector) {
          if (selector.type === types.CLASS) {
            return callback.call(_this3, selector);
          }
        });
      };
      _proto.walkCombinators = function walkCombinators(callback) {
        var _this4 = this;
        return this.walk(function(selector) {
          if (selector.type === types.COMBINATOR) {
            return callback.call(_this4, selector);
          }
        });
      };
      _proto.walkComments = function walkComments(callback) {
        var _this5 = this;
        return this.walk(function(selector) {
          if (selector.type === types.COMMENT) {
            return callback.call(_this5, selector);
          }
        });
      };
      _proto.walkIds = function walkIds(callback) {
        var _this6 = this;
        return this.walk(function(selector) {
          if (selector.type === types.ID) {
            return callback.call(_this6, selector);
          }
        });
      };
      _proto.walkNesting = function walkNesting(callback) {
        var _this7 = this;
        return this.walk(function(selector) {
          if (selector.type === types.NESTING) {
            return callback.call(_this7, selector);
          }
        });
      };
      _proto.walkPseudos = function walkPseudos(callback) {
        var _this8 = this;
        return this.walk(function(selector) {
          if (selector.type === types.PSEUDO) {
            return callback.call(_this8, selector);
          }
        });
      };
      _proto.walkTags = function walkTags(callback) {
        var _this9 = this;
        return this.walk(function(selector) {
          if (selector.type === types.TAG) {
            return callback.call(_this9, selector);
          }
        });
      };
      _proto.walkUniversals = function walkUniversals(callback) {
        var _this10 = this;
        return this.walk(function(selector) {
          if (selector.type === types.UNIVERSAL) {
            return callback.call(_this10, selector);
          }
        });
      };
      _proto.split = function split(callback) {
        var _this11 = this;
        var current = [];
        return this.reduce(function(memo, node, index) {
          var split2 = callback.call(_this11, node);
          current.push(node);
          if (split2) {
            memo.push(current);
            current = [];
          } else if (index === _this11.length - 1) {
            memo.push(current);
          }
          return memo;
        }, []);
      };
      _proto.map = function map(callback) {
        return this.nodes.map(callback);
      };
      _proto.reduce = function reduce(callback, memo) {
        return this.nodes.reduce(callback, memo);
      };
      _proto.every = function every(callback) {
        return this.nodes.every(callback);
      };
      _proto.some = function some(callback) {
        return this.nodes.some(callback);
      };
      _proto.filter = function filter(callback) {
        return this.nodes.filter(callback);
      };
      _proto.sort = function sort(callback) {
        return this.nodes.sort(callback);
      };
      _proto.toString = function toString() {
        return this.map(String).join("");
      };
      _createClass(Container3, [{
        key: "first",
        get: function get() {
          return this.at(0);
        }
      }, {
        key: "last",
        get: function get() {
          return this.at(this.length - 1);
        }
      }, {
        key: "length",
        get: function get() {
          return this.nodes.length;
        }
      }]);
      return Container3;
    }(_node["default"]);
    exports["default"] = Container2;
    module.exports = exports.default;
  }
});
var require_root2 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/root.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _container = _interopRequireDefault(require_container2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Root2 = function(_Container) {
      _inheritsLoose(Root3, _Container);
      function Root3(opts) {
        var _this;
        _this = _Container.call(this, opts) || this;
        _this.type = _types.ROOT;
        return _this;
      }
      var _proto = Root3.prototype;
      _proto.toString = function toString() {
        var str = this.reduce(function(memo, selector) {
          memo.push(String(selector));
          return memo;
        }, []).join(",");
        return this.trailingComma ? str + "," : str;
      };
      _proto.error = function error(message, options) {
        if (this._error) {
          return this._error(message, options);
        } else {
          return new Error(message);
        }
      };
      _createClass(Root3, [{
        key: "errorGenerator",
        set: function set(handler) {
          this._error = handler;
        }
      }]);
      return Root3;
    }(_container["default"]);
    exports["default"] = Root2;
    module.exports = exports.default;
  }
});
var require_selector2 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/selector.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _container = _interopRequireDefault(require_container2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Selector = function(_Container) {
      _inheritsLoose(Selector2, _Container);
      function Selector2(opts) {
        var _this;
        _this = _Container.call(this, opts) || this;
        _this.type = _types.SELECTOR;
        return _this;
      }
      return Selector2;
    }(_container["default"]);
    exports["default"] = Selector;
    module.exports = exports.default;
  }
});
var require_cssesc = __commonJS({
  "../../node_modules/cssesc/cssesc.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var object = {};
    var hasOwnProperty = object.hasOwnProperty;
    var merge = function merge2(options, defaults) {
      if (!options) {
        return defaults;
      }
      var result = {};
      for (var key in defaults) {
        result[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];
      }
      return result;
    };
    var regexAnySingleEscape = /[ -,\.\/:-@\[-\^`\{-~]/;
    var regexSingleEscape = /[ -,\.\/:-@\[\]\^`\{-~]/;
    var regexExcessiveSpaces = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g;
    var cssesc = function cssesc2(string, options) {
      options = merge(options, cssesc2.options);
      if (options.quotes != "single" && options.quotes != "double") {
        options.quotes = "single";
      }
      var quote = options.quotes == "double" ? '"' : "'";
      var isIdentifier = options.isIdentifier;
      var firstChar = string.charAt(0);
      var output = "";
      var counter = 0;
      var length = string.length;
      while (counter < length) {
        var character = string.charAt(counter++);
        var codePoint = character.charCodeAt();
        var value = void 0;
        if (codePoint < 32 || codePoint > 126) {
          if (codePoint >= 55296 && codePoint <= 56319 && counter < length) {
            var extra = string.charCodeAt(counter++);
            if ((extra & 64512) == 56320) {
              codePoint = ((codePoint & 1023) << 10) + (extra & 1023) + 65536;
            } else {
              counter--;
            }
          }
          value = "\\" + codePoint.toString(16).toUpperCase() + " ";
        } else {
          if (options.escapeEverything) {
            if (regexAnySingleEscape.test(character)) {
              value = "\\" + character;
            } else {
              value = "\\" + codePoint.toString(16).toUpperCase() + " ";
            }
          } else if (/[\t\n\f\r\x0B]/.test(character)) {
            value = "\\" + codePoint.toString(16).toUpperCase() + " ";
          } else if (character == "\\" || !isIdentifier && (character == '"' && quote == character || character == "'" && quote == character) || isIdentifier && regexSingleEscape.test(character)) {
            value = "\\" + character;
          } else {
            value = character;
          }
        }
        output += value;
      }
      if (isIdentifier) {
        if (/^-[-\d]/.test(output)) {
          output = "\\-" + output.slice(1);
        } else if (/\d/.test(firstChar)) {
          output = "\\3" + firstChar + " " + output.slice(1);
        }
      }
      output = output.replace(regexExcessiveSpaces, function($0, $1, $2) {
        if ($1 && $1.length % 2) {
          return $0;
        }
        return ($1 || "") + $2;
      });
      if (!isIdentifier && options.wrap) {
        return quote + output + quote;
      }
      return output;
    };
    cssesc.options = {
      "escapeEverything": false,
      "isIdentifier": false,
      "quotes": "single",
      "wrap": false
    };
    cssesc.version = "3.0.0";
    module.exports = cssesc;
  }
});
var require_className = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/className.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _cssesc = _interopRequireDefault(require_cssesc());
    var _util = require_util2();
    var _node = _interopRequireDefault(require_node2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var ClassName = function(_Node) {
      _inheritsLoose(ClassName2, _Node);
      function ClassName2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.CLASS;
        _this._constructed = true;
        return _this;
      }
      var _proto = ClassName2.prototype;
      _proto.valueToString = function valueToString() {
        return "." + _Node.prototype.valueToString.call(this);
      };
      _createClass(ClassName2, [{
        key: "value",
        get: function get() {
          return this._value;
        },
        set: function set(v) {
          if (this._constructed) {
            var escaped = (0, _cssesc["default"])(v, {
              isIdentifier: true
            });
            if (escaped !== v) {
              (0, _util.ensureObject)(this, "raws");
              this.raws.value = escaped;
            } else if (this.raws) {
              delete this.raws.value;
            }
          }
          this._value = v;
        }
      }]);
      return ClassName2;
    }(_node["default"]);
    exports["default"] = ClassName;
    module.exports = exports.default;
  }
});
var require_comment2 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/comment.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Comment2 = function(_Node) {
      _inheritsLoose(Comment3, _Node);
      function Comment3(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.COMMENT;
        return _this;
      }
      return Comment3;
    }(_node["default"]);
    exports["default"] = Comment2;
    module.exports = exports.default;
  }
});
var require_id = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/id.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var ID = function(_Node) {
      _inheritsLoose(ID2, _Node);
      function ID2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.ID;
        return _this;
      }
      var _proto = ID2.prototype;
      _proto.valueToString = function valueToString() {
        return "#" + _Node.prototype.valueToString.call(this);
      };
      return ID2;
    }(_node["default"]);
    exports["default"] = ID;
    module.exports = exports.default;
  }
});
var require_namespace = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/namespace.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _cssesc = _interopRequireDefault(require_cssesc());
    var _util = require_util2();
    var _node = _interopRequireDefault(require_node2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Namespace = function(_Node) {
      _inheritsLoose(Namespace2, _Node);
      function Namespace2() {
        return _Node.apply(this, arguments) || this;
      }
      var _proto = Namespace2.prototype;
      _proto.qualifiedName = function qualifiedName(value) {
        if (this.namespace) {
          return this.namespaceString + "|" + value;
        } else {
          return value;
        }
      };
      _proto.valueToString = function valueToString() {
        return this.qualifiedName(_Node.prototype.valueToString.call(this));
      };
      _createClass(Namespace2, [{
        key: "namespace",
        get: function get() {
          return this._namespace;
        },
        set: function set(namespace) {
          if (namespace === true || namespace === "*" || namespace === "&") {
            this._namespace = namespace;
            if (this.raws) {
              delete this.raws.namespace;
            }
            return;
          }
          var escaped = (0, _cssesc["default"])(namespace, {
            isIdentifier: true
          });
          this._namespace = namespace;
          if (escaped !== namespace) {
            (0, _util.ensureObject)(this, "raws");
            this.raws.namespace = escaped;
          } else if (this.raws) {
            delete this.raws.namespace;
          }
        }
      }, {
        key: "ns",
        get: function get() {
          return this._namespace;
        },
        set: function set(namespace) {
          this.namespace = namespace;
        }
      }, {
        key: "namespaceString",
        get: function get() {
          if (this.namespace) {
            var ns = this.stringifyProperty("namespace");
            if (ns === true) {
              return "";
            } else {
              return ns;
            }
          } else {
            return "";
          }
        }
      }]);
      return Namespace2;
    }(_node["default"]);
    exports["default"] = Namespace;
    module.exports = exports.default;
  }
});
var require_tag = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/tag.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _namespace = _interopRequireDefault(require_namespace());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Tag = function(_Namespace) {
      _inheritsLoose(Tag2, _Namespace);
      function Tag2(opts) {
        var _this;
        _this = _Namespace.call(this, opts) || this;
        _this.type = _types.TAG;
        return _this;
      }
      return Tag2;
    }(_namespace["default"]);
    exports["default"] = Tag;
    module.exports = exports.default;
  }
});
var require_string = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/string.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var String2 = function(_Node) {
      _inheritsLoose(String3, _Node);
      function String3(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.STRING;
        return _this;
      }
      return String3;
    }(_node["default"]);
    exports["default"] = String2;
    module.exports = exports.default;
  }
});
var require_pseudo = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/pseudo.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _container = _interopRequireDefault(require_container2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Pseudo = function(_Container) {
      _inheritsLoose(Pseudo2, _Container);
      function Pseudo2(opts) {
        var _this;
        _this = _Container.call(this, opts) || this;
        _this.type = _types.PSEUDO;
        return _this;
      }
      var _proto = Pseudo2.prototype;
      _proto.toString = function toString() {
        var params = this.length ? "(" + this.map(String).join(",") + ")" : "";
        return [this.rawSpaceBefore, this.stringifyProperty("value"), params, this.rawSpaceAfter].join("");
      };
      return Pseudo2;
    }(_container["default"]);
    exports["default"] = Pseudo;
    module.exports = exports.default;
  }
});
var require_attribute = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/attribute.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports.unescapeValue = unescapeValue;
    exports["default"] = void 0;
    var _cssesc = _interopRequireDefault(require_cssesc());
    var _unesc = _interopRequireDefault(require_unesc());
    var _namespace = _interopRequireDefault(require_namespace());
    var _types = require_types();
    var _CSSESC_QUOTE_OPTIONS;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var deprecate = require_browser();
    var WRAPPED_IN_QUOTES = /^('|")([^]*)\1$/;
    var warnOfDeprecatedValueAssignment = deprecate(function() {
    }, "Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead.");
    var warnOfDeprecatedQuotedAssignment = deprecate(function() {
    }, "Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.");
    var warnOfDeprecatedConstructor = deprecate(function() {
    }, "Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.");
    function unescapeValue(value) {
      var deprecatedUsage = false;
      var quoteMark = null;
      var unescaped = value;
      var m = unescaped.match(WRAPPED_IN_QUOTES);
      if (m) {
        quoteMark = m[1];
        unescaped = m[2];
      }
      unescaped = (0, _unesc["default"])(unescaped);
      if (unescaped !== value) {
        deprecatedUsage = true;
      }
      return {
        deprecatedUsage,
        unescaped,
        quoteMark
      };
    }
    function handleDeprecatedContructorOpts(opts) {
      if (opts.quoteMark !== void 0) {
        return opts;
      }
      if (opts.value === void 0) {
        return opts;
      }
      warnOfDeprecatedConstructor();
      var _unescapeValue = unescapeValue(opts.value), quoteMark = _unescapeValue.quoteMark, unescaped = _unescapeValue.unescaped;
      if (!opts.raws) {
        opts.raws = {};
      }
      if (opts.raws.value === void 0) {
        opts.raws.value = opts.value;
      }
      opts.value = unescaped;
      opts.quoteMark = quoteMark;
      return opts;
    }
    var Attribute = function(_Namespace) {
      _inheritsLoose(Attribute2, _Namespace);
      function Attribute2(opts) {
        var _this;
        if (opts === void 0) {
          opts = {};
        }
        _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;
        _this.type = _types.ATTRIBUTE;
        _this.raws = _this.raws || {};
        Object.defineProperty(_this.raws, "unquoted", {
          get: deprecate(function() {
            return _this.value;
          }, "attr.raws.unquoted is deprecated. Call attr.value instead."),
          set: deprecate(function() {
            return _this.value;
          }, "Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.")
        });
        _this._constructed = true;
        return _this;
      }
      var _proto = Attribute2.prototype;
      _proto.getQuotedValue = function getQuotedValue(options) {
        if (options === void 0) {
          options = {};
        }
        var quoteMark = this._determineQuoteMark(options);
        var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];
        var escaped = (0, _cssesc["default"])(this._value, cssescopts);
        return escaped;
      };
      _proto._determineQuoteMark = function _determineQuoteMark(options) {
        return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);
      };
      _proto.setValue = function setValue(value, options) {
        if (options === void 0) {
          options = {};
        }
        this._value = value;
        this._quoteMark = this._determineQuoteMark(options);
        this._syncRawValue();
      };
      _proto.smartQuoteMark = function smartQuoteMark(options) {
        var v = this.value;
        var numSingleQuotes = v.replace(/[^']/g, "").length;
        var numDoubleQuotes = v.replace(/[^"]/g, "").length;
        if (numSingleQuotes + numDoubleQuotes === 0) {
          var escaped = (0, _cssesc["default"])(v, {
            isIdentifier: true
          });
          if (escaped === v) {
            return Attribute2.NO_QUOTE;
          } else {
            var pref = this.preferredQuoteMark(options);
            if (pref === Attribute2.NO_QUOTE) {
              var quote = this.quoteMark || options.quoteMark || Attribute2.DOUBLE_QUOTE;
              var opts = CSSESC_QUOTE_OPTIONS[quote];
              var quoteValue = (0, _cssesc["default"])(v, opts);
              if (quoteValue.length < escaped.length) {
                return quote;
              }
            }
            return pref;
          }
        } else if (numDoubleQuotes === numSingleQuotes) {
          return this.preferredQuoteMark(options);
        } else if (numDoubleQuotes < numSingleQuotes) {
          return Attribute2.DOUBLE_QUOTE;
        } else {
          return Attribute2.SINGLE_QUOTE;
        }
      };
      _proto.preferredQuoteMark = function preferredQuoteMark(options) {
        var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;
        if (quoteMark === void 0) {
          quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;
        }
        if (quoteMark === void 0) {
          quoteMark = Attribute2.DOUBLE_QUOTE;
        }
        return quoteMark;
      };
      _proto._syncRawValue = function _syncRawValue() {
        var rawValue = (0, _cssesc["default"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);
        if (rawValue === this._value) {
          if (this.raws) {
            delete this.raws.value;
          }
        } else {
          this.raws.value = rawValue;
        }
      };
      _proto._handleEscapes = function _handleEscapes(prop, value) {
        if (this._constructed) {
          var escaped = (0, _cssesc["default"])(value, {
            isIdentifier: true
          });
          if (escaped !== value) {
            this.raws[prop] = escaped;
          } else {
            delete this.raws[prop];
          }
        }
      };
      _proto._spacesFor = function _spacesFor(name) {
        var attrSpaces = {
          before: "",
          after: ""
        };
        var spaces = this.spaces[name] || {};
        var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};
        return Object.assign(attrSpaces, spaces, rawSpaces);
      };
      _proto._stringFor = function _stringFor(name, spaceName, concat) {
        if (spaceName === void 0) {
          spaceName = name;
        }
        if (concat === void 0) {
          concat = defaultAttrConcat;
        }
        var attrSpaces = this._spacesFor(spaceName);
        return concat(this.stringifyProperty(name), attrSpaces);
      };
      _proto.offsetOf = function offsetOf(name) {
        var count = 1;
        var attributeSpaces = this._spacesFor("attribute");
        count += attributeSpaces.before.length;
        if (name === "namespace" || name === "ns") {
          return this.namespace ? count : -1;
        }
        if (name === "attributeNS") {
          return count;
        }
        count += this.namespaceString.length;
        if (this.namespace) {
          count += 1;
        }
        if (name === "attribute") {
          return count;
        }
        count += this.stringifyProperty("attribute").length;
        count += attributeSpaces.after.length;
        var operatorSpaces = this._spacesFor("operator");
        count += operatorSpaces.before.length;
        var operator = this.stringifyProperty("operator");
        if (name === "operator") {
          return operator ? count : -1;
        }
        count += operator.length;
        count += operatorSpaces.after.length;
        var valueSpaces = this._spacesFor("value");
        count += valueSpaces.before.length;
        var value = this.stringifyProperty("value");
        if (name === "value") {
          return value ? count : -1;
        }
        count += value.length;
        count += valueSpaces.after.length;
        var insensitiveSpaces = this._spacesFor("insensitive");
        count += insensitiveSpaces.before.length;
        if (name === "insensitive") {
          return this.insensitive ? count : -1;
        }
        return -1;
      };
      _proto.toString = function toString() {
        var _this2 = this;
        var selector = [this.rawSpaceBefore, "["];
        selector.push(this._stringFor("qualifiedAttribute", "attribute"));
        if (this.operator && (this.value || this.value === "")) {
          selector.push(this._stringFor("operator"));
          selector.push(this._stringFor("value"));
          selector.push(this._stringFor("insensitiveFlag", "insensitive", function(attrValue, attrSpaces) {
            if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {
              attrSpaces.before = " ";
            }
            return defaultAttrConcat(attrValue, attrSpaces);
          }));
        }
        selector.push("]");
        selector.push(this.rawSpaceAfter);
        return selector.join("");
      };
      _createClass(Attribute2, [{
        key: "quoted",
        get: function get() {
          var qm = this.quoteMark;
          return qm === "'" || qm === '"';
        },
        set: function set(value) {
          warnOfDeprecatedQuotedAssignment();
        }
      }, {
        key: "quoteMark",
        get: function get() {
          return this._quoteMark;
        },
        set: function set(quoteMark) {
          if (!this._constructed) {
            this._quoteMark = quoteMark;
            return;
          }
          if (this._quoteMark !== quoteMark) {
            this._quoteMark = quoteMark;
            this._syncRawValue();
          }
        }
      }, {
        key: "qualifiedAttribute",
        get: function get() {
          return this.qualifiedName(this.raws.attribute || this.attribute);
        }
      }, {
        key: "insensitiveFlag",
        get: function get() {
          return this.insensitive ? "i" : "";
        }
      }, {
        key: "value",
        get: function get() {
          return this._value;
        },
        set: function set(v) {
          if (this._constructed) {
            var _unescapeValue2 = unescapeValue(v), deprecatedUsage = _unescapeValue2.deprecatedUsage, unescaped = _unescapeValue2.unescaped, quoteMark = _unescapeValue2.quoteMark;
            if (deprecatedUsage) {
              warnOfDeprecatedValueAssignment();
            }
            if (unescaped === this._value && quoteMark === this._quoteMark) {
              return;
            }
            this._value = unescaped;
            this._quoteMark = quoteMark;
            this._syncRawValue();
          } else {
            this._value = v;
          }
        }
      }, {
        key: "attribute",
        get: function get() {
          return this._attribute;
        },
        set: function set(name) {
          this._handleEscapes("attribute", name);
          this._attribute = name;
        }
      }]);
      return Attribute2;
    }(_namespace["default"]);
    exports["default"] = Attribute;
    Attribute.NO_QUOTE = null;
    Attribute.SINGLE_QUOTE = "'";
    Attribute.DOUBLE_QUOTE = '"';
    var CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {
      "'": {
        quotes: "single",
        wrap: true
      },
      '"': {
        quotes: "double",
        wrap: true
      }
    }, _CSSESC_QUOTE_OPTIONS[null] = {
      isIdentifier: true
    }, _CSSESC_QUOTE_OPTIONS);
    function defaultAttrConcat(attrValue, attrSpaces) {
      return "" + attrSpaces.before + attrValue + attrSpaces.after;
    }
  }
});
var require_universal = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/universal.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _namespace = _interopRequireDefault(require_namespace());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Universal = function(_Namespace) {
      _inheritsLoose(Universal2, _Namespace);
      function Universal2(opts) {
        var _this;
        _this = _Namespace.call(this, opts) || this;
        _this.type = _types.UNIVERSAL;
        _this.value = "*";
        return _this;
      }
      return Universal2;
    }(_namespace["default"]);
    exports["default"] = Universal;
    module.exports = exports.default;
  }
});
var require_combinator = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/combinator.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Combinator = function(_Node) {
      _inheritsLoose(Combinator2, _Node);
      function Combinator2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.COMBINATOR;
        return _this;
      }
      return Combinator2;
    }(_node["default"]);
    exports["default"] = Combinator;
    module.exports = exports.default;
  }
});
var require_nesting = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/nesting.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node2());
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Nesting = function(_Node) {
      _inheritsLoose(Nesting2, _Node);
      function Nesting2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.NESTING;
        _this.value = "&";
        return _this;
      }
      return Nesting2;
    }(_node["default"]);
    exports["default"] = Nesting;
    module.exports = exports.default;
  }
});
var require_sortAscending = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/sortAscending.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = sortAscending;
    function sortAscending(list2) {
      return list2.sort(function(a, b) {
        return a - b;
      });
    }
    module.exports = exports.default;
  }
});
var require_tokenTypes = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/tokenTypes.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports.combinator = exports.word = exports.comment = exports.str = exports.tab = exports.newline = exports.feed = exports.cr = exports.backslash = exports.bang = exports.slash = exports.doubleQuote = exports.singleQuote = exports.space = exports.greaterThan = exports.pipe = exports.equals = exports.plus = exports.caret = exports.tilde = exports.dollar = exports.closeSquare = exports.openSquare = exports.closeParenthesis = exports.openParenthesis = exports.semicolon = exports.colon = exports.comma = exports.at = exports.asterisk = exports.ampersand = void 0;
    var ampersand = 38;
    exports.ampersand = ampersand;
    var asterisk = 42;
    exports.asterisk = asterisk;
    var at = 64;
    exports.at = at;
    var comma = 44;
    exports.comma = comma;
    var colon = 58;
    exports.colon = colon;
    var semicolon = 59;
    exports.semicolon = semicolon;
    var openParenthesis = 40;
    exports.openParenthesis = openParenthesis;
    var closeParenthesis = 41;
    exports.closeParenthesis = closeParenthesis;
    var openSquare = 91;
    exports.openSquare = openSquare;
    var closeSquare = 93;
    exports.closeSquare = closeSquare;
    var dollar = 36;
    exports.dollar = dollar;
    var tilde = 126;
    exports.tilde = tilde;
    var caret = 94;
    exports.caret = caret;
    var plus = 43;
    exports.plus = plus;
    var equals = 61;
    exports.equals = equals;
    var pipe = 124;
    exports.pipe = pipe;
    var greaterThan = 62;
    exports.greaterThan = greaterThan;
    var space = 32;
    exports.space = space;
    var singleQuote = 39;
    exports.singleQuote = singleQuote;
    var doubleQuote = 34;
    exports.doubleQuote = doubleQuote;
    var slash = 47;
    exports.slash = slash;
    var bang = 33;
    exports.bang = bang;
    var backslash = 92;
    exports.backslash = backslash;
    var cr = 13;
    exports.cr = cr;
    var feed = 12;
    exports.feed = feed;
    var newline = 10;
    exports.newline = newline;
    var tab = 9;
    exports.tab = tab;
    var str = singleQuote;
    exports.str = str;
    var comment2 = -1;
    exports.comment = comment2;
    var word = -2;
    exports.word = word;
    var combinator = -3;
    exports.combinator = combinator;
  }
});
var require_tokenize2 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/tokenize.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = tokenize;
    exports.FIELDS = void 0;
    var t = _interopRequireWildcard(require_tokenTypes());
    var _unescapable;
    var _wordDelimiters;
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);
    var wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);
    var hex = {};
    var hexChars = "0123456789abcdefABCDEF";
    for (i = 0; i < hexChars.length; i++) {
      hex[hexChars.charCodeAt(i)] = true;
    }
    var i;
    function consumeWord(css, start) {
      var next = start;
      var code;
      do {
        code = css.charCodeAt(next);
        if (wordDelimiters[code]) {
          return next - 1;
        } else if (code === t.backslash) {
          next = consumeEscape(css, next) + 1;
        } else {
          next++;
        }
      } while (next < css.length);
      return next - 1;
    }
    function consumeEscape(css, start) {
      var next = start;
      var code = css.charCodeAt(next + 1);
      if (unescapable[code]) {
      } else if (hex[code]) {
        var hexDigits = 0;
        do {
          next++;
          hexDigits++;
          code = css.charCodeAt(next + 1);
        } while (hex[code] && hexDigits < 6);
        if (hexDigits < 6 && code === t.space) {
          next++;
        }
      } else {
        next++;
      }
      return next;
    }
    var FIELDS = {
      TYPE: 0,
      START_LINE: 1,
      START_COL: 2,
      END_LINE: 3,
      END_COL: 4,
      START_POS: 5,
      END_POS: 6
    };
    exports.FIELDS = FIELDS;
    function tokenize(input) {
      var tokens = [];
      var css = input.css.valueOf();
      var _css = css, length = _css.length;
      var offset = -1;
      var line = 1;
      var start = 0;
      var end = 0;
      var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;
      function unclosed(what, fix) {
        if (input.safe) {
          css += fix;
          next = css.length - 1;
        } else {
          throw input.error("Unclosed " + what, line, start - offset, start);
        }
      }
      while (start < length) {
        code = css.charCodeAt(start);
        if (code === t.newline) {
          offset = start;
          line += 1;
        }
        switch (code) {
          case t.space:
          case t.tab:
          case t.newline:
          case t.cr:
          case t.feed:
            next = start;
            do {
              next += 1;
              code = css.charCodeAt(next);
              if (code === t.newline) {
                offset = next;
                line += 1;
              }
            } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);
            tokenType = t.space;
            endLine = line;
            endColumn = next - offset - 1;
            end = next;
            break;
          case t.plus:
          case t.greaterThan:
          case t.tilde:
          case t.pipe:
            next = start;
            do {
              next += 1;
              code = css.charCodeAt(next);
            } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);
            tokenType = t.combinator;
            endLine = line;
            endColumn = start - offset;
            end = next;
            break;
          case t.asterisk:
          case t.ampersand:
          case t.bang:
          case t.comma:
          case t.equals:
          case t.dollar:
          case t.caret:
          case t.openSquare:
          case t.closeSquare:
          case t.colon:
          case t.semicolon:
          case t.openParenthesis:
          case t.closeParenthesis:
            next = start;
            tokenType = code;
            endLine = line;
            endColumn = start - offset;
            end = next + 1;
            break;
          case t.singleQuote:
          case t.doubleQuote:
            quote = code === t.singleQuote ? "'" : '"';
            next = start;
            do {
              escaped = false;
              next = css.indexOf(quote, next + 1);
              if (next === -1) {
                unclosed("quote", quote);
              }
              escapePos = next;
              while (css.charCodeAt(escapePos - 1) === t.backslash) {
                escapePos -= 1;
                escaped = !escaped;
              }
            } while (escaped);
            tokenType = t.str;
            endLine = line;
            endColumn = start - offset;
            end = next + 1;
            break;
          default:
            if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {
              next = css.indexOf("*/", start + 2) + 1;
              if (next === 0) {
                unclosed("comment", "*/");
              }
              content = css.slice(start, next + 1);
              lines = content.split("\n");
              last = lines.length - 1;
              if (last > 0) {
                nextLine = line + last;
                nextOffset = next - lines[last].length;
              } else {
                nextLine = line;
                nextOffset = offset;
              }
              tokenType = t.comment;
              line = nextLine;
              endLine = nextLine;
              endColumn = next - nextOffset;
            } else if (code === t.slash) {
              next = start;
              tokenType = code;
              endLine = line;
              endColumn = start - offset;
              end = next + 1;
            } else {
              next = consumeWord(css, start);
              tokenType = t.word;
              endLine = line;
              endColumn = next - offset;
            }
            end = next + 1;
            break;
        }
        tokens.push([
          tokenType,
          line,
          start - offset,
          endLine,
          endColumn,
          start,
          end
        ]);
        if (nextOffset) {
          offset = nextOffset;
          nextOffset = null;
        }
        start = end;
      }
      return tokens;
    }
  }
});
var require_parser2 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/parser.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _root = _interopRequireDefault(require_root2());
    var _selector = _interopRequireDefault(require_selector2());
    var _className = _interopRequireDefault(require_className());
    var _comment = _interopRequireDefault(require_comment2());
    var _id = _interopRequireDefault(require_id());
    var _tag = _interopRequireDefault(require_tag());
    var _string = _interopRequireDefault(require_string());
    var _pseudo = _interopRequireDefault(require_pseudo());
    var _attribute = _interopRequireWildcard(require_attribute());
    var _universal = _interopRequireDefault(require_universal());
    var _combinator = _interopRequireDefault(require_combinator());
    var _nesting = _interopRequireDefault(require_nesting());
    var _sortAscending = _interopRequireDefault(require_sortAscending());
    var _tokenize = _interopRequireWildcard(require_tokenize2());
    var tokens = _interopRequireWildcard(require_tokenTypes());
    var types = _interopRequireWildcard(require_types());
    var _util = require_util2();
    var _WHITESPACE_TOKENS;
    var _Object$assign;
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);
    var WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));
    function tokenStart(token) {
      return {
        line: token[_tokenize.FIELDS.START_LINE],
        column: token[_tokenize.FIELDS.START_COL]
      };
    }
    function tokenEnd(token) {
      return {
        line: token[_tokenize.FIELDS.END_LINE],
        column: token[_tokenize.FIELDS.END_COL]
      };
    }
    function getSource(startLine, startColumn, endLine, endColumn) {
      return {
        start: {
          line: startLine,
          column: startColumn
        },
        end: {
          line: endLine,
          column: endColumn
        }
      };
    }
    function getTokenSource(token) {
      return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);
    }
    function getTokenSourceSpan(startToken, endToken) {
      if (!startToken) {
        return void 0;
      }
      return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);
    }
    function unescapeProp(node, prop) {
      var value = node[prop];
      if (typeof value !== "string") {
        return;
      }
      if (value.indexOf("\\") !== -1) {
        (0, _util.ensureObject)(node, "raws");
        node[prop] = (0, _util.unesc)(value);
        if (node.raws[prop] === void 0) {
          node.raws[prop] = value;
        }
      }
      return node;
    }
    function indexesOf(array, item) {
      var i = -1;
      var indexes = [];
      while ((i = array.indexOf(item, i + 1)) !== -1) {
        indexes.push(i);
      }
      return indexes;
    }
    function uniqs() {
      var list2 = Array.prototype.concat.apply([], arguments);
      return list2.filter(function(item, i) {
        return i === list2.indexOf(item);
      });
    }
    var Parser = function() {
      function Parser2(rule2, options) {
        if (options === void 0) {
          options = {};
        }
        this.rule = rule2;
        this.options = Object.assign({
          lossy: false,
          safe: false
        }, options);
        this.position = 0;
        this.css = typeof this.rule === "string" ? this.rule : this.rule.selector;
        this.tokens = (0, _tokenize["default"])({
          css: this.css,
          error: this._errorGenerator(),
          safe: this.options.safe
        });
        var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);
        this.root = new _root["default"]({
          source: rootSource
        });
        this.root.errorGenerator = this._errorGenerator();
        var selector = new _selector["default"]({
          source: {
            start: {
              line: 1,
              column: 1
            }
          }
        });
        this.root.append(selector);
        this.current = selector;
        this.loop();
      }
      var _proto = Parser2.prototype;
      _proto._errorGenerator = function _errorGenerator() {
        var _this = this;
        return function(message, errorOptions) {
          if (typeof _this.rule === "string") {
            return new Error(message);
          }
          return _this.rule.error(message, errorOptions);
        };
      };
      _proto.attribute = function attribute() {
        var attr = [];
        var startingToken = this.currToken;
        this.position++;
        while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {
          attr.push(this.currToken);
          this.position++;
        }
        if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {
          return this.expected("closing square bracket", this.currToken[_tokenize.FIELDS.START_POS]);
        }
        var len = attr.length;
        var node = {
          source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),
          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]
        };
        if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {
          return this.expected("attribute", attr[0][_tokenize.FIELDS.START_POS]);
        }
        var pos = 0;
        var spaceBefore = "";
        var commentBefore = "";
        var lastAdded = null;
        var spaceAfterMeaningfulToken = false;
        while (pos < len) {
          var token = attr[pos];
          var content = this.content(token);
          var next = attr[pos + 1];
          switch (token[_tokenize.FIELDS.TYPE]) {
            case tokens.space:
              spaceAfterMeaningfulToken = true;
              if (this.options.lossy) {
                break;
              }
              if (lastAdded) {
                (0, _util.ensureObject)(node, "spaces", lastAdded);
                var prevContent = node.spaces[lastAdded].after || "";
                node.spaces[lastAdded].after = prevContent + content;
                var existingComment = (0, _util.getProp)(node, "raws", "spaces", lastAdded, "after") || null;
                if (existingComment) {
                  node.raws.spaces[lastAdded].after = existingComment + content;
                }
              } else {
                spaceBefore = spaceBefore + content;
                commentBefore = commentBefore + content;
              }
              break;
            case tokens.asterisk:
              if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
                node.operator = content;
                lastAdded = "operator";
              } else if ((!node.namespace || lastAdded === "namespace" && !spaceAfterMeaningfulToken) && next) {
                if (spaceBefore) {
                  (0, _util.ensureObject)(node, "spaces", "attribute");
                  node.spaces.attribute.before = spaceBefore;
                  spaceBefore = "";
                }
                if (commentBefore) {
                  (0, _util.ensureObject)(node, "raws", "spaces", "attribute");
                  node.raws.spaces.attribute.before = spaceBefore;
                  commentBefore = "";
                }
                node.namespace = (node.namespace || "") + content;
                var rawValue = (0, _util.getProp)(node, "raws", "namespace") || null;
                if (rawValue) {
                  node.raws.namespace += content;
                }
                lastAdded = "namespace";
              }
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.dollar:
              if (lastAdded === "value") {
                var oldRawValue = (0, _util.getProp)(node, "raws", "value");
                node.value += "$";
                if (oldRawValue) {
                  node.raws.value = oldRawValue + "$";
                }
                break;
              }
            case tokens.caret:
              if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
                node.operator = content;
                lastAdded = "operator";
              }
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.combinator:
              if (content === "~" && next[_tokenize.FIELDS.TYPE] === tokens.equals) {
                node.operator = content;
                lastAdded = "operator";
              }
              if (content !== "|") {
                spaceAfterMeaningfulToken = false;
                break;
              }
              if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
                node.operator = content;
                lastAdded = "operator";
              } else if (!node.namespace && !node.attribute) {
                node.namespace = true;
              }
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.word:
              if (next && this.content(next) === "|" && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals && !node.operator && !node.namespace) {
                node.namespace = content;
                lastAdded = "namespace";
              } else if (!node.attribute || lastAdded === "attribute" && !spaceAfterMeaningfulToken) {
                if (spaceBefore) {
                  (0, _util.ensureObject)(node, "spaces", "attribute");
                  node.spaces.attribute.before = spaceBefore;
                  spaceBefore = "";
                }
                if (commentBefore) {
                  (0, _util.ensureObject)(node, "raws", "spaces", "attribute");
                  node.raws.spaces.attribute.before = commentBefore;
                  commentBefore = "";
                }
                node.attribute = (node.attribute || "") + content;
                var _rawValue = (0, _util.getProp)(node, "raws", "attribute") || null;
                if (_rawValue) {
                  node.raws.attribute += content;
                }
                lastAdded = "attribute";
              } else if (!node.value && node.value !== "" || lastAdded === "value" && !spaceAfterMeaningfulToken) {
                var _unescaped = (0, _util.unesc)(content);
                var _oldRawValue = (0, _util.getProp)(node, "raws", "value") || "";
                var oldValue = node.value || "";
                node.value = oldValue + _unescaped;
                node.quoteMark = null;
                if (_unescaped !== content || _oldRawValue) {
                  (0, _util.ensureObject)(node, "raws");
                  node.raws.value = (_oldRawValue || oldValue) + content;
                }
                lastAdded = "value";
              } else {
                var insensitive = content === "i" || content === "I";
                if ((node.value || node.value === "") && (node.quoteMark || spaceAfterMeaningfulToken)) {
                  node.insensitive = insensitive;
                  if (!insensitive || content === "I") {
                    (0, _util.ensureObject)(node, "raws");
                    node.raws.insensitiveFlag = content;
                  }
                  lastAdded = "insensitive";
                  if (spaceBefore) {
                    (0, _util.ensureObject)(node, "spaces", "insensitive");
                    node.spaces.insensitive.before = spaceBefore;
                    spaceBefore = "";
                  }
                  if (commentBefore) {
                    (0, _util.ensureObject)(node, "raws", "spaces", "insensitive");
                    node.raws.spaces.insensitive.before = commentBefore;
                    commentBefore = "";
                  }
                } else if (node.value || node.value === "") {
                  lastAdded = "value";
                  node.value += content;
                  if (node.raws.value) {
                    node.raws.value += content;
                  }
                }
              }
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.str:
              if (!node.attribute || !node.operator) {
                return this.error("Expected an attribute followed by an operator preceding the string.", {
                  index: token[_tokenize.FIELDS.START_POS]
                });
              }
              var _unescapeValue = (0, _attribute.unescapeValue)(content), unescaped = _unescapeValue.unescaped, quoteMark = _unescapeValue.quoteMark;
              node.value = unescaped;
              node.quoteMark = quoteMark;
              lastAdded = "value";
              (0, _util.ensureObject)(node, "raws");
              node.raws.value = content;
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.equals:
              if (!node.attribute) {
                return this.expected("attribute", token[_tokenize.FIELDS.START_POS], content);
              }
              if (node.value) {
                return this.error('Unexpected "=" found; an operator was already defined.', {
                  index: token[_tokenize.FIELDS.START_POS]
                });
              }
              node.operator = node.operator ? node.operator + content : content;
              lastAdded = "operator";
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.comment:
              if (lastAdded) {
                if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === "insensitive") {
                  var lastComment = (0, _util.getProp)(node, "spaces", lastAdded, "after") || "";
                  var rawLastComment = (0, _util.getProp)(node, "raws", "spaces", lastAdded, "after") || lastComment;
                  (0, _util.ensureObject)(node, "raws", "spaces", lastAdded);
                  node.raws.spaces[lastAdded].after = rawLastComment + content;
                } else {
                  var lastValue = node[lastAdded] || "";
                  var rawLastValue = (0, _util.getProp)(node, "raws", lastAdded) || lastValue;
                  (0, _util.ensureObject)(node, "raws");
                  node.raws[lastAdded] = rawLastValue + content;
                }
              } else {
                commentBefore = commentBefore + content;
              }
              break;
            default:
              return this.error('Unexpected "' + content + '" found.', {
                index: token[_tokenize.FIELDS.START_POS]
              });
          }
          pos++;
        }
        unescapeProp(node, "attribute");
        unescapeProp(node, "namespace");
        this.newNode(new _attribute["default"](node));
        this.position++;
      };
      _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {
        if (stopPosition < 0) {
          stopPosition = this.tokens.length;
        }
        var startPosition = this.position;
        var nodes = [];
        var space = "";
        var lastComment = void 0;
        do {
          if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {
            if (!this.options.lossy) {
              space += this.content();
            }
          } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {
            var spaces = {};
            if (space) {
              spaces.before = space;
              space = "";
            }
            lastComment = new _comment["default"]({
              value: this.content(),
              source: getTokenSource(this.currToken),
              sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],
              spaces
            });
            nodes.push(lastComment);
          }
        } while (++this.position < stopPosition);
        if (space) {
          if (lastComment) {
            lastComment.spaces.after = space;
          } else if (!this.options.lossy) {
            var firstToken = this.tokens[startPosition];
            var lastToken = this.tokens[this.position - 1];
            nodes.push(new _string["default"]({
              value: "",
              source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),
              sourceIndex: firstToken[_tokenize.FIELDS.START_POS],
              spaces: {
                before: space,
                after: ""
              }
            }));
          }
        }
        return nodes;
      };
      _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {
        var _this2 = this;
        if (requiredSpace === void 0) {
          requiredSpace = false;
        }
        var space = "";
        var rawSpace = "";
        nodes.forEach(function(n) {
          var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);
          var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);
          space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);
          rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);
        });
        if (rawSpace === space) {
          rawSpace = void 0;
        }
        var result = {
          space,
          rawSpace
        };
        return result;
      };
      _proto.isNamedCombinator = function isNamedCombinator(position) {
        if (position === void 0) {
          position = this.position;
        }
        return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;
      };
      _proto.namedCombinator = function namedCombinator() {
        if (this.isNamedCombinator()) {
          var nameRaw = this.content(this.tokens[this.position + 1]);
          var name = (0, _util.unesc)(nameRaw).toLowerCase();
          var raws = {};
          if (name !== nameRaw) {
            raws.value = "/" + nameRaw + "/";
          }
          var node = new _combinator["default"]({
            value: "/" + name + "/",
            source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),
            sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],
            raws
          });
          this.position = this.position + 3;
          return node;
        } else {
          this.unexpected();
        }
      };
      _proto.combinator = function combinator() {
        var _this3 = this;
        if (this.content() === "|") {
          return this.namespace();
        }
        var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);
        if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {
          var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
          if (nodes.length > 0) {
            var last = this.current.last;
            if (last) {
              var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes), space = _this$convertWhitespa.space, rawSpace = _this$convertWhitespa.rawSpace;
              if (rawSpace !== void 0) {
                last.rawSpaceAfter += rawSpace;
              }
              last.spaces.after += space;
            } else {
              nodes.forEach(function(n) {
                return _this3.newNode(n);
              });
            }
          }
          return;
        }
        var firstToken = this.currToken;
        var spaceOrDescendantSelectorNodes = void 0;
        if (nextSigTokenPos > this.position) {
          spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
        }
        var node;
        if (this.isNamedCombinator()) {
          node = this.namedCombinator();
        } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {
          node = new _combinator["default"]({
            value: this.content(),
            source: getTokenSource(this.currToken),
            sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]
          });
          this.position++;
        } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {
        } else if (!spaceOrDescendantSelectorNodes) {
          this.unexpected();
        }
        if (node) {
          if (spaceOrDescendantSelectorNodes) {
            var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes), _space = _this$convertWhitespa2.space, _rawSpace = _this$convertWhitespa2.rawSpace;
            node.spaces.before = _space;
            node.rawSpaceBefore = _rawSpace;
          }
        } else {
          var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true), _space2 = _this$convertWhitespa3.space, _rawSpace2 = _this$convertWhitespa3.rawSpace;
          if (!_rawSpace2) {
            _rawSpace2 = _space2;
          }
          var spaces = {};
          var raws = {
            spaces: {}
          };
          if (_space2.endsWith(" ") && _rawSpace2.endsWith(" ")) {
            spaces.before = _space2.slice(0, _space2.length - 1);
            raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);
          } else if (_space2.startsWith(" ") && _rawSpace2.startsWith(" ")) {
            spaces.after = _space2.slice(1);
            raws.spaces.after = _rawSpace2.slice(1);
          } else {
            raws.value = _rawSpace2;
          }
          node = new _combinator["default"]({
            value: " ",
            source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),
            sourceIndex: firstToken[_tokenize.FIELDS.START_POS],
            spaces,
            raws
          });
        }
        if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {
          node.spaces.after = this.optionalSpace(this.content());
          this.position++;
        }
        return this.newNode(node);
      };
      _proto.comma = function comma() {
        if (this.position === this.tokens.length - 1) {
          this.root.trailingComma = true;
          this.position++;
          return;
        }
        this.current._inferEndPosition();
        var selector = new _selector["default"]({
          source: {
            start: tokenStart(this.tokens[this.position + 1])
          }
        });
        this.current.parent.append(selector);
        this.current = selector;
        this.position++;
      };
      _proto.comment = function comment2() {
        var current = this.currToken;
        this.newNode(new _comment["default"]({
          value: this.content(),
          source: getTokenSource(current),
          sourceIndex: current[_tokenize.FIELDS.START_POS]
        }));
        this.position++;
      };
      _proto.error = function error(message, opts) {
        throw this.root.error(message, opts);
      };
      _proto.missingBackslash = function missingBackslash() {
        return this.error("Expected a backslash preceding the semicolon.", {
          index: this.currToken[_tokenize.FIELDS.START_POS]
        });
      };
      _proto.missingParenthesis = function missingParenthesis() {
        return this.expected("opening parenthesis", this.currToken[_tokenize.FIELDS.START_POS]);
      };
      _proto.missingSquareBracket = function missingSquareBracket() {
        return this.expected("opening square bracket", this.currToken[_tokenize.FIELDS.START_POS]);
      };
      _proto.unexpected = function unexpected() {
        return this.error("Unexpected '" + this.content() + "'. Escaping special characters with \\ may help.", this.currToken[_tokenize.FIELDS.START_POS]);
      };
      _proto.namespace = function namespace() {
        var before = this.prevToken && this.content(this.prevToken) || true;
        if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {
          this.position++;
          return this.word(before);
        } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {
          this.position++;
          return this.universal(before);
        }
      };
      _proto.nesting = function nesting() {
        if (this.nextToken) {
          var nextContent = this.content(this.nextToken);
          if (nextContent === "|") {
            this.position++;
            return;
          }
        }
        var current = this.currToken;
        this.newNode(new _nesting["default"]({
          value: this.content(),
          source: getTokenSource(current),
          sourceIndex: current[_tokenize.FIELDS.START_POS]
        }));
        this.position++;
      };
      _proto.parentheses = function parentheses() {
        var last = this.current.last;
        var unbalanced = 1;
        this.position++;
        if (last && last.type === types.PSEUDO) {
          var selector = new _selector["default"]({
            source: {
              start: tokenStart(this.tokens[this.position - 1])
            }
          });
          var cache = this.current;
          last.append(selector);
          this.current = selector;
          while (this.position < this.tokens.length && unbalanced) {
            if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
              unbalanced++;
            }
            if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
              unbalanced--;
            }
            if (unbalanced) {
              this.parse();
            } else {
              this.current.source.end = tokenEnd(this.currToken);
              this.current.parent.source.end = tokenEnd(this.currToken);
              this.position++;
            }
          }
          this.current = cache;
        } else {
          var parenStart = this.currToken;
          var parenValue = "(";
          var parenEnd;
          while (this.position < this.tokens.length && unbalanced) {
            if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
              unbalanced++;
            }
            if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
              unbalanced--;
            }
            parenEnd = this.currToken;
            parenValue += this.parseParenthesisToken(this.currToken);
            this.position++;
          }
          if (last) {
            last.appendToPropertyAndEscape("value", parenValue, parenValue);
          } else {
            this.newNode(new _string["default"]({
              value: parenValue,
              source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),
              sourceIndex: parenStart[_tokenize.FIELDS.START_POS]
            }));
          }
        }
        if (unbalanced) {
          return this.expected("closing parenthesis", this.currToken[_tokenize.FIELDS.START_POS]);
        }
      };
      _proto.pseudo = function pseudo() {
        var _this4 = this;
        var pseudoStr = "";
        var startingToken = this.currToken;
        while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {
          pseudoStr += this.content();
          this.position++;
        }
        if (!this.currToken) {
          return this.expected(["pseudo-class", "pseudo-element"], this.position - 1);
        }
        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {
          this.splitWord(false, function(first, length) {
            pseudoStr += first;
            _this4.newNode(new _pseudo["default"]({
              value: pseudoStr,
              source: getTokenSourceSpan(startingToken, _this4.currToken),
              sourceIndex: startingToken[_tokenize.FIELDS.START_POS]
            }));
            if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
              _this4.error("Misplaced parenthesis.", {
                index: _this4.nextToken[_tokenize.FIELDS.START_POS]
              });
            }
          });
        } else {
          return this.expected(["pseudo-class", "pseudo-element"], this.currToken[_tokenize.FIELDS.START_POS]);
        }
      };
      _proto.space = function space() {
        var content = this.content();
        if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function(node) {
          return node.type === "comment";
        })) {
          this.spaces = this.optionalSpace(content);
          this.position++;
        } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
          this.current.last.spaces.after = this.optionalSpace(content);
          this.position++;
        } else {
          this.combinator();
        }
      };
      _proto.string = function string() {
        var current = this.currToken;
        this.newNode(new _string["default"]({
          value: this.content(),
          source: getTokenSource(current),
          sourceIndex: current[_tokenize.FIELDS.START_POS]
        }));
        this.position++;
      };
      _proto.universal = function universal(namespace) {
        var nextToken = this.nextToken;
        if (nextToken && this.content(nextToken) === "|") {
          this.position++;
          return this.namespace();
        }
        var current = this.currToken;
        this.newNode(new _universal["default"]({
          value: this.content(),
          source: getTokenSource(current),
          sourceIndex: current[_tokenize.FIELDS.START_POS]
        }), namespace);
        this.position++;
      };
      _proto.splitWord = function splitWord(namespace, firstCallback) {
        var _this5 = this;
        var nextToken = this.nextToken;
        var word = this.content();
        while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {
          this.position++;
          var current = this.content();
          word += current;
          if (current.lastIndexOf("\\") === current.length - 1) {
            var next = this.nextToken;
            if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {
              word += this.requiredSpace(this.content(next));
              this.position++;
            }
          }
          nextToken = this.nextToken;
        }
        var hasClass = indexesOf(word, ".").filter(function(i) {
          var escapedDot = word[i - 1] === "\\";
          var isKeyframesPercent = /^\d+\.\d+%$/.test(word);
          return !escapedDot && !isKeyframesPercent;
        });
        var hasId = indexesOf(word, "#").filter(function(i) {
          return word[i - 1] !== "\\";
        });
        var interpolations = indexesOf(word, "#{");
        if (interpolations.length) {
          hasId = hasId.filter(function(hashIndex) {
            return !~interpolations.indexOf(hashIndex);
          });
        }
        var indices = (0, _sortAscending["default"])(uniqs([0].concat(hasClass, hasId)));
        indices.forEach(function(ind, i) {
          var index = indices[i + 1] || word.length;
          var value = word.slice(ind, index);
          if (i === 0 && firstCallback) {
            return firstCallback.call(_this5, value, indices.length);
          }
          var node;
          var current2 = _this5.currToken;
          var sourceIndex = current2[_tokenize.FIELDS.START_POS] + indices[i];
          var source = getSource(current2[1], current2[2] + ind, current2[3], current2[2] + (index - 1));
          if (~hasClass.indexOf(ind)) {
            var classNameOpts = {
              value: value.slice(1),
              source,
              sourceIndex
            };
            node = new _className["default"](unescapeProp(classNameOpts, "value"));
          } else if (~hasId.indexOf(ind)) {
            var idOpts = {
              value: value.slice(1),
              source,
              sourceIndex
            };
            node = new _id["default"](unescapeProp(idOpts, "value"));
          } else {
            var tagOpts = {
              value,
              source,
              sourceIndex
            };
            unescapeProp(tagOpts, "value");
            node = new _tag["default"](tagOpts);
          }
          _this5.newNode(node, namespace);
          namespace = null;
        });
        this.position++;
      };
      _proto.word = function word(namespace) {
        var nextToken = this.nextToken;
        if (nextToken && this.content(nextToken) === "|") {
          this.position++;
          return this.namespace();
        }
        return this.splitWord(namespace);
      };
      _proto.loop = function loop() {
        while (this.position < this.tokens.length) {
          this.parse(true);
        }
        this.current._inferEndPosition();
        return this.root;
      };
      _proto.parse = function parse2(throwOnParenthesis) {
        switch (this.currToken[_tokenize.FIELDS.TYPE]) {
          case tokens.space:
            this.space();
            break;
          case tokens.comment:
            this.comment();
            break;
          case tokens.openParenthesis:
            this.parentheses();
            break;
          case tokens.closeParenthesis:
            if (throwOnParenthesis) {
              this.missingParenthesis();
            }
            break;
          case tokens.openSquare:
            this.attribute();
            break;
          case tokens.dollar:
          case tokens.caret:
          case tokens.equals:
          case tokens.word:
            this.word();
            break;
          case tokens.colon:
            this.pseudo();
            break;
          case tokens.comma:
            this.comma();
            break;
          case tokens.asterisk:
            this.universal();
            break;
          case tokens.ampersand:
            this.nesting();
            break;
          case tokens.slash:
          case tokens.combinator:
            this.combinator();
            break;
          case tokens.str:
            this.string();
            break;
          case tokens.closeSquare:
            this.missingSquareBracket();
          case tokens.semicolon:
            this.missingBackslash();
          default:
            this.unexpected();
        }
      };
      _proto.expected = function expected(description, index, found) {
        if (Array.isArray(description)) {
          var last = description.pop();
          description = description.join(", ") + " or " + last;
        }
        var an = /^[aeiou]/.test(description[0]) ? "an" : "a";
        if (!found) {
          return this.error("Expected " + an + " " + description + ".", {
            index
          });
        }
        return this.error("Expected " + an + " " + description + ', found "' + found + '" instead.', {
          index
        });
      };
      _proto.requiredSpace = function requiredSpace(space) {
        return this.options.lossy ? " " : space;
      };
      _proto.optionalSpace = function optionalSpace(space) {
        return this.options.lossy ? "" : space;
      };
      _proto.lossySpace = function lossySpace(space, required) {
        if (this.options.lossy) {
          return required ? " " : "";
        } else {
          return space;
        }
      };
      _proto.parseParenthesisToken = function parseParenthesisToken(token) {
        var content = this.content(token);
        if (token[_tokenize.FIELDS.TYPE] === tokens.space) {
          return this.requiredSpace(content);
        } else {
          return content;
        }
      };
      _proto.newNode = function newNode(node, namespace) {
        if (namespace) {
          if (/^ +$/.test(namespace)) {
            if (!this.options.lossy) {
              this.spaces = (this.spaces || "") + namespace;
            }
            namespace = true;
          }
          node.namespace = namespace;
          unescapeProp(node, "namespace");
        }
        if (this.spaces) {
          node.spaces.before = this.spaces;
          this.spaces = "";
        }
        return this.current.append(node);
      };
      _proto.content = function content(token) {
        if (token === void 0) {
          token = this.currToken;
        }
        return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);
      };
      _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {
        if (startPosition === void 0) {
          startPosition = this.position + 1;
        }
        var searchPosition = startPosition;
        while (searchPosition < this.tokens.length) {
          if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {
            searchPosition++;
            continue;
          } else {
            return searchPosition;
          }
        }
        return -1;
      };
      _createClass(Parser2, [{
        key: "currToken",
        get: function get() {
          return this.tokens[this.position];
        }
      }, {
        key: "nextToken",
        get: function get() {
          return this.tokens[this.position + 1];
        }
      }, {
        key: "prevToken",
        get: function get() {
          return this.tokens[this.position - 1];
        }
      }]);
      return Parser2;
    }();
    exports["default"] = Parser;
    module.exports = exports.default;
  }
});
var require_processor3 = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/processor.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _parser = _interopRequireDefault(require_parser2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var Processor2 = function() {
      function Processor3(func, options) {
        this.func = func || function noop() {
        };
        this.funcRes = null;
        this.options = options;
      }
      var _proto = Processor3.prototype;
      _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule2, options) {
        if (options === void 0) {
          options = {};
        }
        var merged = Object.assign({}, this.options, options);
        if (merged.updateSelector === false) {
          return false;
        } else {
          return typeof rule2 !== "string";
        }
      };
      _proto._isLossy = function _isLossy(options) {
        if (options === void 0) {
          options = {};
        }
        var merged = Object.assign({}, this.options, options);
        if (merged.lossless === false) {
          return true;
        } else {
          return false;
        }
      };
      _proto._root = function _root(rule2, options) {
        if (options === void 0) {
          options = {};
        }
        var parser = new _parser["default"](rule2, this._parseOptions(options));
        return parser.root;
      };
      _proto._parseOptions = function _parseOptions(options) {
        return {
          lossy: this._isLossy(options)
        };
      };
      _proto._run = function _run(rule2, options) {
        var _this = this;
        if (options === void 0) {
          options = {};
        }
        return new Promise(function(resolve, reject) {
          try {
            var root2 = _this._root(rule2, options);
            Promise.resolve(_this.func(root2)).then(function(transform) {
              var string = void 0;
              if (_this._shouldUpdateSelector(rule2, options)) {
                string = root2.toString();
                rule2.selector = string;
              }
              return {
                transform,
                root: root2,
                string
              };
            }).then(resolve, reject);
          } catch (e) {
            reject(e);
            return;
          }
        });
      };
      _proto._runSync = function _runSync(rule2, options) {
        if (options === void 0) {
          options = {};
        }
        var root2 = this._root(rule2, options);
        var transform = this.func(root2);
        if (transform && typeof transform.then === "function") {
          throw new Error("Selector processor returned a promise to a synchronous call.");
        }
        var string = void 0;
        if (options.updateSelector && typeof rule2 !== "string") {
          string = root2.toString();
          rule2.selector = string;
        }
        return {
          transform,
          root: root2,
          string
        };
      };
      _proto.ast = function ast(rule2, options) {
        return this._run(rule2, options).then(function(result) {
          return result.root;
        });
      };
      _proto.astSync = function astSync(rule2, options) {
        return this._runSync(rule2, options).root;
      };
      _proto.transform = function transform(rule2, options) {
        return this._run(rule2, options).then(function(result) {
          return result.transform;
        });
      };
      _proto.transformSync = function transformSync(rule2, options) {
        return this._runSync(rule2, options).transform;
      };
      _proto.process = function process2(rule2, options) {
        return this._run(rule2, options).then(function(result) {
          return result.string || result.root.toString();
        });
      };
      _proto.processSync = function processSync(rule2, options) {
        var result = this._runSync(rule2, options);
        return result.string || result.root.toString();
      };
      return Processor3;
    }();
    exports["default"] = Processor2;
    module.exports = exports.default;
  }
});
var require_constructors = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/constructors.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;
    var _attribute = _interopRequireDefault(require_attribute());
    var _className = _interopRequireDefault(require_className());
    var _combinator = _interopRequireDefault(require_combinator());
    var _comment = _interopRequireDefault(require_comment2());
    var _id = _interopRequireDefault(require_id());
    var _nesting = _interopRequireDefault(require_nesting());
    var _pseudo = _interopRequireDefault(require_pseudo());
    var _root = _interopRequireDefault(require_root2());
    var _selector = _interopRequireDefault(require_selector2());
    var _string = _interopRequireDefault(require_string());
    var _tag = _interopRequireDefault(require_tag());
    var _universal = _interopRequireDefault(require_universal());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var attribute = function attribute2(opts) {
      return new _attribute["default"](opts);
    };
    exports.attribute = attribute;
    var className = function className2(opts) {
      return new _className["default"](opts);
    };
    exports.className = className;
    var combinator = function combinator2(opts) {
      return new _combinator["default"](opts);
    };
    exports.combinator = combinator;
    var comment2 = function comment3(opts) {
      return new _comment["default"](opts);
    };
    exports.comment = comment2;
    var id = function id2(opts) {
      return new _id["default"](opts);
    };
    exports.id = id;
    var nesting = function nesting2(opts) {
      return new _nesting["default"](opts);
    };
    exports.nesting = nesting;
    var pseudo = function pseudo2(opts) {
      return new _pseudo["default"](opts);
    };
    exports.pseudo = pseudo;
    var root2 = function root3(opts) {
      return new _root["default"](opts);
    };
    exports.root = root2;
    var selector = function selector2(opts) {
      return new _selector["default"](opts);
    };
    exports.selector = selector;
    var string = function string2(opts) {
      return new _string["default"](opts);
    };
    exports.string = string;
    var tag = function tag2(opts) {
      return new _tag["default"](opts);
    };
    exports.tag = tag;
    var universal = function universal2(opts) {
      return new _universal["default"](opts);
    };
    exports.universal = universal;
  }
});
var require_guards = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/guards.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports.isNode = isNode;
    exports.isPseudoElement = isPseudoElement;
    exports.isPseudoClass = isPseudoClass;
    exports.isContainer = isContainer;
    exports.isNamespace = isNamespace;
    exports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = exports.isPseudo = exports.isNesting = exports.isIdentifier = exports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;
    var _types = require_types();
    var _IS_TYPE;
    var IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);
    function isNode(node) {
      return typeof node === "object" && IS_TYPE[node.type];
    }
    function isNodeType(type, node) {
      return isNode(node) && node.type === type;
    }
    var isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);
    exports.isAttribute = isAttribute;
    var isClassName = isNodeType.bind(null, _types.CLASS);
    exports.isClassName = isClassName;
    var isCombinator = isNodeType.bind(null, _types.COMBINATOR);
    exports.isCombinator = isCombinator;
    var isComment = isNodeType.bind(null, _types.COMMENT);
    exports.isComment = isComment;
    var isIdentifier = isNodeType.bind(null, _types.ID);
    exports.isIdentifier = isIdentifier;
    var isNesting = isNodeType.bind(null, _types.NESTING);
    exports.isNesting = isNesting;
    var isPseudo = isNodeType.bind(null, _types.PSEUDO);
    exports.isPseudo = isPseudo;
    var isRoot = isNodeType.bind(null, _types.ROOT);
    exports.isRoot = isRoot;
    var isSelector = isNodeType.bind(null, _types.SELECTOR);
    exports.isSelector = isSelector;
    var isString = isNodeType.bind(null, _types.STRING);
    exports.isString = isString;
    var isTag = isNodeType.bind(null, _types.TAG);
    exports.isTag = isTag;
    var isUniversal = isNodeType.bind(null, _types.UNIVERSAL);
    exports.isUniversal = isUniversal;
    function isPseudoElement(node) {
      return isPseudo(node) && node.value && (node.value.startsWith("::") || node.value.toLowerCase() === ":before" || node.value.toLowerCase() === ":after" || node.value.toLowerCase() === ":first-letter" || node.value.toLowerCase() === ":first-line");
    }
    function isPseudoClass(node) {
      return isPseudo(node) && !isPseudoElement(node);
    }
    function isContainer(node) {
      return !!(isNode(node) && node.walk);
    }
    function isNamespace(node) {
      return isAttribute(node) || isTag(node);
    }
  }
});
var require_selectors = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/selectors/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    var _types = require_types();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (key in exports && exports[key] === _types[key])
        return;
      exports[key] = _types[key];
    });
    var _constructors = require_constructors();
    Object.keys(_constructors).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (key in exports && exports[key] === _constructors[key])
        return;
      exports[key] = _constructors[key];
    });
    var _guards = require_guards();
    Object.keys(_guards).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (key in exports && exports[key] === _guards[key])
        return;
      exports[key] = _guards[key];
    });
  }
});
var require_dist = __commonJS({
  "../../node_modules/postcss-selector-parser/dist/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _processor = _interopRequireDefault(require_processor3());
    var selectors = _interopRequireWildcard(require_selectors());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var parser = function parser2(processor) {
      return new _processor["default"](processor);
    };
    Object.assign(parser, selectors);
    delete parser.__esModule;
    var _default = parser;
    exports["default"] = _default;
    module.exports = exports.default;
  }
});
var require_escapeCommas = __commonJS({
  "../../node_modules/tailwindcss/lib/util/escapeCommas.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => escapeCommas
    });
    function escapeCommas(className) {
      return className.replace(/\\,/g, "\\2c ");
    }
  }
});
var require_color_name = __commonJS({
  "../../node_modules/color-name/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    module.exports = {
      "aliceblue": [240, 248, 255],
      "antiquewhite": [250, 235, 215],
      "aqua": [0, 255, 255],
      "aquamarine": [127, 255, 212],
      "azure": [240, 255, 255],
      "beige": [245, 245, 220],
      "bisque": [255, 228, 196],
      "black": [0, 0, 0],
      "blanchedalmond": [255, 235, 205],
      "blue": [0, 0, 255],
      "blueviolet": [138, 43, 226],
      "brown": [165, 42, 42],
      "burlywood": [222, 184, 135],
      "cadetblue": [95, 158, 160],
      "chartreuse": [127, 255, 0],
      "chocolate": [210, 105, 30],
      "coral": [255, 127, 80],
      "cornflowerblue": [100, 149, 237],
      "cornsilk": [255, 248, 220],
      "crimson": [220, 20, 60],
      "cyan": [0, 255, 255],
      "darkblue": [0, 0, 139],
      "darkcyan": [0, 139, 139],
      "darkgoldenrod": [184, 134, 11],
      "darkgray": [169, 169, 169],
      "darkgreen": [0, 100, 0],
      "darkgrey": [169, 169, 169],
      "darkkhaki": [189, 183, 107],
      "darkmagenta": [139, 0, 139],
      "darkolivegreen": [85, 107, 47],
      "darkorange": [255, 140, 0],
      "darkorchid": [153, 50, 204],
      "darkred": [139, 0, 0],
      "darksalmon": [233, 150, 122],
      "darkseagreen": [143, 188, 143],
      "darkslateblue": [72, 61, 139],
      "darkslategray": [47, 79, 79],
      "darkslategrey": [47, 79, 79],
      "darkturquoise": [0, 206, 209],
      "darkviolet": [148, 0, 211],
      "deeppink": [255, 20, 147],
      "deepskyblue": [0, 191, 255],
      "dimgray": [105, 105, 105],
      "dimgrey": [105, 105, 105],
      "dodgerblue": [30, 144, 255],
      "firebrick": [178, 34, 34],
      "floralwhite": [255, 250, 240],
      "forestgreen": [34, 139, 34],
      "fuchsia": [255, 0, 255],
      "gainsboro": [220, 220, 220],
      "ghostwhite": [248, 248, 255],
      "gold": [255, 215, 0],
      "goldenrod": [218, 165, 32],
      "gray": [128, 128, 128],
      "green": [0, 128, 0],
      "greenyellow": [173, 255, 47],
      "grey": [128, 128, 128],
      "honeydew": [240, 255, 240],
      "hotpink": [255, 105, 180],
      "indianred": [205, 92, 92],
      "indigo": [75, 0, 130],
      "ivory": [255, 255, 240],
      "khaki": [240, 230, 140],
      "lavender": [230, 230, 250],
      "lavenderblush": [255, 240, 245],
      "lawngreen": [124, 252, 0],
      "lemonchiffon": [255, 250, 205],
      "lightblue": [173, 216, 230],
      "lightcoral": [240, 128, 128],
      "lightcyan": [224, 255, 255],
      "lightgoldenrodyellow": [250, 250, 210],
      "lightgray": [211, 211, 211],
      "lightgreen": [144, 238, 144],
      "lightgrey": [211, 211, 211],
      "lightpink": [255, 182, 193],
      "lightsalmon": [255, 160, 122],
      "lightseagreen": [32, 178, 170],
      "lightskyblue": [135, 206, 250],
      "lightslategray": [119, 136, 153],
      "lightslategrey": [119, 136, 153],
      "lightsteelblue": [176, 196, 222],
      "lightyellow": [255, 255, 224],
      "lime": [0, 255, 0],
      "limegreen": [50, 205, 50],
      "linen": [250, 240, 230],
      "magenta": [255, 0, 255],
      "maroon": [128, 0, 0],
      "mediumaquamarine": [102, 205, 170],
      "mediumblue": [0, 0, 205],
      "mediumorchid": [186, 85, 211],
      "mediumpurple": [147, 112, 219],
      "mediumseagreen": [60, 179, 113],
      "mediumslateblue": [123, 104, 238],
      "mediumspringgreen": [0, 250, 154],
      "mediumturquoise": [72, 209, 204],
      "mediumvioletred": [199, 21, 133],
      "midnightblue": [25, 25, 112],
      "mintcream": [245, 255, 250],
      "mistyrose": [255, 228, 225],
      "moccasin": [255, 228, 181],
      "navajowhite": [255, 222, 173],
      "navy": [0, 0, 128],
      "oldlace": [253, 245, 230],
      "olive": [128, 128, 0],
      "olivedrab": [107, 142, 35],
      "orange": [255, 165, 0],
      "orangered": [255, 69, 0],
      "orchid": [218, 112, 214],
      "palegoldenrod": [238, 232, 170],
      "palegreen": [152, 251, 152],
      "paleturquoise": [175, 238, 238],
      "palevioletred": [219, 112, 147],
      "papayawhip": [255, 239, 213],
      "peachpuff": [255, 218, 185],
      "peru": [205, 133, 63],
      "pink": [255, 192, 203],
      "plum": [221, 160, 221],
      "powderblue": [176, 224, 230],
      "purple": [128, 0, 128],
      "rebeccapurple": [102, 51, 153],
      "red": [255, 0, 0],
      "rosybrown": [188, 143, 143],
      "royalblue": [65, 105, 225],
      "saddlebrown": [139, 69, 19],
      "salmon": [250, 128, 114],
      "sandybrown": [244, 164, 96],
      "seagreen": [46, 139, 87],
      "seashell": [255, 245, 238],
      "sienna": [160, 82, 45],
      "silver": [192, 192, 192],
      "skyblue": [135, 206, 235],
      "slateblue": [106, 90, 205],
      "slategray": [112, 128, 144],
      "slategrey": [112, 128, 144],
      "snow": [255, 250, 250],
      "springgreen": [0, 255, 127],
      "steelblue": [70, 130, 180],
      "tan": [210, 180, 140],
      "teal": [0, 128, 128],
      "thistle": [216, 191, 216],
      "tomato": [255, 99, 71],
      "turquoise": [64, 224, 208],
      "violet": [238, 130, 238],
      "wheat": [245, 222, 179],
      "white": [255, 255, 255],
      "whitesmoke": [245, 245, 245],
      "yellow": [255, 255, 0],
      "yellowgreen": [154, 205, 50]
    };
  }
});
var require_color = __commonJS({
  "../../node_modules/tailwindcss/lib/util/color.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      parseColor: () => parseColor,
      formatColor: () => formatColor
    });
    var _colorName = _interopRequireDefault(require_color_name());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var HEX = /^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i;
    var SHORT_HEX = /^#([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i;
    var VALUE = /(?:\d+|\d*\.\d+)%?/;
    var SEP = /(?:\s*,\s*|\s+)/;
    var ALPHA_SEP = /\s*[,/]\s*/;
    var CUSTOM_PROPERTY = /var\(--(?:[^ )]*?)\)/;
    var RGB = new RegExp(`^(rgb)a?\\(\\s*(${VALUE.source}|${CUSTOM_PROPERTY.source})(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${ALPHA_SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?\\s*\\)$`);
    var HSL = new RegExp(`^(hsl)a?\\(\\s*((?:${VALUE.source})(?:deg|rad|grad|turn)?|${CUSTOM_PROPERTY.source})(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${ALPHA_SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?\\s*\\)$`);
    function parseColor(value, { loose = false } = {}) {
      var ref, ref1;
      if (typeof value !== "string") {
        return null;
      }
      value = value.trim();
      if (value === "transparent") {
        return {
          mode: "rgb",
          color: [
            "0",
            "0",
            "0"
          ],
          alpha: "0"
        };
      }
      if (value in _colorName.default) {
        return {
          mode: "rgb",
          color: _colorName.default[value].map((v) => v.toString())
        };
      }
      let hex = value.replace(SHORT_HEX, (_, r, g, b, a) => [
        "#",
        r,
        r,
        g,
        g,
        b,
        b,
        a ? a + a : ""
      ].join("")).match(HEX);
      if (hex !== null) {
        return {
          mode: "rgb",
          color: [
            parseInt(hex[1], 16),
            parseInt(hex[2], 16),
            parseInt(hex[3], 16)
          ].map((v) => v.toString()),
          alpha: hex[4] ? (parseInt(hex[4], 16) / 255).toString() : void 0
        };
      }
      var ref2;
      let match = (ref2 = value.match(RGB)) !== null && ref2 !== void 0 ? ref2 : value.match(HSL);
      if (match === null) {
        return null;
      }
      let color = [
        match[2],
        match[3],
        match[4]
      ].filter(Boolean).map((v) => v.toString());
      if (!loose && color.length !== 3) {
        return null;
      }
      if (color.length < 3 && !color.some((part) => /^var\(.*?\)$/.test(part))) {
        return null;
      }
      return {
        mode: match[1],
        color,
        alpha: (ref = match[5]) === null || ref === void 0 ? void 0 : (ref1 = ref.toString) === null || ref1 === void 0 ? void 0 : ref1.call(ref)
      };
    }
    function formatColor({ mode, color, alpha }) {
      let hasAlpha = alpha !== void 0;
      return `${mode}(${color.join(" ")}${hasAlpha ? ` / ${alpha}` : ""})`;
    }
  }
});
var require_withAlphaVariable = __commonJS({
  "../../node_modules/tailwindcss/lib/util/withAlphaVariable.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      withAlphaValue: () => withAlphaValue,
      default: () => withAlphaVariable
    });
    var _color = require_color();
    function withAlphaValue(color, alphaValue, defaultValue) {
      if (typeof color === "function") {
        return color({
          opacityValue: alphaValue
        });
      }
      let parsed = (0, _color.parseColor)(color, {
        loose: true
      });
      if (parsed === null) {
        return defaultValue;
      }
      return (0, _color.formatColor)({
        ...parsed,
        alpha: alphaValue
      });
    }
    function withAlphaVariable({ color, property, variable }) {
      let properties = [].concat(property);
      if (typeof color === "function") {
        return {
          [variable]: "1",
          ...Object.fromEntries(properties.map((p) => {
            return [
              p,
              color({
                opacityVariable: variable,
                opacityValue: `var(${variable})`
              })
            ];
          }))
        };
      }
      const parsed = (0, _color.parseColor)(color);
      if (parsed === null) {
        return Object.fromEntries(properties.map((p) => [
          p,
          color
        ]));
      }
      if (parsed.alpha !== void 0) {
        return Object.fromEntries(properties.map((p) => [
          p,
          color
        ]));
      }
      return {
        [variable]: "1",
        ...Object.fromEntries(properties.map((p) => {
          return [
            p,
            (0, _color.formatColor)({
              ...parsed,
              alpha: `var(${variable})`
            })
          ];
        }))
      };
    }
  }
});
var require_regex = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/regex.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      pattern: () => pattern,
      withoutCapturing: () => withoutCapturing,
      any: () => any,
      optional: () => optional,
      zeroOrMore: () => zeroOrMore,
      nestedBrackets: () => nestedBrackets,
      escape: () => escape2
    });
    var REGEX_SPECIAL = /[\\^$.*+?()[\]{}|]/g;
    var REGEX_HAS_SPECIAL = RegExp(REGEX_SPECIAL.source);
    function toSource(source) {
      source = Array.isArray(source) ? source : [
        source
      ];
      source = source.map((item) => item instanceof RegExp ? item.source : item);
      return source.join("");
    }
    function pattern(source) {
      return new RegExp(toSource(source), "g");
    }
    function withoutCapturing(source) {
      return new RegExp(`(?:${toSource(source)})`, "g");
    }
    function any(sources) {
      return `(?:${sources.map(toSource).join("|")})`;
    }
    function optional(source) {
      return `(?:${toSource(source)})?`;
    }
    function zeroOrMore(source) {
      return `(?:${toSource(source)})*`;
    }
    function nestedBrackets(open, close, depth = 1) {
      return withoutCapturing([
        escape2(open),
        /[^\s]*/,
        depth === 1 ? `[^${escape2(open)}${escape2(close)}s]*` : any([
          `[^${escape2(open)}${escape2(close)}s]*`,
          nestedBrackets(open, close, depth - 1)
        ]),
        /[^\s]*/,
        escape2(close)
      ]);
    }
    function escape2(string) {
      return string && REGEX_HAS_SPECIAL.test(string) ? string.replace(REGEX_SPECIAL, "\\$&") : string || "";
    }
  }
});
var require_splitAtTopLevelOnly = __commonJS({
  "../../node_modules/tailwindcss/lib/util/splitAtTopLevelOnly.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "splitAtTopLevelOnly", {
      enumerable: true,
      get: () => splitAtTopLevelOnly
    });
    var _regex = _interopRequireWildcard(require_regex());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function* splitAtTopLevelOnly(input, separator) {
      let SPECIALS = new RegExp(`[(){}\\[\\]${_regex.escape(separator)}]`, "g");
      let depth = 0;
      let lastIndex = 0;
      let found = false;
      let separatorIndex = 0;
      let separatorStart = 0;
      let separatorLength = separator.length;
      for (let match of input.matchAll(SPECIALS)) {
        let matchesSeparator = match[0] === separator[separatorIndex];
        let atEndOfSeparator = separatorIndex === separatorLength - 1;
        let matchesFullSeparator = matchesSeparator && atEndOfSeparator;
        if (match[0] === "(")
          depth++;
        if (match[0] === ")")
          depth--;
        if (match[0] === "[")
          depth++;
        if (match[0] === "]")
          depth--;
        if (match[0] === "{")
          depth++;
        if (match[0] === "}")
          depth--;
        if (matchesSeparator && depth === 0) {
          if (separatorStart === 0) {
            separatorStart = match.index;
          }
          separatorIndex++;
        }
        if (matchesFullSeparator && depth === 0) {
          found = true;
          yield input.substring(lastIndex, separatorStart);
          lastIndex = separatorStart + separatorLength;
        }
        if (separatorIndex === separatorLength) {
          separatorIndex = 0;
          separatorStart = 0;
        }
      }
      if (found) {
        yield input.substring(lastIndex);
      } else {
        yield input;
      }
    }
  }
});
var require_parseBoxShadowValue = __commonJS({
  "../../node_modules/tailwindcss/lib/util/parseBoxShadowValue.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      parseBoxShadowValue: () => parseBoxShadowValue,
      formatBoxShadowValue: () => formatBoxShadowValue
    });
    var _splitAtTopLevelOnly = require_splitAtTopLevelOnly();
    var KEYWORDS = /* @__PURE__ */ new Set([
      "inset",
      "inherit",
      "initial",
      "revert",
      "unset"
    ]);
    var SPACE = /\ +(?![^(]*\))/g;
    var LENGTH = /^-?(\d+|\.\d+)(.*?)$/g;
    function parseBoxShadowValue(input) {
      let shadows = Array.from((0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(input, ","));
      return shadows.map((shadow) => {
        let value = shadow.trim();
        let result = {
          raw: value
        };
        let parts = value.split(SPACE);
        let seen = /* @__PURE__ */ new Set();
        for (let part of parts) {
          LENGTH.lastIndex = 0;
          if (!seen.has("KEYWORD") && KEYWORDS.has(part)) {
            result.keyword = part;
            seen.add("KEYWORD");
          } else if (LENGTH.test(part)) {
            if (!seen.has("X")) {
              result.x = part;
              seen.add("X");
            } else if (!seen.has("Y")) {
              result.y = part;
              seen.add("Y");
            } else if (!seen.has("BLUR")) {
              result.blur = part;
              seen.add("BLUR");
            } else if (!seen.has("SPREAD")) {
              result.spread = part;
              seen.add("SPREAD");
            }
          } else {
            if (!result.color) {
              result.color = part;
            } else {
              if (!result.unknown)
                result.unknown = [];
              result.unknown.push(part);
            }
          }
        }
        result.valid = result.x !== void 0 && result.y !== void 0;
        return result;
      });
    }
    function formatBoxShadowValue(shadows) {
      return shadows.map((shadow) => {
        if (!shadow.valid) {
          return shadow.raw;
        }
        return [
          shadow.keyword,
          shadow.x,
          shadow.y,
          shadow.blur,
          shadow.spread,
          shadow.color
        ].filter(Boolean).join(" ");
      }).join(", ");
    }
  }
});
var require_dataTypes = __commonJS({
  "../../node_modules/tailwindcss/lib/util/dataTypes.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      normalize: () => normalize,
      url: () => url,
      number: () => number,
      percentage: () => percentage,
      length: () => length,
      lineWidth: () => lineWidth,
      shadow: () => shadow,
      color: () => color,
      image: () => image,
      gradient: () => gradient,
      position: () => position,
      familyName: () => familyName,
      genericName: () => genericName,
      absoluteSize: () => absoluteSize,
      relativeSize: () => relativeSize
    });
    var _color = require_color();
    var _parseBoxShadowValue = require_parseBoxShadowValue();
    var cssFunctions = [
      "min",
      "max",
      "clamp",
      "calc"
    ];
    var COMMA = /,(?![^(]*\))/g;
    var UNDERSCORE = /_(?![^(]*\))/g;
    function normalize(value, isRoot = true) {
      if (value.includes("url(")) {
        return value.split(/(url\(.*?\))/g).filter(Boolean).map((part) => {
          if (/^url\(.*?\)$/.test(part)) {
            return part;
          }
          return normalize(part, false);
        }).join("");
      }
      value = value.replace(/([^\\])_+/g, (fullMatch, characterBefore) => characterBefore + " ".repeat(fullMatch.length - 1)).replace(/^_/g, " ").replace(/\\_/g, "_");
      if (isRoot) {
        value = value.trim();
      }
      value = value.replace(/(calc|min|max|clamp)\(.+\)/g, (match) => {
        return match.replace(/(-?\d*\.?\d(?!\b-.+[,)](?![^+\-/*])\D)(?:%|[a-z]+)?|\))([+\-/*])/g, "$1 $2 ");
      });
      return value;
    }
    function url(value) {
      return value.startsWith("url(");
    }
    function number(value) {
      return !isNaN(Number(value)) || cssFunctions.some((fn) => new RegExp(`^${fn}\\(.+?`).test(value));
    }
    function percentage(value) {
      return value.split(UNDERSCORE).every((part) => {
        return /%$/g.test(part) || cssFunctions.some((fn) => new RegExp(`^${fn}\\(.+?%`).test(part));
      });
    }
    var lengthUnits = [
      "cm",
      "mm",
      "Q",
      "in",
      "pc",
      "pt",
      "px",
      "em",
      "ex",
      "ch",
      "rem",
      "lh",
      "vw",
      "vh",
      "vmin",
      "vmax"
    ];
    var lengthUnitsPattern = `(?:${lengthUnits.join("|")})`;
    function length(value) {
      return value.split(UNDERSCORE).every((part) => {
        return part === "0" || new RegExp(`${lengthUnitsPattern}$`).test(part) || cssFunctions.some((fn) => new RegExp(`^${fn}\\(.+?${lengthUnitsPattern}`).test(part));
      });
    }
    var lineWidths = /* @__PURE__ */ new Set([
      "thin",
      "medium",
      "thick"
    ]);
    function lineWidth(value) {
      return lineWidths.has(value);
    }
    function shadow(value) {
      let parsedShadows = (0, _parseBoxShadowValue.parseBoxShadowValue)(normalize(value));
      for (let parsedShadow of parsedShadows) {
        if (!parsedShadow.valid) {
          return false;
        }
      }
      return true;
    }
    function color(value) {
      let colors = 0;
      let result = value.split(UNDERSCORE).every((part) => {
        part = normalize(part);
        if (part.startsWith("var("))
          return true;
        if ((0, _color.parseColor)(part, {
          loose: true
        }) !== null)
          return colors++, true;
        return false;
      });
      if (!result)
        return false;
      return colors > 0;
    }
    function image(value) {
      let images = 0;
      let result = value.split(COMMA).every((part) => {
        part = normalize(part);
        if (part.startsWith("var("))
          return true;
        if (url(part) || gradient(part) || [
          "element(",
          "image(",
          "cross-fade(",
          "image-set("
        ].some((fn) => part.startsWith(fn))) {
          images++;
          return true;
        }
        return false;
      });
      if (!result)
        return false;
      return images > 0;
    }
    var gradientTypes = /* @__PURE__ */ new Set([
      "linear-gradient",
      "radial-gradient",
      "repeating-linear-gradient",
      "repeating-radial-gradient",
      "conic-gradient"
    ]);
    function gradient(value) {
      value = normalize(value);
      for (let type of gradientTypes) {
        if (value.startsWith(`${type}(`)) {
          return true;
        }
      }
      return false;
    }
    var validPositions = /* @__PURE__ */ new Set([
      "center",
      "top",
      "right",
      "bottom",
      "left"
    ]);
    function position(value) {
      let positions = 0;
      let result = value.split(UNDERSCORE).every((part) => {
        part = normalize(part);
        if (part.startsWith("var("))
          return true;
        if (validPositions.has(part) || length(part) || percentage(part)) {
          positions++;
          return true;
        }
        return false;
      });
      if (!result)
        return false;
      return positions > 0;
    }
    function familyName(value) {
      let fonts = 0;
      let result = value.split(COMMA).every((part) => {
        part = normalize(part);
        if (part.startsWith("var("))
          return true;
        if (part.includes(" ")) {
          if (!/(['"])([^"']+)\1/g.test(part)) {
            return false;
          }
        }
        if (/^\d/g.test(part)) {
          return false;
        }
        fonts++;
        return true;
      });
      if (!result)
        return false;
      return fonts > 0;
    }
    var genericNames = /* @__PURE__ */ new Set([
      "serif",
      "sans-serif",
      "monospace",
      "cursive",
      "fantasy",
      "system-ui",
      "ui-serif",
      "ui-sans-serif",
      "ui-monospace",
      "ui-rounded",
      "math",
      "emoji",
      "fangsong"
    ]);
    function genericName(value) {
      return genericNames.has(value);
    }
    var absoluteSizes = /* @__PURE__ */ new Set([
      "xx-small",
      "x-small",
      "small",
      "medium",
      "large",
      "x-large",
      "x-large",
      "xxx-large"
    ]);
    function absoluteSize(value) {
      return absoluteSizes.has(value);
    }
    var relativeSizes = /* @__PURE__ */ new Set([
      "larger",
      "smaller"
    ]);
    function relativeSize(value) {
      return relativeSizes.has(value);
    }
  }
});
var require_pluginUtils = __commonJS({
  "../../node_modules/tailwindcss/lib/util/pluginUtils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      updateAllClasses: () => updateAllClasses,
      asValue: () => asValue,
      parseColorFormat: () => parseColorFormat,
      asColor: () => asColor,
      asLookupValue: () => asLookupValue,
      coerceValue: () => coerceValue
    });
    var _postcssSelectorParser = _interopRequireDefault(require_dist());
    var _escapeCommas = _interopRequireDefault(require_escapeCommas());
    var _withAlphaVariable = require_withAlphaVariable();
    var _dataTypes = require_dataTypes();
    var _negateValue = _interopRequireDefault(require_negateValue());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function updateAllClasses(selectors, updateClass) {
      let parser = (0, _postcssSelectorParser.default)((selectors2) => {
        selectors2.walkClasses((sel) => {
          let updatedClass = updateClass(sel.value);
          sel.value = updatedClass;
          if (sel.raws && sel.raws.value) {
            sel.raws.value = (0, _escapeCommas.default)(sel.raws.value);
          }
        });
      });
      let result = parser.processSync(selectors);
      return result;
    }
    function resolveArbitraryValue(modifier, validate) {
      if (!isArbitraryValue(modifier)) {
        return void 0;
      }
      let value = modifier.slice(1, -1);
      if (!validate(value)) {
        return void 0;
      }
      return (0, _dataTypes.normalize)(value);
    }
    function asNegativeValue(modifier, lookup = {}, validate) {
      let positiveValue = lookup[modifier];
      if (positiveValue !== void 0) {
        return (0, _negateValue.default)(positiveValue);
      }
      if (isArbitraryValue(modifier)) {
        let resolved = resolveArbitraryValue(modifier, validate);
        if (resolved === void 0) {
          return void 0;
        }
        return (0, _negateValue.default)(resolved);
      }
    }
    function asValue(modifier, options = {}, { validate = () => true } = {}) {
      var ref;
      let value = (ref = options.values) === null || ref === void 0 ? void 0 : ref[modifier];
      if (value !== void 0) {
        return value;
      }
      if (options.supportsNegativeValues && modifier.startsWith("-")) {
        return asNegativeValue(modifier.slice(1), options.values, validate);
      }
      return resolveArbitraryValue(modifier, validate);
    }
    function isArbitraryValue(input) {
      return input.startsWith("[") && input.endsWith("]");
    }
    function splitAlpha(modifier) {
      let slashIdx = modifier.lastIndexOf("/");
      if (slashIdx === -1 || slashIdx === modifier.length - 1) {
        return [
          modifier
        ];
      }
      return [
        modifier.slice(0, slashIdx),
        modifier.slice(slashIdx + 1)
      ];
    }
    function parseColorFormat(value) {
      if (typeof value === "string" && value.includes("<alpha-value>")) {
        let oldValue = value;
        return ({ opacityValue = 1 }) => oldValue.replace("<alpha-value>", opacityValue);
      }
      return value;
    }
    function asColor(modifier, options = {}, { tailwindConfig = {} } = {}) {
      var ref;
      if (((ref = options.values) === null || ref === void 0 ? void 0 : ref[modifier]) !== void 0) {
        var ref1;
        return parseColorFormat((ref1 = options.values) === null || ref1 === void 0 ? void 0 : ref1[modifier]);
      }
      let [color, alpha] = splitAlpha(modifier);
      if (alpha !== void 0) {
        var ref2, ref3, ref4;
        var ref5;
        let normalizedColor = (ref5 = (ref2 = options.values) === null || ref2 === void 0 ? void 0 : ref2[color]) !== null && ref5 !== void 0 ? ref5 : isArbitraryValue(color) ? color.slice(1, -1) : void 0;
        if (normalizedColor === void 0) {
          return void 0;
        }
        normalizedColor = parseColorFormat(normalizedColor);
        if (isArbitraryValue(alpha)) {
          return (0, _withAlphaVariable.withAlphaValue)(normalizedColor, alpha.slice(1, -1));
        }
        if (((ref3 = tailwindConfig.theme) === null || ref3 === void 0 ? void 0 : (ref4 = ref3.opacity) === null || ref4 === void 0 ? void 0 : ref4[alpha]) === void 0) {
          return void 0;
        }
        return (0, _withAlphaVariable.withAlphaValue)(normalizedColor, tailwindConfig.theme.opacity[alpha]);
      }
      return asValue(modifier, options, {
        validate: _dataTypes.color
      });
    }
    function asLookupValue(modifier, options = {}) {
      var ref;
      return (ref = options.values) === null || ref === void 0 ? void 0 : ref[modifier];
    }
    function guess(validate) {
      return (modifier, options) => {
        return asValue(modifier, options, {
          validate
        });
      };
    }
    var typeMap = {
      any: asValue,
      color: asColor,
      url: guess(_dataTypes.url),
      image: guess(_dataTypes.image),
      length: guess(_dataTypes.length),
      percentage: guess(_dataTypes.percentage),
      position: guess(_dataTypes.position),
      lookup: asLookupValue,
      "generic-name": guess(_dataTypes.genericName),
      "family-name": guess(_dataTypes.familyName),
      number: guess(_dataTypes.number),
      "line-width": guess(_dataTypes.lineWidth),
      "absolute-size": guess(_dataTypes.absoluteSize),
      "relative-size": guess(_dataTypes.relativeSize),
      shadow: guess(_dataTypes.shadow)
    };
    var supportedTypes = Object.keys(typeMap);
    function splitAtFirst(input, delim) {
      let idx = input.indexOf(delim);
      if (idx === -1)
        return [
          void 0,
          input
        ];
      return [
        input.slice(0, idx),
        input.slice(idx + 1)
      ];
    }
    function coerceValue(types, modifier, options, tailwindConfig) {
      if (isArbitraryValue(modifier)) {
        let arbitraryValue = modifier.slice(1, -1);
        let [explicitType, value] = splitAtFirst(arbitraryValue, ":");
        if (!/^[\w-_]+$/g.test(explicitType)) {
          value = arbitraryValue;
        } else if (explicitType !== void 0 && !supportedTypes.includes(explicitType)) {
          return [];
        }
        if (value.length > 0 && supportedTypes.includes(explicitType)) {
          return [
            asValue(`[${value}]`, options),
            explicitType
          ];
        }
      }
      for (let type of [].concat(types)) {
        let result = typeMap[type](modifier, options, {
          tailwindConfig
        });
        if (result !== void 0)
          return [
            result,
            type
          ];
      }
      return [];
    }
  }
});
var require_toColorValue = __commonJS({
  "../../node_modules/tailwindcss/lib/util/toColorValue.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => toColorValue
    });
    function toColorValue(maybeFunction) {
      return typeof maybeFunction === "function" ? maybeFunction({}) : maybeFunction;
    }
  }
});
var require_resolveConfig = __commonJS({
  "../../node_modules/tailwindcss/lib/util/resolveConfig.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => resolveConfig
    });
    var _negateValue = _interopRequireDefault(require_negateValue());
    var _corePluginList = _interopRequireDefault(require_corePluginList());
    var _configurePlugins = _interopRequireDefault(require_configurePlugins());
    var _defaultConfigStub = _interopRequireDefault(require_defaultConfig_stub());
    var _colors = _interopRequireDefault(require_colors());
    var _defaults = require_defaults();
    var _toPath = require_toPath();
    var _normalizeConfig = require_normalizeConfig();
    var _isPlainObject = _interopRequireDefault(require_isPlainObject());
    var _cloneDeep = require_cloneDeep();
    var _pluginUtils = require_pluginUtils();
    var _withAlphaVariable = require_withAlphaVariable();
    var _toColorValue = _interopRequireDefault(require_toColorValue());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function isFunction(input) {
      return typeof input === "function";
    }
    function isObject(input) {
      return typeof input === "object" && input !== null;
    }
    function mergeWith(target, ...sources) {
      let customizer = sources.pop();
      for (let source of sources) {
        for (let k in source) {
          let merged = customizer(target[k], source[k]);
          if (merged === void 0) {
            if (isObject(target[k]) && isObject(source[k])) {
              target[k] = mergeWith(target[k], source[k], customizer);
            } else {
              target[k] = source[k];
            }
          } else {
            target[k] = merged;
          }
        }
      }
      return target;
    }
    var configUtils = {
      colors: _colors.default,
      negative(scale) {
        return Object.keys(scale).filter((key) => scale[key] !== "0").reduce((negativeScale, key) => {
          let negativeValue = (0, _negateValue.default)(scale[key]);
          if (negativeValue !== void 0) {
            negativeScale[`-${key}`] = negativeValue;
          }
          return negativeScale;
        }, {});
      },
      breakpoints(screens) {
        return Object.keys(screens).filter((key) => typeof screens[key] === "string").reduce((breakpoints, key) => ({
          ...breakpoints,
          [`screen-${key}`]: screens[key]
        }), {});
      }
    };
    function value(valueToResolve, ...args) {
      return isFunction(valueToResolve) ? valueToResolve(...args) : valueToResolve;
    }
    function collectExtends(items) {
      return items.reduce((merged, { extend }) => {
        return mergeWith(merged, extend, (mergedValue, extendValue) => {
          if (mergedValue === void 0) {
            return [
              extendValue
            ];
          }
          if (Array.isArray(mergedValue)) {
            return [
              extendValue,
              ...mergedValue
            ];
          }
          return [
            extendValue,
            mergedValue
          ];
        });
      }, {});
    }
    function mergeThemes(themes) {
      return {
        ...themes.reduce((merged, theme) => (0, _defaults.defaults)(merged, theme), {}),
        extend: collectExtends(themes)
      };
    }
    function mergeExtensionCustomizer(merged, value2) {
      if (Array.isArray(merged) && isObject(merged[0])) {
        return merged.concat(value2);
      }
      if (Array.isArray(value2) && isObject(value2[0]) && isObject(merged)) {
        return [
          merged,
          ...value2
        ];
      }
      if (Array.isArray(value2)) {
        return value2;
      }
      return void 0;
    }
    function mergeExtensions({ extend, ...theme }) {
      return mergeWith(theme, extend, (themeValue, extensions) => {
        if (!isFunction(themeValue) && !extensions.some(isFunction)) {
          return mergeWith({}, themeValue, ...extensions, mergeExtensionCustomizer);
        }
        return (resolveThemePath, utils) => mergeWith({}, ...[
          themeValue,
          ...extensions
        ].map((e) => value(e, resolveThemePath, utils)), mergeExtensionCustomizer);
      });
    }
    function* toPaths(key) {
      let path = (0, _toPath.toPath)(key);
      if (path.length === 0) {
        return;
      }
      yield path;
      if (Array.isArray(key)) {
        return;
      }
      let pattern = /^(.*?)\s*\/\s*([^/]+)$/;
      let matches = key.match(pattern);
      if (matches !== null) {
        let [, prefix, alpha] = matches;
        let newPath = (0, _toPath.toPath)(prefix);
        newPath.alpha = alpha;
        yield newPath;
      }
    }
    function resolveFunctionKeys(object) {
      const resolvePath = (key, defaultValue) => {
        for (const path of toPaths(key)) {
          let index = 0;
          let val = object;
          while (val !== void 0 && val !== null && index < path.length) {
            val = val[path[index++]];
            let shouldResolveAsFn = isFunction(val) && (path.alpha === void 0 || index <= path.length - 1);
            val = shouldResolveAsFn ? val(resolvePath, configUtils) : val;
          }
          if (val !== void 0) {
            if (path.alpha !== void 0) {
              let normalized = (0, _pluginUtils.parseColorFormat)(val);
              return (0, _withAlphaVariable.withAlphaValue)(normalized, path.alpha, (0, _toColorValue.default)(normalized));
            }
            if ((0, _isPlainObject.default)(val)) {
              return (0, _cloneDeep.cloneDeep)(val);
            }
            return val;
          }
        }
        return defaultValue;
      };
      Object.assign(resolvePath, {
        theme: resolvePath,
        ...configUtils
      });
      return Object.keys(object).reduce((resolved, key) => {
        resolved[key] = isFunction(object[key]) ? object[key](resolvePath, configUtils) : object[key];
        return resolved;
      }, {});
    }
    function extractPluginConfigs(configs) {
      let allConfigs = [];
      configs.forEach((config) => {
        allConfigs = [
          ...allConfigs,
          config
        ];
        var ref;
        const plugins = (ref = config === null || config === void 0 ? void 0 : config.plugins) !== null && ref !== void 0 ? ref : [];
        if (plugins.length === 0) {
          return;
        }
        plugins.forEach((plugin2) => {
          if (plugin2.__isOptionsFunction) {
            plugin2 = plugin2();
          }
          var ref2;
          allConfigs = [
            ...allConfigs,
            ...extractPluginConfigs([
              (ref2 = plugin2 === null || plugin2 === void 0 ? void 0 : plugin2.config) !== null && ref2 !== void 0 ? ref2 : {}
            ])
          ];
        });
      });
      return allConfigs;
    }
    function resolveCorePlugins(corePluginConfigs) {
      const result = [
        ...corePluginConfigs
      ].reduceRight((resolved, corePluginConfig) => {
        if (isFunction(corePluginConfig)) {
          return corePluginConfig({
            corePlugins: resolved
          });
        }
        return (0, _configurePlugins.default)(corePluginConfig, resolved);
      }, _corePluginList.default);
      return result;
    }
    function resolvePluginLists(pluginLists) {
      const result = [
        ...pluginLists
      ].reduceRight((resolved, pluginList) => {
        return [
          ...resolved,
          ...pluginList
        ];
      }, []);
      return result;
    }
    function resolveConfig(configs) {
      let allConfigs = [
        ...extractPluginConfigs(configs),
        {
          prefix: "",
          important: false,
          separator: ":",
          variantOrder: _defaultConfigStub.default.variantOrder
        }
      ];
      var ref, ref1;
      return (0, _normalizeConfig.normalizeConfig)((0, _defaults.defaults)({
        theme: resolveFunctionKeys(mergeExtensions(mergeThemes(allConfigs.map((t) => {
          return (ref = t === null || t === void 0 ? void 0 : t.theme) !== null && ref !== void 0 ? ref : {};
        })))),
        corePlugins: resolveCorePlugins(allConfigs.map((c) => c.corePlugins)),
        plugins: resolvePluginLists(configs.map((c) => {
          return (ref1 = c === null || c === void 0 ? void 0 : c.plugins) !== null && ref1 !== void 0 ? ref1 : [];
        }))
      }, ...allConfigs));
    }
  }
});
var require_featureFlags = __commonJS({
  "../../node_modules/tailwindcss/lib/featureFlags.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      flagEnabled: () => flagEnabled,
      issueFlagNotices: () => issueFlagNotices,
      default: () => _default
    });
    var _picocolors = _interopRequireDefault(require_picocolors_browser());
    var _log = _interopRequireDefault(require_log());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var defaults = {
      optimizeUniversalDefaults: false
    };
    var featureFlags = {
      future: [
        "hoverOnlyWhenSupported",
        "respectDefaultRingColorOpacity"
      ],
      experimental: [
        "optimizeUniversalDefaults",
        "matchVariant"
      ]
    };
    function flagEnabled(config, flag) {
      if (featureFlags.future.includes(flag)) {
        var ref;
        var ref1, ref2;
        return config.future === "all" || ((ref2 = (ref1 = config === null || config === void 0 ? void 0 : (ref = config.future) === null || ref === void 0 ? void 0 : ref[flag]) !== null && ref1 !== void 0 ? ref1 : defaults[flag]) !== null && ref2 !== void 0 ? ref2 : false);
      }
      if (featureFlags.experimental.includes(flag)) {
        var ref3;
        var ref4, ref5;
        return config.experimental === "all" || ((ref5 = (ref4 = config === null || config === void 0 ? void 0 : (ref3 = config.experimental) === null || ref3 === void 0 ? void 0 : ref3[flag]) !== null && ref4 !== void 0 ? ref4 : defaults[flag]) !== null && ref5 !== void 0 ? ref5 : false);
      }
      return false;
    }
    function experimentalFlagsEnabled(config) {
      if (config.experimental === "all") {
        return featureFlags.experimental;
      }
      var ref;
      return Object.keys((ref = config === null || config === void 0 ? void 0 : config.experimental) !== null && ref !== void 0 ? ref : {}).filter((flag) => featureFlags.experimental.includes(flag) && config.experimental[flag]);
    }
    function issueFlagNotices(config) {
      if (process.env.JEST_WORKER_ID !== void 0) {
        return;
      }
      if (experimentalFlagsEnabled(config).length > 0) {
        let changes = experimentalFlagsEnabled(config).map((s) => _picocolors.default.yellow(s)).join(", ");
        _log.default.warn("experimental-flags-enabled", [
          `You have enabled experimental features: ${changes}`,
          "Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time."
        ]);
      }
    }
    var _default = featureFlags;
  }
});
var require_getAllConfigs = __commonJS({
  "../../node_modules/tailwindcss/lib/util/getAllConfigs.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => getAllConfigs
    });
    var _defaultConfigStubJs = _interopRequireDefault(require_defaultConfig_stub());
    var _featureFlags = require_featureFlags();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function getAllConfigs(config) {
      var ref;
      const configs = ((ref = config === null || config === void 0 ? void 0 : config.presets) !== null && ref !== void 0 ? ref : [
        _defaultConfigStubJs.default
      ]).slice().reverse().flatMap((preset) => getAllConfigs(preset instanceof Function ? preset() : preset));
      const features = {
        respectDefaultRingColorOpacity: {
          theme: {
            ringColor: {
              DEFAULT: "#3b82f67f"
            }
          }
        }
      };
      const experimentals = Object.keys(features).filter((feature) => (0, _featureFlags.flagEnabled)(config, feature)).map((feature) => features[feature]);
      return [
        config,
        ...experimentals,
        ...configs
      ];
    }
  }
});
var require_resolve_config = __commonJS({
  "../../node_modules/tailwindcss/lib/public/resolve-config.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => resolveConfig
    });
    var _resolveConfig = _interopRequireDefault(require_resolveConfig());
    var _getAllConfigs = _interopRequireDefault(require_getAllConfigs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function resolveConfig(...configs) {
      let [, ...defaultConfigs] = (0, _getAllConfigs.default)(configs[0]);
      return (0, _resolveConfig.default)([
        ...configs,
        ...defaultConfigs
      ]);
    }
  }
});
var require_resolveConfigPath = __commonJS({
  "../../node_modules/tailwindcss/lib/util/resolveConfigPath.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => resolveConfigPath
    });
    var _fs = _interopRequireDefault(require_browserify_fs());
    var _path = _interopRequireDefault(require_path_browserify());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function isObject(value) {
      return typeof value === "object" && value !== null;
    }
    function isEmpty(obj) {
      return Object.keys(obj).length === 0;
    }
    function isString(value) {
      return typeof value === "string" || value instanceof String;
    }
    function resolveConfigPath(pathOrConfig) {
      if (isObject(pathOrConfig) && pathOrConfig.config === void 0 && !isEmpty(pathOrConfig)) {
        return null;
      }
      if (isObject(pathOrConfig) && pathOrConfig.config !== void 0 && isString(pathOrConfig.config)) {
        return _path.default.resolve(pathOrConfig.config);
      }
      if (isObject(pathOrConfig) && pathOrConfig.config !== void 0 && isObject(pathOrConfig.config)) {
        return null;
      }
      if (isString(pathOrConfig)) {
        return _path.default.resolve(pathOrConfig);
      }
      for (const configFile of [
        "./tailwind.config.js",
        "./tailwind.config.cjs"
      ]) {
        try {
          const configPath = _path.default.resolve(configFile);
          _fs.default.accessSync(configPath);
          return configPath;
        } catch (err) {
        }
      }
      return null;
    }
  }
});
var require_sharedState = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/sharedState.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      env: () => env,
      contextMap: () => contextMap,
      configContextMap: () => configContextMap,
      contextSourcesMap: () => contextSourcesMap,
      sourceHashMap: () => sourceHashMap,
      NOT_ON_DEMAND: () => NOT_ON_DEMAND,
      resolveDebug: () => resolveDebug
    });
    var env = {
      NODE_ENV: "development",
      DEBUG: resolveDebug(process.env.DEBUG)
    };
    var contextMap = /* @__PURE__ */ new Map();
    var configContextMap = /* @__PURE__ */ new Map();
    var contextSourcesMap = /* @__PURE__ */ new Map();
    var sourceHashMap = /* @__PURE__ */ new Map();
    var NOT_ON_DEMAND = new String("*");
    function resolveDebug(debug) {
      if (debug === void 0) {
        return false;
      }
      if (debug === "true" || debug === "1") {
        return true;
      }
      if (debug === "false" || debug === "0") {
        return false;
      }
      if (debug === "*") {
        return true;
      }
      let debuggers = debug.split(",").map((d) => d.split(":")[0]);
      if (debuggers.includes("-tailwindcss")) {
        return false;
      }
      if (debuggers.includes("tailwindcss")) {
        return true;
      }
      return false;
    }
  }
});
var require_dlv_umd = __commonJS({
  "../../node_modules/dlv/dist/dlv.umd.js"(exports, module) {
    init_process();
    init_buffer();
    !function(t, n) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = function(t2, n2, e, i, o) {
        for (n2 = n2.split ? n2.split(".") : n2, i = 0; i < n2.length; i++)
          t2 = t2 ? t2[n2[i]] : o;
        return t2 === o ? e : t2;
      } : "function" == typeof define && define.amd ? define(function() {
        return function(t2, n2, e, i, o) {
          for (n2 = n2.split ? n2.split(".") : n2, i = 0; i < n2.length; i++)
            t2 = t2 ? t2[n2[i]] : o;
          return t2 === o ? e : t2;
        };
      }) : t.dlv = function(t2, n2, e, i, o) {
        for (n2 = n2.split ? n2.split(".") : n2, i = 0; i < n2.length; i++)
          t2 = t2 ? t2[n2[i]] : o;
        return t2 === o ? e : t2;
      };
    }(exports);
  }
});
var require_transformThemeValue = __commonJS({
  "../../node_modules/tailwindcss/lib/util/transformThemeValue.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => transformThemeValue
    });
    var _postcss = _interopRequireDefault(require_postcss());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function transformThemeValue(themeSection) {
      if ([
        "fontSize",
        "outline"
      ].includes(themeSection)) {
        return (value) => {
          if (typeof value === "function")
            value = value({});
          if (Array.isArray(value))
            value = value[0];
          return value;
        };
      }
      if ([
        "fontFamily",
        "boxShadow",
        "transitionProperty",
        "transitionDuration",
        "transitionDelay",
        "transitionTimingFunction",
        "backgroundImage",
        "backgroundSize",
        "backgroundColor",
        "cursor",
        "animation"
      ].includes(themeSection)) {
        return (value) => {
          if (typeof value === "function")
            value = value({});
          if (Array.isArray(value))
            value = value.join(", ");
          return value;
        };
      }
      if ([
        "gridTemplateColumns",
        "gridTemplateRows",
        "objectPosition"
      ].includes(themeSection)) {
        return (value) => {
          if (typeof value === "function")
            value = value({});
          if (typeof value === "string")
            value = _postcss.default.list.comma(value).join(" ");
          return value;
        };
      }
      return (value, opts = {}) => {
        if (typeof value === "function") {
          value = value(opts);
        }
        return value;
      };
    }
  }
});
var require_postcss_nested = __commonJS({
  "../../node_modules/postcss-nested/index.js"(exports, module) {
    init_process();
    init_buffer();
    var parser = require_dist();
    function parse2(str, rule2) {
      let nodes;
      let saver = parser((parsed) => {
        nodes = parsed;
      });
      try {
        saver.processSync(str);
      } catch (e) {
        if (str.includes(":")) {
          throw rule2 ? rule2.error("Missed semicolon") : e;
        } else {
          throw rule2 ? rule2.error(e.message) : e;
        }
      }
      return nodes.at(0);
    }
    function replace(nodes, parent) {
      let replaced = false;
      nodes.each((i) => {
        if (i.type === "nesting") {
          let clonedParent = parent.clone();
          if (i.value !== "&") {
            i.replaceWith(parse2(i.value.replace("&", clonedParent.toString())));
          } else {
            i.replaceWith(clonedParent);
          }
          replaced = true;
        } else if (i.nodes) {
          if (replace(i, parent)) {
            replaced = true;
          }
        }
      });
      return replaced;
    }
    function selectors(parent, child) {
      let result = [];
      parent.selectors.forEach((i) => {
        let parentNode = parse2(i, parent);
        child.selectors.forEach((j) => {
          if (j.length) {
            let node = parse2(j, child);
            let replaced = replace(node, parentNode);
            if (!replaced) {
              node.prepend(parser.combinator({ value: " " }));
              node.prepend(parentNode.clone());
            }
            result.push(node.toString());
          }
        });
      });
      return result;
    }
    function pickComment(comment2, after) {
      if (comment2 && comment2.type === "comment") {
        after.after(comment2);
        return comment2;
      } else {
        return after;
      }
    }
    function createFnAtruleChilds(bubble) {
      return function atruleChilds(rule2, atrule, bubbling) {
        let children = [];
        atrule.each((child) => {
          if (child.type === "comment") {
            children.push(child);
          } else if (child.type === "decl") {
            children.push(child);
          } else if (child.type === "rule" && bubbling) {
            child.selectors = selectors(rule2, child);
          } else if (child.type === "atrule") {
            if (child.nodes && bubble[child.name]) {
              atruleChilds(rule2, child, true);
            } else {
              children.push(child);
            }
          }
        });
        if (bubbling) {
          if (children.length) {
            let clone = rule2.clone({ nodes: [] });
            for (let child of children) {
              clone.append(child);
            }
            atrule.prepend(clone);
          }
        }
      };
    }
    function pickDeclarations(selector, declarations, after, Rule3) {
      let parent = new Rule3({
        selector,
        nodes: []
      });
      for (let declaration of declarations) {
        parent.append(declaration);
      }
      after.after(parent);
      return parent;
    }
    function atruleNames(defaults, custom) {
      let list2 = {};
      for (let i of defaults) {
        list2[i] = true;
      }
      if (custom) {
        for (let i of custom) {
          let name = i.replace(/^@/, "");
          list2[name] = true;
        }
      }
      return list2;
    }
    module.exports = (opts = {}) => {
      let bubble = atruleNames(["media", "supports"], opts.bubble);
      let atruleChilds = createFnAtruleChilds(bubble);
      let unwrap = atruleNames(
        [
          "document",
          "font-face",
          "keyframes",
          "-webkit-keyframes",
          "-moz-keyframes"
        ],
        opts.unwrap
      );
      let preserveEmpty = opts.preserveEmpty;
      return {
        postcssPlugin: "postcss-nested",
        Rule(rule2, { Rule: Rule3 }) {
          let unwrapped = false;
          let after = rule2;
          let copyDeclarations = false;
          let declarations = [];
          rule2.each((child) => {
            if (child.type === "rule") {
              if (declarations.length) {
                after = pickDeclarations(rule2.selector, declarations, after, Rule3);
                declarations = [];
              }
              copyDeclarations = true;
              unwrapped = true;
              child.selectors = selectors(rule2, child);
              after = pickComment(child.prev(), after);
              after.after(child);
              after = child;
            } else if (child.type === "atrule") {
              if (declarations.length) {
                after = pickDeclarations(rule2.selector, declarations, after, Rule3);
                declarations = [];
              }
              if (child.name === "at-root") {
                unwrapped = true;
                atruleChilds(rule2, child, false);
                let nodes = child.nodes;
                if (child.params) {
                  nodes = new Rule3({ selector: child.params, nodes });
                }
                after.after(nodes);
                after = nodes;
                child.remove();
              } else if (bubble[child.name]) {
                copyDeclarations = true;
                unwrapped = true;
                atruleChilds(rule2, child, true);
                after = pickComment(child.prev(), after);
                after.after(child);
                after = child;
              } else if (unwrap[child.name]) {
                copyDeclarations = true;
                unwrapped = true;
                atruleChilds(rule2, child, false);
                after = pickComment(child.prev(), after);
                after.after(child);
                after = child;
              } else if (copyDeclarations) {
                declarations.push(child);
              }
            } else if (child.type === "decl" && copyDeclarations) {
              declarations.push(child);
            }
          });
          if (declarations.length) {
            after = pickDeclarations(rule2.selector, declarations, after, Rule3);
          }
          if (unwrapped && preserveEmpty !== true) {
            rule2.raws.semicolon = true;
            if (rule2.nodes.length === 0)
              rule2.remove();
          }
        }
      };
    };
    module.exports.postcss = true;
  }
});
var require_index_es5 = __commonJS({
  "../../node_modules/camelcase-css/index-es5.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var pattern = /-(\w|$)/g;
    var callback = function callback2(dashChar, char) {
      return char.toUpperCase();
    };
    var camelCaseCSS = function camelCaseCSS2(property) {
      property = property.toLowerCase();
      if (property === "float") {
        return "cssFloat";
      } else if (property.charCodeAt(0) === 45 && property.charCodeAt(1) === 109 && property.charCodeAt(2) === 115 && property.charCodeAt(3) === 45) {
        return property.substr(1).replace(pattern, callback);
      } else {
        return property.replace(pattern, callback);
      }
    };
    module.exports = camelCaseCSS;
  }
});
var require_objectifier = __commonJS({
  "../../node_modules/postcss-js/objectifier.js"(exports, module) {
    init_process();
    init_buffer();
    var camelcase = require_index_es5();
    var UNITLESS = {
      boxFlex: true,
      boxFlexGroup: true,
      columnCount: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      fillOpacity: true,
      strokeDashoffset: true,
      strokeOpacity: true,
      strokeWidth: true
    };
    function atRule2(node) {
      if (typeof node.nodes === "undefined") {
        return true;
      } else {
        return process2(node);
      }
    }
    function process2(node) {
      let name;
      let result = {};
      node.each((child) => {
        if (child.type === "atrule") {
          name = "@" + child.name;
          if (child.params)
            name += " " + child.params;
          if (typeof result[name] === "undefined") {
            result[name] = atRule2(child);
          } else if (Array.isArray(result[name])) {
            result[name].push(atRule2(child));
          } else {
            result[name] = [result[name], atRule2(child)];
          }
        } else if (child.type === "rule") {
          let body = process2(child);
          if (result[child.selector]) {
            for (let i in body) {
              result[child.selector][i] = body[i];
            }
          } else {
            result[child.selector] = body;
          }
        } else if (child.type === "decl") {
          if (child.prop[0] === "-" && child.prop[1] === "-") {
            name = child.prop;
          } else {
            name = camelcase(child.prop);
          }
          let value = child.value;
          if (!isNaN(child.value) && UNITLESS[name]) {
            value = parseFloat(child.value);
          }
          if (child.important)
            value += " !important";
          if (typeof result[name] === "undefined") {
            result[name] = value;
          } else if (Array.isArray(result[name])) {
            result[name].push(value);
          } else {
            result[name] = [result[name], value];
          }
        }
      });
      return result;
    }
    module.exports = process2;
  }
});
var require_parser3 = __commonJS({
  "../../node_modules/postcss-js/parser.js"(exports, module) {
    init_process();
    init_buffer();
    var postcss2 = require_postcss();
    var IMPORTANT = /\s*!important\s*$/i;
    var UNITLESS = {
      "box-flex": true,
      "box-flex-group": true,
      "column-count": true,
      "flex": true,
      "flex-grow": true,
      "flex-positive": true,
      "flex-shrink": true,
      "flex-negative": true,
      "font-weight": true,
      "line-clamp": true,
      "line-height": true,
      "opacity": true,
      "order": true,
      "orphans": true,
      "tab-size": true,
      "widows": true,
      "z-index": true,
      "zoom": true,
      "fill-opacity": true,
      "stroke-dashoffset": true,
      "stroke-opacity": true,
      "stroke-width": true
    };
    function dashify(str) {
      return str.replace(/([A-Z])/g, "-$1").replace(/^ms-/, "-ms-").toLowerCase();
    }
    function decl2(parent, name, value) {
      if (value === false || value === null)
        return;
      if (!name.startsWith("--")) {
        name = dashify(name);
      }
      if (typeof value === "number") {
        if (value === 0 || UNITLESS[name]) {
          value = value.toString();
        } else {
          value += "px";
        }
      }
      if (name === "css-float")
        name = "float";
      if (IMPORTANT.test(value)) {
        value = value.replace(IMPORTANT, "");
        parent.push(postcss2.decl({ prop: name, value, important: true }));
      } else {
        parent.push(postcss2.decl({ prop: name, value }));
      }
    }
    function atRule2(parent, parts, value) {
      let node = postcss2.atRule({ name: parts[1], params: parts[3] || "" });
      if (typeof value === "object") {
        node.nodes = [];
        parse2(value, node);
      }
      parent.push(node);
    }
    function parse2(obj, parent) {
      let name, value, node;
      for (name in obj) {
        value = obj[name];
        if (value === null || typeof value === "undefined") {
          continue;
        } else if (name[0] === "@") {
          let parts = name.match(/@(\S+)(\s+([\W\w]*)\s*)?/);
          if (Array.isArray(value)) {
            for (let i of value) {
              atRule2(parent, parts, i);
            }
          } else {
            atRule2(parent, parts, value);
          }
        } else if (Array.isArray(value)) {
          for (let i of value) {
            decl2(parent, name, i);
          }
        } else if (typeof value === "object") {
          node = postcss2.rule({ selector: name });
          parse2(value, node);
          parent.push(node);
        } else {
          decl2(parent, name, value);
        }
      }
    }
    module.exports = function(obj) {
      let root2 = postcss2.root();
      parse2(obj, root2);
      return root2;
    };
  }
});
var require_process_result = __commonJS({
  "../../node_modules/postcss-js/process-result.js"(exports, module) {
    init_process();
    init_buffer();
    var objectify = require_objectifier();
    module.exports = function processResult(result) {
      if (console && console.warn) {
        result.warnings().forEach((warn) => {
          let source = warn.plugin || "PostCSS";
          console.warn(source + ": " + warn.text);
        });
      }
      return objectify(result.root);
    };
  }
});
var require_async2 = __commonJS({
  "../../node_modules/postcss-js/async.js"(exports, module) {
    init_process();
    init_buffer();
    var postcss2 = require_postcss();
    var processResult = require_process_result();
    var parse2 = require_parser3();
    module.exports = function async(plugins) {
      let processor = postcss2(plugins);
      return async (input) => {
        let result = await processor.process(input, {
          parser: parse2,
          from: void 0
        });
        return processResult(result);
      };
    };
  }
});
var require_sync2 = __commonJS({
  "../../node_modules/postcss-js/sync.js"(exports, module) {
    init_process();
    init_buffer();
    var postcss2 = require_postcss();
    var processResult = require_process_result();
    var parse2 = require_parser3();
    module.exports = function(plugins) {
      let processor = postcss2(plugins);
      return (input) => {
        let result = processor.process(input, { parser: parse2, from: void 0 });
        return processResult(result);
      };
    };
  }
});
var require_postcss_js = __commonJS({
  "../../node_modules/postcss-js/index.js"(exports, module) {
    init_process();
    init_buffer();
    var objectify = require_objectifier();
    var parse2 = require_parser3();
    var async = require_async2();
    var sync = require_sync2();
    module.exports = {
      objectify,
      parse: parse2,
      async,
      sync
    };
  }
});
var require_parseObjectStyles = __commonJS({
  "../../node_modules/tailwindcss/lib/util/parseObjectStyles.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => parseObjectStyles
    });
    var _postcss = _interopRequireDefault(require_postcss());
    var _postcssNested = _interopRequireDefault(require_postcss_nested());
    var _postcssJs = _interopRequireDefault(require_postcss_js());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function parseObjectStyles(styles) {
      if (!Array.isArray(styles)) {
        return parseObjectStyles([
          styles
        ]);
      }
      return styles.flatMap((style) => {
        return (0, _postcss.default)([
          (0, _postcssNested.default)({
            bubble: [
              "screen"
            ]
          })
        ]).process(style, {
          parser: _postcssJs.default
        }).root.nodes;
      });
    }
  }
});
var require_prefixSelector = __commonJS({
  "../../node_modules/tailwindcss/lib/util/prefixSelector.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    var _postcssSelectorParser = _interopRequireDefault(require_dist());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _default(prefix, selector, prependNegative = false) {
      return (0, _postcssSelectorParser.default)((selectors) => {
        selectors.walkClasses((classSelector) => {
          let baseClass = classSelector.value;
          let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith("-");
          classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;
        });
      }).processSync(selector);
    }
  }
});
var require_escapeClassName = __commonJS({
  "../../node_modules/tailwindcss/lib/util/escapeClassName.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => escapeClassName
    });
    var _postcssSelectorParser = _interopRequireDefault(require_dist());
    var _escapeCommas = _interopRequireDefault(require_escapeCommas());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function escapeClassName(className) {
      var ref;
      let node = _postcssSelectorParser.default.className();
      node.value = className;
      var ref1;
      return (0, _escapeCommas.default)((ref1 = node === null || node === void 0 ? void 0 : (ref = node.raws) === null || ref === void 0 ? void 0 : ref.value) !== null && ref1 !== void 0 ? ref1 : node.value);
    }
  }
});
var require_nameClass = __commonJS({
  "../../node_modules/tailwindcss/lib/util/nameClass.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      asClass: () => asClass,
      default: () => nameClass,
      formatClass: () => formatClass
    });
    var _escapeClassName = _interopRequireDefault(require_escapeClassName());
    var _escapeCommas = _interopRequireDefault(require_escapeCommas());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function asClass(name) {
      return (0, _escapeCommas.default)(`.${(0, _escapeClassName.default)(name)}`);
    }
    function nameClass(classPrefix, key) {
      return asClass(formatClass(classPrefix, key));
    }
    function formatClass(classPrefix, key) {
      if (key === "DEFAULT") {
        return classPrefix;
      }
      if (key === "-" || key === "-DEFAULT") {
        return `-${classPrefix}`;
      }
      if (key.startsWith("-")) {
        return `-${classPrefix}${key}`;
      }
      return `${classPrefix}-${key}`;
    }
  }
});
var require_bigSign = __commonJS({
  "../../node_modules/tailwindcss/lib/util/bigSign.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => bigSign
    });
    function bigSign(bigIntValue) {
      return (bigIntValue > BigInt(0)) - (bigIntValue < BigInt(0));
    }
  }
});
var require_createUtilityPlugin = __commonJS({
  "../../node_modules/tailwindcss/lib/util/createUtilityPlugin.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => createUtilityPlugin
    });
    var _transformThemeValue = _interopRequireDefault(require_transformThemeValue());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function createUtilityPlugin(themeKey, utilityVariations = [
      [
        themeKey,
        [
          themeKey
        ]
      ]
    ], { filterDefault = false, ...options } = {}) {
      let transformValue = (0, _transformThemeValue.default)(themeKey);
      return function({ matchUtilities, theme }) {
        for (let utilityVariation of utilityVariations) {
          let group = Array.isArray(utilityVariation[0]) ? utilityVariation : [
            utilityVariation
          ];
          var ref;
          matchUtilities(group.reduce((obj, [classPrefix, properties]) => {
            return Object.assign(obj, {
              [classPrefix]: (value) => {
                return properties.reduce((obj2, name) => {
                  if (Array.isArray(name)) {
                    return Object.assign(obj2, {
                      [name[0]]: name[1]
                    });
                  }
                  return Object.assign(obj2, {
                    [name]: transformValue(value)
                  });
                }, {});
              }
            });
          }, {}), {
            ...options,
            values: filterDefault ? Object.fromEntries(Object.entries((ref = theme(themeKey)) !== null && ref !== void 0 ? ref : {}).filter(([modifier]) => modifier !== "DEFAULT")) : theme(themeKey)
          });
        }
      };
    }
  }
});
var require_buildMediaQuery = __commonJS({
  "../../node_modules/tailwindcss/lib/util/buildMediaQuery.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => buildMediaQuery
    });
    function buildMediaQuery(screens) {
      screens = Array.isArray(screens) ? screens : [
        screens
      ];
      return screens.map((screen) => screen.values.map((screen2) => {
        if (screen2.raw !== void 0) {
          return screen2.raw;
        }
        return [
          screen2.min && `(min-width: ${screen2.min})`,
          screen2.max && `(max-width: ${screen2.max})`
        ].filter(Boolean).join(" and ");
      })).join(", ");
    }
  }
});
var require_parseAnimationValue = __commonJS({
  "../../node_modules/tailwindcss/lib/util/parseAnimationValue.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => parseAnimationValue
    });
    var DIRECTIONS = /* @__PURE__ */ new Set([
      "normal",
      "reverse",
      "alternate",
      "alternate-reverse"
    ]);
    var PLAY_STATES = /* @__PURE__ */ new Set([
      "running",
      "paused"
    ]);
    var FILL_MODES = /* @__PURE__ */ new Set([
      "none",
      "forwards",
      "backwards",
      "both"
    ]);
    var ITERATION_COUNTS = /* @__PURE__ */ new Set([
      "infinite"
    ]);
    var TIMINGS = /* @__PURE__ */ new Set([
      "linear",
      "ease",
      "ease-in",
      "ease-out",
      "ease-in-out",
      "step-start",
      "step-end"
    ]);
    var TIMING_FNS = [
      "cubic-bezier",
      "steps"
    ];
    var COMMA = /\,(?![^(]*\))/g;
    var SPACE = /\ +(?![^(]*\))/g;
    var TIME = /^(-?[\d.]+m?s)$/;
    var DIGIT = /^(\d+)$/;
    function parseAnimationValue(input) {
      let animations = input.split(COMMA);
      return animations.map((animation) => {
        let value = animation.trim();
        let result = {
          value
        };
        let parts = value.split(SPACE);
        let seen = /* @__PURE__ */ new Set();
        for (let part of parts) {
          if (!seen.has("DIRECTIONS") && DIRECTIONS.has(part)) {
            result.direction = part;
            seen.add("DIRECTIONS");
          } else if (!seen.has("PLAY_STATES") && PLAY_STATES.has(part)) {
            result.playState = part;
            seen.add("PLAY_STATES");
          } else if (!seen.has("FILL_MODES") && FILL_MODES.has(part)) {
            result.fillMode = part;
            seen.add("FILL_MODES");
          } else if (!seen.has("ITERATION_COUNTS") && (ITERATION_COUNTS.has(part) || DIGIT.test(part))) {
            result.iterationCount = part;
            seen.add("ITERATION_COUNTS");
          } else if (!seen.has("TIMING_FUNCTION") && TIMINGS.has(part)) {
            result.timingFunction = part;
            seen.add("TIMING_FUNCTION");
          } else if (!seen.has("TIMING_FUNCTION") && TIMING_FNS.some((f) => part.startsWith(`${f}(`))) {
            result.timingFunction = part;
            seen.add("TIMING_FUNCTION");
          } else if (!seen.has("DURATION") && TIME.test(part)) {
            result.duration = part;
            seen.add("DURATION");
          } else if (!seen.has("DELAY") && TIME.test(part)) {
            result.delay = part;
            seen.add("DELAY");
          } else if (!seen.has("NAME")) {
            result.name = part;
            seen.add("NAME");
          } else {
            if (!result.unknown)
              result.unknown = [];
            result.unknown.push(part);
          }
        }
        return result;
      });
    }
  }
});
var require_flattenColorPalette = __commonJS({
  "../../node_modules/tailwindcss/lib/util/flattenColorPalette.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    var flattenColorPalette = (colors) => Object.assign({}, ...Object.entries(colors !== null && colors !== void 0 ? colors : {}).flatMap(([color, values]) => typeof values == "object" ? Object.entries(flattenColorPalette(values)).map(([number, hex]) => ({
      [color + (number === "DEFAULT" ? "" : `-${number}`)]: hex
    })) : [
      {
        [`${color}`]: values
      }
    ]));
    var _default = flattenColorPalette;
  }
});
var require_package = __commonJS({
  "../../node_modules/tailwindcss/package.json"(exports, module) {
    module.exports = {
      name: "tailwindcss",
      version: "3.1.8",
      description: "A utility-first CSS framework for rapidly building custom user interfaces.",
      license: "MIT",
      main: "lib/index.js",
      types: "types/index.d.ts",
      repository: "https://github.com/tailwindlabs/tailwindcss.git",
      bugs: "https://github.com/tailwindlabs/tailwindcss/issues",
      homepage: "https://tailwindcss.com",
      bin: {
        tailwind: "lib/cli.js",
        tailwindcss: "lib/cli.js"
      },
      scripts: {
        preswcify: "npm run generate && rimraf lib",
        swcify: "swc src --out-dir lib --copy-files",
        postswcify: "esbuild lib/cli-peer-dependencies.js --bundle --platform=node --outfile=peers/index.js",
        "rebuild-fixtures": "npm run swcify && node -r @swc/register scripts/rebuildFixtures.js",
        prepublishOnly: "npm install --force && npm run swcify",
        style: "eslint .",
        pretest: "npm run generate",
        test: "jest",
        "test:integrations": "npm run test --prefix ./integrations",
        "install:integrations": "node scripts/install-integrations.js",
        posttest: "npm run style",
        "generate:plugin-list": "node -r @swc/register scripts/create-plugin-list.js",
        "generate:types": "node -r @swc/register scripts/generate-types.js",
        generate: "npm run generate:plugin-list && npm run generate:types"
      },
      files: [
        "src/*",
        "cli/*",
        "lib/*",
        "peers/*",
        "scripts/*.js",
        "stubs/*.stub.js",
        "nesting/*",
        "types/**/*",
        "*.d.ts",
        "*.css",
        "*.js"
      ],
      devDependencies: {
        "@swc/cli": "^0.1.57",
        "@swc/core": "^1.2.218",
        "@swc/jest": "^0.2.22",
        "@swc/register": "^0.1.10",
        autoprefixer: "^10.4.8",
        cssnano: "^5.1.12",
        esbuild: "^0.14.48",
        eslint: "^8.20.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-plugin-prettier": "^4.2.1",
        jest: "^28.1.3",
        "jest-diff": "^28.1.3",
        prettier: "^2.7.1",
        "prettier-plugin-tailwindcss": "^0.1.13",
        rimraf: "^3.0.0",
        "source-map-js": "^1.0.2"
      },
      peerDependencies: {
        postcss: "^8.0.9"
      },
      dependencies: {
        arg: "^5.0.2",
        chokidar: "^3.5.3",
        "color-name": "^1.1.4",
        detective: "^5.2.1",
        didyoumean: "^1.2.2",
        dlv: "^1.1.3",
        "fast-glob": "^3.2.11",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        lilconfig: "^2.0.6",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        picocolors: "^1.0.0",
        postcss: "^8.4.14",
        "postcss-import": "^14.1.0",
        "postcss-js": "^4.0.0",
        "postcss-load-config": "^3.1.4",
        "postcss-nested": "5.0.6",
        "postcss-selector-parser": "^6.0.10",
        "postcss-value-parser": "^4.2.0",
        "quick-lru": "^5.1.1",
        resolve: "^1.22.1"
      },
      browserslist: [
        "> 1%",
        "not edge <= 18",
        "not ie 11",
        "not op_mini all"
      ],
      jest: {
        testTimeout: 3e4,
        setupFilesAfterEnv: [
          "<rootDir>/jest/customMatchers.js"
        ],
        testPathIgnorePatterns: [
          "/node_modules/",
          "/integrations/",
          "/standalone-cli/",
          "\\.test\\.skip\\.js$"
        ],
        transform: {
          "\\.js$": "@swc/jest"
        }
      },
      engines: {
        node: ">=12.13.0"
      }
    };
  }
});
var require_normalizeScreens = __commonJS({
  "../../node_modules/tailwindcss/lib/util/normalizeScreens.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "normalizeScreens", {
      enumerable: true,
      get: () => normalizeScreens
    });
    function normalizeScreens(screens, root2 = true) {
      if (Array.isArray(screens)) {
        return screens.map((screen) => {
          if (root2 && Array.isArray(screen)) {
            throw new Error("The tuple syntax is not supported for `screens`.");
          }
          if (typeof screen === "string") {
            return {
              name: screen.toString(),
              values: [
                {
                  min: screen,
                  max: void 0
                }
              ]
            };
          }
          let [name, options] = screen;
          name = name.toString();
          if (typeof options === "string") {
            return {
              name,
              values: [
                {
                  min: options,
                  max: void 0
                }
              ]
            };
          }
          if (Array.isArray(options)) {
            return {
              name,
              values: options.map((option) => resolveValue(option))
            };
          }
          return {
            name,
            values: [
              resolveValue(options)
            ]
          };
        });
      }
      return normalizeScreens(Object.entries(screens !== null && screens !== void 0 ? screens : {}), false);
    }
    function resolveValue({ "min-width": _minWidth, min = _minWidth, max, raw } = {}) {
      return {
        min,
        max,
        raw
      };
    }
  }
});
var require_removeAlphaVariables = __commonJS({
  "../../node_modules/tailwindcss/lib/util/removeAlphaVariables.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "removeAlphaVariables", {
      enumerable: true,
      get: () => removeAlphaVariables
    });
    function removeAlphaVariables(container, toRemove) {
      container.walkDecls((decl2) => {
        if (toRemove.includes(decl2.prop)) {
          decl2.remove();
          return;
        }
        for (let varName of toRemove) {
          if (decl2.value.includes(`/ var(${varName})`)) {
            decl2.value = decl2.value.replace(`/ var(${varName})`, "");
          }
        }
      });
    }
  }
});
var require_corePlugins = __commonJS({
  "../../node_modules/tailwindcss/lib/corePlugins.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      variantPlugins: () => variantPlugins,
      corePlugins: () => corePlugins
    });
    var _fs = _interopRequireDefault(require_browserify_fs());
    var _path = _interopRequireWildcard(require_path_browserify());
    var _postcss = _interopRequireDefault(require_postcss());
    var _createUtilityPlugin = _interopRequireDefault(require_createUtilityPlugin());
    var _buildMediaQuery = _interopRequireDefault(require_buildMediaQuery());
    var _escapeClassName = _interopRequireDefault(require_escapeClassName());
    var _parseAnimationValue = _interopRequireDefault(require_parseAnimationValue());
    var _flattenColorPalette = _interopRequireDefault(require_flattenColorPalette());
    var _withAlphaVariable = _interopRequireWildcard(require_withAlphaVariable());
    var _toColorValue = _interopRequireDefault(require_toColorValue());
    var _isPlainObject = _interopRequireDefault(require_isPlainObject());
    var _transformThemeValue = _interopRequireDefault(require_transformThemeValue());
    var _packageJson = require_package();
    var _log = _interopRequireDefault(require_log());
    var _normalizeScreens = require_normalizeScreens();
    var _parseBoxShadowValue = require_parseBoxShadowValue();
    var _removeAlphaVariables = require_removeAlphaVariables();
    var _featureFlags = require_featureFlags();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var variantPlugins = {
      pseudoElementVariants: ({ addVariant }) => {
        addVariant("first-letter", "&::first-letter");
        addVariant("first-line", "&::first-line");
        addVariant("marker", [
          ({ container }) => {
            (0, _removeAlphaVariables.removeAlphaVariables)(container, [
              "--tw-text-opacity"
            ]);
            return "& *::marker";
          },
          ({ container }) => {
            (0, _removeAlphaVariables.removeAlphaVariables)(container, [
              "--tw-text-opacity"
            ]);
            return "&::marker";
          }
        ]);
        addVariant("selection", [
          "& *::selection",
          "&::selection"
        ]);
        addVariant("file", "&::file-selector-button");
        addVariant("placeholder", "&::placeholder");
        addVariant("backdrop", "&::backdrop");
        addVariant("before", ({ container }) => {
          container.walkRules((rule2) => {
            let foundContent = false;
            rule2.walkDecls("content", () => {
              foundContent = true;
            });
            if (!foundContent) {
              rule2.prepend(_postcss.default.decl({
                prop: "content",
                value: "var(--tw-content)"
              }));
            }
          });
          return "&::before";
        });
        addVariant("after", ({ container }) => {
          container.walkRules((rule2) => {
            let foundContent = false;
            rule2.walkDecls("content", () => {
              foundContent = true;
            });
            if (!foundContent) {
              rule2.prepend(_postcss.default.decl({
                prop: "content",
                value: "var(--tw-content)"
              }));
            }
          });
          return "&::after";
        });
      },
      pseudoClassVariants: ({ addVariant, config }) => {
        let pseudoVariants = [
          [
            "first",
            "&:first-child"
          ],
          [
            "last",
            "&:last-child"
          ],
          [
            "only",
            "&:only-child"
          ],
          [
            "odd",
            "&:nth-child(odd)"
          ],
          [
            "even",
            "&:nth-child(even)"
          ],
          "first-of-type",
          "last-of-type",
          "only-of-type",
          [
            "visited",
            ({ container }) => {
              (0, _removeAlphaVariables.removeAlphaVariables)(container, [
                "--tw-text-opacity",
                "--tw-border-opacity",
                "--tw-bg-opacity"
              ]);
              return "&:visited";
            }
          ],
          "target",
          [
            "open",
            "&[open]"
          ],
          "default",
          "checked",
          "indeterminate",
          "placeholder-shown",
          "autofill",
          "optional",
          "required",
          "valid",
          "invalid",
          "in-range",
          "out-of-range",
          "read-only",
          "empty",
          "focus-within",
          [
            "hover",
            !(0, _featureFlags.flagEnabled)(config(), "hoverOnlyWhenSupported") ? "&:hover" : "@media (hover: hover) and (pointer: fine) { &:hover }"
          ],
          "focus",
          "focus-visible",
          "active",
          "enabled",
          "disabled"
        ].map((variant) => Array.isArray(variant) ? variant : [
          variant,
          `&:${variant}`
        ]);
        for (let [variantName, state] of pseudoVariants) {
          addVariant(variantName, (ctx) => {
            let result = typeof state === "function" ? state(ctx) : state;
            return result;
          });
        }
        for (let [variantName1, state1] of pseudoVariants) {
          addVariant(`group-${variantName1}`, (ctx) => {
            let result = typeof state1 === "function" ? state1(ctx) : state1;
            return result.replace(/&(\S+)/, ":merge(.group)$1 &");
          });
        }
        for (let [variantName2, state2] of pseudoVariants) {
          addVariant(`peer-${variantName2}`, (ctx) => {
            let result = typeof state2 === "function" ? state2(ctx) : state2;
            return result.replace(/&(\S+)/, ":merge(.peer)$1 ~ &");
          });
        }
      },
      directionVariants: ({ addVariant }) => {
        addVariant("ltr", () => {
          _log.default.warn("rtl-experimental", [
            "The RTL features in Tailwind CSS are currently in preview.",
            "Preview features are not covered by semver, and may be improved in breaking ways at any time."
          ]);
          return '[dir="ltr"] &';
        });
        addVariant("rtl", () => {
          _log.default.warn("rtl-experimental", [
            "The RTL features in Tailwind CSS are currently in preview.",
            "Preview features are not covered by semver, and may be improved in breaking ways at any time."
          ]);
          return '[dir="rtl"] &';
        });
      },
      reducedMotionVariants: ({ addVariant }) => {
        addVariant("motion-safe", "@media (prefers-reduced-motion: no-preference)");
        addVariant("motion-reduce", "@media (prefers-reduced-motion: reduce)");
      },
      darkVariants: ({ config, addVariant }) => {
        let [mode, className = ".dark"] = [].concat(config("darkMode", "media"));
        if (mode === false) {
          mode = "media";
          _log.default.warn("darkmode-false", [
            "The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.",
            "Change `darkMode` to `media` or remove it entirely.",
            "https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration"
          ]);
        }
        if (mode === "class") {
          addVariant("dark", `${className} &`);
        } else if (mode === "media") {
          addVariant("dark", "@media (prefers-color-scheme: dark)");
        }
      },
      printVariant: ({ addVariant }) => {
        addVariant("print", "@media print");
      },
      screenVariants: ({ theme, addVariant }) => {
        for (let screen of (0, _normalizeScreens.normalizeScreens)(theme("screens"))) {
          let query = (0, _buildMediaQuery.default)(screen);
          addVariant(screen.name, `@media ${query}`);
        }
      },
      orientationVariants: ({ addVariant }) => {
        addVariant("portrait", "@media (orientation: portrait)");
        addVariant("landscape", "@media (orientation: landscape)");
      },
      prefersContrastVariants: ({ addVariant }) => {
        addVariant("contrast-more", "@media (prefers-contrast: more)");
        addVariant("contrast-less", "@media (prefers-contrast: less)");
      }
    };
    var cssTransformValue = [
      "translate(var(--tw-translate-x), var(--tw-translate-y))",
      "rotate(var(--tw-rotate))",
      "skewX(var(--tw-skew-x))",
      "skewY(var(--tw-skew-y))",
      "scaleX(var(--tw-scale-x))",
      "scaleY(var(--tw-scale-y))"
    ].join(" ");
    var cssFilterValue = [
      "var(--tw-blur)",
      "var(--tw-brightness)",
      "var(--tw-contrast)",
      "var(--tw-grayscale)",
      "var(--tw-hue-rotate)",
      "var(--tw-invert)",
      "var(--tw-saturate)",
      "var(--tw-sepia)",
      "var(--tw-drop-shadow)"
    ].join(" ");
    var cssBackdropFilterValue = [
      "var(--tw-backdrop-blur)",
      "var(--tw-backdrop-brightness)",
      "var(--tw-backdrop-contrast)",
      "var(--tw-backdrop-grayscale)",
      "var(--tw-backdrop-hue-rotate)",
      "var(--tw-backdrop-invert)",
      "var(--tw-backdrop-opacity)",
      "var(--tw-backdrop-saturate)",
      "var(--tw-backdrop-sepia)"
    ].join(" ");
    var corePlugins = {
      preflight: ({ addBase }) => {
        let preflightStyles = _postcss.default.parse(_fs.default.readFileSync(_path.join(__dirname, "./css/preflight.css"), "utf8"));
        addBase([
          _postcss.default.comment({
            text: `! tailwindcss v${_packageJson.version} | MIT License | https://tailwindcss.com`
          }),
          ...preflightStyles.nodes
        ]);
      },
      container: (() => {
        function extractMinWidths(breakpoints = []) {
          return breakpoints.flatMap((breakpoint) => breakpoint.values.map((breakpoint2) => breakpoint2.min)).filter((v) => v !== void 0);
        }
        function mapMinWidthsToPadding(minWidths, screens, paddings) {
          if (typeof paddings === "undefined") {
            return [];
          }
          if (!(typeof paddings === "object" && paddings !== null)) {
            return [
              {
                screen: "DEFAULT",
                minWidth: 0,
                padding: paddings
              }
            ];
          }
          let mapping = [];
          if (paddings.DEFAULT) {
            mapping.push({
              screen: "DEFAULT",
              minWidth: 0,
              padding: paddings.DEFAULT
            });
          }
          for (let minWidth of minWidths) {
            for (let screen of screens) {
              for (let { min } of screen.values) {
                if (min === minWidth) {
                  mapping.push({
                    minWidth,
                    padding: paddings[screen.name]
                  });
                }
              }
            }
          }
          return mapping;
        }
        return function({ addComponents, theme }) {
          let screens = (0, _normalizeScreens.normalizeScreens)(theme("container.screens", theme("screens")));
          let minWidths = extractMinWidths(screens);
          let paddings = mapMinWidthsToPadding(minWidths, screens, theme("container.padding"));
          let generatePaddingFor = (minWidth) => {
            let paddingConfig = paddings.find((padding) => padding.minWidth === minWidth);
            if (!paddingConfig) {
              return {};
            }
            return {
              paddingRight: paddingConfig.padding,
              paddingLeft: paddingConfig.padding
            };
          };
          let atRules = Array.from(new Set(minWidths.slice().sort((a, z) => parseInt(a) - parseInt(z)))).map((minWidth) => ({
            [`@media (min-width: ${minWidth})`]: {
              ".container": {
                "max-width": minWidth,
                ...generatePaddingFor(minWidth)
              }
            }
          }));
          addComponents([
            {
              ".container": Object.assign({
                width: "100%"
              }, theme("container.center", false) ? {
                marginRight: "auto",
                marginLeft: "auto"
              } : {}, generatePaddingFor(0))
            },
            ...atRules
          ]);
        };
      })(),
      accessibility: ({ addUtilities }) => {
        addUtilities({
          ".sr-only": {
            position: "absolute",
            width: "1px",
            height: "1px",
            padding: "0",
            margin: "-1px",
            overflow: "hidden",
            clip: "rect(0, 0, 0, 0)",
            whiteSpace: "nowrap",
            borderWidth: "0"
          },
          ".not-sr-only": {
            position: "static",
            width: "auto",
            height: "auto",
            padding: "0",
            margin: "0",
            overflow: "visible",
            clip: "auto",
            whiteSpace: "normal"
          }
        });
      },
      pointerEvents: ({ addUtilities }) => {
        addUtilities({
          ".pointer-events-none": {
            "pointer-events": "none"
          },
          ".pointer-events-auto": {
            "pointer-events": "auto"
          }
        });
      },
      visibility: ({ addUtilities }) => {
        addUtilities({
          ".visible": {
            visibility: "visible"
          },
          ".invisible": {
            visibility: "hidden"
          }
        });
      },
      position: ({ addUtilities }) => {
        addUtilities({
          ".static": {
            position: "static"
          },
          ".fixed": {
            position: "fixed"
          },
          ".absolute": {
            position: "absolute"
          },
          ".relative": {
            position: "relative"
          },
          ".sticky": {
            position: "sticky"
          }
        });
      },
      inset: (0, _createUtilityPlugin.default)("inset", [
        [
          "inset",
          [
            "top",
            "right",
            "bottom",
            "left"
          ]
        ],
        [
          [
            "inset-x",
            [
              "left",
              "right"
            ]
          ],
          [
            "inset-y",
            [
              "top",
              "bottom"
            ]
          ]
        ],
        [
          [
            "top",
            [
              "top"
            ]
          ],
          [
            "right",
            [
              "right"
            ]
          ],
          [
            "bottom",
            [
              "bottom"
            ]
          ],
          [
            "left",
            [
              "left"
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      isolation: ({ addUtilities }) => {
        addUtilities({
          ".isolate": {
            isolation: "isolate"
          },
          ".isolation-auto": {
            isolation: "auto"
          }
        });
      },
      zIndex: (0, _createUtilityPlugin.default)("zIndex", [
        [
          "z",
          [
            "zIndex"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      order: (0, _createUtilityPlugin.default)("order", void 0, {
        supportsNegativeValues: true
      }),
      gridColumn: (0, _createUtilityPlugin.default)("gridColumn", [
        [
          "col",
          [
            "gridColumn"
          ]
        ]
      ]),
      gridColumnStart: (0, _createUtilityPlugin.default)("gridColumnStart", [
        [
          "col-start",
          [
            "gridColumnStart"
          ]
        ]
      ]),
      gridColumnEnd: (0, _createUtilityPlugin.default)("gridColumnEnd", [
        [
          "col-end",
          [
            "gridColumnEnd"
          ]
        ]
      ]),
      gridRow: (0, _createUtilityPlugin.default)("gridRow", [
        [
          "row",
          [
            "gridRow"
          ]
        ]
      ]),
      gridRowStart: (0, _createUtilityPlugin.default)("gridRowStart", [
        [
          "row-start",
          [
            "gridRowStart"
          ]
        ]
      ]),
      gridRowEnd: (0, _createUtilityPlugin.default)("gridRowEnd", [
        [
          "row-end",
          [
            "gridRowEnd"
          ]
        ]
      ]),
      float: ({ addUtilities }) => {
        addUtilities({
          ".float-right": {
            float: "right"
          },
          ".float-left": {
            float: "left"
          },
          ".float-none": {
            float: "none"
          }
        });
      },
      clear: ({ addUtilities }) => {
        addUtilities({
          ".clear-left": {
            clear: "left"
          },
          ".clear-right": {
            clear: "right"
          },
          ".clear-both": {
            clear: "both"
          },
          ".clear-none": {
            clear: "none"
          }
        });
      },
      margin: (0, _createUtilityPlugin.default)("margin", [
        [
          "m",
          [
            "margin"
          ]
        ],
        [
          [
            "mx",
            [
              "margin-left",
              "margin-right"
            ]
          ],
          [
            "my",
            [
              "margin-top",
              "margin-bottom"
            ]
          ]
        ],
        [
          [
            "mt",
            [
              "margin-top"
            ]
          ],
          [
            "mr",
            [
              "margin-right"
            ]
          ],
          [
            "mb",
            [
              "margin-bottom"
            ]
          ],
          [
            "ml",
            [
              "margin-left"
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      boxSizing: ({ addUtilities }) => {
        addUtilities({
          ".box-border": {
            "box-sizing": "border-box"
          },
          ".box-content": {
            "box-sizing": "content-box"
          }
        });
      },
      display: ({ addUtilities }) => {
        addUtilities({
          ".block": {
            display: "block"
          },
          ".inline-block": {
            display: "inline-block"
          },
          ".inline": {
            display: "inline"
          },
          ".flex": {
            display: "flex"
          },
          ".inline-flex": {
            display: "inline-flex"
          },
          ".table": {
            display: "table"
          },
          ".inline-table": {
            display: "inline-table"
          },
          ".table-caption": {
            display: "table-caption"
          },
          ".table-cell": {
            display: "table-cell"
          },
          ".table-column": {
            display: "table-column"
          },
          ".table-column-group": {
            display: "table-column-group"
          },
          ".table-footer-group": {
            display: "table-footer-group"
          },
          ".table-header-group": {
            display: "table-header-group"
          },
          ".table-row-group": {
            display: "table-row-group"
          },
          ".table-row": {
            display: "table-row"
          },
          ".flow-root": {
            display: "flow-root"
          },
          ".grid": {
            display: "grid"
          },
          ".inline-grid": {
            display: "inline-grid"
          },
          ".contents": {
            display: "contents"
          },
          ".list-item": {
            display: "list-item"
          },
          ".hidden": {
            display: "none"
          }
        });
      },
      aspectRatio: (0, _createUtilityPlugin.default)("aspectRatio", [
        [
          "aspect",
          [
            "aspect-ratio"
          ]
        ]
      ]),
      height: (0, _createUtilityPlugin.default)("height", [
        [
          "h",
          [
            "height"
          ]
        ]
      ]),
      maxHeight: (0, _createUtilityPlugin.default)("maxHeight", [
        [
          "max-h",
          [
            "maxHeight"
          ]
        ]
      ]),
      minHeight: (0, _createUtilityPlugin.default)("minHeight", [
        [
          "min-h",
          [
            "minHeight"
          ]
        ]
      ]),
      width: (0, _createUtilityPlugin.default)("width", [
        [
          "w",
          [
            "width"
          ]
        ]
      ]),
      minWidth: (0, _createUtilityPlugin.default)("minWidth", [
        [
          "min-w",
          [
            "minWidth"
          ]
        ]
      ]),
      maxWidth: (0, _createUtilityPlugin.default)("maxWidth", [
        [
          "max-w",
          [
            "maxWidth"
          ]
        ]
      ]),
      flex: (0, _createUtilityPlugin.default)("flex"),
      flexShrink: (0, _createUtilityPlugin.default)("flexShrink", [
        [
          "flex-shrink",
          [
            "flex-shrink"
          ]
        ],
        [
          "shrink",
          [
            "flex-shrink"
          ]
        ]
      ]),
      flexGrow: (0, _createUtilityPlugin.default)("flexGrow", [
        [
          "flex-grow",
          [
            "flex-grow"
          ]
        ],
        [
          "grow",
          [
            "flex-grow"
          ]
        ]
      ]),
      flexBasis: (0, _createUtilityPlugin.default)("flexBasis", [
        [
          "basis",
          [
            "flex-basis"
          ]
        ]
      ]),
      tableLayout: ({ addUtilities }) => {
        addUtilities({
          ".table-auto": {
            "table-layout": "auto"
          },
          ".table-fixed": {
            "table-layout": "fixed"
          }
        });
      },
      borderCollapse: ({ addUtilities }) => {
        addUtilities({
          ".border-collapse": {
            "border-collapse": "collapse"
          },
          ".border-separate": {
            "border-collapse": "separate"
          }
        });
      },
      borderSpacing: ({ addDefaults, matchUtilities, theme }) => {
        addDefaults("border-spacing", {
          "--tw-border-spacing-x": 0,
          "--tw-border-spacing-y": 0
        });
        matchUtilities({
          "border-spacing": (value) => {
            return {
              "--tw-border-spacing-x": value,
              "--tw-border-spacing-y": value,
              "@defaults border-spacing": {},
              "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)"
            };
          },
          "border-spacing-x": (value) => {
            return {
              "--tw-border-spacing-x": value,
              "@defaults border-spacing": {},
              "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)"
            };
          },
          "border-spacing-y": (value) => {
            return {
              "--tw-border-spacing-y": value,
              "@defaults border-spacing": {},
              "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)"
            };
          }
        }, {
          values: theme("borderSpacing")
        });
      },
      transformOrigin: (0, _createUtilityPlugin.default)("transformOrigin", [
        [
          "origin",
          [
            "transformOrigin"
          ]
        ]
      ]),
      translate: (0, _createUtilityPlugin.default)("translate", [
        [
          [
            "translate-x",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-translate-x",
              [
                "transform",
                cssTransformValue
              ]
            ]
          ],
          [
            "translate-y",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-translate-y",
              [
                "transform",
                cssTransformValue
              ]
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      rotate: (0, _createUtilityPlugin.default)("rotate", [
        [
          "rotate",
          [
            [
              "@defaults transform",
              {}
            ],
            "--tw-rotate",
            [
              "transform",
              cssTransformValue
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      skew: (0, _createUtilityPlugin.default)("skew", [
        [
          [
            "skew-x",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-skew-x",
              [
                "transform",
                cssTransformValue
              ]
            ]
          ],
          [
            "skew-y",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-skew-y",
              [
                "transform",
                cssTransformValue
              ]
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      scale: (0, _createUtilityPlugin.default)("scale", [
        [
          "scale",
          [
            [
              "@defaults transform",
              {}
            ],
            "--tw-scale-x",
            "--tw-scale-y",
            [
              "transform",
              cssTransformValue
            ]
          ]
        ],
        [
          [
            "scale-x",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-scale-x",
              [
                "transform",
                cssTransformValue
              ]
            ]
          ],
          [
            "scale-y",
            [
              [
                "@defaults transform",
                {}
              ],
              "--tw-scale-y",
              [
                "transform",
                cssTransformValue
              ]
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      transform: ({ addDefaults, addUtilities }) => {
        addDefaults("transform", {
          "--tw-translate-x": "0",
          "--tw-translate-y": "0",
          "--tw-rotate": "0",
          "--tw-skew-x": "0",
          "--tw-skew-y": "0",
          "--tw-scale-x": "1",
          "--tw-scale-y": "1"
        });
        addUtilities({
          ".transform": {
            "@defaults transform": {},
            transform: cssTransformValue
          },
          ".transform-cpu": {
            transform: cssTransformValue
          },
          ".transform-gpu": {
            transform: cssTransformValue.replace("translate(var(--tw-translate-x), var(--tw-translate-y))", "translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)")
          },
          ".transform-none": {
            transform: "none"
          }
        });
      },
      animation: ({ matchUtilities, theme, config }) => {
        let prefixName = (name) => `${config("prefix")}${(0, _escapeClassName.default)(name)}`;
        var ref;
        let keyframes = Object.fromEntries(Object.entries((ref = theme("keyframes")) !== null && ref !== void 0 ? ref : {}).map(([key, value]) => {
          return [
            key,
            {
              [`@keyframes ${prefixName(key)}`]: value
            }
          ];
        }));
        matchUtilities({
          animate: (value) => {
            let animations = (0, _parseAnimationValue.default)(value);
            return [
              ...animations.flatMap((animation) => keyframes[animation.name]),
              {
                animation: animations.map(({ name, value: value2 }) => {
                  if (name === void 0 || keyframes[name] === void 0) {
                    return value2;
                  }
                  return value2.replace(name, prefixName(name));
                }).join(", ")
              }
            ];
          }
        }, {
          values: theme("animation")
        });
      },
      cursor: (0, _createUtilityPlugin.default)("cursor"),
      touchAction: ({ addDefaults, addUtilities }) => {
        addDefaults("touch-action", {
          "--tw-pan-x": " ",
          "--tw-pan-y": " ",
          "--tw-pinch-zoom": " "
        });
        let cssTouchActionValue = "var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)";
        addUtilities({
          ".touch-auto": {
            "touch-action": "auto"
          },
          ".touch-none": {
            "touch-action": "none"
          },
          ".touch-pan-x": {
            "@defaults touch-action": {},
            "--tw-pan-x": "pan-x",
            "touch-action": cssTouchActionValue
          },
          ".touch-pan-left": {
            "@defaults touch-action": {},
            "--tw-pan-x": "pan-left",
            "touch-action": cssTouchActionValue
          },
          ".touch-pan-right": {
            "@defaults touch-action": {},
            "--tw-pan-x": "pan-right",
            "touch-action": cssTouchActionValue
          },
          ".touch-pan-y": {
            "@defaults touch-action": {},
            "--tw-pan-y": "pan-y",
            "touch-action": cssTouchActionValue
          },
          ".touch-pan-up": {
            "@defaults touch-action": {},
            "--tw-pan-y": "pan-up",
            "touch-action": cssTouchActionValue
          },
          ".touch-pan-down": {
            "@defaults touch-action": {},
            "--tw-pan-y": "pan-down",
            "touch-action": cssTouchActionValue
          },
          ".touch-pinch-zoom": {
            "@defaults touch-action": {},
            "--tw-pinch-zoom": "pinch-zoom",
            "touch-action": cssTouchActionValue
          },
          ".touch-manipulation": {
            "touch-action": "manipulation"
          }
        });
      },
      userSelect: ({ addUtilities }) => {
        addUtilities({
          ".select-none": {
            "user-select": "none"
          },
          ".select-text": {
            "user-select": "text"
          },
          ".select-all": {
            "user-select": "all"
          },
          ".select-auto": {
            "user-select": "auto"
          }
        });
      },
      resize: ({ addUtilities }) => {
        addUtilities({
          ".resize-none": {
            resize: "none"
          },
          ".resize-y": {
            resize: "vertical"
          },
          ".resize-x": {
            resize: "horizontal"
          },
          ".resize": {
            resize: "both"
          }
        });
      },
      scrollSnapType: ({ addDefaults, addUtilities }) => {
        addDefaults("scroll-snap-type", {
          "--tw-scroll-snap-strictness": "proximity"
        });
        addUtilities({
          ".snap-none": {
            "scroll-snap-type": "none"
          },
          ".snap-x": {
            "@defaults scroll-snap-type": {},
            "scroll-snap-type": "x var(--tw-scroll-snap-strictness)"
          },
          ".snap-y": {
            "@defaults scroll-snap-type": {},
            "scroll-snap-type": "y var(--tw-scroll-snap-strictness)"
          },
          ".snap-both": {
            "@defaults scroll-snap-type": {},
            "scroll-snap-type": "both var(--tw-scroll-snap-strictness)"
          },
          ".snap-mandatory": {
            "--tw-scroll-snap-strictness": "mandatory"
          },
          ".snap-proximity": {
            "--tw-scroll-snap-strictness": "proximity"
          }
        });
      },
      scrollSnapAlign: ({ addUtilities }) => {
        addUtilities({
          ".snap-start": {
            "scroll-snap-align": "start"
          },
          ".snap-end": {
            "scroll-snap-align": "end"
          },
          ".snap-center": {
            "scroll-snap-align": "center"
          },
          ".snap-align-none": {
            "scroll-snap-align": "none"
          }
        });
      },
      scrollSnapStop: ({ addUtilities }) => {
        addUtilities({
          ".snap-normal": {
            "scroll-snap-stop": "normal"
          },
          ".snap-always": {
            "scroll-snap-stop": "always"
          }
        });
      },
      scrollMargin: (0, _createUtilityPlugin.default)("scrollMargin", [
        [
          "scroll-m",
          [
            "scroll-margin"
          ]
        ],
        [
          [
            "scroll-mx",
            [
              "scroll-margin-left",
              "scroll-margin-right"
            ]
          ],
          [
            "scroll-my",
            [
              "scroll-margin-top",
              "scroll-margin-bottom"
            ]
          ]
        ],
        [
          [
            "scroll-mt",
            [
              "scroll-margin-top"
            ]
          ],
          [
            "scroll-mr",
            [
              "scroll-margin-right"
            ]
          ],
          [
            "scroll-mb",
            [
              "scroll-margin-bottom"
            ]
          ],
          [
            "scroll-ml",
            [
              "scroll-margin-left"
            ]
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      scrollPadding: (0, _createUtilityPlugin.default)("scrollPadding", [
        [
          "scroll-p",
          [
            "scroll-padding"
          ]
        ],
        [
          [
            "scroll-px",
            [
              "scroll-padding-left",
              "scroll-padding-right"
            ]
          ],
          [
            "scroll-py",
            [
              "scroll-padding-top",
              "scroll-padding-bottom"
            ]
          ]
        ],
        [
          [
            "scroll-pt",
            [
              "scroll-padding-top"
            ]
          ],
          [
            "scroll-pr",
            [
              "scroll-padding-right"
            ]
          ],
          [
            "scroll-pb",
            [
              "scroll-padding-bottom"
            ]
          ],
          [
            "scroll-pl",
            [
              "scroll-padding-left"
            ]
          ]
        ]
      ]),
      listStylePosition: ({ addUtilities }) => {
        addUtilities({
          ".list-inside": {
            "list-style-position": "inside"
          },
          ".list-outside": {
            "list-style-position": "outside"
          }
        });
      },
      listStyleType: (0, _createUtilityPlugin.default)("listStyleType", [
        [
          "list",
          [
            "listStyleType"
          ]
        ]
      ]),
      appearance: ({ addUtilities }) => {
        addUtilities({
          ".appearance-none": {
            appearance: "none"
          }
        });
      },
      columns: (0, _createUtilityPlugin.default)("columns", [
        [
          "columns",
          [
            "columns"
          ]
        ]
      ]),
      breakBefore: ({ addUtilities }) => {
        addUtilities({
          ".break-before-auto": {
            "break-before": "auto"
          },
          ".break-before-avoid": {
            "break-before": "avoid"
          },
          ".break-before-all": {
            "break-before": "all"
          },
          ".break-before-avoid-page": {
            "break-before": "avoid-page"
          },
          ".break-before-page": {
            "break-before": "page"
          },
          ".break-before-left": {
            "break-before": "left"
          },
          ".break-before-right": {
            "break-before": "right"
          },
          ".break-before-column": {
            "break-before": "column"
          }
        });
      },
      breakInside: ({ addUtilities }) => {
        addUtilities({
          ".break-inside-auto": {
            "break-inside": "auto"
          },
          ".break-inside-avoid": {
            "break-inside": "avoid"
          },
          ".break-inside-avoid-page": {
            "break-inside": "avoid-page"
          },
          ".break-inside-avoid-column": {
            "break-inside": "avoid-column"
          }
        });
      },
      breakAfter: ({ addUtilities }) => {
        addUtilities({
          ".break-after-auto": {
            "break-after": "auto"
          },
          ".break-after-avoid": {
            "break-after": "avoid"
          },
          ".break-after-all": {
            "break-after": "all"
          },
          ".break-after-avoid-page": {
            "break-after": "avoid-page"
          },
          ".break-after-page": {
            "break-after": "page"
          },
          ".break-after-left": {
            "break-after": "left"
          },
          ".break-after-right": {
            "break-after": "right"
          },
          ".break-after-column": {
            "break-after": "column"
          }
        });
      },
      gridAutoColumns: (0, _createUtilityPlugin.default)("gridAutoColumns", [
        [
          "auto-cols",
          [
            "gridAutoColumns"
          ]
        ]
      ]),
      gridAutoFlow: ({ addUtilities }) => {
        addUtilities({
          ".grid-flow-row": {
            gridAutoFlow: "row"
          },
          ".grid-flow-col": {
            gridAutoFlow: "column"
          },
          ".grid-flow-dense": {
            gridAutoFlow: "dense"
          },
          ".grid-flow-row-dense": {
            gridAutoFlow: "row dense"
          },
          ".grid-flow-col-dense": {
            gridAutoFlow: "column dense"
          }
        });
      },
      gridAutoRows: (0, _createUtilityPlugin.default)("gridAutoRows", [
        [
          "auto-rows",
          [
            "gridAutoRows"
          ]
        ]
      ]),
      gridTemplateColumns: (0, _createUtilityPlugin.default)("gridTemplateColumns", [
        [
          "grid-cols",
          [
            "gridTemplateColumns"
          ]
        ]
      ]),
      gridTemplateRows: (0, _createUtilityPlugin.default)("gridTemplateRows", [
        [
          "grid-rows",
          [
            "gridTemplateRows"
          ]
        ]
      ]),
      flexDirection: ({ addUtilities }) => {
        addUtilities({
          ".flex-row": {
            "flex-direction": "row"
          },
          ".flex-row-reverse": {
            "flex-direction": "row-reverse"
          },
          ".flex-col": {
            "flex-direction": "column"
          },
          ".flex-col-reverse": {
            "flex-direction": "column-reverse"
          }
        });
      },
      flexWrap: ({ addUtilities }) => {
        addUtilities({
          ".flex-wrap": {
            "flex-wrap": "wrap"
          },
          ".flex-wrap-reverse": {
            "flex-wrap": "wrap-reverse"
          },
          ".flex-nowrap": {
            "flex-wrap": "nowrap"
          }
        });
      },
      placeContent: ({ addUtilities }) => {
        addUtilities({
          ".place-content-center": {
            "place-content": "center"
          },
          ".place-content-start": {
            "place-content": "start"
          },
          ".place-content-end": {
            "place-content": "end"
          },
          ".place-content-between": {
            "place-content": "space-between"
          },
          ".place-content-around": {
            "place-content": "space-around"
          },
          ".place-content-evenly": {
            "place-content": "space-evenly"
          },
          ".place-content-stretch": {
            "place-content": "stretch"
          }
        });
      },
      placeItems: ({ addUtilities }) => {
        addUtilities({
          ".place-items-start": {
            "place-items": "start"
          },
          ".place-items-end": {
            "place-items": "end"
          },
          ".place-items-center": {
            "place-items": "center"
          },
          ".place-items-stretch": {
            "place-items": "stretch"
          }
        });
      },
      alignContent: ({ addUtilities }) => {
        addUtilities({
          ".content-center": {
            "align-content": "center"
          },
          ".content-start": {
            "align-content": "flex-start"
          },
          ".content-end": {
            "align-content": "flex-end"
          },
          ".content-between": {
            "align-content": "space-between"
          },
          ".content-around": {
            "align-content": "space-around"
          },
          ".content-evenly": {
            "align-content": "space-evenly"
          }
        });
      },
      alignItems: ({ addUtilities }) => {
        addUtilities({
          ".items-start": {
            "align-items": "flex-start"
          },
          ".items-end": {
            "align-items": "flex-end"
          },
          ".items-center": {
            "align-items": "center"
          },
          ".items-baseline": {
            "align-items": "baseline"
          },
          ".items-stretch": {
            "align-items": "stretch"
          }
        });
      },
      justifyContent: ({ addUtilities }) => {
        addUtilities({
          ".justify-start": {
            "justify-content": "flex-start"
          },
          ".justify-end": {
            "justify-content": "flex-end"
          },
          ".justify-center": {
            "justify-content": "center"
          },
          ".justify-between": {
            "justify-content": "space-between"
          },
          ".justify-around": {
            "justify-content": "space-around"
          },
          ".justify-evenly": {
            "justify-content": "space-evenly"
          }
        });
      },
      justifyItems: ({ addUtilities }) => {
        addUtilities({
          ".justify-items-start": {
            "justify-items": "start"
          },
          ".justify-items-end": {
            "justify-items": "end"
          },
          ".justify-items-center": {
            "justify-items": "center"
          },
          ".justify-items-stretch": {
            "justify-items": "stretch"
          }
        });
      },
      gap: (0, _createUtilityPlugin.default)("gap", [
        [
          "gap",
          [
            "gap"
          ]
        ],
        [
          [
            "gap-x",
            [
              "columnGap"
            ]
          ],
          [
            "gap-y",
            [
              "rowGap"
            ]
          ]
        ]
      ]),
      space: ({ matchUtilities, addUtilities, theme }) => {
        matchUtilities({
          "space-x": (value) => {
            value = value === "0" ? "0px" : value;
            return {
              "& > :not([hidden]) ~ :not([hidden])": {
                "--tw-space-x-reverse": "0",
                "margin-right": `calc(${value} * var(--tw-space-x-reverse))`,
                "margin-left": `calc(${value} * calc(1 - var(--tw-space-x-reverse)))`
              }
            };
          },
          "space-y": (value) => {
            value = value === "0" ? "0px" : value;
            return {
              "& > :not([hidden]) ~ :not([hidden])": {
                "--tw-space-y-reverse": "0",
                "margin-top": `calc(${value} * calc(1 - var(--tw-space-y-reverse)))`,
                "margin-bottom": `calc(${value} * var(--tw-space-y-reverse))`
              }
            };
          }
        }, {
          values: theme("space"),
          supportsNegativeValues: true
        });
        addUtilities({
          ".space-y-reverse > :not([hidden]) ~ :not([hidden])": {
            "--tw-space-y-reverse": "1"
          },
          ".space-x-reverse > :not([hidden]) ~ :not([hidden])": {
            "--tw-space-x-reverse": "1"
          }
        });
      },
      divideWidth: ({ matchUtilities, addUtilities, theme }) => {
        matchUtilities({
          "divide-x": (value) => {
            value = value === "0" ? "0px" : value;
            return {
              "& > :not([hidden]) ~ :not([hidden])": {
                "@defaults border-width": {},
                "--tw-divide-x-reverse": "0",
                "border-right-width": `calc(${value} * var(--tw-divide-x-reverse))`,
                "border-left-width": `calc(${value} * calc(1 - var(--tw-divide-x-reverse)))`
              }
            };
          },
          "divide-y": (value) => {
            value = value === "0" ? "0px" : value;
            return {
              "& > :not([hidden]) ~ :not([hidden])": {
                "@defaults border-width": {},
                "--tw-divide-y-reverse": "0",
                "border-top-width": `calc(${value} * calc(1 - var(--tw-divide-y-reverse)))`,
                "border-bottom-width": `calc(${value} * var(--tw-divide-y-reverse))`
              }
            };
          }
        }, {
          values: theme("divideWidth"),
          type: [
            "line-width",
            "length"
          ]
        });
        addUtilities({
          ".divide-y-reverse > :not([hidden]) ~ :not([hidden])": {
            "@defaults border-width": {},
            "--tw-divide-y-reverse": "1"
          },
          ".divide-x-reverse > :not([hidden]) ~ :not([hidden])": {
            "@defaults border-width": {},
            "--tw-divide-x-reverse": "1"
          }
        });
      },
      divideStyle: ({ addUtilities }) => {
        addUtilities({
          ".divide-solid > :not([hidden]) ~ :not([hidden])": {
            "border-style": "solid"
          },
          ".divide-dashed > :not([hidden]) ~ :not([hidden])": {
            "border-style": "dashed"
          },
          ".divide-dotted > :not([hidden]) ~ :not([hidden])": {
            "border-style": "dotted"
          },
          ".divide-double > :not([hidden]) ~ :not([hidden])": {
            "border-style": "double"
          },
          ".divide-none > :not([hidden]) ~ :not([hidden])": {
            "border-style": "none"
          }
        });
      },
      divideColor: ({ matchUtilities, theme, corePlugins: corePlugins2 }) => {
        matchUtilities({
          divide: (value) => {
            if (!corePlugins2("divideOpacity")) {
              return {
                ["& > :not([hidden]) ~ :not([hidden])"]: {
                  "border-color": (0, _toColorValue.default)(value)
                }
              };
            }
            return {
              ["& > :not([hidden]) ~ :not([hidden])"]: (0, _withAlphaVariable.default)({
                color: value,
                property: "border-color",
                variable: "--tw-divide-opacity"
              })
            };
          }
        }, {
          values: (({ DEFAULT: _, ...colors }) => colors)((0, _flattenColorPalette.default)(theme("divideColor"))),
          type: "color"
        });
      },
      divideOpacity: ({ matchUtilities, theme }) => {
        matchUtilities({
          "divide-opacity": (value) => {
            return {
              [`& > :not([hidden]) ~ :not([hidden])`]: {
                "--tw-divide-opacity": value
              }
            };
          }
        }, {
          values: theme("divideOpacity")
        });
      },
      placeSelf: ({ addUtilities }) => {
        addUtilities({
          ".place-self-auto": {
            "place-self": "auto"
          },
          ".place-self-start": {
            "place-self": "start"
          },
          ".place-self-end": {
            "place-self": "end"
          },
          ".place-self-center": {
            "place-self": "center"
          },
          ".place-self-stretch": {
            "place-self": "stretch"
          }
        });
      },
      alignSelf: ({ addUtilities }) => {
        addUtilities({
          ".self-auto": {
            "align-self": "auto"
          },
          ".self-start": {
            "align-self": "flex-start"
          },
          ".self-end": {
            "align-self": "flex-end"
          },
          ".self-center": {
            "align-self": "center"
          },
          ".self-stretch": {
            "align-self": "stretch"
          },
          ".self-baseline": {
            "align-self": "baseline"
          }
        });
      },
      justifySelf: ({ addUtilities }) => {
        addUtilities({
          ".justify-self-auto": {
            "justify-self": "auto"
          },
          ".justify-self-start": {
            "justify-self": "start"
          },
          ".justify-self-end": {
            "justify-self": "end"
          },
          ".justify-self-center": {
            "justify-self": "center"
          },
          ".justify-self-stretch": {
            "justify-self": "stretch"
          }
        });
      },
      overflow: ({ addUtilities }) => {
        addUtilities({
          ".overflow-auto": {
            overflow: "auto"
          },
          ".overflow-hidden": {
            overflow: "hidden"
          },
          ".overflow-clip": {
            overflow: "clip"
          },
          ".overflow-visible": {
            overflow: "visible"
          },
          ".overflow-scroll": {
            overflow: "scroll"
          },
          ".overflow-x-auto": {
            "overflow-x": "auto"
          },
          ".overflow-y-auto": {
            "overflow-y": "auto"
          },
          ".overflow-x-hidden": {
            "overflow-x": "hidden"
          },
          ".overflow-y-hidden": {
            "overflow-y": "hidden"
          },
          ".overflow-x-clip": {
            "overflow-x": "clip"
          },
          ".overflow-y-clip": {
            "overflow-y": "clip"
          },
          ".overflow-x-visible": {
            "overflow-x": "visible"
          },
          ".overflow-y-visible": {
            "overflow-y": "visible"
          },
          ".overflow-x-scroll": {
            "overflow-x": "scroll"
          },
          ".overflow-y-scroll": {
            "overflow-y": "scroll"
          }
        });
      },
      overscrollBehavior: ({ addUtilities }) => {
        addUtilities({
          ".overscroll-auto": {
            "overscroll-behavior": "auto"
          },
          ".overscroll-contain": {
            "overscroll-behavior": "contain"
          },
          ".overscroll-none": {
            "overscroll-behavior": "none"
          },
          ".overscroll-y-auto": {
            "overscroll-behavior-y": "auto"
          },
          ".overscroll-y-contain": {
            "overscroll-behavior-y": "contain"
          },
          ".overscroll-y-none": {
            "overscroll-behavior-y": "none"
          },
          ".overscroll-x-auto": {
            "overscroll-behavior-x": "auto"
          },
          ".overscroll-x-contain": {
            "overscroll-behavior-x": "contain"
          },
          ".overscroll-x-none": {
            "overscroll-behavior-x": "none"
          }
        });
      },
      scrollBehavior: ({ addUtilities }) => {
        addUtilities({
          ".scroll-auto": {
            "scroll-behavior": "auto"
          },
          ".scroll-smooth": {
            "scroll-behavior": "smooth"
          }
        });
      },
      textOverflow: ({ addUtilities }) => {
        addUtilities({
          ".truncate": {
            overflow: "hidden",
            "text-overflow": "ellipsis",
            "white-space": "nowrap"
          },
          ".overflow-ellipsis": {
            "text-overflow": "ellipsis"
          },
          ".text-ellipsis": {
            "text-overflow": "ellipsis"
          },
          ".text-clip": {
            "text-overflow": "clip"
          }
        });
      },
      whitespace: ({ addUtilities }) => {
        addUtilities({
          ".whitespace-normal": {
            "white-space": "normal"
          },
          ".whitespace-nowrap": {
            "white-space": "nowrap"
          },
          ".whitespace-pre": {
            "white-space": "pre"
          },
          ".whitespace-pre-line": {
            "white-space": "pre-line"
          },
          ".whitespace-pre-wrap": {
            "white-space": "pre-wrap"
          }
        });
      },
      wordBreak: ({ addUtilities }) => {
        addUtilities({
          ".break-normal": {
            "overflow-wrap": "normal",
            "word-break": "normal"
          },
          ".break-words": {
            "overflow-wrap": "break-word"
          },
          ".break-all": {
            "word-break": "break-all"
          }
        });
      },
      borderRadius: (0, _createUtilityPlugin.default)("borderRadius", [
        [
          "rounded",
          [
            "border-radius"
          ]
        ],
        [
          [
            "rounded-t",
            [
              "border-top-left-radius",
              "border-top-right-radius"
            ]
          ],
          [
            "rounded-r",
            [
              "border-top-right-radius",
              "border-bottom-right-radius"
            ]
          ],
          [
            "rounded-b",
            [
              "border-bottom-right-radius",
              "border-bottom-left-radius"
            ]
          ],
          [
            "rounded-l",
            [
              "border-top-left-radius",
              "border-bottom-left-radius"
            ]
          ]
        ],
        [
          [
            "rounded-tl",
            [
              "border-top-left-radius"
            ]
          ],
          [
            "rounded-tr",
            [
              "border-top-right-radius"
            ]
          ],
          [
            "rounded-br",
            [
              "border-bottom-right-radius"
            ]
          ],
          [
            "rounded-bl",
            [
              "border-bottom-left-radius"
            ]
          ]
        ]
      ]),
      borderWidth: (0, _createUtilityPlugin.default)("borderWidth", [
        [
          "border",
          [
            [
              "@defaults border-width",
              {}
            ],
            "border-width"
          ]
        ],
        [
          [
            "border-x",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-left-width",
              "border-right-width"
            ]
          ],
          [
            "border-y",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-top-width",
              "border-bottom-width"
            ]
          ]
        ],
        [
          [
            "border-t",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-top-width"
            ]
          ],
          [
            "border-r",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-right-width"
            ]
          ],
          [
            "border-b",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-bottom-width"
            ]
          ],
          [
            "border-l",
            [
              [
                "@defaults border-width",
                {}
              ],
              "border-left-width"
            ]
          ]
        ]
      ], {
        type: [
          "line-width",
          "length"
        ]
      }),
      borderStyle: ({ addUtilities }) => {
        addUtilities({
          ".border-solid": {
            "border-style": "solid"
          },
          ".border-dashed": {
            "border-style": "dashed"
          },
          ".border-dotted": {
            "border-style": "dotted"
          },
          ".border-double": {
            "border-style": "double"
          },
          ".border-hidden": {
            "border-style": "hidden"
          },
          ".border-none": {
            "border-style": "none"
          }
        });
      },
      borderColor: ({ matchUtilities, theme, corePlugins: corePlugins2 }) => {
        matchUtilities({
          border: (value) => {
            if (!corePlugins2("borderOpacity")) {
              return {
                "border-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: "border-color",
              variable: "--tw-border-opacity"
            });
          }
        }, {
          values: (({ DEFAULT: _, ...colors }) => colors)((0, _flattenColorPalette.default)(theme("borderColor"))),
          type: [
            "color"
          ]
        });
        matchUtilities({
          "border-x": (value) => {
            if (!corePlugins2("borderOpacity")) {
              return {
                "border-left-color": (0, _toColorValue.default)(value),
                "border-right-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: [
                "border-left-color",
                "border-right-color"
              ],
              variable: "--tw-border-opacity"
            });
          },
          "border-y": (value) => {
            if (!corePlugins2("borderOpacity")) {
              return {
                "border-top-color": (0, _toColorValue.default)(value),
                "border-bottom-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: [
                "border-top-color",
                "border-bottom-color"
              ],
              variable: "--tw-border-opacity"
            });
          }
        }, {
          values: (({ DEFAULT: _, ...colors }) => colors)((0, _flattenColorPalette.default)(theme("borderColor"))),
          type: "color"
        });
        matchUtilities({
          "border-t": (value) => {
            if (!corePlugins2("borderOpacity")) {
              return {
                "border-top-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: "border-top-color",
              variable: "--tw-border-opacity"
            });
          },
          "border-r": (value) => {
            if (!corePlugins2("borderOpacity")) {
              return {
                "border-right-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: "border-right-color",
              variable: "--tw-border-opacity"
            });
          },
          "border-b": (value) => {
            if (!corePlugins2("borderOpacity")) {
              return {
                "border-bottom-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: "border-bottom-color",
              variable: "--tw-border-opacity"
            });
          },
          "border-l": (value) => {
            if (!corePlugins2("borderOpacity")) {
              return {
                "border-left-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: "border-left-color",
              variable: "--tw-border-opacity"
            });
          }
        }, {
          values: (({ DEFAULT: _, ...colors }) => colors)((0, _flattenColorPalette.default)(theme("borderColor"))),
          type: "color"
        });
      },
      borderOpacity: (0, _createUtilityPlugin.default)("borderOpacity", [
        [
          "border-opacity",
          [
            "--tw-border-opacity"
          ]
        ]
      ]),
      backgroundColor: ({ matchUtilities, theme, corePlugins: corePlugins2 }) => {
        matchUtilities({
          bg: (value) => {
            if (!corePlugins2("backgroundOpacity")) {
              return {
                "background-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: "background-color",
              variable: "--tw-bg-opacity"
            });
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("backgroundColor")),
          type: "color"
        });
      },
      backgroundOpacity: (0, _createUtilityPlugin.default)("backgroundOpacity", [
        [
          "bg-opacity",
          [
            "--tw-bg-opacity"
          ]
        ]
      ]),
      backgroundImage: (0, _createUtilityPlugin.default)("backgroundImage", [
        [
          "bg",
          [
            "background-image"
          ]
        ]
      ], {
        type: [
          "lookup",
          "image",
          "url"
        ]
      }),
      gradientColorStops: (() => {
        function transparentTo(value) {
          return (0, _withAlphaVariable.withAlphaValue)(value, 0, "rgb(255 255 255 / 0)");
        }
        return function({ matchUtilities, theme }) {
          let options = {
            values: (0, _flattenColorPalette.default)(theme("gradientColorStops")),
            type: [
              "color",
              "any"
            ]
          };
          matchUtilities({
            from: (value) => {
              let transparentToValue = transparentTo(value);
              return {
                "--tw-gradient-from": (0, _toColorValue.default)(value, "from"),
                "--tw-gradient-to": transparentToValue,
                "--tw-gradient-stops": `var(--tw-gradient-from), var(--tw-gradient-to)`
              };
            }
          }, options);
          matchUtilities({
            via: (value) => {
              let transparentToValue = transparentTo(value);
              return {
                "--tw-gradient-to": transparentToValue,
                "--tw-gradient-stops": `var(--tw-gradient-from), ${(0, _toColorValue.default)(value, "via")}, var(--tw-gradient-to)`
              };
            }
          }, options);
          matchUtilities({
            to: (value) => ({
              "--tw-gradient-to": (0, _toColorValue.default)(value, "to")
            })
          }, options);
        };
      })(),
      boxDecorationBreak: ({ addUtilities }) => {
        addUtilities({
          ".decoration-slice": {
            "box-decoration-break": "slice"
          },
          ".decoration-clone": {
            "box-decoration-break": "clone"
          },
          ".box-decoration-slice": {
            "box-decoration-break": "slice"
          },
          ".box-decoration-clone": {
            "box-decoration-break": "clone"
          }
        });
      },
      backgroundSize: (0, _createUtilityPlugin.default)("backgroundSize", [
        [
          "bg",
          [
            "background-size"
          ]
        ]
      ], {
        type: [
          "lookup",
          "length",
          "percentage"
        ]
      }),
      backgroundAttachment: ({ addUtilities }) => {
        addUtilities({
          ".bg-fixed": {
            "background-attachment": "fixed"
          },
          ".bg-local": {
            "background-attachment": "local"
          },
          ".bg-scroll": {
            "background-attachment": "scroll"
          }
        });
      },
      backgroundClip: ({ addUtilities }) => {
        addUtilities({
          ".bg-clip-border": {
            "background-clip": "border-box"
          },
          ".bg-clip-padding": {
            "background-clip": "padding-box"
          },
          ".bg-clip-content": {
            "background-clip": "content-box"
          },
          ".bg-clip-text": {
            "background-clip": "text"
          }
        });
      },
      backgroundPosition: (0, _createUtilityPlugin.default)("backgroundPosition", [
        [
          "bg",
          [
            "background-position"
          ]
        ]
      ], {
        type: [
          "lookup",
          "position"
        ]
      }),
      backgroundRepeat: ({ addUtilities }) => {
        addUtilities({
          ".bg-repeat": {
            "background-repeat": "repeat"
          },
          ".bg-no-repeat": {
            "background-repeat": "no-repeat"
          },
          ".bg-repeat-x": {
            "background-repeat": "repeat-x"
          },
          ".bg-repeat-y": {
            "background-repeat": "repeat-y"
          },
          ".bg-repeat-round": {
            "background-repeat": "round"
          },
          ".bg-repeat-space": {
            "background-repeat": "space"
          }
        });
      },
      backgroundOrigin: ({ addUtilities }) => {
        addUtilities({
          ".bg-origin-border": {
            "background-origin": "border-box"
          },
          ".bg-origin-padding": {
            "background-origin": "padding-box"
          },
          ".bg-origin-content": {
            "background-origin": "content-box"
          }
        });
      },
      fill: ({ matchUtilities, theme }) => {
        matchUtilities({
          fill: (value) => {
            return {
              fill: (0, _toColorValue.default)(value)
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("fill")),
          type: [
            "color",
            "any"
          ]
        });
      },
      stroke: ({ matchUtilities, theme }) => {
        matchUtilities({
          stroke: (value) => {
            return {
              stroke: (0, _toColorValue.default)(value)
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("stroke")),
          type: [
            "color",
            "url"
          ]
        });
      },
      strokeWidth: (0, _createUtilityPlugin.default)("strokeWidth", [
        [
          "stroke",
          [
            "stroke-width"
          ]
        ]
      ], {
        type: [
          "length",
          "number",
          "percentage"
        ]
      }),
      objectFit: ({ addUtilities }) => {
        addUtilities({
          ".object-contain": {
            "object-fit": "contain"
          },
          ".object-cover": {
            "object-fit": "cover"
          },
          ".object-fill": {
            "object-fit": "fill"
          },
          ".object-none": {
            "object-fit": "none"
          },
          ".object-scale-down": {
            "object-fit": "scale-down"
          }
        });
      },
      objectPosition: (0, _createUtilityPlugin.default)("objectPosition", [
        [
          "object",
          [
            "object-position"
          ]
        ]
      ]),
      padding: (0, _createUtilityPlugin.default)("padding", [
        [
          "p",
          [
            "padding"
          ]
        ],
        [
          [
            "px",
            [
              "padding-left",
              "padding-right"
            ]
          ],
          [
            "py",
            [
              "padding-top",
              "padding-bottom"
            ]
          ]
        ],
        [
          [
            "pt",
            [
              "padding-top"
            ]
          ],
          [
            "pr",
            [
              "padding-right"
            ]
          ],
          [
            "pb",
            [
              "padding-bottom"
            ]
          ],
          [
            "pl",
            [
              "padding-left"
            ]
          ]
        ]
      ]),
      textAlign: ({ addUtilities }) => {
        addUtilities({
          ".text-left": {
            "text-align": "left"
          },
          ".text-center": {
            "text-align": "center"
          },
          ".text-right": {
            "text-align": "right"
          },
          ".text-justify": {
            "text-align": "justify"
          },
          ".text-start": {
            "text-align": "start"
          },
          ".text-end": {
            "text-align": "end"
          }
        });
      },
      textIndent: (0, _createUtilityPlugin.default)("textIndent", [
        [
          "indent",
          [
            "text-indent"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      verticalAlign: ({ addUtilities, matchUtilities }) => {
        addUtilities({
          ".align-baseline": {
            "vertical-align": "baseline"
          },
          ".align-top": {
            "vertical-align": "top"
          },
          ".align-middle": {
            "vertical-align": "middle"
          },
          ".align-bottom": {
            "vertical-align": "bottom"
          },
          ".align-text-top": {
            "vertical-align": "text-top"
          },
          ".align-text-bottom": {
            "vertical-align": "text-bottom"
          },
          ".align-sub": {
            "vertical-align": "sub"
          },
          ".align-super": {
            "vertical-align": "super"
          }
        });
        matchUtilities({
          align: (value) => ({
            "vertical-align": value
          })
        });
      },
      fontFamily: (0, _createUtilityPlugin.default)("fontFamily", [
        [
          "font",
          [
            "fontFamily"
          ]
        ]
      ], {
        type: [
          "lookup",
          "generic-name",
          "family-name"
        ]
      }),
      fontSize: ({ matchUtilities, theme }) => {
        matchUtilities({
          text: (value) => {
            let [fontSize, options] = Array.isArray(value) ? value : [
              value
            ];
            let { lineHeight, letterSpacing, fontWeight } = (0, _isPlainObject.default)(options) ? options : {
              lineHeight: options
            };
            return {
              "font-size": fontSize,
              ...lineHeight === void 0 ? {} : {
                "line-height": lineHeight
              },
              ...letterSpacing === void 0 ? {} : {
                "letter-spacing": letterSpacing
              },
              ...fontWeight === void 0 ? {} : {
                "font-weight": fontWeight
              }
            };
          }
        }, {
          values: theme("fontSize"),
          type: [
            "absolute-size",
            "relative-size",
            "length",
            "percentage"
          ]
        });
      },
      fontWeight: (0, _createUtilityPlugin.default)("fontWeight", [
        [
          "font",
          [
            "fontWeight"
          ]
        ]
      ], {
        type: [
          "lookup",
          "number"
        ]
      }),
      textTransform: ({ addUtilities }) => {
        addUtilities({
          ".uppercase": {
            "text-transform": "uppercase"
          },
          ".lowercase": {
            "text-transform": "lowercase"
          },
          ".capitalize": {
            "text-transform": "capitalize"
          },
          ".normal-case": {
            "text-transform": "none"
          }
        });
      },
      fontStyle: ({ addUtilities }) => {
        addUtilities({
          ".italic": {
            "font-style": "italic"
          },
          ".not-italic": {
            "font-style": "normal"
          }
        });
      },
      fontVariantNumeric: ({ addDefaults, addUtilities }) => {
        let cssFontVariantNumericValue = "var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)";
        addDefaults("font-variant-numeric", {
          "--tw-ordinal": " ",
          "--tw-slashed-zero": " ",
          "--tw-numeric-figure": " ",
          "--tw-numeric-spacing": " ",
          "--tw-numeric-fraction": " "
        });
        addUtilities({
          ".normal-nums": {
            "font-variant-numeric": "normal"
          },
          ".ordinal": {
            "@defaults font-variant-numeric": {},
            "--tw-ordinal": "ordinal",
            "font-variant-numeric": cssFontVariantNumericValue
          },
          ".slashed-zero": {
            "@defaults font-variant-numeric": {},
            "--tw-slashed-zero": "slashed-zero",
            "font-variant-numeric": cssFontVariantNumericValue
          },
          ".lining-nums": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-figure": "lining-nums",
            "font-variant-numeric": cssFontVariantNumericValue
          },
          ".oldstyle-nums": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-figure": "oldstyle-nums",
            "font-variant-numeric": cssFontVariantNumericValue
          },
          ".proportional-nums": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-spacing": "proportional-nums",
            "font-variant-numeric": cssFontVariantNumericValue
          },
          ".tabular-nums": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-spacing": "tabular-nums",
            "font-variant-numeric": cssFontVariantNumericValue
          },
          ".diagonal-fractions": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-fraction": "diagonal-fractions",
            "font-variant-numeric": cssFontVariantNumericValue
          },
          ".stacked-fractions": {
            "@defaults font-variant-numeric": {},
            "--tw-numeric-fraction": "stacked-fractions",
            "font-variant-numeric": cssFontVariantNumericValue
          }
        });
      },
      lineHeight: (0, _createUtilityPlugin.default)("lineHeight", [
        [
          "leading",
          [
            "lineHeight"
          ]
        ]
      ]),
      letterSpacing: (0, _createUtilityPlugin.default)("letterSpacing", [
        [
          "tracking",
          [
            "letterSpacing"
          ]
        ]
      ], {
        supportsNegativeValues: true
      }),
      textColor: ({ matchUtilities, theme, corePlugins: corePlugins2 }) => {
        matchUtilities({
          text: (value) => {
            if (!corePlugins2("textOpacity")) {
              return {
                color: (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: "color",
              variable: "--tw-text-opacity"
            });
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("textColor")),
          type: "color"
        });
      },
      textOpacity: (0, _createUtilityPlugin.default)("textOpacity", [
        [
          "text-opacity",
          [
            "--tw-text-opacity"
          ]
        ]
      ]),
      textDecoration: ({ addUtilities }) => {
        addUtilities({
          ".underline": {
            "text-decoration-line": "underline"
          },
          ".overline": {
            "text-decoration-line": "overline"
          },
          ".line-through": {
            "text-decoration-line": "line-through"
          },
          ".no-underline": {
            "text-decoration-line": "none"
          }
        });
      },
      textDecorationColor: ({ matchUtilities, theme }) => {
        matchUtilities({
          decoration: (value) => {
            return {
              "text-decoration-color": (0, _toColorValue.default)(value)
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("textDecorationColor")),
          type: [
            "color"
          ]
        });
      },
      textDecorationStyle: ({ addUtilities }) => {
        addUtilities({
          ".decoration-solid": {
            "text-decoration-style": "solid"
          },
          ".decoration-double": {
            "text-decoration-style": "double"
          },
          ".decoration-dotted": {
            "text-decoration-style": "dotted"
          },
          ".decoration-dashed": {
            "text-decoration-style": "dashed"
          },
          ".decoration-wavy": {
            "text-decoration-style": "wavy"
          }
        });
      },
      textDecorationThickness: (0, _createUtilityPlugin.default)("textDecorationThickness", [
        [
          "decoration",
          [
            "text-decoration-thickness"
          ]
        ]
      ], {
        type: [
          "length",
          "percentage"
        ]
      }),
      textUnderlineOffset: (0, _createUtilityPlugin.default)("textUnderlineOffset", [
        [
          "underline-offset",
          [
            "text-underline-offset"
          ]
        ]
      ], {
        type: [
          "length",
          "percentage"
        ]
      }),
      fontSmoothing: ({ addUtilities }) => {
        addUtilities({
          ".antialiased": {
            "-webkit-font-smoothing": "antialiased",
            "-moz-osx-font-smoothing": "grayscale"
          },
          ".subpixel-antialiased": {
            "-webkit-font-smoothing": "auto",
            "-moz-osx-font-smoothing": "auto"
          }
        });
      },
      placeholderColor: ({ matchUtilities, theme, corePlugins: corePlugins2 }) => {
        matchUtilities({
          placeholder: (value) => {
            if (!corePlugins2("placeholderOpacity")) {
              return {
                "&::placeholder": {
                  color: (0, _toColorValue.default)(value)
                }
              };
            }
            return {
              "&::placeholder": (0, _withAlphaVariable.default)({
                color: value,
                property: "color",
                variable: "--tw-placeholder-opacity"
              })
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("placeholderColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      placeholderOpacity: ({ matchUtilities, theme }) => {
        matchUtilities({
          "placeholder-opacity": (value) => {
            return {
              ["&::placeholder"]: {
                "--tw-placeholder-opacity": value
              }
            };
          }
        }, {
          values: theme("placeholderOpacity")
        });
      },
      caretColor: ({ matchUtilities, theme }) => {
        matchUtilities({
          caret: (value) => {
            return {
              "caret-color": (0, _toColorValue.default)(value)
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("caretColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      accentColor: ({ matchUtilities, theme }) => {
        matchUtilities({
          accent: (value) => {
            return {
              "accent-color": (0, _toColorValue.default)(value)
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("accentColor")),
          type: [
            "color",
            "any"
          ]
        });
      },
      opacity: (0, _createUtilityPlugin.default)("opacity", [
        [
          "opacity",
          [
            "opacity"
          ]
        ]
      ]),
      backgroundBlendMode: ({ addUtilities }) => {
        addUtilities({
          ".bg-blend-normal": {
            "background-blend-mode": "normal"
          },
          ".bg-blend-multiply": {
            "background-blend-mode": "multiply"
          },
          ".bg-blend-screen": {
            "background-blend-mode": "screen"
          },
          ".bg-blend-overlay": {
            "background-blend-mode": "overlay"
          },
          ".bg-blend-darken": {
            "background-blend-mode": "darken"
          },
          ".bg-blend-lighten": {
            "background-blend-mode": "lighten"
          },
          ".bg-blend-color-dodge": {
            "background-blend-mode": "color-dodge"
          },
          ".bg-blend-color-burn": {
            "background-blend-mode": "color-burn"
          },
          ".bg-blend-hard-light": {
            "background-blend-mode": "hard-light"
          },
          ".bg-blend-soft-light": {
            "background-blend-mode": "soft-light"
          },
          ".bg-blend-difference": {
            "background-blend-mode": "difference"
          },
          ".bg-blend-exclusion": {
            "background-blend-mode": "exclusion"
          },
          ".bg-blend-hue": {
            "background-blend-mode": "hue"
          },
          ".bg-blend-saturation": {
            "background-blend-mode": "saturation"
          },
          ".bg-blend-color": {
            "background-blend-mode": "color"
          },
          ".bg-blend-luminosity": {
            "background-blend-mode": "luminosity"
          }
        });
      },
      mixBlendMode: ({ addUtilities }) => {
        addUtilities({
          ".mix-blend-normal": {
            "mix-blend-mode": "normal"
          },
          ".mix-blend-multiply": {
            "mix-blend-mode": "multiply"
          },
          ".mix-blend-screen": {
            "mix-blend-mode": "screen"
          },
          ".mix-blend-overlay": {
            "mix-blend-mode": "overlay"
          },
          ".mix-blend-darken": {
            "mix-blend-mode": "darken"
          },
          ".mix-blend-lighten": {
            "mix-blend-mode": "lighten"
          },
          ".mix-blend-color-dodge": {
            "mix-blend-mode": "color-dodge"
          },
          ".mix-blend-color-burn": {
            "mix-blend-mode": "color-burn"
          },
          ".mix-blend-hard-light": {
            "mix-blend-mode": "hard-light"
          },
          ".mix-blend-soft-light": {
            "mix-blend-mode": "soft-light"
          },
          ".mix-blend-difference": {
            "mix-blend-mode": "difference"
          },
          ".mix-blend-exclusion": {
            "mix-blend-mode": "exclusion"
          },
          ".mix-blend-hue": {
            "mix-blend-mode": "hue"
          },
          ".mix-blend-saturation": {
            "mix-blend-mode": "saturation"
          },
          ".mix-blend-color": {
            "mix-blend-mode": "color"
          },
          ".mix-blend-luminosity": {
            "mix-blend-mode": "luminosity"
          },
          ".mix-blend-plus-lighter": {
            "mix-blend-mode": "plus-lighter"
          }
        });
      },
      boxShadow: (() => {
        let transformValue = (0, _transformThemeValue.default)("boxShadow");
        let defaultBoxShadow = [
          `var(--tw-ring-offset-shadow, 0 0 #0000)`,
          `var(--tw-ring-shadow, 0 0 #0000)`,
          `var(--tw-shadow)`
        ].join(", ");
        return function({ matchUtilities, addDefaults, theme }) {
          addDefaults(" box-shadow", {
            "--tw-ring-offset-shadow": "0 0 #0000",
            "--tw-ring-shadow": "0 0 #0000",
            "--tw-shadow": "0 0 #0000",
            "--tw-shadow-colored": "0 0 #0000"
          });
          matchUtilities({
            shadow: (value) => {
              value = transformValue(value);
              let ast = (0, _parseBoxShadowValue.parseBoxShadowValue)(value);
              for (let shadow of ast) {
                if (!shadow.valid) {
                  continue;
                }
                shadow.color = "var(--tw-shadow-color)";
              }
              return {
                "@defaults box-shadow": {},
                "--tw-shadow": value === "none" ? "0 0 #0000" : value,
                "--tw-shadow-colored": value === "none" ? "0 0 #0000" : (0, _parseBoxShadowValue.formatBoxShadowValue)(ast),
                "box-shadow": defaultBoxShadow
              };
            }
          }, {
            values: theme("boxShadow"),
            type: [
              "shadow"
            ]
          });
        };
      })(),
      boxShadowColor: ({ matchUtilities, theme }) => {
        matchUtilities({
          shadow: (value) => {
            return {
              "--tw-shadow-color": (0, _toColorValue.default)(value),
              "--tw-shadow": "var(--tw-shadow-colored)"
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("boxShadowColor")),
          type: [
            "color"
          ]
        });
      },
      outlineStyle: ({ addUtilities }) => {
        addUtilities({
          ".outline-none": {
            outline: "2px solid transparent",
            "outline-offset": "2px"
          },
          ".outline": {
            "outline-style": "solid"
          },
          ".outline-dashed": {
            "outline-style": "dashed"
          },
          ".outline-dotted": {
            "outline-style": "dotted"
          },
          ".outline-double": {
            "outline-style": "double"
          },
          ".outline-hidden": {
            "outline-style": "hidden"
          }
        });
      },
      outlineWidth: (0, _createUtilityPlugin.default)("outlineWidth", [
        [
          "outline",
          [
            "outline-width"
          ]
        ]
      ], {
        type: [
          "length",
          "number",
          "percentage"
        ]
      }),
      outlineOffset: (0, _createUtilityPlugin.default)("outlineOffset", [
        [
          "outline-offset",
          [
            "outline-offset"
          ]
        ]
      ], {
        type: [
          "length",
          "number",
          "percentage"
        ]
      }),
      outlineColor: ({ matchUtilities, theme }) => {
        matchUtilities({
          outline: (value) => {
            return {
              "outline-color": (0, _toColorValue.default)(value)
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("outlineColor")),
          type: [
            "color"
          ]
        });
      },
      ringWidth: ({ matchUtilities, addDefaults, addUtilities, theme, config }) => {
        let ringColorDefault = (() => {
          var ref, ref1;
          if ((0, _featureFlags.flagEnabled)(config(), "respectDefaultRingColorOpacity")) {
            return theme("ringColor.DEFAULT");
          }
          let ringOpacityDefault = theme("ringOpacity.DEFAULT", "0.5");
          if (!((ref = theme("ringColor")) === null || ref === void 0 ? void 0 : ref.DEFAULT)) {
            return `rgb(147 197 253 / ${ringOpacityDefault})`;
          }
          return (0, _withAlphaVariable.withAlphaValue)((ref1 = theme("ringColor")) === null || ref1 === void 0 ? void 0 : ref1.DEFAULT, ringOpacityDefault, `rgb(147 197 253 / ${ringOpacityDefault})`);
        })();
        addDefaults("ring-width", {
          "--tw-ring-inset": " ",
          "--tw-ring-offset-width": theme("ringOffsetWidth.DEFAULT", "0px"),
          "--tw-ring-offset-color": theme("ringOffsetColor.DEFAULT", "#fff"),
          "--tw-ring-color": ringColorDefault,
          "--tw-ring-offset-shadow": "0 0 #0000",
          "--tw-ring-shadow": "0 0 #0000",
          "--tw-shadow": "0 0 #0000",
          "--tw-shadow-colored": "0 0 #0000"
        });
        matchUtilities({
          ring: (value) => {
            return {
              "@defaults ring-width": {},
              "--tw-ring-offset-shadow": `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,
              "--tw-ring-shadow": `var(--tw-ring-inset) 0 0 0 calc(${value} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,
              "box-shadow": [
                `var(--tw-ring-offset-shadow)`,
                `var(--tw-ring-shadow)`,
                `var(--tw-shadow, 0 0 #0000)`
              ].join(", ")
            };
          }
        }, {
          values: theme("ringWidth"),
          type: "length"
        });
        addUtilities({
          ".ring-inset": {
            "@defaults ring-width": {},
            "--tw-ring-inset": "inset"
          }
        });
      },
      ringColor: ({ matchUtilities, theme, corePlugins: corePlugins2 }) => {
        matchUtilities({
          ring: (value) => {
            if (!corePlugins2("ringOpacity")) {
              return {
                "--tw-ring-color": (0, _toColorValue.default)(value)
              };
            }
            return (0, _withAlphaVariable.default)({
              color: value,
              property: "--tw-ring-color",
              variable: "--tw-ring-opacity"
            });
          }
        }, {
          values: Object.fromEntries(Object.entries((0, _flattenColorPalette.default)(theme("ringColor"))).filter(([modifier]) => modifier !== "DEFAULT")),
          type: "color"
        });
      },
      ringOpacity: (helpers) => {
        let { config } = helpers;
        return (0, _createUtilityPlugin.default)("ringOpacity", [
          [
            "ring-opacity",
            [
              "--tw-ring-opacity"
            ]
          ]
        ], {
          filterDefault: !(0, _featureFlags.flagEnabled)(config(), "respectDefaultRingColorOpacity")
        })(helpers);
      },
      ringOffsetWidth: (0, _createUtilityPlugin.default)("ringOffsetWidth", [
        [
          "ring-offset",
          [
            "--tw-ring-offset-width"
          ]
        ]
      ], {
        type: "length"
      }),
      ringOffsetColor: ({ matchUtilities, theme }) => {
        matchUtilities({
          "ring-offset": (value) => {
            return {
              "--tw-ring-offset-color": (0, _toColorValue.default)(value)
            };
          }
        }, {
          values: (0, _flattenColorPalette.default)(theme("ringOffsetColor")),
          type: "color"
        });
      },
      blur: ({ matchUtilities, theme }) => {
        matchUtilities({
          blur: (value) => {
            return {
              "--tw-blur": `blur(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("blur")
        });
      },
      brightness: ({ matchUtilities, theme }) => {
        matchUtilities({
          brightness: (value) => {
            return {
              "--tw-brightness": `brightness(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("brightness")
        });
      },
      contrast: ({ matchUtilities, theme }) => {
        matchUtilities({
          contrast: (value) => {
            return {
              "--tw-contrast": `contrast(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("contrast")
        });
      },
      dropShadow: ({ matchUtilities, theme }) => {
        matchUtilities({
          "drop-shadow": (value) => {
            return {
              "--tw-drop-shadow": Array.isArray(value) ? value.map((v) => `drop-shadow(${v})`).join(" ") : `drop-shadow(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("dropShadow")
        });
      },
      grayscale: ({ matchUtilities, theme }) => {
        matchUtilities({
          grayscale: (value) => {
            return {
              "--tw-grayscale": `grayscale(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("grayscale")
        });
      },
      hueRotate: ({ matchUtilities, theme }) => {
        matchUtilities({
          "hue-rotate": (value) => {
            return {
              "--tw-hue-rotate": `hue-rotate(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("hueRotate"),
          supportsNegativeValues: true
        });
      },
      invert: ({ matchUtilities, theme }) => {
        matchUtilities({
          invert: (value) => {
            return {
              "--tw-invert": `invert(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("invert")
        });
      },
      saturate: ({ matchUtilities, theme }) => {
        matchUtilities({
          saturate: (value) => {
            return {
              "--tw-saturate": `saturate(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("saturate")
        });
      },
      sepia: ({ matchUtilities, theme }) => {
        matchUtilities({
          sepia: (value) => {
            return {
              "--tw-sepia": `sepia(${value})`,
              "@defaults filter": {},
              filter: cssFilterValue
            };
          }
        }, {
          values: theme("sepia")
        });
      },
      filter: ({ addDefaults, addUtilities }) => {
        addDefaults("filter", {
          "--tw-blur": " ",
          "--tw-brightness": " ",
          "--tw-contrast": " ",
          "--tw-grayscale": " ",
          "--tw-hue-rotate": " ",
          "--tw-invert": " ",
          "--tw-saturate": " ",
          "--tw-sepia": " ",
          "--tw-drop-shadow": " "
        });
        addUtilities({
          ".filter": {
            "@defaults filter": {},
            filter: cssFilterValue
          },
          ".filter-none": {
            filter: "none"
          }
        });
      },
      backdropBlur: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-blur": (value) => {
            return {
              "--tw-backdrop-blur": `blur(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropBlur")
        });
      },
      backdropBrightness: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-brightness": (value) => {
            return {
              "--tw-backdrop-brightness": `brightness(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropBrightness")
        });
      },
      backdropContrast: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-contrast": (value) => {
            return {
              "--tw-backdrop-contrast": `contrast(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropContrast")
        });
      },
      backdropGrayscale: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-grayscale": (value) => {
            return {
              "--tw-backdrop-grayscale": `grayscale(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropGrayscale")
        });
      },
      backdropHueRotate: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-hue-rotate": (value) => {
            return {
              "--tw-backdrop-hue-rotate": `hue-rotate(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropHueRotate"),
          supportsNegativeValues: true
        });
      },
      backdropInvert: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-invert": (value) => {
            return {
              "--tw-backdrop-invert": `invert(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropInvert")
        });
      },
      backdropOpacity: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-opacity": (value) => {
            return {
              "--tw-backdrop-opacity": `opacity(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropOpacity")
        });
      },
      backdropSaturate: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-saturate": (value) => {
            return {
              "--tw-backdrop-saturate": `saturate(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropSaturate")
        });
      },
      backdropSepia: ({ matchUtilities, theme }) => {
        matchUtilities({
          "backdrop-sepia": (value) => {
            return {
              "--tw-backdrop-sepia": `sepia(${value})`,
              "@defaults backdrop-filter": {},
              "backdrop-filter": cssBackdropFilterValue
            };
          }
        }, {
          values: theme("backdropSepia")
        });
      },
      backdropFilter: ({ addDefaults, addUtilities }) => {
        addDefaults("backdrop-filter", {
          "--tw-backdrop-blur": " ",
          "--tw-backdrop-brightness": " ",
          "--tw-backdrop-contrast": " ",
          "--tw-backdrop-grayscale": " ",
          "--tw-backdrop-hue-rotate": " ",
          "--tw-backdrop-invert": " ",
          "--tw-backdrop-opacity": " ",
          "--tw-backdrop-saturate": " ",
          "--tw-backdrop-sepia": " "
        });
        addUtilities({
          ".backdrop-filter": {
            "@defaults backdrop-filter": {},
            "backdrop-filter": cssBackdropFilterValue
          },
          ".backdrop-filter-none": {
            "backdrop-filter": "none"
          }
        });
      },
      transitionProperty: ({ matchUtilities, theme }) => {
        let defaultTimingFunction = theme("transitionTimingFunction.DEFAULT");
        let defaultDuration = theme("transitionDuration.DEFAULT");
        matchUtilities({
          transition: (value) => {
            return {
              "transition-property": value,
              ...value === "none" ? {} : {
                "transition-timing-function": defaultTimingFunction,
                "transition-duration": defaultDuration
              }
            };
          }
        }, {
          values: theme("transitionProperty")
        });
      },
      transitionDelay: (0, _createUtilityPlugin.default)("transitionDelay", [
        [
          "delay",
          [
            "transitionDelay"
          ]
        ]
      ]),
      transitionDuration: (0, _createUtilityPlugin.default)("transitionDuration", [
        [
          "duration",
          [
            "transitionDuration"
          ]
        ]
      ], {
        filterDefault: true
      }),
      transitionTimingFunction: (0, _createUtilityPlugin.default)("transitionTimingFunction", [
        [
          "ease",
          [
            "transitionTimingFunction"
          ]
        ]
      ], {
        filterDefault: true
      }),
      willChange: (0, _createUtilityPlugin.default)("willChange", [
        [
          "will-change",
          [
            "will-change"
          ]
        ]
      ]),
      content: (0, _createUtilityPlugin.default)("content", [
        [
          "content",
          [
            "--tw-content",
            [
              "content",
              "var(--tw-content)"
            ]
          ]
        ]
      ])
    };
  }
});
var require_isValidArbitraryValue = __commonJS({
  "../../node_modules/tailwindcss/lib/util/isValidArbitraryValue.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(
      exports,
      "default",
      {
        enumerable: true,
        get: () => isValidArbitraryValue
      }
    );
    var matchingBrackets = /* @__PURE__ */ new Map([
      [
        "{",
        "}"
      ],
      [
        "[",
        "]"
      ],
      [
        "(",
        ")"
      ]
    ]);
    var inverseMatchingBrackets = new Map(Array.from(matchingBrackets.entries()).map(([k, v]) => [
      v,
      k
    ]));
    var quotes = /* @__PURE__ */ new Set([
      '"',
      "'",
      "`"
    ]);
    function isValidArbitraryValue(value) {
      let stack = [];
      let inQuotes = false;
      for (let i = 0; i < value.length; i++) {
        let char = value[i];
        if (char === ":" && !inQuotes && stack.length === 0) {
          return false;
        }
        if (quotes.has(char) && value[i - 1] !== "\\") {
          inQuotes = !inQuotes;
        }
        if (inQuotes)
          continue;
        if (value[i - 1] === "\\")
          continue;
        if (matchingBrackets.has(char)) {
          stack.push(char);
        } else if (inverseMatchingBrackets.has(char)) {
          let inverse = inverseMatchingBrackets.get(char);
          if (stack.length <= 0) {
            return false;
          }
          if (stack.pop() !== inverse) {
            return false;
          }
        }
      }
      if (stack.length > 0) {
        return false;
      }
      return true;
    }
  }
});
var require_formatVariantSelector = __commonJS({
  "../../node_modules/tailwindcss/lib/util/formatVariantSelector.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      selectorFunctions: () => selectorFunctions,
      formatVariantSelector: () => formatVariantSelector,
      finalizeSelector: () => finalizeSelector
    });
    var _postcssSelectorParser = _interopRequireDefault(require_dist());
    var _unesc = _interopRequireDefault(require_unesc());
    var _escapeClassName = _interopRequireDefault(require_escapeClassName());
    var _prefixSelector = _interopRequireDefault(require_prefixSelector());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var ref;
    var MERGE = ":merge";
    var PARENT = "&";
    var selectorFunctions = /* @__PURE__ */ new Set([
      MERGE
    ]);
    function formatVariantSelector(current, ...others) {
      for (let other of others) {
        let incomingValue = resolveFunctionArgument(other, MERGE);
        if (incomingValue !== null) {
          let existingValue = resolveFunctionArgument(current, MERGE, incomingValue);
          if (existingValue !== null) {
            let existingTarget = `${MERGE}(${incomingValue})`;
            let splitIdx = other.indexOf(existingTarget);
            let addition = other.slice(splitIdx + existingTarget.length).split(" ")[0];
            current = current.replace(existingTarget, existingTarget + addition);
            continue;
          }
        }
        current = other.replace(PARENT, current);
      }
      return current;
    }
    var ref1;
    function finalizeSelector(format, {
      selector,
      candidate,
      context,
      isArbitraryVariant,
      base = candidate.split(new RegExp(`\\${(ref1 = context === null || context === void 0 ? void 0 : (ref = context.tailwindConfig) === null || ref === void 0 ? void 0 : ref.separator) !== null && ref1 !== void 0 ? ref1 : ":"}(?![^[]*\\])`)).pop()
    }) {
      var ref2;
      let ast = (0, _postcssSelectorParser.default)().astSync(selector);
      if ((context === null || context === void 0 ? void 0 : (ref2 = context.tailwindConfig) === null || ref2 === void 0 ? void 0 : ref2.prefix) && !isArbitraryVariant) {
        format = (0, _prefixSelector.default)(context.tailwindConfig.prefix, format);
      }
      format = format.replace(PARENT, `.${(0, _escapeClassName.default)(candidate)}`);
      let formatAst = (0, _postcssSelectorParser.default)().astSync(format);
      ast.each((node) => {
        let hasClassesMatchingCandidate = node.some((n) => n.type === "class" && n.value === base);
        if (!hasClassesMatchingCandidate) {
          node.remove();
        }
      });
      ast.walkClasses((node) => {
        if (node.raws && node.value.includes(base)) {
          node.raws.value = (0, _escapeClassName.default)((0, _unesc.default)(node.raws.value));
        }
      });
      ast.walkClasses((node) => {
        if (node.value === base) {
          node.replaceWith(...formatAst.nodes);
        }
      });
      function collectPseudoElements(selector2) {
        let nodes = [];
        for (let node of selector2.nodes) {
          if (isPseudoElement(node)) {
            nodes.push(node);
            selector2.removeChild(node);
          }
          if (node === null || node === void 0 ? void 0 : node.nodes) {
            nodes.push(...collectPseudoElements(node));
          }
        }
        return nodes;
      }
      ast.each((selector2) => {
        selector2.walkPseudos((p) => {
          if (selectorFunctions.has(p.value)) {
            p.replaceWith(p.nodes);
          }
        });
        let pseudoElements = collectPseudoElements(selector2);
        if (pseudoElements.length > 0) {
          selector2.nodes.push(pseudoElements.sort(sortSelector));
        }
      });
      return ast.toString();
    }
    var pseudoElementsBC = [
      ":before",
      ":after",
      ":first-line",
      ":first-letter"
    ];
    var pseudoElementExceptions = [
      "::file-selector-button"
    ];
    function sortSelector(a, z) {
      if (a.type !== "pseudo" && z.type !== "pseudo") {
        return 0;
      }
      if (a.type === "combinator" ^ z.type === "combinator") {
        return 0;
      }
      if (a.type === "pseudo" ^ z.type === "pseudo") {
        return (a.type === "pseudo") - (z.type === "pseudo");
      }
      return isPseudoElement(a) - isPseudoElement(z);
    }
    function isPseudoElement(node) {
      if (node.type !== "pseudo")
        return false;
      if (pseudoElementExceptions.includes(node.value))
        return false;
      return node.value.startsWith("::") || pseudoElementsBC.includes(node.value);
    }
    function resolveFunctionArgument(haystack, needle, arg) {
      let startIdx = haystack.indexOf(arg ? `${needle}(${arg})` : needle);
      if (startIdx === -1)
        return null;
      startIdx += needle.length + 1;
      let target = "";
      let count = 0;
      for (let char of haystack.slice(startIdx)) {
        if (char !== "(" && char !== ")") {
          target += char;
        } else if (char === "(") {
          target += char;
          count++;
        } else if (char === ")") {
          if (--count < 0)
            break;
          target += char;
        }
      }
      return target;
    }
  }
});
var require_generateRules = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/generateRules.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      resolveMatches: () => resolveMatches,
      generateRules: () => generateRules
    });
    var _postcss = _interopRequireDefault(require_postcss());
    var _postcssSelectorParser = _interopRequireDefault(require_dist());
    var _parseObjectStyles = _interopRequireDefault(require_parseObjectStyles());
    var _isPlainObject = _interopRequireDefault(require_isPlainObject());
    var _prefixSelector = _interopRequireDefault(require_prefixSelector());
    var _pluginUtils = require_pluginUtils();
    var _log = _interopRequireDefault(require_log());
    var _sharedState = _interopRequireWildcard(require_sharedState());
    var _formatVariantSelector = require_formatVariantSelector();
    var _nameClass = require_nameClass();
    var _dataTypes = require_dataTypes();
    var _setupContextUtils = require_setupContextUtils();
    var _isValidArbitraryValue = _interopRequireDefault(require_isValidArbitraryValue());
    var _splitAtTopLevelOnlyJs = require_splitAtTopLevelOnly();
    var _featureFlags = require_featureFlags();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var classNameParser = (0, _postcssSelectorParser.default)((selectors) => {
      return selectors.first.filter(({ type }) => type === "class").pop().value;
    });
    function getClassNameFromSelector(selector) {
      return classNameParser.transformSync(selector);
    }
    function* candidatePermutations(candidate) {
      let lastIndex = Infinity;
      while (lastIndex >= 0) {
        let dashIdx;
        if (lastIndex === Infinity && candidate.endsWith("]")) {
          let bracketIdx = candidate.indexOf("[");
          dashIdx = [
            "-",
            "/"
          ].includes(candidate[bracketIdx - 1]) ? bracketIdx - 1 : -1;
        } else {
          dashIdx = candidate.lastIndexOf("-", lastIndex);
        }
        if (dashIdx < 0) {
          break;
        }
        let prefix = candidate.slice(0, dashIdx);
        let modifier = candidate.slice(dashIdx + 1);
        yield [
          prefix,
          modifier
        ];
        lastIndex = dashIdx - 1;
      }
    }
    function applyPrefix(matches, context) {
      if (matches.length === 0 || context.tailwindConfig.prefix === "") {
        return matches;
      }
      for (let match of matches) {
        let [meta] = match;
        if (meta.options.respectPrefix) {
          let container = _postcss.default.root({
            nodes: [
              match[1].clone()
            ]
          });
          let classCandidate = match[1].raws.tailwind.classCandidate;
          container.walkRules((r) => {
            let shouldPrependNegative = classCandidate.startsWith("-");
            r.selector = (0, _prefixSelector.default)(context.tailwindConfig.prefix, r.selector, shouldPrependNegative);
          });
          match[1] = container.nodes[0];
        }
      }
      return matches;
    }
    function applyImportant(matches, classCandidate) {
      if (matches.length === 0) {
        return matches;
      }
      let result = [];
      for (let [meta, rule2] of matches) {
        let container = _postcss.default.root({
          nodes: [
            rule2.clone()
          ]
        });
        container.walkRules((r) => {
          r.selector = (0, _pluginUtils.updateAllClasses)(r.selector, (className) => {
            if (className === classCandidate) {
              return `!${className}`;
            }
            return className;
          });
          r.walkDecls((d) => d.important = true);
        });
        result.push([
          {
            ...meta,
            important: true
          },
          container.nodes[0]
        ]);
      }
      return result;
    }
    function applyVariant(variant, matches, context) {
      if (matches.length === 0) {
        return matches;
      }
      let args;
      if (variant.endsWith("]") && !variant.startsWith("[")) {
        args = variant.slice(variant.lastIndexOf("[") + 1, -1);
        variant = variant.slice(0, variant.indexOf(args) - 1 - 1);
      }
      if (isArbitraryValue(variant) && !context.variantMap.has(variant)) {
        let selector = (0, _dataTypes.normalize)(variant.slice(1, -1));
        if (!(0, _setupContextUtils.isValidVariantFormatString)(selector)) {
          return [];
        }
        let fn = (0, _setupContextUtils.parseVariant)(selector);
        let sort = Array.from(context.variantOrder.values()).pop() << BigInt(1);
        context.variantMap.set(variant, [
          [
            sort,
            fn
          ]
        ]);
        context.variantOrder.set(variant, sort);
      }
      if (context.variantMap.has(variant)) {
        let variantFunctionTuples = context.variantMap.get(variant).slice();
        let result = [];
        for (let [meta, rule2] of matches) {
          if (meta.layer === "user") {
            continue;
          }
          let container = _postcss.default.root({
            nodes: [
              rule2.clone()
            ]
          });
          for (let [variantSort, variantFunction, containerFromArray] of variantFunctionTuples) {
            let prepareBackup = function() {
              if (clone.raws.neededBackup) {
                return;
              }
              clone.raws.neededBackup = true;
              clone.walkRules((rule3) => rule3.raws.originalSelector = rule3.selector);
            }, modifySelectors = function(modifierFunction) {
              prepareBackup();
              clone.each((rule3) => {
                if (rule3.type !== "rule") {
                  return;
                }
                rule3.selectors = rule3.selectors.map((selector) => {
                  return modifierFunction({
                    get className() {
                      return getClassNameFromSelector(selector);
                    },
                    selector
                  });
                });
              });
              return clone;
            };
            let clone = containerFromArray !== null && containerFromArray !== void 0 ? containerFromArray : container.clone();
            let collectedFormats = [];
            let ruleWithVariant = variantFunction({
              get container() {
                prepareBackup();
                return clone;
              },
              separator: context.tailwindConfig.separator,
              modifySelectors,
              wrap(wrapper) {
                let nodes = clone.nodes;
                clone.removeAll();
                wrapper.append(nodes);
                clone.append(wrapper);
              },
              format(selectorFormat) {
                collectedFormats.push(selectorFormat);
              },
              args
            });
            if (Array.isArray(ruleWithVariant)) {
              for (let [idx, variantFunction1] of ruleWithVariant.entries()) {
                variantFunctionTuples.push([
                  variantSort | BigInt(idx << ruleWithVariant.length),
                  variantFunction1,
                  clone.clone()
                ]);
              }
              continue;
            }
            if (typeof ruleWithVariant === "string") {
              collectedFormats.push(ruleWithVariant);
            }
            if (ruleWithVariant === null) {
              continue;
            }
            if (clone.raws.neededBackup) {
              delete clone.raws.neededBackup;
              clone.walkRules((rule3) => {
                let before = rule3.raws.originalSelector;
                if (!before)
                  return;
                delete rule3.raws.originalSelector;
                if (before === rule3.selector)
                  return;
                let modified = rule3.selector;
                let rebuiltBase = (0, _postcssSelectorParser.default)((selectors) => {
                  selectors.walkClasses((classNode) => {
                    classNode.value = `${variant}${context.tailwindConfig.separator}${classNode.value}`;
                  });
                }).processSync(before);
                collectedFormats.push(modified.replace(rebuiltBase, "&"));
                rule3.selector = before;
              });
            }
            clone.nodes[0].raws.tailwind = {
              ...clone.nodes[0].raws.tailwind,
              parentLayer: meta.layer
            };
            var _collectedFormats;
            let withOffset = [
              {
                ...meta,
                sort: variantSort | meta.sort,
                collectedFormats: ((_collectedFormats = meta.collectedFormats) !== null && _collectedFormats !== void 0 ? _collectedFormats : []).concat(collectedFormats),
                isArbitraryVariant: isArbitraryValue(variant)
              },
              clone.nodes[0]
            ];
            result.push(withOffset);
          }
        }
        return result;
      }
      return [];
    }
    function parseRules(rule2, cache, options = {}) {
      if (!(0, _isPlainObject.default)(rule2) && !Array.isArray(rule2)) {
        return [
          [
            rule2
          ],
          options
        ];
      }
      if (Array.isArray(rule2)) {
        return parseRules(rule2[0], cache, rule2[1]);
      }
      if (!cache.has(rule2)) {
        cache.set(rule2, (0, _parseObjectStyles.default)(rule2));
      }
      return [
        cache.get(rule2),
        options
      ];
    }
    var IS_VALID_PROPERTY_NAME = /^[a-z_-]/;
    function isValidPropName(name) {
      return IS_VALID_PROPERTY_NAME.test(name);
    }
    function looksLikeUri(declaration) {
      if (!declaration.includes("://")) {
        return false;
      }
      try {
        const url = new URL(declaration);
        return url.scheme !== "" && url.host !== "";
      } catch (err) {
        return false;
      }
    }
    function isParsableNode(node) {
      let isParsable = true;
      node.walkDecls((decl2) => {
        if (!isParsableCssValue(decl2.name, decl2.value)) {
          isParsable = false;
          return false;
        }
      });
      return isParsable;
    }
    function isParsableCssValue(property, value) {
      if (looksLikeUri(`${property}:${value}`)) {
        return false;
      }
      try {
        _postcss.default.parse(`a{${property}:${value}}`).toResult();
        return true;
      } catch (err) {
        return false;
      }
    }
    function extractArbitraryProperty(classCandidate, context) {
      var ref;
      let [, property, value] = (ref = classCandidate.match(/^\[([a-zA-Z0-9-_]+):(\S+)\]$/)) !== null && ref !== void 0 ? ref : [];
      if (value === void 0) {
        return null;
      }
      if (!isValidPropName(property)) {
        return null;
      }
      if (!(0, _isValidArbitraryValue.default)(value)) {
        return null;
      }
      let normalized = (0, _dataTypes.normalize)(value);
      if (!isParsableCssValue(property, normalized)) {
        return null;
      }
      return [
        [
          {
            sort: context.arbitraryPropertiesSort,
            layer: "utilities"
          },
          () => ({
            [(0, _nameClass.asClass)(classCandidate)]: {
              [property]: normalized
            }
          })
        ]
      ];
    }
    function* resolveMatchedPlugins(classCandidate, context) {
      if (context.candidateRuleMap.has(classCandidate)) {
        yield [
          context.candidateRuleMap.get(classCandidate),
          "DEFAULT"
        ];
      }
      yield* function* (arbitraryPropertyRule) {
        if (arbitraryPropertyRule !== null) {
          yield [
            arbitraryPropertyRule,
            "DEFAULT"
          ];
        }
      }(extractArbitraryProperty(classCandidate, context));
      let candidatePrefix = classCandidate;
      let negative = false;
      const twConfigPrefix = context.tailwindConfig.prefix;
      const twConfigPrefixLen = twConfigPrefix.length;
      const hasMatchingPrefix = candidatePrefix.startsWith(twConfigPrefix) || candidatePrefix.startsWith(`-${twConfigPrefix}`);
      if (candidatePrefix[twConfigPrefixLen] === "-" && hasMatchingPrefix) {
        negative = true;
        candidatePrefix = twConfigPrefix + candidatePrefix.slice(twConfigPrefixLen + 1);
      }
      if (negative && context.candidateRuleMap.has(candidatePrefix)) {
        yield [
          context.candidateRuleMap.get(candidatePrefix),
          "-DEFAULT"
        ];
      }
      for (let [prefix, modifier] of candidatePermutations(candidatePrefix)) {
        if (context.candidateRuleMap.has(prefix)) {
          yield [
            context.candidateRuleMap.get(prefix),
            negative ? `-${modifier}` : modifier
          ];
        }
      }
    }
    function splitWithSeparator(input, separator) {
      if (input === _sharedState.NOT_ON_DEMAND) {
        return [
          _sharedState.NOT_ON_DEMAND
        ];
      }
      return Array.from((0, _splitAtTopLevelOnlyJs.splitAtTopLevelOnly)(input, separator));
    }
    function* recordCandidates(matches, classCandidate) {
      for (const match of matches) {
        var ref;
        var ref1;
        match[1].raws.tailwind = {
          ...match[1].raws.tailwind,
          classCandidate,
          preserveSource: (ref1 = (ref = match[0].options) === null || ref === void 0 ? void 0 : ref.preserveSource) !== null && ref1 !== void 0 ? ref1 : false
        };
        yield match;
      }
    }
    function* resolveMatches(candidate, context, original = candidate) {
      let separator = context.tailwindConfig.separator;
      let [classCandidate, ...variants] = splitWithSeparator(candidate, separator).reverse();
      let important = false;
      if (classCandidate.startsWith("!")) {
        important = true;
        classCandidate = classCandidate.slice(1);
      }
      if ((0, _featureFlags.flagEnabled)(context.tailwindConfig, "variantGrouping")) {
        if (classCandidate.startsWith("(") && classCandidate.endsWith(")")) {
          let base = variants.slice().reverse().join(separator);
          for (let part of (0, _splitAtTopLevelOnlyJs.splitAtTopLevelOnly)(classCandidate.slice(1, -1), ",")) {
            yield* resolveMatches(base + separator + part, context, original);
          }
        }
      }
      for (let matchedPlugins of resolveMatchedPlugins(classCandidate, context)) {
        let matches = [];
        let typesByMatches = /* @__PURE__ */ new Map();
        let [plugins, modifier] = matchedPlugins;
        let isOnlyPlugin = plugins.length === 1;
        for (let [sort, plugin2] of plugins) {
          let matchesPerPlugin = [];
          if (typeof plugin2 === "function") {
            for (let ruleSet of [].concat(plugin2(modifier, {
              isOnlyPlugin
            }))) {
              let [rules, options] = parseRules(ruleSet, context.postCssNodeCache);
              for (let rule2 of rules) {
                matchesPerPlugin.push([
                  {
                    ...sort,
                    options: {
                      ...sort.options,
                      ...options
                    }
                  },
                  rule2
                ]);
              }
            }
          } else if (modifier === "DEFAULT" || modifier === "-DEFAULT") {
            let ruleSet1 = plugin2;
            let [rules1, options1] = parseRules(ruleSet1, context.postCssNodeCache);
            for (let rule1 of rules1) {
              matchesPerPlugin.push([
                {
                  ...sort,
                  options: {
                    ...sort.options,
                    ...options1
                  }
                },
                rule1
              ]);
            }
          }
          if (matchesPerPlugin.length > 0) {
            var ref;
            typesByMatches.set(matchesPerPlugin, (ref = sort.options) === null || ref === void 0 ? void 0 : ref.type);
            matches.push(matchesPerPlugin);
          }
        }
        if (isArbitraryValue(modifier)) {
          if (matches.length > 1) {
            var ref1;
            let typesPerPlugin = matches.map((match) => /* @__PURE__ */ new Set([
              ...(ref1 = typesByMatches.get(match)) !== null && ref1 !== void 0 ? ref1 : []
            ]));
            for (let pluginTypes of typesPerPlugin) {
              for (let type of pluginTypes) {
                let removeFromOwnGroup = false;
                for (let otherGroup of typesPerPlugin) {
                  if (pluginTypes === otherGroup)
                    continue;
                  if (otherGroup.has(type)) {
                    otherGroup.delete(type);
                    removeFromOwnGroup = true;
                  }
                }
                if (removeFromOwnGroup)
                  pluginTypes.delete(type);
              }
            }
            let messages = [];
            for (let [idx, group] of typesPerPlugin.entries()) {
              for (let type1 of group) {
                let rules2 = matches[idx].map(([, rule2]) => rule2).flat().map((rule2) => rule2.toString().split("\n").slice(1, -1).map((line) => line.trim()).map((x) => `      ${x}`).join("\n")).join("\n\n");
                messages.push(`  Use \`${candidate.replace("[", `[${type1}:`)}\` for \`${rules2.trim()}\``);
                break;
              }
            }
            _log.default.warn([
              `The class \`${candidate}\` is ambiguous and matches multiple utilities.`,
              ...messages,
              `If this is content and not a class, replace it with \`${candidate.replace("[", "&lsqb;").replace("]", "&rsqb;")}\` to silence this warning.`
            ]);
            continue;
          }
          matches = matches.map((list2) => list2.filter((match) => isParsableNode(match[1])));
        }
        matches = matches.flat();
        matches = Array.from(recordCandidates(matches, classCandidate));
        matches = applyPrefix(matches, context);
        if (important) {
          matches = applyImportant(matches, classCandidate);
        }
        for (let variant of variants) {
          matches = applyVariant(variant, matches, context);
        }
        for (let match of matches) {
          match[1].raws.tailwind = {
            ...match[1].raws.tailwind,
            candidate
          };
          if (match[0].collectedFormats) {
            let finalFormat = (0, _formatVariantSelector.formatVariantSelector)("&", ...match[0].collectedFormats);
            let container = _postcss.default.root({
              nodes: [
                match[1].clone()
              ]
            });
            container.walkRules((rule2) => {
              var ref2;
              if (inKeyframes(rule2))
                return;
              var ref12;
              rule2.selector = (0, _formatVariantSelector.finalizeSelector)(finalFormat, {
                selector: rule2.selector,
                candidate: original,
                base: candidate.split(new RegExp(`\\${(ref12 = context === null || context === void 0 ? void 0 : (ref2 = context.tailwindConfig) === null || ref2 === void 0 ? void 0 : ref2.separator) !== null && ref12 !== void 0 ? ref12 : ":"}(?![^[]*\\])`)).pop(),
                isArbitraryVariant: match[0].isArbitraryVariant,
                context
              });
            });
            match[1] = container.nodes[0];
          }
          yield match;
        }
      }
    }
    function inKeyframes(rule2) {
      return rule2.parent && rule2.parent.type === "atrule" && rule2.parent.name === "keyframes";
    }
    function generateRules(candidates, context) {
      let allRules = [];
      for (let candidate of candidates) {
        if (context.notClassCache.has(candidate)) {
          continue;
        }
        if (context.classCache.has(candidate)) {
          allRules.push(context.classCache.get(candidate));
          continue;
        }
        let matches = Array.from(resolveMatches(candidate, context));
        if (matches.length === 0) {
          context.notClassCache.add(candidate);
          continue;
        }
        context.classCache.set(candidate, matches);
        allRules.push(matches);
      }
      let strategy = ((important) => {
        if (important === true) {
          return (rule2) => {
            rule2.walkDecls((d) => {
              if (d.parent.type === "rule" && !inKeyframes(d.parent)) {
                d.important = true;
              }
            });
          };
        }
        if (typeof important === "string") {
          return (rule2) => {
            rule2.selectors = rule2.selectors.map((selector) => {
              return `${important} ${selector}`;
            });
          };
        }
      })(context.tailwindConfig.important);
      return allRules.flat(1).map(([{ sort, layer, options }, rule2]) => {
        if (options.respectImportant) {
          if (strategy) {
            let container = _postcss.default.root({
              nodes: [
                rule2.clone()
              ]
            });
            container.walkRules((r) => {
              if (inKeyframes(r)) {
                return;
              }
              strategy(r);
            });
            rule2 = container.nodes[0];
          }
        }
        return [
          sort | context.layerOrder[layer],
          rule2
        ];
      });
    }
    function isArbitraryValue(input) {
      return input.startsWith("[") && input.endsWith("]");
    }
  }
});
var require_browser3 = __commonJS({
  "../../node_modules/randombytes/browser.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var MAX_BYTES = 65536;
    var MAX_UINT32 = 4294967295;
    function oldBrowser() {
      throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
    }
    var Buffer = require_safe_buffer().Buffer;
    var crypto = globalThis.crypto || globalThis.msCrypto;
    if (crypto && crypto.getRandomValues) {
      module.exports = randomBytes;
    } else {
      module.exports = oldBrowser;
    }
    function randomBytes(size, cb) {
      if (size > MAX_UINT32)
        throw new RangeError("requested too many random bytes");
      var bytes = Buffer.allocUnsafe(size);
      if (size > 0) {
        if (size > MAX_BYTES) {
          for (var generated = 0; generated < size; generated += MAX_BYTES) {
            crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));
          }
        } else {
          crypto.getRandomValues(bytes);
        }
      }
      if (typeof cb === "function") {
        return process.nextTick(function() {
          cb(null, bytes);
        });
      }
      return bytes;
    }
  }
});
var require_readable_browser = __commonJS({
  "../../node_modules/readable-stream/readable-browser.js"(exports, module) {
    init_process();
    init_buffer();
    exports = module.exports = require_stream_readable();
    exports.Stream = exports;
    exports.Readable = exports;
    exports.Writable = require_stream_writable();
    exports.Duplex = require_stream_duplex();
    exports.Transform = require_stream_transform();
    exports.PassThrough = require_stream_passthrough();
    exports.finished = require_end_of_stream();
    exports.pipeline = require_pipeline();
  }
});
var require_hash_base = __commonJS({
  "../../node_modules/hash-base/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var Transform = require_readable_browser().Transform;
    var inherits = require_inherits_browser();
    function throwIfNotStringOrBuffer(val, prefix) {
      if (!Buffer.isBuffer(val) && typeof val !== "string") {
        throw new TypeError(prefix + " must be a string or a buffer");
      }
    }
    function HashBase(blockSize) {
      Transform.call(this);
      this._block = Buffer.allocUnsafe(blockSize);
      this._blockSize = blockSize;
      this._blockOffset = 0;
      this._length = [0, 0, 0, 0];
      this._finalized = false;
    }
    inherits(HashBase, Transform);
    HashBase.prototype._transform = function(chunk, encoding, callback) {
      var error = null;
      try {
        this.update(chunk, encoding);
      } catch (err) {
        error = err;
      }
      callback(error);
    };
    HashBase.prototype._flush = function(callback) {
      var error = null;
      try {
        this.push(this.digest());
      } catch (err) {
        error = err;
      }
      callback(error);
    };
    HashBase.prototype.update = function(data, encoding) {
      throwIfNotStringOrBuffer(data, "Data");
      if (this._finalized)
        throw new Error("Digest already called");
      if (!Buffer.isBuffer(data))
        data = Buffer.from(data, encoding);
      var block = this._block;
      var offset = 0;
      while (this._blockOffset + data.length - offset >= this._blockSize) {
        for (var i = this._blockOffset; i < this._blockSize; )
          block[i++] = data[offset++];
        this._update();
        this._blockOffset = 0;
      }
      while (offset < data.length)
        block[this._blockOffset++] = data[offset++];
      for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
        this._length[j] += carry;
        carry = this._length[j] / 4294967296 | 0;
        if (carry > 0)
          this._length[j] -= 4294967296 * carry;
      }
      return this;
    };
    HashBase.prototype._update = function() {
      throw new Error("_update is not implemented");
    };
    HashBase.prototype.digest = function(encoding) {
      if (this._finalized)
        throw new Error("Digest already called");
      this._finalized = true;
      var digest = this._digest();
      if (encoding !== void 0)
        digest = digest.toString(encoding);
      this._block.fill(0);
      this._blockOffset = 0;
      for (var i = 0; i < 4; ++i)
        this._length[i] = 0;
      return digest;
    };
    HashBase.prototype._digest = function() {
      throw new Error("_digest is not implemented");
    };
    module.exports = HashBase;
  }
});
var require_md5 = __commonJS({
  "../../node_modules/md5.js/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var HashBase = require_hash_base();
    var Buffer = require_safe_buffer().Buffer;
    var ARRAY16 = new Array(16);
    function MD5() {
      HashBase.call(this, 64);
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
    }
    inherits(MD5, HashBase);
    MD5.prototype._update = function() {
      var M = ARRAY16;
      for (var i = 0; i < 16; ++i)
        M[i] = this._block.readInt32LE(i * 4);
      var a = this._a;
      var b = this._b;
      var c = this._c;
      var d = this._d;
      a = fnF(a, b, c, d, M[0], 3614090360, 7);
      d = fnF(d, a, b, c, M[1], 3905402710, 12);
      c = fnF(c, d, a, b, M[2], 606105819, 17);
      b = fnF(b, c, d, a, M[3], 3250441966, 22);
      a = fnF(a, b, c, d, M[4], 4118548399, 7);
      d = fnF(d, a, b, c, M[5], 1200080426, 12);
      c = fnF(c, d, a, b, M[6], 2821735955, 17);
      b = fnF(b, c, d, a, M[7], 4249261313, 22);
      a = fnF(a, b, c, d, M[8], 1770035416, 7);
      d = fnF(d, a, b, c, M[9], 2336552879, 12);
      c = fnF(c, d, a, b, M[10], 4294925233, 17);
      b = fnF(b, c, d, a, M[11], 2304563134, 22);
      a = fnF(a, b, c, d, M[12], 1804603682, 7);
      d = fnF(d, a, b, c, M[13], 4254626195, 12);
      c = fnF(c, d, a, b, M[14], 2792965006, 17);
      b = fnF(b, c, d, a, M[15], 1236535329, 22);
      a = fnG(a, b, c, d, M[1], 4129170786, 5);
      d = fnG(d, a, b, c, M[6], 3225465664, 9);
      c = fnG(c, d, a, b, M[11], 643717713, 14);
      b = fnG(b, c, d, a, M[0], 3921069994, 20);
      a = fnG(a, b, c, d, M[5], 3593408605, 5);
      d = fnG(d, a, b, c, M[10], 38016083, 9);
      c = fnG(c, d, a, b, M[15], 3634488961, 14);
      b = fnG(b, c, d, a, M[4], 3889429448, 20);
      a = fnG(a, b, c, d, M[9], 568446438, 5);
      d = fnG(d, a, b, c, M[14], 3275163606, 9);
      c = fnG(c, d, a, b, M[3], 4107603335, 14);
      b = fnG(b, c, d, a, M[8], 1163531501, 20);
      a = fnG(a, b, c, d, M[13], 2850285829, 5);
      d = fnG(d, a, b, c, M[2], 4243563512, 9);
      c = fnG(c, d, a, b, M[7], 1735328473, 14);
      b = fnG(b, c, d, a, M[12], 2368359562, 20);
      a = fnH(a, b, c, d, M[5], 4294588738, 4);
      d = fnH(d, a, b, c, M[8], 2272392833, 11);
      c = fnH(c, d, a, b, M[11], 1839030562, 16);
      b = fnH(b, c, d, a, M[14], 4259657740, 23);
      a = fnH(a, b, c, d, M[1], 2763975236, 4);
      d = fnH(d, a, b, c, M[4], 1272893353, 11);
      c = fnH(c, d, a, b, M[7], 4139469664, 16);
      b = fnH(b, c, d, a, M[10], 3200236656, 23);
      a = fnH(a, b, c, d, M[13], 681279174, 4);
      d = fnH(d, a, b, c, M[0], 3936430074, 11);
      c = fnH(c, d, a, b, M[3], 3572445317, 16);
      b = fnH(b, c, d, a, M[6], 76029189, 23);
      a = fnH(a, b, c, d, M[9], 3654602809, 4);
      d = fnH(d, a, b, c, M[12], 3873151461, 11);
      c = fnH(c, d, a, b, M[15], 530742520, 16);
      b = fnH(b, c, d, a, M[2], 3299628645, 23);
      a = fnI(a, b, c, d, M[0], 4096336452, 6);
      d = fnI(d, a, b, c, M[7], 1126891415, 10);
      c = fnI(c, d, a, b, M[14], 2878612391, 15);
      b = fnI(b, c, d, a, M[5], 4237533241, 21);
      a = fnI(a, b, c, d, M[12], 1700485571, 6);
      d = fnI(d, a, b, c, M[3], 2399980690, 10);
      c = fnI(c, d, a, b, M[10], 4293915773, 15);
      b = fnI(b, c, d, a, M[1], 2240044497, 21);
      a = fnI(a, b, c, d, M[8], 1873313359, 6);
      d = fnI(d, a, b, c, M[15], 4264355552, 10);
      c = fnI(c, d, a, b, M[6], 2734768916, 15);
      b = fnI(b, c, d, a, M[13], 1309151649, 21);
      a = fnI(a, b, c, d, M[4], 4149444226, 6);
      d = fnI(d, a, b, c, M[11], 3174756917, 10);
      c = fnI(c, d, a, b, M[2], 718787259, 15);
      b = fnI(b, c, d, a, M[9], 3951481745, 21);
      this._a = this._a + a | 0;
      this._b = this._b + b | 0;
      this._c = this._c + c | 0;
      this._d = this._d + d | 0;
    };
    MD5.prototype._digest = function() {
      this._block[this._blockOffset++] = 128;
      if (this._blockOffset > 56) {
        this._block.fill(0, this._blockOffset, 64);
        this._update();
        this._blockOffset = 0;
      }
      this._block.fill(0, this._blockOffset, 56);
      this._block.writeUInt32LE(this._length[0], 56);
      this._block.writeUInt32LE(this._length[1], 60);
      this._update();
      var buffer = Buffer.allocUnsafe(16);
      buffer.writeInt32LE(this._a, 0);
      buffer.writeInt32LE(this._b, 4);
      buffer.writeInt32LE(this._c, 8);
      buffer.writeInt32LE(this._d, 12);
      return buffer;
    };
    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }
    function fnF(a, b, c, d, m, k, s) {
      return rotl(a + (b & c | ~b & d) + m + k | 0, s) + b | 0;
    }
    function fnG(a, b, c, d, m, k, s) {
      return rotl(a + (b & d | c & ~d) + m + k | 0, s) + b | 0;
    }
    function fnH(a, b, c, d, m, k, s) {
      return rotl(a + (b ^ c ^ d) + m + k | 0, s) + b | 0;
    }
    function fnI(a, b, c, d, m, k, s) {
      return rotl(a + (c ^ (b | ~d)) + m + k | 0, s) + b | 0;
    }
    module.exports = MD5;
  }
});
var require_ripemd160 = __commonJS({
  "../../node_modules/ripemd160/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Buffer = require_buffer().Buffer;
    var inherits = require_inherits_browser();
    var HashBase = require_hash_base();
    var ARRAY16 = new Array(16);
    var zl = [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      7,
      4,
      13,
      1,
      10,
      6,
      15,
      3,
      12,
      0,
      9,
      5,
      2,
      14,
      11,
      8,
      3,
      10,
      14,
      4,
      9,
      15,
      8,
      1,
      2,
      7,
      0,
      6,
      13,
      11,
      5,
      12,
      1,
      9,
      11,
      10,
      0,
      8,
      12,
      4,
      13,
      3,
      7,
      15,
      14,
      5,
      6,
      2,
      4,
      0,
      5,
      9,
      7,
      12,
      2,
      10,
      14,
      1,
      3,
      8,
      11,
      6,
      15,
      13
    ];
    var zr = [
      5,
      14,
      7,
      0,
      9,
      2,
      11,
      4,
      13,
      6,
      15,
      8,
      1,
      10,
      3,
      12,
      6,
      11,
      3,
      7,
      0,
      13,
      5,
      10,
      14,
      15,
      8,
      12,
      4,
      9,
      1,
      2,
      15,
      5,
      1,
      3,
      7,
      14,
      6,
      9,
      11,
      8,
      12,
      2,
      10,
      0,
      4,
      13,
      8,
      6,
      4,
      1,
      3,
      11,
      15,
      0,
      5,
      12,
      2,
      13,
      9,
      7,
      10,
      14,
      12,
      15,
      10,
      4,
      1,
      5,
      8,
      7,
      6,
      2,
      13,
      14,
      0,
      3,
      9,
      11
    ];
    var sl = [
      11,
      14,
      15,
      12,
      5,
      8,
      7,
      9,
      11,
      13,
      14,
      15,
      6,
      7,
      9,
      8,
      7,
      6,
      8,
      13,
      11,
      9,
      7,
      15,
      7,
      12,
      15,
      9,
      11,
      7,
      13,
      12,
      11,
      13,
      6,
      7,
      14,
      9,
      13,
      15,
      14,
      8,
      13,
      6,
      5,
      12,
      7,
      5,
      11,
      12,
      14,
      15,
      14,
      15,
      9,
      8,
      9,
      14,
      5,
      6,
      8,
      6,
      5,
      12,
      9,
      15,
      5,
      11,
      6,
      8,
      13,
      12,
      5,
      12,
      13,
      14,
      11,
      8,
      5,
      6
    ];
    var sr = [
      8,
      9,
      9,
      11,
      13,
      15,
      15,
      5,
      7,
      7,
      8,
      11,
      14,
      14,
      12,
      6,
      9,
      13,
      15,
      7,
      12,
      8,
      9,
      11,
      7,
      7,
      12,
      7,
      6,
      15,
      13,
      11,
      9,
      7,
      15,
      11,
      8,
      6,
      6,
      14,
      12,
      13,
      5,
      14,
      13,
      13,
      7,
      5,
      15,
      5,
      8,
      11,
      14,
      14,
      6,
      14,
      6,
      9,
      12,
      9,
      12,
      5,
      15,
      8,
      8,
      5,
      12,
      9,
      12,
      5,
      14,
      6,
      8,
      13,
      6,
      5,
      15,
      13,
      11,
      11
    ];
    var hl = [0, 1518500249, 1859775393, 2400959708, 2840853838];
    var hr = [1352829926, 1548603684, 1836072691, 2053994217, 0];
    function RIPEMD160() {
      HashBase.call(this, 64);
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
    }
    inherits(RIPEMD160, HashBase);
    RIPEMD160.prototype._update = function() {
      var words = ARRAY16;
      for (var j = 0; j < 16; ++j)
        words[j] = this._block.readInt32LE(j * 4);
      var al = this._a | 0;
      var bl = this._b | 0;
      var cl = this._c | 0;
      var dl = this._d | 0;
      var el = this._e | 0;
      var ar = this._a | 0;
      var br = this._b | 0;
      var cr = this._c | 0;
      var dr = this._d | 0;
      var er = this._e | 0;
      for (var i = 0; i < 80; i += 1) {
        var tl;
        var tr;
        if (i < 16) {
          tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);
          tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);
        } else if (i < 32) {
          tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);
          tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);
        } else if (i < 48) {
          tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);
          tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);
        } else if (i < 64) {
          tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);
          tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);
        } else {
          tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);
          tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);
        }
        al = el;
        el = dl;
        dl = rotl(cl, 10);
        cl = bl;
        bl = tl;
        ar = er;
        er = dr;
        dr = rotl(cr, 10);
        cr = br;
        br = tr;
      }
      var t = this._b + cl + dr | 0;
      this._b = this._c + dl + er | 0;
      this._c = this._d + el + ar | 0;
      this._d = this._e + al + br | 0;
      this._e = this._a + bl + cr | 0;
      this._a = t;
    };
    RIPEMD160.prototype._digest = function() {
      this._block[this._blockOffset++] = 128;
      if (this._blockOffset > 56) {
        this._block.fill(0, this._blockOffset, 64);
        this._update();
        this._blockOffset = 0;
      }
      this._block.fill(0, this._blockOffset, 56);
      this._block.writeUInt32LE(this._length[0], 56);
      this._block.writeUInt32LE(this._length[1], 60);
      this._update();
      var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20);
      buffer.writeInt32LE(this._a, 0);
      buffer.writeInt32LE(this._b, 4);
      buffer.writeInt32LE(this._c, 8);
      buffer.writeInt32LE(this._d, 12);
      buffer.writeInt32LE(this._e, 16);
      return buffer;
    };
    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }
    function fn1(a, b, c, d, e, m, k, s) {
      return rotl(a + (b ^ c ^ d) + m + k | 0, s) + e | 0;
    }
    function fn2(a, b, c, d, e, m, k, s) {
      return rotl(a + (b & c | ~b & d) + m + k | 0, s) + e | 0;
    }
    function fn3(a, b, c, d, e, m, k, s) {
      return rotl(a + ((b | ~c) ^ d) + m + k | 0, s) + e | 0;
    }
    function fn4(a, b, c, d, e, m, k, s) {
      return rotl(a + (b & d | c & ~d) + m + k | 0, s) + e | 0;
    }
    function fn5(a, b, c, d, e, m, k, s) {
      return rotl(a + (b ^ (c | ~d)) + m + k | 0, s) + e | 0;
    }
    module.exports = RIPEMD160;
  }
});
var require_hash = __commonJS({
  "../../node_modules/sha.js/hash.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    function Hash(blockSize, finalSize) {
      this._block = Buffer.alloc(blockSize);
      this._finalSize = finalSize;
      this._blockSize = blockSize;
      this._len = 0;
    }
    Hash.prototype.update = function(data, enc) {
      if (typeof data === "string") {
        enc = enc || "utf8";
        data = Buffer.from(data, enc);
      }
      var block = this._block;
      var blockSize = this._blockSize;
      var length = data.length;
      var accum = this._len;
      for (var offset = 0; offset < length; ) {
        var assigned = accum % blockSize;
        var remainder = Math.min(length - offset, blockSize - assigned);
        for (var i = 0; i < remainder; i++) {
          block[assigned + i] = data[offset + i];
        }
        accum += remainder;
        offset += remainder;
        if (accum % blockSize === 0) {
          this._update(block);
        }
      }
      this._len += length;
      return this;
    };
    Hash.prototype.digest = function(enc) {
      var rem = this._len % this._blockSize;
      this._block[rem] = 128;
      this._block.fill(0, rem + 1);
      if (rem >= this._finalSize) {
        this._update(this._block);
        this._block.fill(0);
      }
      var bits = this._len * 8;
      if (bits <= 4294967295) {
        this._block.writeUInt32BE(bits, this._blockSize - 4);
      } else {
        var lowBits = (bits & 4294967295) >>> 0;
        var highBits = (bits - lowBits) / 4294967296;
        this._block.writeUInt32BE(highBits, this._blockSize - 8);
        this._block.writeUInt32BE(lowBits, this._blockSize - 4);
      }
      this._update(this._block);
      var hash = this._hash();
      return enc ? hash.toString(enc) : hash;
    };
    Hash.prototype._update = function() {
      throw new Error("_update must be implemented by subclass");
    };
    module.exports = Hash;
  }
});
var require_sha = __commonJS({
  "../../node_modules/sha.js/sha.js"(exports, module) {
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer = require_safe_buffer().Buffer;
    var K = [
      1518500249,
      1859775393,
      2400959708 | 0,
      3395469782 | 0
    ];
    var W = new Array(80);
    function Sha() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha, Hash);
    Sha.prototype.init = function() {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    function rotl5(num) {
      return num << 5 | num >>> 27;
    }
    function rotl30(num) {
      return num << 30 | num >>> 2;
    }
    function ft(s, b, c, d) {
      if (s === 0)
        return b & c | ~b & d;
      if (s === 2)
        return b & c | b & d | c & d;
      return b ^ c ^ d;
    }
    Sha.prototype._update = function(M) {
      var W2 = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e = this._e | 0;
      for (var i = 0; i < 16; ++i)
        W2[i] = M.readInt32BE(i * 4);
      for (; i < 80; ++i)
        W2[i] = W2[i - 3] ^ W2[i - 8] ^ W2[i - 14] ^ W2[i - 16];
      for (var j = 0; j < 80; ++j) {
        var s = ~~(j / 20);
        var t = rotl5(a) + ft(s, b, c, d) + e + W2[j] + K[s] | 0;
        e = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
    };
    Sha.prototype._hash = function() {
      var H = Buffer.allocUnsafe(20);
      H.writeInt32BE(this._a | 0, 0);
      H.writeInt32BE(this._b | 0, 4);
      H.writeInt32BE(this._c | 0, 8);
      H.writeInt32BE(this._d | 0, 12);
      H.writeInt32BE(this._e | 0, 16);
      return H;
    };
    module.exports = Sha;
  }
});
var require_sha1 = __commonJS({
  "../../node_modules/sha.js/sha1.js"(exports, module) {
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer = require_safe_buffer().Buffer;
    var K = [
      1518500249,
      1859775393,
      2400959708 | 0,
      3395469782 | 0
    ];
    var W = new Array(80);
    function Sha1() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha1, Hash);
    Sha1.prototype.init = function() {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    function rotl1(num) {
      return num << 1 | num >>> 31;
    }
    function rotl5(num) {
      return num << 5 | num >>> 27;
    }
    function rotl30(num) {
      return num << 30 | num >>> 2;
    }
    function ft(s, b, c, d) {
      if (s === 0)
        return b & c | ~b & d;
      if (s === 2)
        return b & c | b & d | c & d;
      return b ^ c ^ d;
    }
    Sha1.prototype._update = function(M) {
      var W2 = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e = this._e | 0;
      for (var i = 0; i < 16; ++i)
        W2[i] = M.readInt32BE(i * 4);
      for (; i < 80; ++i)
        W2[i] = rotl1(W2[i - 3] ^ W2[i - 8] ^ W2[i - 14] ^ W2[i - 16]);
      for (var j = 0; j < 80; ++j) {
        var s = ~~(j / 20);
        var t = rotl5(a) + ft(s, b, c, d) + e + W2[j] + K[s] | 0;
        e = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
    };
    Sha1.prototype._hash = function() {
      var H = Buffer.allocUnsafe(20);
      H.writeInt32BE(this._a | 0, 0);
      H.writeInt32BE(this._b | 0, 4);
      H.writeInt32BE(this._c | 0, 8);
      H.writeInt32BE(this._d | 0, 12);
      H.writeInt32BE(this._e | 0, 16);
      return H;
    };
    module.exports = Sha1;
  }
});
var require_sha256 = __commonJS({
  "../../node_modules/sha.js/sha256.js"(exports, module) {
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer = require_safe_buffer().Buffer;
    var K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ];
    var W = new Array(64);
    function Sha256() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha256, Hash);
    Sha256.prototype.init = function() {
      this._a = 1779033703;
      this._b = 3144134277;
      this._c = 1013904242;
      this._d = 2773480762;
      this._e = 1359893119;
      this._f = 2600822924;
      this._g = 528734635;
      this._h = 1541459225;
      return this;
    };
    function ch(x, y, z) {
      return z ^ x & (y ^ z);
    }
    function maj(x, y, z) {
      return x & y | z & (x | y);
    }
    function sigma0(x) {
      return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);
    }
    function sigma1(x) {
      return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);
    }
    function gamma0(x) {
      return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;
    }
    function gamma1(x) {
      return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;
    }
    Sha256.prototype._update = function(M) {
      var W2 = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e = this._e | 0;
      var f = this._f | 0;
      var g = this._g | 0;
      var h = this._h | 0;
      for (var i = 0; i < 16; ++i)
        W2[i] = M.readInt32BE(i * 4);
      for (; i < 64; ++i)
        W2[i] = gamma1(W2[i - 2]) + W2[i - 7] + gamma0(W2[i - 15]) + W2[i - 16] | 0;
      for (var j = 0; j < 64; ++j) {
        var T1 = h + sigma1(e) + ch(e, f, g) + K[j] + W2[j] | 0;
        var T2 = sigma0(a) + maj(a, b, c) | 0;
        h = g;
        g = f;
        f = e;
        e = d + T1 | 0;
        d = c;
        c = b;
        b = a;
        a = T1 + T2 | 0;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
      this._f = f + this._f | 0;
      this._g = g + this._g | 0;
      this._h = h + this._h | 0;
    };
    Sha256.prototype._hash = function() {
      var H = Buffer.allocUnsafe(32);
      H.writeInt32BE(this._a, 0);
      H.writeInt32BE(this._b, 4);
      H.writeInt32BE(this._c, 8);
      H.writeInt32BE(this._d, 12);
      H.writeInt32BE(this._e, 16);
      H.writeInt32BE(this._f, 20);
      H.writeInt32BE(this._g, 24);
      H.writeInt32BE(this._h, 28);
      return H;
    };
    module.exports = Sha256;
  }
});
var require_sha224 = __commonJS({
  "../../node_modules/sha.js/sha224.js"(exports, module) {
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Sha256 = require_sha256();
    var Hash = require_hash();
    var Buffer = require_safe_buffer().Buffer;
    var W = new Array(64);
    function Sha224() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha224, Sha256);
    Sha224.prototype.init = function() {
      this._a = 3238371032;
      this._b = 914150663;
      this._c = 812702999;
      this._d = 4144912697;
      this._e = 4290775857;
      this._f = 1750603025;
      this._g = 1694076839;
      this._h = 3204075428;
      return this;
    };
    Sha224.prototype._hash = function() {
      var H = Buffer.allocUnsafe(28);
      H.writeInt32BE(this._a, 0);
      H.writeInt32BE(this._b, 4);
      H.writeInt32BE(this._c, 8);
      H.writeInt32BE(this._d, 12);
      H.writeInt32BE(this._e, 16);
      H.writeInt32BE(this._f, 20);
      H.writeInt32BE(this._g, 24);
      return H;
    };
    module.exports = Sha224;
  }
});
var require_sha512 = __commonJS({
  "../../node_modules/sha.js/sha512.js"(exports, module) {
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer = require_safe_buffer().Buffer;
    var K = [
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ];
    var W = new Array(160);
    function Sha512() {
      this.init();
      this._w = W;
      Hash.call(this, 128, 112);
    }
    inherits(Sha512, Hash);
    Sha512.prototype.init = function() {
      this._ah = 1779033703;
      this._bh = 3144134277;
      this._ch = 1013904242;
      this._dh = 2773480762;
      this._eh = 1359893119;
      this._fh = 2600822924;
      this._gh = 528734635;
      this._hh = 1541459225;
      this._al = 4089235720;
      this._bl = 2227873595;
      this._cl = 4271175723;
      this._dl = 1595750129;
      this._el = 2917565137;
      this._fl = 725511199;
      this._gl = 4215389547;
      this._hl = 327033209;
      return this;
    };
    function Ch(x, y, z) {
      return z ^ x & (y ^ z);
    }
    function maj(x, y, z) {
      return x & y | z & (x | y);
    }
    function sigma0(x, xl) {
      return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25);
    }
    function sigma1(x, xl) {
      return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23);
    }
    function Gamma0(x, xl) {
      return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ x >>> 7;
    }
    function Gamma0l(x, xl) {
      return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25);
    }
    function Gamma1(x, xl) {
      return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ x >>> 6;
    }
    function Gamma1l(x, xl) {
      return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26);
    }
    function getCarry(a, b) {
      return a >>> 0 < b >>> 0 ? 1 : 0;
    }
    Sha512.prototype._update = function(M) {
      var W2 = this._w;
      var ah = this._ah | 0;
      var bh = this._bh | 0;
      var ch = this._ch | 0;
      var dh = this._dh | 0;
      var eh = this._eh | 0;
      var fh = this._fh | 0;
      var gh = this._gh | 0;
      var hh = this._hh | 0;
      var al = this._al | 0;
      var bl = this._bl | 0;
      var cl = this._cl | 0;
      var dl = this._dl | 0;
      var el = this._el | 0;
      var fl = this._fl | 0;
      var gl = this._gl | 0;
      var hl = this._hl | 0;
      for (var i = 0; i < 32; i += 2) {
        W2[i] = M.readInt32BE(i * 4);
        W2[i + 1] = M.readInt32BE(i * 4 + 4);
      }
      for (; i < 160; i += 2) {
        var xh = W2[i - 15 * 2];
        var xl = W2[i - 15 * 2 + 1];
        var gamma0 = Gamma0(xh, xl);
        var gamma0l = Gamma0l(xl, xh);
        xh = W2[i - 2 * 2];
        xl = W2[i - 2 * 2 + 1];
        var gamma1 = Gamma1(xh, xl);
        var gamma1l = Gamma1l(xl, xh);
        var Wi7h = W2[i - 7 * 2];
        var Wi7l = W2[i - 7 * 2 + 1];
        var Wi16h = W2[i - 16 * 2];
        var Wi16l = W2[i - 16 * 2 + 1];
        var Wil = gamma0l + Wi7l | 0;
        var Wih = gamma0 + Wi7h + getCarry(Wil, gamma0l) | 0;
        Wil = Wil + gamma1l | 0;
        Wih = Wih + gamma1 + getCarry(Wil, gamma1l) | 0;
        Wil = Wil + Wi16l | 0;
        Wih = Wih + Wi16h + getCarry(Wil, Wi16l) | 0;
        W2[i] = Wih;
        W2[i + 1] = Wil;
      }
      for (var j = 0; j < 160; j += 2) {
        Wih = W2[j];
        Wil = W2[j + 1];
        var majh = maj(ah, bh, ch);
        var majl = maj(al, bl, cl);
        var sigma0h = sigma0(ah, al);
        var sigma0l = sigma0(al, ah);
        var sigma1h = sigma1(eh, el);
        var sigma1l = sigma1(el, eh);
        var Kih = K[j];
        var Kil = K[j + 1];
        var chh = Ch(eh, fh, gh);
        var chl = Ch(el, fl, gl);
        var t1l = hl + sigma1l | 0;
        var t1h = hh + sigma1h + getCarry(t1l, hl) | 0;
        t1l = t1l + chl | 0;
        t1h = t1h + chh + getCarry(t1l, chl) | 0;
        t1l = t1l + Kil | 0;
        t1h = t1h + Kih + getCarry(t1l, Kil) | 0;
        t1l = t1l + Wil | 0;
        t1h = t1h + Wih + getCarry(t1l, Wil) | 0;
        var t2l = sigma0l + majl | 0;
        var t2h = sigma0h + majh + getCarry(t2l, sigma0l) | 0;
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        el = dl + t1l | 0;
        eh = dh + t1h + getCarry(el, dl) | 0;
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        al = t1l + t2l | 0;
        ah = t1h + t2h + getCarry(al, t1l) | 0;
      }
      this._al = this._al + al | 0;
      this._bl = this._bl + bl | 0;
      this._cl = this._cl + cl | 0;
      this._dl = this._dl + dl | 0;
      this._el = this._el + el | 0;
      this._fl = this._fl + fl | 0;
      this._gl = this._gl + gl | 0;
      this._hl = this._hl + hl | 0;
      this._ah = this._ah + ah + getCarry(this._al, al) | 0;
      this._bh = this._bh + bh + getCarry(this._bl, bl) | 0;
      this._ch = this._ch + ch + getCarry(this._cl, cl) | 0;
      this._dh = this._dh + dh + getCarry(this._dl, dl) | 0;
      this._eh = this._eh + eh + getCarry(this._el, el) | 0;
      this._fh = this._fh + fh + getCarry(this._fl, fl) | 0;
      this._gh = this._gh + gh + getCarry(this._gl, gl) | 0;
      this._hh = this._hh + hh + getCarry(this._hl, hl) | 0;
    };
    Sha512.prototype._hash = function() {
      var H = Buffer.allocUnsafe(64);
      function writeInt64BE(h, l, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l, offset + 4);
      }
      writeInt64BE(this._ah, this._al, 0);
      writeInt64BE(this._bh, this._bl, 8);
      writeInt64BE(this._ch, this._cl, 16);
      writeInt64BE(this._dh, this._dl, 24);
      writeInt64BE(this._eh, this._el, 32);
      writeInt64BE(this._fh, this._fl, 40);
      writeInt64BE(this._gh, this._gl, 48);
      writeInt64BE(this._hh, this._hl, 56);
      return H;
    };
    module.exports = Sha512;
  }
});
var require_sha384 = __commonJS({
  "../../node_modules/sha.js/sha384.js"(exports, module) {
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var SHA512 = require_sha512();
    var Hash = require_hash();
    var Buffer = require_safe_buffer().Buffer;
    var W = new Array(160);
    function Sha384() {
      this.init();
      this._w = W;
      Hash.call(this, 128, 112);
    }
    inherits(Sha384, SHA512);
    Sha384.prototype.init = function() {
      this._ah = 3418070365;
      this._bh = 1654270250;
      this._ch = 2438529370;
      this._dh = 355462360;
      this._eh = 1731405415;
      this._fh = 2394180231;
      this._gh = 3675008525;
      this._hh = 1203062813;
      this._al = 3238371032;
      this._bl = 914150663;
      this._cl = 812702999;
      this._dl = 4144912697;
      this._el = 4290775857;
      this._fl = 1750603025;
      this._gl = 1694076839;
      this._hl = 3204075428;
      return this;
    };
    Sha384.prototype._hash = function() {
      var H = Buffer.allocUnsafe(48);
      function writeInt64BE(h, l, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l, offset + 4);
      }
      writeInt64BE(this._ah, this._al, 0);
      writeInt64BE(this._bh, this._bl, 8);
      writeInt64BE(this._ch, this._cl, 16);
      writeInt64BE(this._dh, this._dl, 24);
      writeInt64BE(this._eh, this._el, 32);
      writeInt64BE(this._fh, this._fl, 40);
      return H;
    };
    module.exports = Sha384;
  }
});
var require_sha2 = __commonJS({
  "../../node_modules/sha.js/index.js"(exports, module) {
    init_process();
    init_buffer();
    var exports = module.exports = function SHA(algorithm) {
      algorithm = algorithm.toLowerCase();
      var Algorithm = exports[algorithm];
      if (!Algorithm)
        throw new Error(algorithm + " is not supported (we accept pull requests)");
      return new Algorithm();
    };
    exports.sha = require_sha();
    exports.sha1 = require_sha1();
    exports.sha224 = require_sha224();
    exports.sha256 = require_sha256();
    exports.sha384 = require_sha384();
    exports.sha512 = require_sha512();
  }
});
var require_cipher_base = __commonJS({
  "../../node_modules/cipher-base/index.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var Transform = require_stream_browserify().Transform;
    var StringDecoder = require_string_decoder2().StringDecoder;
    var inherits = require_inherits_browser();
    function CipherBase(hashMode) {
      Transform.call(this);
      this.hashMode = typeof hashMode === "string";
      if (this.hashMode) {
        this[hashMode] = this._finalOrDigest;
      } else {
        this.final = this._finalOrDigest;
      }
      if (this._final) {
        this.__final = this._final;
        this._final = null;
      }
      this._decoder = null;
      this._encoding = null;
    }
    inherits(CipherBase, Transform);
    CipherBase.prototype.update = function(data, inputEnc, outputEnc) {
      if (typeof data === "string") {
        data = Buffer.from(data, inputEnc);
      }
      var outData = this._update(data);
      if (this.hashMode)
        return this;
      if (outputEnc) {
        outData = this._toString(outData, outputEnc);
      }
      return outData;
    };
    CipherBase.prototype.setAutoPadding = function() {
    };
    CipherBase.prototype.getAuthTag = function() {
      throw new Error("trying to get auth tag in unsupported state");
    };
    CipherBase.prototype.setAuthTag = function() {
      throw new Error("trying to set auth tag in unsupported state");
    };
    CipherBase.prototype.setAAD = function() {
      throw new Error("trying to set aad in unsupported state");
    };
    CipherBase.prototype._transform = function(data, _, next) {
      var err;
      try {
        if (this.hashMode) {
          this._update(data);
        } else {
          this.push(this._update(data));
        }
      } catch (e) {
        err = e;
      } finally {
        next(err);
      }
    };
    CipherBase.prototype._flush = function(done) {
      var err;
      try {
        this.push(this.__final());
      } catch (e) {
        err = e;
      }
      done(err);
    };
    CipherBase.prototype._finalOrDigest = function(outputEnc) {
      var outData = this.__final() || Buffer.alloc(0);
      if (outputEnc) {
        outData = this._toString(outData, outputEnc, true);
      }
      return outData;
    };
    CipherBase.prototype._toString = function(value, enc, fin) {
      if (!this._decoder) {
        this._decoder = new StringDecoder(enc);
        this._encoding = enc;
      }
      if (this._encoding !== enc)
        throw new Error("can't switch encodings");
      var out = this._decoder.write(value);
      if (fin) {
        out += this._decoder.end();
      }
      return out;
    };
    module.exports = CipherBase;
  }
});
var require_browser4 = __commonJS({
  "../../node_modules/create-hash/browser.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var MD5 = require_md5();
    var RIPEMD160 = require_ripemd160();
    var sha = require_sha2();
    var Base = require_cipher_base();
    function Hash(hash) {
      Base.call(this, "digest");
      this._hash = hash;
    }
    inherits(Hash, Base);
    Hash.prototype._update = function(data) {
      this._hash.update(data);
    };
    Hash.prototype._final = function() {
      return this._hash.digest();
    };
    module.exports = function createHash(alg) {
      alg = alg.toLowerCase();
      if (alg === "md5")
        return new MD5();
      if (alg === "rmd160" || alg === "ripemd160")
        return new RIPEMD160();
      return new Hash(sha(alg));
    };
  }
});
var require_legacy = __commonJS({
  "../../node_modules/create-hmac/legacy.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Buffer = require_safe_buffer().Buffer;
    var Base = require_cipher_base();
    var ZEROS = Buffer.alloc(128);
    var blocksize = 64;
    function Hmac(alg, key) {
      Base.call(this, "digest");
      if (typeof key === "string") {
        key = Buffer.from(key);
      }
      this._alg = alg;
      this._key = key;
      if (key.length > blocksize) {
        key = alg(key);
      } else if (key.length < blocksize) {
        key = Buffer.concat([key, ZEROS], blocksize);
      }
      var ipad = this._ipad = Buffer.allocUnsafe(blocksize);
      var opad = this._opad = Buffer.allocUnsafe(blocksize);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = key[i] ^ 54;
        opad[i] = key[i] ^ 92;
      }
      this._hash = [ipad];
    }
    inherits(Hmac, Base);
    Hmac.prototype._update = function(data) {
      this._hash.push(data);
    };
    Hmac.prototype._final = function() {
      var h = this._alg(Buffer.concat(this._hash));
      return this._alg(Buffer.concat([this._opad, h]));
    };
    module.exports = Hmac;
  }
});
var require_md52 = __commonJS({
  "../../node_modules/create-hash/md5.js"(exports, module) {
    init_process();
    init_buffer();
    var MD5 = require_md5();
    module.exports = function(buffer) {
      return new MD5().update(buffer).digest();
    };
  }
});
var require_browser5 = __commonJS({
  "../../node_modules/create-hmac/browser.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Legacy = require_legacy();
    var Base = require_cipher_base();
    var Buffer = require_safe_buffer().Buffer;
    var md5 = require_md52();
    var RIPEMD160 = require_ripemd160();
    var sha = require_sha2();
    var ZEROS = Buffer.alloc(128);
    function Hmac(alg, key) {
      Base.call(this, "digest");
      if (typeof key === "string") {
        key = Buffer.from(key);
      }
      var blocksize = alg === "sha512" || alg === "sha384" ? 128 : 64;
      this._alg = alg;
      this._key = key;
      if (key.length > blocksize) {
        var hash = alg === "rmd160" ? new RIPEMD160() : sha(alg);
        key = hash.update(key).digest();
      } else if (key.length < blocksize) {
        key = Buffer.concat([key, ZEROS], blocksize);
      }
      var ipad = this._ipad = Buffer.allocUnsafe(blocksize);
      var opad = this._opad = Buffer.allocUnsafe(blocksize);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = key[i] ^ 54;
        opad[i] = key[i] ^ 92;
      }
      this._hash = alg === "rmd160" ? new RIPEMD160() : sha(alg);
      this._hash.update(ipad);
    }
    inherits(Hmac, Base);
    Hmac.prototype._update = function(data) {
      this._hash.update(data);
    };
    Hmac.prototype._final = function() {
      var h = this._hash.digest();
      var hash = this._alg === "rmd160" ? new RIPEMD160() : sha(this._alg);
      return hash.update(this._opad).update(h).digest();
    };
    module.exports = function createHmac(alg, key) {
      alg = alg.toLowerCase();
      if (alg === "rmd160" || alg === "ripemd160") {
        return new Hmac("rmd160", key);
      }
      if (alg === "md5") {
        return new Legacy(md5, key);
      }
      return new Hmac(alg, key);
    };
  }
});
var require_algorithms = __commonJS({
  "../../node_modules/browserify-sign/browser/algorithms.json"(exports, module) {
    module.exports = {
      sha224WithRSAEncryption: {
        sign: "rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      "RSA-SHA224": {
        sign: "ecdsa/rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      sha256WithRSAEncryption: {
        sign: "rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      "RSA-SHA256": {
        sign: "ecdsa/rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      sha384WithRSAEncryption: {
        sign: "rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      "RSA-SHA384": {
        sign: "ecdsa/rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      sha512WithRSAEncryption: {
        sign: "rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA512": {
        sign: "ecdsa/rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA1": {
        sign: "rsa",
        hash: "sha1",
        id: "3021300906052b0e03021a05000414"
      },
      "ecdsa-with-SHA1": {
        sign: "ecdsa",
        hash: "sha1",
        id: ""
      },
      sha256: {
        sign: "ecdsa",
        hash: "sha256",
        id: ""
      },
      sha224: {
        sign: "ecdsa",
        hash: "sha224",
        id: ""
      },
      sha384: {
        sign: "ecdsa",
        hash: "sha384",
        id: ""
      },
      sha512: {
        sign: "ecdsa",
        hash: "sha512",
        id: ""
      },
      "DSA-SHA": {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      "DSA-SHA1": {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      DSA: {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      "DSA-WITH-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
      },
      "DSA-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
      },
      "DSA-WITH-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
      },
      "DSA-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
      },
      "DSA-WITH-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
      },
      "DSA-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
      },
      "DSA-WITH-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
      },
      "DSA-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
      },
      "DSA-RIPEMD160": {
        sign: "dsa",
        hash: "rmd160",
        id: ""
      },
      ripemd160WithRSA: {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      "RSA-RIPEMD160": {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      md5WithRSAEncryption: {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      },
      "RSA-MD5": {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      }
    };
  }
});
var require_algos = __commonJS({
  "../../node_modules/browserify-sign/algos.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = require_algorithms();
  }
});
var require_precondition = __commonJS({
  "../../node_modules/pbkdf2/lib/precondition.js"(exports, module) {
    init_process();
    init_buffer();
    var MAX_ALLOC = Math.pow(2, 30) - 1;
    module.exports = function(iterations, keylen) {
      if (typeof iterations !== "number") {
        throw new TypeError("Iterations not a number");
      }
      if (iterations < 0) {
        throw new TypeError("Bad iterations");
      }
      if (typeof keylen !== "number") {
        throw new TypeError("Key length not a number");
      }
      if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {
        throw new TypeError("Bad key length");
      }
    };
  }
});
var require_default_encoding = __commonJS({
  "../../node_modules/pbkdf2/lib/default-encoding.js"(exports, module) {
    init_process();
    init_buffer();
    var defaultEncoding;
    if (globalThis.process && globalThis.process.browser) {
      defaultEncoding = "utf-8";
    } else if (globalThis.process && globalThis.process.version) {
      pVersionMajor = parseInt(process.version.split(".")[0].slice(1), 10);
      defaultEncoding = pVersionMajor >= 6 ? "utf-8" : "binary";
    } else {
      defaultEncoding = "utf-8";
    }
    var pVersionMajor;
    module.exports = defaultEncoding;
  }
});
var require_to_buffer = __commonJS({
  "../../node_modules/pbkdf2/lib/to-buffer.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    module.exports = function(thing, encoding, name) {
      if (Buffer.isBuffer(thing)) {
        return thing;
      } else if (typeof thing === "string") {
        return Buffer.from(thing, encoding);
      } else if (ArrayBuffer.isView(thing)) {
        return Buffer.from(thing.buffer);
      } else {
        throw new TypeError(name + " must be a string, a Buffer, a typed array or a DataView");
      }
    };
  }
});
var require_sync_browser = __commonJS({
  "../../node_modules/pbkdf2/lib/sync-browser.js"(exports, module) {
    init_process();
    init_buffer();
    var md5 = require_md52();
    var RIPEMD160 = require_ripemd160();
    var sha = require_sha2();
    var Buffer = require_safe_buffer().Buffer;
    var checkParameters = require_precondition();
    var defaultEncoding = require_default_encoding();
    var toBuffer = require_to_buffer();
    var ZEROS = Buffer.alloc(128);
    var sizes = {
      md5: 16,
      sha1: 20,
      sha224: 28,
      sha256: 32,
      sha384: 48,
      sha512: 64,
      rmd160: 20,
      ripemd160: 20
    };
    function Hmac(alg, key, saltLen) {
      var hash = getDigest(alg);
      var blocksize = alg === "sha512" || alg === "sha384" ? 128 : 64;
      if (key.length > blocksize) {
        key = hash(key);
      } else if (key.length < blocksize) {
        key = Buffer.concat([key, ZEROS], blocksize);
      }
      var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);
      var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = key[i] ^ 54;
        opad[i] = key[i] ^ 92;
      }
      var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);
      ipad.copy(ipad1, 0, 0, blocksize);
      this.ipad1 = ipad1;
      this.ipad2 = ipad;
      this.opad = opad;
      this.alg = alg;
      this.blocksize = blocksize;
      this.hash = hash;
      this.size = sizes[alg];
    }
    Hmac.prototype.run = function(data, ipad) {
      data.copy(ipad, this.blocksize);
      var h = this.hash(ipad);
      h.copy(this.opad, this.blocksize);
      return this.hash(this.opad);
    };
    function getDigest(alg) {
      function shaFunc(data) {
        return sha(alg).update(data).digest();
      }
      function rmd160Func(data) {
        return new RIPEMD160().update(data).digest();
      }
      if (alg === "rmd160" || alg === "ripemd160")
        return rmd160Func;
      if (alg === "md5")
        return md5;
      return shaFunc;
    }
    function pbkdf2(password, salt, iterations, keylen, digest) {
      checkParameters(iterations, keylen);
      password = toBuffer(password, defaultEncoding, "Password");
      salt = toBuffer(salt, defaultEncoding, "Salt");
      digest = digest || "sha1";
      var hmac = new Hmac(digest, password, salt.length);
      var DK = Buffer.allocUnsafe(keylen);
      var block1 = Buffer.allocUnsafe(salt.length + 4);
      salt.copy(block1, 0, 0, salt.length);
      var destPos = 0;
      var hLen = sizes[digest];
      var l = Math.ceil(keylen / hLen);
      for (var i = 1; i <= l; i++) {
        block1.writeUInt32BE(i, salt.length);
        var T = hmac.run(block1, hmac.ipad1);
        var U = T;
        for (var j = 1; j < iterations; j++) {
          U = hmac.run(U, hmac.ipad2);
          for (var k = 0; k < hLen; k++)
            T[k] ^= U[k];
        }
        T.copy(DK, destPos);
        destPos += hLen;
      }
      return DK;
    }
    module.exports = pbkdf2;
  }
});
var require_async3 = __commonJS({
  "../../node_modules/pbkdf2/lib/async.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var checkParameters = require_precondition();
    var defaultEncoding = require_default_encoding();
    var sync = require_sync_browser();
    var toBuffer = require_to_buffer();
    var ZERO_BUF;
    var subtle = globalThis.crypto && globalThis.crypto.subtle;
    var toBrowser = {
      sha: "SHA-1",
      "sha-1": "SHA-1",
      sha1: "SHA-1",
      sha256: "SHA-256",
      "sha-256": "SHA-256",
      sha384: "SHA-384",
      "sha-384": "SHA-384",
      "sha-512": "SHA-512",
      sha512: "SHA-512"
    };
    var checks = [];
    function checkNative(algo) {
      if (globalThis.process && !globalThis.process.browser) {
        return Promise.resolve(false);
      }
      if (!subtle || !subtle.importKey || !subtle.deriveBits) {
        return Promise.resolve(false);
      }
      if (checks[algo] !== void 0) {
        return checks[algo];
      }
      ZERO_BUF = ZERO_BUF || Buffer.alloc(8);
      var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function() {
        return true;
      }).catch(function() {
        return false;
      });
      checks[algo] = prom;
      return prom;
    }
    var nextTick;
    function getNextTick() {
      if (nextTick) {
        return nextTick;
      }
      if (globalThis.process && globalThis.process.nextTick) {
        nextTick = globalThis.process.nextTick;
      } else if (globalThis.queueMicrotask) {
        nextTick = globalThis.queueMicrotask;
      } else if (globalThis.setImmediate) {
        nextTick = globalThis.setImmediate;
      } else {
        nextTick = globalThis.setTimeout;
      }
      return nextTick;
    }
    function browserPbkdf2(password, salt, iterations, length, algo) {
      return subtle.importKey(
        "raw",
        password,
        { name: "PBKDF2" },
        false,
        ["deriveBits"]
      ).then(function(key) {
        return subtle.deriveBits({
          name: "PBKDF2",
          salt,
          iterations,
          hash: {
            name: algo
          }
        }, key, length << 3);
      }).then(function(res) {
        return Buffer.from(res);
      });
    }
    function resolvePromise(promise, callback) {
      promise.then(function(out) {
        getNextTick()(function() {
          callback(null, out);
        });
      }, function(e) {
        getNextTick()(function() {
          callback(e);
        });
      });
    }
    module.exports = function(password, salt, iterations, keylen, digest, callback) {
      if (typeof digest === "function") {
        callback = digest;
        digest = void 0;
      }
      digest = digest || "sha1";
      var algo = toBrowser[digest.toLowerCase()];
      if (!algo || typeof globalThis.Promise !== "function") {
        getNextTick()(function() {
          var out;
          try {
            out = sync(password, salt, iterations, keylen, digest);
          } catch (e) {
            return callback(e);
          }
          callback(null, out);
        });
        return;
      }
      checkParameters(iterations, keylen);
      password = toBuffer(password, defaultEncoding, "Password");
      salt = toBuffer(salt, defaultEncoding, "Salt");
      if (typeof callback !== "function")
        throw new Error("No callback provided to pbkdf2");
      resolvePromise(checkNative(algo).then(function(resp) {
        if (resp)
          return browserPbkdf2(password, salt, iterations, keylen, algo);
        return sync(password, salt, iterations, keylen, digest);
      }), callback);
    };
  }
});
var require_browser6 = __commonJS({
  "../../node_modules/pbkdf2/browser.js"(exports) {
    init_process();
    init_buffer();
    exports.pbkdf2 = require_async3();
    exports.pbkdf2Sync = require_sync_browser();
  }
});
var require_utils2 = __commonJS({
  "../../node_modules/des.js/lib/des/utils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.readUInt32BE = function readUInt32BE(bytes, off) {
      var res = bytes[0 + off] << 24 | bytes[1 + off] << 16 | bytes[2 + off] << 8 | bytes[3 + off];
      return res >>> 0;
    };
    exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
      bytes[0 + off] = value >>> 24;
      bytes[1 + off] = value >>> 16 & 255;
      bytes[2 + off] = value >>> 8 & 255;
      bytes[3 + off] = value & 255;
    };
    exports.ip = function ip(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 6; i >= 0; i -= 2) {
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inR >>> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inL >>> j + i & 1;
        }
      }
      for (var i = 6; i >= 0; i -= 2) {
        for (var j = 1; j <= 25; j += 8) {
          outR <<= 1;
          outR |= inR >>> j + i & 1;
        }
        for (var j = 1; j <= 25; j += 8) {
          outR <<= 1;
          outR |= inL >>> j + i & 1;
        }
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.rip = function rip(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 0; i < 4; i++) {
        for (var j = 24; j >= 0; j -= 8) {
          outL <<= 1;
          outL |= inR >>> j + i & 1;
          outL <<= 1;
          outL |= inL >>> j + i & 1;
        }
      }
      for (var i = 4; i < 8; i++) {
        for (var j = 24; j >= 0; j -= 8) {
          outR <<= 1;
          outR |= inR >>> j + i & 1;
          outR <<= 1;
          outR |= inL >>> j + i & 1;
        }
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.pc1 = function pc1(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 7; i >= 5; i--) {
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inR >> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inL >> j + i & 1;
        }
      }
      for (var j = 0; j <= 24; j += 8) {
        outL <<= 1;
        outL |= inR >> j + i & 1;
      }
      for (var i = 1; i <= 3; i++) {
        for (var j = 0; j <= 24; j += 8) {
          outR <<= 1;
          outR |= inR >> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outR <<= 1;
          outR |= inL >> j + i & 1;
        }
      }
      for (var j = 0; j <= 24; j += 8) {
        outR <<= 1;
        outR |= inL >> j + i & 1;
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.r28shl = function r28shl(num, shift) {
      return num << shift & 268435455 | num >>> 28 - shift;
    };
    var pc2table = [
      14,
      11,
      17,
      4,
      27,
      23,
      25,
      0,
      13,
      22,
      7,
      18,
      5,
      9,
      16,
      24,
      2,
      20,
      12,
      21,
      1,
      8,
      15,
      26,
      15,
      4,
      25,
      19,
      9,
      1,
      26,
      16,
      5,
      11,
      23,
      8,
      12,
      7,
      17,
      0,
      22,
      3,
      10,
      14,
      6,
      20,
      27,
      24
    ];
    exports.pc2 = function pc2(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      var len = pc2table.length >>> 1;
      for (var i = 0; i < len; i++) {
        outL <<= 1;
        outL |= inL >>> pc2table[i] & 1;
      }
      for (var i = len; i < pc2table.length; i++) {
        outR <<= 1;
        outR |= inR >>> pc2table[i] & 1;
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.expand = function expand(r, out, off) {
      var outL = 0;
      var outR = 0;
      outL = (r & 1) << 5 | r >>> 27;
      for (var i = 23; i >= 15; i -= 4) {
        outL <<= 6;
        outL |= r >>> i & 63;
      }
      for (var i = 11; i >= 3; i -= 4) {
        outR |= r >>> i & 63;
        outR <<= 6;
      }
      outR |= (r & 31) << 1 | r >>> 31;
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    var sTable = [
      14,
      0,
      4,
      15,
      13,
      7,
      1,
      4,
      2,
      14,
      15,
      2,
      11,
      13,
      8,
      1,
      3,
      10,
      10,
      6,
      6,
      12,
      12,
      11,
      5,
      9,
      9,
      5,
      0,
      3,
      7,
      8,
      4,
      15,
      1,
      12,
      14,
      8,
      8,
      2,
      13,
      4,
      6,
      9,
      2,
      1,
      11,
      7,
      15,
      5,
      12,
      11,
      9,
      3,
      7,
      14,
      3,
      10,
      10,
      0,
      5,
      6,
      0,
      13,
      15,
      3,
      1,
      13,
      8,
      4,
      14,
      7,
      6,
      15,
      11,
      2,
      3,
      8,
      4,
      14,
      9,
      12,
      7,
      0,
      2,
      1,
      13,
      10,
      12,
      6,
      0,
      9,
      5,
      11,
      10,
      5,
      0,
      13,
      14,
      8,
      7,
      10,
      11,
      1,
      10,
      3,
      4,
      15,
      13,
      4,
      1,
      2,
      5,
      11,
      8,
      6,
      12,
      7,
      6,
      12,
      9,
      0,
      3,
      5,
      2,
      14,
      15,
      9,
      10,
      13,
      0,
      7,
      9,
      0,
      14,
      9,
      6,
      3,
      3,
      4,
      15,
      6,
      5,
      10,
      1,
      2,
      13,
      8,
      12,
      5,
      7,
      14,
      11,
      12,
      4,
      11,
      2,
      15,
      8,
      1,
      13,
      1,
      6,
      10,
      4,
      13,
      9,
      0,
      8,
      6,
      15,
      9,
      3,
      8,
      0,
      7,
      11,
      4,
      1,
      15,
      2,
      14,
      12,
      3,
      5,
      11,
      10,
      5,
      14,
      2,
      7,
      12,
      7,
      13,
      13,
      8,
      14,
      11,
      3,
      5,
      0,
      6,
      6,
      15,
      9,
      0,
      10,
      3,
      1,
      4,
      2,
      7,
      8,
      2,
      5,
      12,
      11,
      1,
      12,
      10,
      4,
      14,
      15,
      9,
      10,
      3,
      6,
      15,
      9,
      0,
      0,
      6,
      12,
      10,
      11,
      1,
      7,
      13,
      13,
      8,
      15,
      9,
      1,
      4,
      3,
      5,
      14,
      11,
      5,
      12,
      2,
      7,
      8,
      2,
      4,
      14,
      2,
      14,
      12,
      11,
      4,
      2,
      1,
      12,
      7,
      4,
      10,
      7,
      11,
      13,
      6,
      1,
      8,
      5,
      5,
      0,
      3,
      15,
      15,
      10,
      13,
      3,
      0,
      9,
      14,
      8,
      9,
      6,
      4,
      11,
      2,
      8,
      1,
      12,
      11,
      7,
      10,
      1,
      13,
      14,
      7,
      2,
      8,
      13,
      15,
      6,
      9,
      15,
      12,
      0,
      5,
      9,
      6,
      10,
      3,
      4,
      0,
      5,
      14,
      3,
      12,
      10,
      1,
      15,
      10,
      4,
      15,
      2,
      9,
      7,
      2,
      12,
      6,
      9,
      8,
      5,
      0,
      6,
      13,
      1,
      3,
      13,
      4,
      14,
      14,
      0,
      7,
      11,
      5,
      3,
      11,
      8,
      9,
      4,
      14,
      3,
      15,
      2,
      5,
      12,
      2,
      9,
      8,
      5,
      12,
      15,
      3,
      10,
      7,
      11,
      0,
      14,
      4,
      1,
      10,
      7,
      1,
      6,
      13,
      0,
      11,
      8,
      6,
      13,
      4,
      13,
      11,
      0,
      2,
      11,
      14,
      7,
      15,
      4,
      0,
      9,
      8,
      1,
      13,
      10,
      3,
      14,
      12,
      3,
      9,
      5,
      7,
      12,
      5,
      2,
      10,
      15,
      6,
      8,
      1,
      6,
      1,
      6,
      4,
      11,
      11,
      13,
      13,
      8,
      12,
      1,
      3,
      4,
      7,
      10,
      14,
      7,
      10,
      9,
      15,
      5,
      6,
      0,
      8,
      15,
      0,
      14,
      5,
      2,
      9,
      3,
      2,
      12,
      13,
      1,
      2,
      15,
      8,
      13,
      4,
      8,
      6,
      10,
      15,
      3,
      11,
      7,
      1,
      4,
      10,
      12,
      9,
      5,
      3,
      6,
      14,
      11,
      5,
      0,
      0,
      14,
      12,
      9,
      7,
      2,
      7,
      2,
      11,
      1,
      4,
      14,
      1,
      7,
      9,
      4,
      12,
      10,
      14,
      8,
      2,
      13,
      0,
      15,
      6,
      12,
      10,
      9,
      13,
      0,
      15,
      3,
      3,
      5,
      5,
      6,
      8,
      11
    ];
    exports.substitute = function substitute(inL, inR) {
      var out = 0;
      for (var i = 0; i < 4; i++) {
        var b = inL >>> 18 - i * 6 & 63;
        var sb = sTable[i * 64 + b];
        out <<= 4;
        out |= sb;
      }
      for (var i = 0; i < 4; i++) {
        var b = inR >>> 18 - i * 6 & 63;
        var sb = sTable[4 * 64 + i * 64 + b];
        out <<= 4;
        out |= sb;
      }
      return out >>> 0;
    };
    var permuteTable = [
      16,
      25,
      12,
      11,
      3,
      20,
      4,
      15,
      31,
      17,
      9,
      6,
      27,
      14,
      1,
      22,
      30,
      24,
      8,
      18,
      0,
      5,
      29,
      23,
      13,
      19,
      2,
      26,
      10,
      21,
      28,
      7
    ];
    exports.permute = function permute(num) {
      var out = 0;
      for (var i = 0; i < permuteTable.length; i++) {
        out <<= 1;
        out |= num >>> permuteTable[i] & 1;
      }
      return out >>> 0;
    };
    exports.padSplit = function padSplit(num, size, group) {
      var str = num.toString(2);
      while (str.length < size)
        str = "0" + str;
      var out = [];
      for (var i = 0; i < size; i += group)
        out.push(str.slice(i, i + group));
      return out.join(" ");
    };
  }
});
var require_minimalistic_assert = __commonJS({
  "../../node_modules/minimalistic-assert/index.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = assert;
    function assert(val, msg) {
      if (!val)
        throw new Error(msg || "Assertion failed");
    }
    assert.equal = function assertEqual(l, r, msg) {
      if (l != r)
        throw new Error(msg || "Assertion failed: " + l + " != " + r);
    };
  }
});
var require_cipher = __commonJS({
  "../../node_modules/des.js/lib/des/cipher.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var assert = require_minimalistic_assert();
    function Cipher(options) {
      this.options = options;
      this.type = this.options.type;
      this.blockSize = 8;
      this._init();
      this.buffer = new Array(this.blockSize);
      this.bufferOff = 0;
    }
    module.exports = Cipher;
    Cipher.prototype._init = function _init() {
    };
    Cipher.prototype.update = function update(data) {
      if (data.length === 0)
        return [];
      if (this.type === "decrypt")
        return this._updateDecrypt(data);
      else
        return this._updateEncrypt(data);
    };
    Cipher.prototype._buffer = function _buffer(data, off) {
      var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
      for (var i = 0; i < min; i++)
        this.buffer[this.bufferOff + i] = data[off + i];
      this.bufferOff += min;
      return min;
    };
    Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
      this._update(this.buffer, 0, out, off);
      this.bufferOff = 0;
      return this.blockSize;
    };
    Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
      var inputOff = 0;
      var outputOff = 0;
      var count = (this.bufferOff + data.length) / this.blockSize | 0;
      var out = new Array(count * this.blockSize);
      if (this.bufferOff !== 0) {
        inputOff += this._buffer(data, inputOff);
        if (this.bufferOff === this.buffer.length)
          outputOff += this._flushBuffer(out, outputOff);
      }
      var max = data.length - (data.length - inputOff) % this.blockSize;
      for (; inputOff < max; inputOff += this.blockSize) {
        this._update(data, inputOff, out, outputOff);
        outputOff += this.blockSize;
      }
      for (; inputOff < data.length; inputOff++, this.bufferOff++)
        this.buffer[this.bufferOff] = data[inputOff];
      return out;
    };
    Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
      var inputOff = 0;
      var outputOff = 0;
      var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
      var out = new Array(count * this.blockSize);
      for (; count > 0; count--) {
        inputOff += this._buffer(data, inputOff);
        outputOff += this._flushBuffer(out, outputOff);
      }
      inputOff += this._buffer(data, inputOff);
      return out;
    };
    Cipher.prototype.final = function final(buffer) {
      var first;
      if (buffer)
        first = this.update(buffer);
      var last;
      if (this.type === "encrypt")
        last = this._finalEncrypt();
      else
        last = this._finalDecrypt();
      if (first)
        return first.concat(last);
      else
        return last;
    };
    Cipher.prototype._pad = function _pad(buffer, off) {
      if (off === 0)
        return false;
      while (off < buffer.length)
        buffer[off++] = 0;
      return true;
    };
    Cipher.prototype._finalEncrypt = function _finalEncrypt() {
      if (!this._pad(this.buffer, this.bufferOff))
        return [];
      var out = new Array(this.blockSize);
      this._update(this.buffer, 0, out, 0);
      return out;
    };
    Cipher.prototype._unpad = function _unpad(buffer) {
      return buffer;
    };
    Cipher.prototype._finalDecrypt = function _finalDecrypt() {
      assert.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
      var out = new Array(this.blockSize);
      this._flushBuffer(out, 0);
      return this._unpad(out);
    };
  }
});
var require_des = __commonJS({
  "../../node_modules/des.js/lib/des/des.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var assert = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    var utils = require_utils2();
    var Cipher = require_cipher();
    function DESState() {
      this.tmp = new Array(2);
      this.keys = null;
    }
    function DES(options) {
      Cipher.call(this, options);
      var state = new DESState();
      this._desState = state;
      this.deriveKeys(state, options.key);
    }
    inherits(DES, Cipher);
    module.exports = DES;
    DES.create = function create(options) {
      return new DES(options);
    };
    var shiftTable = [
      1,
      1,
      2,
      2,
      2,
      2,
      2,
      2,
      1,
      2,
      2,
      2,
      2,
      2,
      2,
      1
    ];
    DES.prototype.deriveKeys = function deriveKeys(state, key) {
      state.keys = new Array(16 * 2);
      assert.equal(key.length, this.blockSize, "Invalid key length");
      var kL = utils.readUInt32BE(key, 0);
      var kR = utils.readUInt32BE(key, 4);
      utils.pc1(kL, kR, state.tmp, 0);
      kL = state.tmp[0];
      kR = state.tmp[1];
      for (var i = 0; i < state.keys.length; i += 2) {
        var shift = shiftTable[i >>> 1];
        kL = utils.r28shl(kL, shift);
        kR = utils.r28shl(kR, shift);
        utils.pc2(kL, kR, state.keys, i);
      }
    };
    DES.prototype._update = function _update(inp, inOff, out, outOff) {
      var state = this._desState;
      var l = utils.readUInt32BE(inp, inOff);
      var r = utils.readUInt32BE(inp, inOff + 4);
      utils.ip(l, r, state.tmp, 0);
      l = state.tmp[0];
      r = state.tmp[1];
      if (this.type === "encrypt")
        this._encrypt(state, l, r, state.tmp, 0);
      else
        this._decrypt(state, l, r, state.tmp, 0);
      l = state.tmp[0];
      r = state.tmp[1];
      utils.writeUInt32BE(out, l, outOff);
      utils.writeUInt32BE(out, r, outOff + 4);
    };
    DES.prototype._pad = function _pad(buffer, off) {
      var value = buffer.length - off;
      for (var i = off; i < buffer.length; i++)
        buffer[i] = value;
      return true;
    };
    DES.prototype._unpad = function _unpad(buffer) {
      var pad = buffer[buffer.length - 1];
      for (var i = buffer.length - pad; i < buffer.length; i++)
        assert.equal(buffer[i], pad);
      return buffer.slice(0, buffer.length - pad);
    };
    DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
      var l = lStart;
      var r = rStart;
      for (var i = 0; i < state.keys.length; i += 2) {
        var keyL = state.keys[i];
        var keyR = state.keys[i + 1];
        utils.expand(r, state.tmp, 0);
        keyL ^= state.tmp[0];
        keyR ^= state.tmp[1];
        var s = utils.substitute(keyL, keyR);
        var f = utils.permute(s);
        var t = r;
        r = (l ^ f) >>> 0;
        l = t;
      }
      utils.rip(r, l, out, off);
    };
    DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
      var l = rStart;
      var r = lStart;
      for (var i = state.keys.length - 2; i >= 0; i -= 2) {
        var keyL = state.keys[i];
        var keyR = state.keys[i + 1];
        utils.expand(l, state.tmp, 0);
        keyL ^= state.tmp[0];
        keyR ^= state.tmp[1];
        var s = utils.substitute(keyL, keyR);
        var f = utils.permute(s);
        var t = l;
        l = (r ^ f) >>> 0;
        r = t;
      }
      utils.rip(l, r, out, off);
    };
  }
});
var require_cbc = __commonJS({
  "../../node_modules/des.js/lib/des/cbc.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var assert = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    var proto = {};
    function CBCState(iv) {
      assert.equal(iv.length, 8, "Invalid IV length");
      this.iv = new Array(8);
      for (var i = 0; i < this.iv.length; i++)
        this.iv[i] = iv[i];
    }
    function instantiate(Base) {
      function CBC(options) {
        Base.call(this, options);
        this._cbcInit();
      }
      inherits(CBC, Base);
      var keys = Object.keys(proto);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        CBC.prototype[key] = proto[key];
      }
      CBC.create = function create(options) {
        return new CBC(options);
      };
      return CBC;
    }
    exports.instantiate = instantiate;
    proto._cbcInit = function _cbcInit() {
      var state = new CBCState(this.options.iv);
      this._cbcState = state;
    };
    proto._update = function _update(inp, inOff, out, outOff) {
      var state = this._cbcState;
      var superProto = this.constructor.super_.prototype;
      var iv = state.iv;
      if (this.type === "encrypt") {
        for (var i = 0; i < this.blockSize; i++)
          iv[i] ^= inp[inOff + i];
        superProto._update.call(this, iv, 0, out, outOff);
        for (var i = 0; i < this.blockSize; i++)
          iv[i] = out[outOff + i];
      } else {
        superProto._update.call(this, inp, inOff, out, outOff);
        for (var i = 0; i < this.blockSize; i++)
          out[outOff + i] ^= iv[i];
        for (var i = 0; i < this.blockSize; i++)
          iv[i] = inp[inOff + i];
      }
    };
  }
});
var require_ede = __commonJS({
  "../../node_modules/des.js/lib/des/ede.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var assert = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    var Cipher = require_cipher();
    var DES = require_des();
    function EDEState(type, key) {
      assert.equal(key.length, 24, "Invalid key length");
      var k1 = key.slice(0, 8);
      var k2 = key.slice(8, 16);
      var k3 = key.slice(16, 24);
      if (type === "encrypt") {
        this.ciphers = [
          DES.create({ type: "encrypt", key: k1 }),
          DES.create({ type: "decrypt", key: k2 }),
          DES.create({ type: "encrypt", key: k3 })
        ];
      } else {
        this.ciphers = [
          DES.create({ type: "decrypt", key: k3 }),
          DES.create({ type: "encrypt", key: k2 }),
          DES.create({ type: "decrypt", key: k1 })
        ];
      }
    }
    function EDE(options) {
      Cipher.call(this, options);
      var state = new EDEState(this.type, this.options.key);
      this._edeState = state;
    }
    inherits(EDE, Cipher);
    module.exports = EDE;
    EDE.create = function create(options) {
      return new EDE(options);
    };
    EDE.prototype._update = function _update(inp, inOff, out, outOff) {
      var state = this._edeState;
      state.ciphers[0]._update(inp, inOff, out, outOff);
      state.ciphers[1]._update(out, outOff, out, outOff);
      state.ciphers[2]._update(out, outOff, out, outOff);
    };
    EDE.prototype._pad = DES.prototype._pad;
    EDE.prototype._unpad = DES.prototype._unpad;
  }
});
var require_des2 = __commonJS({
  "../../node_modules/des.js/lib/des.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.utils = require_utils2();
    exports.Cipher = require_cipher();
    exports.DES = require_des();
    exports.CBC = require_cbc();
    exports.EDE = require_ede();
  }
});
var require_browserify_des = __commonJS({
  "../../node_modules/browserify-des/index.js"(exports, module) {
    init_process();
    init_buffer();
    var CipherBase = require_cipher_base();
    var des = require_des2();
    var inherits = require_inherits_browser();
    var Buffer = require_safe_buffer().Buffer;
    var modes = {
      "des-ede3-cbc": des.CBC.instantiate(des.EDE),
      "des-ede3": des.EDE,
      "des-ede-cbc": des.CBC.instantiate(des.EDE),
      "des-ede": des.EDE,
      "des-cbc": des.CBC.instantiate(des.DES),
      "des-ecb": des.DES
    };
    modes.des = modes["des-cbc"];
    modes.des3 = modes["des-ede3-cbc"];
    module.exports = DES;
    inherits(DES, CipherBase);
    function DES(opts) {
      CipherBase.call(this);
      var modeName = opts.mode.toLowerCase();
      var mode = modes[modeName];
      var type;
      if (opts.decrypt) {
        type = "decrypt";
      } else {
        type = "encrypt";
      }
      var key = opts.key;
      if (!Buffer.isBuffer(key)) {
        key = Buffer.from(key);
      }
      if (modeName === "des-ede" || modeName === "des-ede-cbc") {
        key = Buffer.concat([key, key.slice(0, 8)]);
      }
      var iv = opts.iv;
      if (!Buffer.isBuffer(iv)) {
        iv = Buffer.from(iv);
      }
      this._des = mode.create({
        key,
        iv,
        type
      });
    }
    DES.prototype._update = function(data) {
      return Buffer.from(this._des.update(data));
    };
    DES.prototype._final = function() {
      return Buffer.from(this._des.final());
    };
  }
});
var require_ecb = __commonJS({
  "../../node_modules/browserify-aes/modes/ecb.js"(exports) {
    init_process();
    init_buffer();
    exports.encrypt = function(self2, block) {
      return self2._cipher.encryptBlock(block);
    };
    exports.decrypt = function(self2, block) {
      return self2._cipher.decryptBlock(block);
    };
  }
});
var require_buffer_xor = __commonJS({
  "../../node_modules/buffer-xor/index.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = function xor(a, b) {
      var length = Math.min(a.length, b.length);
      var buffer = new import_buffer.Buffer(length);
      for (var i = 0; i < length; ++i) {
        buffer[i] = a[i] ^ b[i];
      }
      return buffer;
    };
  }
});
var require_cbc2 = __commonJS({
  "../../node_modules/browserify-aes/modes/cbc.js"(exports) {
    init_process();
    init_buffer();
    var xor = require_buffer_xor();
    exports.encrypt = function(self2, block) {
      var data = xor(block, self2._prev);
      self2._prev = self2._cipher.encryptBlock(data);
      return self2._prev;
    };
    exports.decrypt = function(self2, block) {
      var pad = self2._prev;
      self2._prev = block;
      var out = self2._cipher.decryptBlock(block);
      return xor(out, pad);
    };
  }
});
var require_cfb = __commonJS({
  "../../node_modules/browserify-aes/modes/cfb.js"(exports) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var xor = require_buffer_xor();
    function encryptStart(self2, data, decrypt) {
      var len = data.length;
      var out = xor(data, self2._cache);
      self2._cache = self2._cache.slice(len);
      self2._prev = Buffer.concat([self2._prev, decrypt ? data : out]);
      return out;
    }
    exports.encrypt = function(self2, data, decrypt) {
      var out = Buffer.allocUnsafe(0);
      var len;
      while (data.length) {
        if (self2._cache.length === 0) {
          self2._cache = self2._cipher.encryptBlock(self2._prev);
          self2._prev = Buffer.allocUnsafe(0);
        }
        if (self2._cache.length <= data.length) {
          len = self2._cache.length;
          out = Buffer.concat([out, encryptStart(self2, data.slice(0, len), decrypt)]);
          data = data.slice(len);
        } else {
          out = Buffer.concat([out, encryptStart(self2, data, decrypt)]);
          break;
        }
      }
      return out;
    };
  }
});
var require_cfb8 = __commonJS({
  "../../node_modules/browserify-aes/modes/cfb8.js"(exports) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    function encryptByte(self2, byteParam, decrypt) {
      var pad = self2._cipher.encryptBlock(self2._prev);
      var out = pad[0] ^ byteParam;
      self2._prev = Buffer.concat([
        self2._prev.slice(1),
        Buffer.from([decrypt ? byteParam : out])
      ]);
      return out;
    }
    exports.encrypt = function(self2, chunk, decrypt) {
      var len = chunk.length;
      var out = Buffer.allocUnsafe(len);
      var i = -1;
      while (++i < len) {
        out[i] = encryptByte(self2, chunk[i], decrypt);
      }
      return out;
    };
  }
});
var require_cfb1 = __commonJS({
  "../../node_modules/browserify-aes/modes/cfb1.js"(exports) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    function encryptByte(self2, byteParam, decrypt) {
      var pad;
      var i = -1;
      var len = 8;
      var out = 0;
      var bit, value;
      while (++i < len) {
        pad = self2._cipher.encryptBlock(self2._prev);
        bit = byteParam & 1 << 7 - i ? 128 : 0;
        value = pad[0] ^ bit;
        out += (value & 128) >> i % 8;
        self2._prev = shiftIn(self2._prev, decrypt ? bit : value);
      }
      return out;
    }
    function shiftIn(buffer, value) {
      var len = buffer.length;
      var i = -1;
      var out = Buffer.allocUnsafe(buffer.length);
      buffer = Buffer.concat([buffer, Buffer.from([value])]);
      while (++i < len) {
        out[i] = buffer[i] << 1 | buffer[i + 1] >> 7;
      }
      return out;
    }
    exports.encrypt = function(self2, chunk, decrypt) {
      var len = chunk.length;
      var out = Buffer.allocUnsafe(len);
      var i = -1;
      while (++i < len) {
        out[i] = encryptByte(self2, chunk[i], decrypt);
      }
      return out;
    };
  }
});
var require_ofb = __commonJS({
  "../../node_modules/browserify-aes/modes/ofb.js"(exports) {
    init_process();
    init_buffer();
    var xor = require_buffer_xor();
    function getBlock(self2) {
      self2._prev = self2._cipher.encryptBlock(self2._prev);
      return self2._prev;
    }
    exports.encrypt = function(self2, chunk) {
      while (self2._cache.length < chunk.length) {
        self2._cache = import_buffer.Buffer.concat([self2._cache, getBlock(self2)]);
      }
      var pad = self2._cache.slice(0, chunk.length);
      self2._cache = self2._cache.slice(chunk.length);
      return xor(chunk, pad);
    };
  }
});
var require_incr32 = __commonJS({
  "../../node_modules/browserify-aes/incr32.js"(exports, module) {
    init_process();
    init_buffer();
    function incr32(iv) {
      var len = iv.length;
      var item;
      while (len--) {
        item = iv.readUInt8(len);
        if (item === 255) {
          iv.writeUInt8(0, len);
        } else {
          item++;
          iv.writeUInt8(item, len);
          break;
        }
      }
    }
    module.exports = incr32;
  }
});
var require_ctr = __commonJS({
  "../../node_modules/browserify-aes/modes/ctr.js"(exports) {
    init_process();
    init_buffer();
    var xor = require_buffer_xor();
    var Buffer = require_safe_buffer().Buffer;
    var incr32 = require_incr32();
    function getBlock(self2) {
      var out = self2._cipher.encryptBlockRaw(self2._prev);
      incr32(self2._prev);
      return out;
    }
    var blockSize = 16;
    exports.encrypt = function(self2, chunk) {
      var chunkNum = Math.ceil(chunk.length / blockSize);
      var start = self2._cache.length;
      self2._cache = Buffer.concat([
        self2._cache,
        Buffer.allocUnsafe(chunkNum * blockSize)
      ]);
      for (var i = 0; i < chunkNum; i++) {
        var out = getBlock(self2);
        var offset = start + i * blockSize;
        self2._cache.writeUInt32BE(out[0], offset + 0);
        self2._cache.writeUInt32BE(out[1], offset + 4);
        self2._cache.writeUInt32BE(out[2], offset + 8);
        self2._cache.writeUInt32BE(out[3], offset + 12);
      }
      var pad = self2._cache.slice(0, chunk.length);
      self2._cache = self2._cache.slice(chunk.length);
      return xor(chunk, pad);
    };
  }
});
var require_list2 = __commonJS({
  "../../node_modules/browserify-aes/modes/list.json"(exports, module) {
    module.exports = {
      "aes-128-ecb": {
        cipher: "AES",
        key: 128,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-192-ecb": {
        cipher: "AES",
        key: 192,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-256-ecb": {
        cipher: "AES",
        key: 256,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-128-cbc": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-192-cbc": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-256-cbc": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes128: {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes192: {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes256: {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-128-cfb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-192-cfb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-256-cfb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-128-cfb8": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-192-cfb8": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-256-cfb8": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-128-cfb1": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-192-cfb1": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-256-cfb1": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-128-ofb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-192-ofb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-256-ofb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-128-ctr": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-192-ctr": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-256-ctr": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-128-gcm": {
        cipher: "AES",
        key: 128,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-192-gcm": {
        cipher: "AES",
        key: 192,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-256-gcm": {
        cipher: "AES",
        key: 256,
        iv: 12,
        mode: "GCM",
        type: "auth"
      }
    };
  }
});
var require_modes = __commonJS({
  "../../node_modules/browserify-aes/modes/index.js"(exports, module) {
    init_process();
    init_buffer();
    var modeModules = {
      ECB: require_ecb(),
      CBC: require_cbc2(),
      CFB: require_cfb(),
      CFB8: require_cfb8(),
      CFB1: require_cfb1(),
      OFB: require_ofb(),
      CTR: require_ctr(),
      GCM: require_ctr()
    };
    var modes = require_list2();
    for (key in modes) {
      modes[key].module = modeModules[modes[key].mode];
    }
    var key;
    module.exports = modes;
  }
});
var require_aes = __commonJS({
  "../../node_modules/browserify-aes/aes.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    function asUInt32Array(buf) {
      if (!Buffer.isBuffer(buf))
        buf = Buffer.from(buf);
      var len = buf.length / 4 | 0;
      var out = new Array(len);
      for (var i = 0; i < len; i++) {
        out[i] = buf.readUInt32BE(i * 4);
      }
      return out;
    }
    function scrubVec(v) {
      for (var i = 0; i < v.length; v++) {
        v[i] = 0;
      }
    }
    function cryptBlock(M, keySchedule, SUB_MIX, SBOX, nRounds) {
      var SUB_MIX0 = SUB_MIX[0];
      var SUB_MIX1 = SUB_MIX[1];
      var SUB_MIX2 = SUB_MIX[2];
      var SUB_MIX3 = SUB_MIX[3];
      var s0 = M[0] ^ keySchedule[0];
      var s1 = M[1] ^ keySchedule[1];
      var s2 = M[2] ^ keySchedule[2];
      var s3 = M[3] ^ keySchedule[3];
      var t0, t1, t2, t3;
      var ksRow = 4;
      for (var round = 1; round < nRounds; round++) {
        t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[s1 >>> 16 & 255] ^ SUB_MIX2[s2 >>> 8 & 255] ^ SUB_MIX3[s3 & 255] ^ keySchedule[ksRow++];
        t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[s2 >>> 16 & 255] ^ SUB_MIX2[s3 >>> 8 & 255] ^ SUB_MIX3[s0 & 255] ^ keySchedule[ksRow++];
        t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[s3 >>> 16 & 255] ^ SUB_MIX2[s0 >>> 8 & 255] ^ SUB_MIX3[s1 & 255] ^ keySchedule[ksRow++];
        t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[s0 >>> 16 & 255] ^ SUB_MIX2[s1 >>> 8 & 255] ^ SUB_MIX3[s2 & 255] ^ keySchedule[ksRow++];
        s0 = t0;
        s1 = t1;
        s2 = t2;
        s3 = t3;
      }
      t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 255] << 16 | SBOX[s2 >>> 8 & 255] << 8 | SBOX[s3 & 255]) ^ keySchedule[ksRow++];
      t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 255] << 16 | SBOX[s3 >>> 8 & 255] << 8 | SBOX[s0 & 255]) ^ keySchedule[ksRow++];
      t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 255] << 16 | SBOX[s0 >>> 8 & 255] << 8 | SBOX[s1 & 255]) ^ keySchedule[ksRow++];
      t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 255] << 16 | SBOX[s1 >>> 8 & 255] << 8 | SBOX[s2 & 255]) ^ keySchedule[ksRow++];
      t0 = t0 >>> 0;
      t1 = t1 >>> 0;
      t2 = t2 >>> 0;
      t3 = t3 >>> 0;
      return [t0, t1, t2, t3];
    }
    var RCON = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
    var G = function() {
      var d = new Array(256);
      for (var j = 0; j < 256; j++) {
        if (j < 128) {
          d[j] = j << 1;
        } else {
          d[j] = j << 1 ^ 283;
        }
      }
      var SBOX = [];
      var INV_SBOX = [];
      var SUB_MIX = [[], [], [], []];
      var INV_SUB_MIX = [[], [], [], []];
      var x = 0;
      var xi = 0;
      for (var i = 0; i < 256; ++i) {
        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
        sx = sx >>> 8 ^ sx & 255 ^ 99;
        SBOX[x] = sx;
        INV_SBOX[sx] = x;
        var x2 = d[x];
        var x4 = d[x2];
        var x8 = d[x4];
        var t = d[sx] * 257 ^ sx * 16843008;
        SUB_MIX[0][x] = t << 24 | t >>> 8;
        SUB_MIX[1][x] = t << 16 | t >>> 16;
        SUB_MIX[2][x] = t << 8 | t >>> 24;
        SUB_MIX[3][x] = t;
        t = x8 * 16843009 ^ x4 * 65537 ^ x2 * 257 ^ x * 16843008;
        INV_SUB_MIX[0][sx] = t << 24 | t >>> 8;
        INV_SUB_MIX[1][sx] = t << 16 | t >>> 16;
        INV_SUB_MIX[2][sx] = t << 8 | t >>> 24;
        INV_SUB_MIX[3][sx] = t;
        if (x === 0) {
          x = xi = 1;
        } else {
          x = x2 ^ d[d[d[x8 ^ x2]]];
          xi ^= d[d[xi]];
        }
      }
      return {
        SBOX,
        INV_SBOX,
        SUB_MIX,
        INV_SUB_MIX
      };
    }();
    function AES(key) {
      this._key = asUInt32Array(key);
      this._reset();
    }
    AES.blockSize = 4 * 4;
    AES.keySize = 256 / 8;
    AES.prototype.blockSize = AES.blockSize;
    AES.prototype.keySize = AES.keySize;
    AES.prototype._reset = function() {
      var keyWords = this._key;
      var keySize = keyWords.length;
      var nRounds = keySize + 6;
      var ksRows = (nRounds + 1) * 4;
      var keySchedule = [];
      for (var k = 0; k < keySize; k++) {
        keySchedule[k] = keyWords[k];
      }
      for (k = keySize; k < ksRows; k++) {
        var t = keySchedule[k - 1];
        if (k % keySize === 0) {
          t = t << 8 | t >>> 24;
          t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 255] << 16 | G.SBOX[t >>> 8 & 255] << 8 | G.SBOX[t & 255];
          t ^= RCON[k / keySize | 0] << 24;
        } else if (keySize > 6 && k % keySize === 4) {
          t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 255] << 16 | G.SBOX[t >>> 8 & 255] << 8 | G.SBOX[t & 255];
        }
        keySchedule[k] = keySchedule[k - keySize] ^ t;
      }
      var invKeySchedule = [];
      for (var ik = 0; ik < ksRows; ik++) {
        var ksR = ksRows - ik;
        var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)];
        if (ik < 4 || ksR <= 4) {
          invKeySchedule[ik] = tt;
        } else {
          invKeySchedule[ik] = G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[tt >>> 16 & 255]] ^ G.INV_SUB_MIX[2][G.SBOX[tt >>> 8 & 255]] ^ G.INV_SUB_MIX[3][G.SBOX[tt & 255]];
        }
      }
      this._nRounds = nRounds;
      this._keySchedule = keySchedule;
      this._invKeySchedule = invKeySchedule;
    };
    AES.prototype.encryptBlockRaw = function(M) {
      M = asUInt32Array(M);
      return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds);
    };
    AES.prototype.encryptBlock = function(M) {
      var out = this.encryptBlockRaw(M);
      var buf = Buffer.allocUnsafe(16);
      buf.writeUInt32BE(out[0], 0);
      buf.writeUInt32BE(out[1], 4);
      buf.writeUInt32BE(out[2], 8);
      buf.writeUInt32BE(out[3], 12);
      return buf;
    };
    AES.prototype.decryptBlock = function(M) {
      M = asUInt32Array(M);
      var m1 = M[1];
      M[1] = M[3];
      M[3] = m1;
      var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds);
      var buf = Buffer.allocUnsafe(16);
      buf.writeUInt32BE(out[0], 0);
      buf.writeUInt32BE(out[3], 4);
      buf.writeUInt32BE(out[2], 8);
      buf.writeUInt32BE(out[1], 12);
      return buf;
    };
    AES.prototype.scrub = function() {
      scrubVec(this._keySchedule);
      scrubVec(this._invKeySchedule);
      scrubVec(this._key);
    };
    module.exports.AES = AES;
  }
});
var require_ghash = __commonJS({
  "../../node_modules/browserify-aes/ghash.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var ZEROES = Buffer.alloc(16, 0);
    function toArray(buf) {
      return [
        buf.readUInt32BE(0),
        buf.readUInt32BE(4),
        buf.readUInt32BE(8),
        buf.readUInt32BE(12)
      ];
    }
    function fromArray(out) {
      var buf = Buffer.allocUnsafe(16);
      buf.writeUInt32BE(out[0] >>> 0, 0);
      buf.writeUInt32BE(out[1] >>> 0, 4);
      buf.writeUInt32BE(out[2] >>> 0, 8);
      buf.writeUInt32BE(out[3] >>> 0, 12);
      return buf;
    }
    function GHASH(key) {
      this.h = key;
      this.state = Buffer.alloc(16, 0);
      this.cache = Buffer.allocUnsafe(0);
    }
    GHASH.prototype.ghash = function(block) {
      var i = -1;
      while (++i < block.length) {
        this.state[i] ^= block[i];
      }
      this._multiply();
    };
    GHASH.prototype._multiply = function() {
      var Vi = toArray(this.h);
      var Zi = [0, 0, 0, 0];
      var j, xi, lsbVi;
      var i = -1;
      while (++i < 128) {
        xi = (this.state[~~(i / 8)] & 1 << 7 - i % 8) !== 0;
        if (xi) {
          Zi[0] ^= Vi[0];
          Zi[1] ^= Vi[1];
          Zi[2] ^= Vi[2];
          Zi[3] ^= Vi[3];
        }
        lsbVi = (Vi[3] & 1) !== 0;
        for (j = 3; j > 0; j--) {
          Vi[j] = Vi[j] >>> 1 | (Vi[j - 1] & 1) << 31;
        }
        Vi[0] = Vi[0] >>> 1;
        if (lsbVi) {
          Vi[0] = Vi[0] ^ 225 << 24;
        }
      }
      this.state = fromArray(Zi);
    };
    GHASH.prototype.update = function(buf) {
      this.cache = Buffer.concat([this.cache, buf]);
      var chunk;
      while (this.cache.length >= 16) {
        chunk = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        this.ghash(chunk);
      }
    };
    GHASH.prototype.final = function(abl, bl) {
      if (this.cache.length) {
        this.ghash(Buffer.concat([this.cache, ZEROES], 16));
      }
      this.ghash(fromArray([0, abl, 0, bl]));
      return this.state;
    };
    module.exports = GHASH;
  }
});
var require_authCipher = __commonJS({
  "../../node_modules/browserify-aes/authCipher.js"(exports, module) {
    init_process();
    init_buffer();
    var aes = require_aes();
    var Buffer = require_safe_buffer().Buffer;
    var Transform = require_cipher_base();
    var inherits = require_inherits_browser();
    var GHASH = require_ghash();
    var xor = require_buffer_xor();
    var incr32 = require_incr32();
    function xorTest(a, b) {
      var out = 0;
      if (a.length !== b.length)
        out++;
      var len = Math.min(a.length, b.length);
      for (var i = 0; i < len; ++i) {
        out += a[i] ^ b[i];
      }
      return out;
    }
    function calcIv(self2, iv, ck) {
      if (iv.length === 12) {
        self2._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])]);
        return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])]);
      }
      var ghash = new GHASH(ck);
      var len = iv.length;
      var toPad = len % 16;
      ghash.update(iv);
      if (toPad) {
        toPad = 16 - toPad;
        ghash.update(Buffer.alloc(toPad, 0));
      }
      ghash.update(Buffer.alloc(8, 0));
      var ivBits = len * 8;
      var tail = Buffer.alloc(8);
      tail.writeUIntBE(ivBits, 0, 8);
      ghash.update(tail);
      self2._finID = ghash.state;
      var out = Buffer.from(self2._finID);
      incr32(out);
      return out;
    }
    function StreamCipher(mode, key, iv, decrypt) {
      Transform.call(this);
      var h = Buffer.alloc(4, 0);
      this._cipher = new aes.AES(key);
      var ck = this._cipher.encryptBlock(h);
      this._ghash = new GHASH(ck);
      iv = calcIv(this, iv, ck);
      this._prev = Buffer.from(iv);
      this._cache = Buffer.allocUnsafe(0);
      this._secCache = Buffer.allocUnsafe(0);
      this._decrypt = decrypt;
      this._alen = 0;
      this._len = 0;
      this._mode = mode;
      this._authTag = null;
      this._called = false;
    }
    inherits(StreamCipher, Transform);
    StreamCipher.prototype._update = function(chunk) {
      if (!this._called && this._alen) {
        var rump = 16 - this._alen % 16;
        if (rump < 16) {
          rump = Buffer.alloc(rump, 0);
          this._ghash.update(rump);
        }
      }
      this._called = true;
      var out = this._mode.encrypt(this, chunk);
      if (this._decrypt) {
        this._ghash.update(chunk);
      } else {
        this._ghash.update(out);
      }
      this._len += chunk.length;
      return out;
    };
    StreamCipher.prototype._final = function() {
      if (this._decrypt && !this._authTag)
        throw new Error("Unsupported state or unable to authenticate data");
      var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
      if (this._decrypt && xorTest(tag, this._authTag))
        throw new Error("Unsupported state or unable to authenticate data");
      this._authTag = tag;
      this._cipher.scrub();
    };
    StreamCipher.prototype.getAuthTag = function getAuthTag() {
      if (this._decrypt || !Buffer.isBuffer(this._authTag))
        throw new Error("Attempting to get auth tag in unsupported state");
      return this._authTag;
    };
    StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {
      if (!this._decrypt)
        throw new Error("Attempting to set auth tag in unsupported state");
      this._authTag = tag;
    };
    StreamCipher.prototype.setAAD = function setAAD(buf) {
      if (this._called)
        throw new Error("Attempting to set AAD in unsupported state");
      this._ghash.update(buf);
      this._alen += buf.length;
    };
    module.exports = StreamCipher;
  }
});
var require_streamCipher = __commonJS({
  "../../node_modules/browserify-aes/streamCipher.js"(exports, module) {
    init_process();
    init_buffer();
    var aes = require_aes();
    var Buffer = require_safe_buffer().Buffer;
    var Transform = require_cipher_base();
    var inherits = require_inherits_browser();
    function StreamCipher(mode, key, iv, decrypt) {
      Transform.call(this);
      this._cipher = new aes.AES(key);
      this._prev = Buffer.from(iv);
      this._cache = Buffer.allocUnsafe(0);
      this._secCache = Buffer.allocUnsafe(0);
      this._decrypt = decrypt;
      this._mode = mode;
    }
    inherits(StreamCipher, Transform);
    StreamCipher.prototype._update = function(chunk) {
      return this._mode.encrypt(this, chunk, this._decrypt);
    };
    StreamCipher.prototype._final = function() {
      this._cipher.scrub();
    };
    module.exports = StreamCipher;
  }
});
var require_evp_bytestokey = __commonJS({
  "../../node_modules/evp_bytestokey/index.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var MD5 = require_md5();
    function EVP_BytesToKey(password, salt, keyBits, ivLen) {
      if (!Buffer.isBuffer(password))
        password = Buffer.from(password, "binary");
      if (salt) {
        if (!Buffer.isBuffer(salt))
          salt = Buffer.from(salt, "binary");
        if (salt.length !== 8)
          throw new RangeError("salt should be Buffer with 8 byte length");
      }
      var keyLen = keyBits / 8;
      var key = Buffer.alloc(keyLen);
      var iv = Buffer.alloc(ivLen || 0);
      var tmp = Buffer.alloc(0);
      while (keyLen > 0 || ivLen > 0) {
        var hash = new MD5();
        hash.update(tmp);
        hash.update(password);
        if (salt)
          hash.update(salt);
        tmp = hash.digest();
        var used = 0;
        if (keyLen > 0) {
          var keyStart = key.length - keyLen;
          used = Math.min(keyLen, tmp.length);
          tmp.copy(key, keyStart, 0, used);
          keyLen -= used;
        }
        if (used < tmp.length && ivLen > 0) {
          var ivStart = iv.length - ivLen;
          var length = Math.min(ivLen, tmp.length - used);
          tmp.copy(iv, ivStart, used, used + length);
          ivLen -= length;
        }
      }
      tmp.fill(0);
      return { key, iv };
    }
    module.exports = EVP_BytesToKey;
  }
});
var require_encrypter = __commonJS({
  "../../node_modules/browserify-aes/encrypter.js"(exports) {
    init_process();
    init_buffer();
    var MODES = require_modes();
    var AuthCipher = require_authCipher();
    var Buffer = require_safe_buffer().Buffer;
    var StreamCipher = require_streamCipher();
    var Transform = require_cipher_base();
    var aes = require_aes();
    var ebtk = require_evp_bytestokey();
    var inherits = require_inherits_browser();
    function Cipher(mode, key, iv) {
      Transform.call(this);
      this._cache = new Splitter();
      this._cipher = new aes.AES(key);
      this._prev = Buffer.from(iv);
      this._mode = mode;
      this._autopadding = true;
    }
    inherits(Cipher, Transform);
    Cipher.prototype._update = function(data) {
      this._cache.add(data);
      var chunk;
      var thing;
      var out = [];
      while (chunk = this._cache.get()) {
        thing = this._mode.encrypt(this, chunk);
        out.push(thing);
      }
      return Buffer.concat(out);
    };
    var PADDING = Buffer.alloc(16, 16);
    Cipher.prototype._final = function() {
      var chunk = this._cache.flush();
      if (this._autopadding) {
        chunk = this._mode.encrypt(this, chunk);
        this._cipher.scrub();
        return chunk;
      }
      if (!chunk.equals(PADDING)) {
        this._cipher.scrub();
        throw new Error("data not multiple of block length");
      }
    };
    Cipher.prototype.setAutoPadding = function(setTo) {
      this._autopadding = !!setTo;
      return this;
    };
    function Splitter() {
      this.cache = Buffer.allocUnsafe(0);
    }
    Splitter.prototype.add = function(data) {
      this.cache = Buffer.concat([this.cache, data]);
    };
    Splitter.prototype.get = function() {
      if (this.cache.length > 15) {
        var out = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        return out;
      }
      return null;
    };
    Splitter.prototype.flush = function() {
      var len = 16 - this.cache.length;
      var padBuff = Buffer.allocUnsafe(len);
      var i = -1;
      while (++i < len) {
        padBuff.writeUInt8(len, i);
      }
      return Buffer.concat([this.cache, padBuff]);
    };
    function createCipheriv(suite, password, iv) {
      var config = MODES[suite.toLowerCase()];
      if (!config)
        throw new TypeError("invalid suite type");
      if (typeof password === "string")
        password = Buffer.from(password);
      if (password.length !== config.key / 8)
        throw new TypeError("invalid key length " + password.length);
      if (typeof iv === "string")
        iv = Buffer.from(iv);
      if (config.mode !== "GCM" && iv.length !== config.iv)
        throw new TypeError("invalid iv length " + iv.length);
      if (config.type === "stream") {
        return new StreamCipher(config.module, password, iv);
      } else if (config.type === "auth") {
        return new AuthCipher(config.module, password, iv);
      }
      return new Cipher(config.module, password, iv);
    }
    function createCipher(suite, password) {
      var config = MODES[suite.toLowerCase()];
      if (!config)
        throw new TypeError("invalid suite type");
      var keys = ebtk(password, false, config.key, config.iv);
      return createCipheriv(suite, keys.key, keys.iv);
    }
    exports.createCipheriv = createCipheriv;
    exports.createCipher = createCipher;
  }
});
var require_decrypter = __commonJS({
  "../../node_modules/browserify-aes/decrypter.js"(exports) {
    init_process();
    init_buffer();
    var AuthCipher = require_authCipher();
    var Buffer = require_safe_buffer().Buffer;
    var MODES = require_modes();
    var StreamCipher = require_streamCipher();
    var Transform = require_cipher_base();
    var aes = require_aes();
    var ebtk = require_evp_bytestokey();
    var inherits = require_inherits_browser();
    function Decipher(mode, key, iv) {
      Transform.call(this);
      this._cache = new Splitter();
      this._last = void 0;
      this._cipher = new aes.AES(key);
      this._prev = Buffer.from(iv);
      this._mode = mode;
      this._autopadding = true;
    }
    inherits(Decipher, Transform);
    Decipher.prototype._update = function(data) {
      this._cache.add(data);
      var chunk;
      var thing;
      var out = [];
      while (chunk = this._cache.get(this._autopadding)) {
        thing = this._mode.decrypt(this, chunk);
        out.push(thing);
      }
      return Buffer.concat(out);
    };
    Decipher.prototype._final = function() {
      var chunk = this._cache.flush();
      if (this._autopadding) {
        return unpad(this._mode.decrypt(this, chunk));
      } else if (chunk) {
        throw new Error("data not multiple of block length");
      }
    };
    Decipher.prototype.setAutoPadding = function(setTo) {
      this._autopadding = !!setTo;
      return this;
    };
    function Splitter() {
      this.cache = Buffer.allocUnsafe(0);
    }
    Splitter.prototype.add = function(data) {
      this.cache = Buffer.concat([this.cache, data]);
    };
    Splitter.prototype.get = function(autoPadding) {
      var out;
      if (autoPadding) {
        if (this.cache.length > 16) {
          out = this.cache.slice(0, 16);
          this.cache = this.cache.slice(16);
          return out;
        }
      } else {
        if (this.cache.length >= 16) {
          out = this.cache.slice(0, 16);
          this.cache = this.cache.slice(16);
          return out;
        }
      }
      return null;
    };
    Splitter.prototype.flush = function() {
      if (this.cache.length)
        return this.cache;
    };
    function unpad(last) {
      var padded = last[15];
      if (padded < 1 || padded > 16) {
        throw new Error("unable to decrypt data");
      }
      var i = -1;
      while (++i < padded) {
        if (last[i + (16 - padded)] !== padded) {
          throw new Error("unable to decrypt data");
        }
      }
      if (padded === 16)
        return;
      return last.slice(0, 16 - padded);
    }
    function createDecipheriv(suite, password, iv) {
      var config = MODES[suite.toLowerCase()];
      if (!config)
        throw new TypeError("invalid suite type");
      if (typeof iv === "string")
        iv = Buffer.from(iv);
      if (config.mode !== "GCM" && iv.length !== config.iv)
        throw new TypeError("invalid iv length " + iv.length);
      if (typeof password === "string")
        password = Buffer.from(password);
      if (password.length !== config.key / 8)
        throw new TypeError("invalid key length " + password.length);
      if (config.type === "stream") {
        return new StreamCipher(config.module, password, iv, true);
      } else if (config.type === "auth") {
        return new AuthCipher(config.module, password, iv, true);
      }
      return new Decipher(config.module, password, iv);
    }
    function createDecipher(suite, password) {
      var config = MODES[suite.toLowerCase()];
      if (!config)
        throw new TypeError("invalid suite type");
      var keys = ebtk(password, false, config.key, config.iv);
      return createDecipheriv(suite, keys.key, keys.iv);
    }
    exports.createDecipher = createDecipher;
    exports.createDecipheriv = createDecipheriv;
  }
});
var require_browser7 = __commonJS({
  "../../node_modules/browserify-aes/browser.js"(exports) {
    init_process();
    init_buffer();
    var ciphers = require_encrypter();
    var deciphers = require_decrypter();
    var modes = require_list2();
    function getCiphers() {
      return Object.keys(modes);
    }
    exports.createCipher = exports.Cipher = ciphers.createCipher;
    exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv;
    exports.createDecipher = exports.Decipher = deciphers.createDecipher;
    exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv;
    exports.listCiphers = exports.getCiphers = getCiphers;
  }
});
var require_modes2 = __commonJS({
  "../../node_modules/browserify-des/modes.js"(exports) {
    init_process();
    init_buffer();
    exports["des-ecb"] = {
      key: 8,
      iv: 0
    };
    exports["des-cbc"] = exports.des = {
      key: 8,
      iv: 8
    };
    exports["des-ede3-cbc"] = exports.des3 = {
      key: 24,
      iv: 8
    };
    exports["des-ede3"] = {
      key: 24,
      iv: 0
    };
    exports["des-ede-cbc"] = {
      key: 16,
      iv: 8
    };
    exports["des-ede"] = {
      key: 16,
      iv: 0
    };
  }
});
var require_browser8 = __commonJS({
  "../../node_modules/browserify-cipher/browser.js"(exports) {
    init_process();
    init_buffer();
    var DES = require_browserify_des();
    var aes = require_browser7();
    var aesModes = require_modes();
    var desModes = require_modes2();
    var ebtk = require_evp_bytestokey();
    function createCipher(suite, password) {
      suite = suite.toLowerCase();
      var keyLen, ivLen;
      if (aesModes[suite]) {
        keyLen = aesModes[suite].key;
        ivLen = aesModes[suite].iv;
      } else if (desModes[suite]) {
        keyLen = desModes[suite].key * 8;
        ivLen = desModes[suite].iv;
      } else {
        throw new TypeError("invalid suite type");
      }
      var keys = ebtk(password, false, keyLen, ivLen);
      return createCipheriv(suite, keys.key, keys.iv);
    }
    function createDecipher(suite, password) {
      suite = suite.toLowerCase();
      var keyLen, ivLen;
      if (aesModes[suite]) {
        keyLen = aesModes[suite].key;
        ivLen = aesModes[suite].iv;
      } else if (desModes[suite]) {
        keyLen = desModes[suite].key * 8;
        ivLen = desModes[suite].iv;
      } else {
        throw new TypeError("invalid suite type");
      }
      var keys = ebtk(password, false, keyLen, ivLen);
      return createDecipheriv(suite, keys.key, keys.iv);
    }
    function createCipheriv(suite, key, iv) {
      suite = suite.toLowerCase();
      if (aesModes[suite])
        return aes.createCipheriv(suite, key, iv);
      if (desModes[suite])
        return new DES({ key, iv, mode: suite });
      throw new TypeError("invalid suite type");
    }
    function createDecipheriv(suite, key, iv) {
      suite = suite.toLowerCase();
      if (aesModes[suite])
        return aes.createDecipheriv(suite, key, iv);
      if (desModes[suite])
        return new DES({ key, iv, mode: suite, decrypt: true });
      throw new TypeError("invalid suite type");
    }
    function getCiphers() {
      return Object.keys(desModes).concat(aes.getCiphers());
    }
    exports.createCipher = exports.Cipher = createCipher;
    exports.createCipheriv = exports.Cipheriv = createCipheriv;
    exports.createDecipher = exports.Decipher = createDecipher;
    exports.createDecipheriv = exports.Decipheriv = createDecipheriv;
    exports.listCiphers = exports.getCiphers = getCiphers;
  }
});
var require_buffer2 = __commonJS({
  "(disabled):../../node_modules/buffer/index.js"() {
    init_process();
    init_buffer();
  }
});
var require_bn = __commonJS({
  "../../node_modules/bn.js/lib/bn.js"(exports, module) {
    init_process();
    init_buffer();
    (function(module2, exports2) {
      "use strict";
      function assert(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN(number, base, endian) {
        if (BN.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base === "le" || base === "be") {
            endian = base;
            base = 10;
          }
          this._init(number || 0, base || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN;
      } else {
        exports2.BN = BN;
      }
      BN.BN = BN;
      BN.wordSize = 26;
      var Buffer;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer = window.Buffer;
        } else {
          Buffer = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN.isBN = function isBN(num) {
        if (num instanceof BN) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
      };
      BN.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN.prototype._init = function init(number, base, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base, endian);
        }
        if (base === "hex") {
          base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base, endian);
            }
          }
        }
      };
      BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base, endian);
      };
      BN.prototype._initArray = function _initArray(number, base, endian) {
        assert(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN.prototype._parseBase = function _parseBase(number, base, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base);
          for (i = 0; i < mod; i++) {
            pow *= base;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
      };
      BN.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN.prototype.inspect = function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
          var groupSize = groupSizes[base];
          var groupBase = groupBases[base];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert(false, "Base should be between 2 and 36");
      };
      BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
      };
      BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer !== "undefined");
        return this.toArrayLike(Buffer, endian, length);
      };
      BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, "byte array longer than desired length");
        assert(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN.prototype.neg = function neg() {
        return this.clone().ineg();
      };
      BN.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN.prototype.inotn = function inotn(width) {
        assert(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for (var i = 0; i < N; i++) {
          t[i] = this.revBin(i, l, N);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for (var i = 0; i < N; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for (var s = 1; s < N; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for (N = N / 2 | 0; N; N = N >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1)
          return;
        for (var i = 0; i < N / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N - i - 1];
          rws[N - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N - i - 1];
          iws[N - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for (var i = 0; i < N / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N; ++i) {
          rws[i] = 0;
        }
        assert(carry === 0);
        assert((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for (var i = 0; i < N; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for (var i = 0; i < N; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN.prototype.imuln = function imuln(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN.prototype.ishln = function ishln(bits) {
        assert(this.negative === 0);
        return this.iushln(bits);
      };
      BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN.prototype.testn = function testn(bit) {
        assert(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN.prototype.isubn = function isubn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN(0),
            mod: new BN(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN(1);
        var B = new BN(0);
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
      };
      BN.red = function red(num) {
        return new Red(num);
      };
      BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        assert(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN.prototype.fromRed = function fromRed() {
        assert(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN.prototype.redSub = function redSub(num) {
        assert(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN.prototype.redISub = function redISub(num) {
        assert(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN.prototype.redShl = function redShl(num) {
        assert(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN.prototype.redMul = function redMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN.prototype.redSqr = function redSqr() {
        assert(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN.prototype.redISqr = function redISqr() {
        assert(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN.prototype.redInvm = function redInvm() {
        assert(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN.prototype.redNeg = function redNeg() {
        assert(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(
          this,
          "k256",
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
        );
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(
          this,
          "p224",
          "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
        );
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(
          this,
          "p192",
          "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
        );
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(
          this,
          "25519",
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
        );
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, "red works only with positives");
        assert(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, "red works only with positives");
        assert(
          a.red && a.red === b.red,
          "red works only with red numbers"
        );
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert(i < m);
          var b = this.pow(c, new BN(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero())
          return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});
var require_brorand = __commonJS({
  "../../node_modules/brorand/index.js"(exports, module) {
    init_process();
    init_buffer();
    var r;
    module.exports = function rand(len) {
      if (!r)
        r = new Rand(null);
      return r.generate(len);
    };
    function Rand(rand) {
      this.rand = rand;
    }
    module.exports.Rand = Rand;
    Rand.prototype.generate = function generate(len) {
      return this._rand(len);
    };
    Rand.prototype._rand = function _rand(n) {
      if (this.rand.getBytes)
        return this.rand.getBytes(n);
      var res = new Uint8Array(n);
      for (var i = 0; i < res.length; i++)
        res[i] = this.rand.getByte();
      return res;
    };
    if (typeof self === "object") {
      if (self.crypto && self.crypto.getRandomValues) {
        Rand.prototype._rand = function _rand(n) {
          var arr = new Uint8Array(n);
          self.crypto.getRandomValues(arr);
          return arr;
        };
      } else if (self.msCrypto && self.msCrypto.getRandomValues) {
        Rand.prototype._rand = function _rand(n) {
          var arr = new Uint8Array(n);
          self.msCrypto.getRandomValues(arr);
          return arr;
        };
      } else if (typeof window === "object") {
        Rand.prototype._rand = function() {
          throw new Error("Not implemented yet");
        };
      }
    } else {
      try {
        crypto = require_crypto_browserify();
        if (typeof crypto.randomBytes !== "function")
          throw new Error("Not supported");
        Rand.prototype._rand = function _rand(n) {
          return crypto.randomBytes(n);
        };
      } catch (e) {
      }
    }
    var crypto;
  }
});
var require_mr = __commonJS({
  "../../node_modules/miller-rabin/lib/mr.js"(exports, module) {
    init_process();
    init_buffer();
    var bn = require_bn();
    var brorand = require_brorand();
    function MillerRabin(rand) {
      this.rand = rand || new brorand.Rand();
    }
    module.exports = MillerRabin;
    MillerRabin.create = function create(rand) {
      return new MillerRabin(rand);
    };
    MillerRabin.prototype._randbelow = function _randbelow(n) {
      var len = n.bitLength();
      var min_bytes = Math.ceil(len / 8);
      do
        var a = new bn(this.rand.generate(min_bytes));
      while (a.cmp(n) >= 0);
      return a;
    };
    MillerRabin.prototype._randrange = function _randrange(start, stop) {
      var size = stop.sub(start);
      return start.add(this._randbelow(size));
    };
    MillerRabin.prototype.test = function test(n, k, cb) {
      var len = n.bitLength();
      var red = bn.mont(n);
      var rone = new bn(1).toRed(red);
      if (!k)
        k = Math.max(1, len / 48 | 0);
      var n1 = n.subn(1);
      for (var s = 0; !n1.testn(s); s++) {
      }
      var d = n.shrn(s);
      var rn1 = n1.toRed(red);
      var prime = true;
      for (; k > 0; k--) {
        var a = this._randrange(new bn(2), n1);
        if (cb)
          cb(a);
        var x = a.toRed(red).redPow(d);
        if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
          continue;
        for (var i = 1; i < s; i++) {
          x = x.redSqr();
          if (x.cmp(rone) === 0)
            return false;
          if (x.cmp(rn1) === 0)
            break;
        }
        if (i === s)
          return false;
      }
      return prime;
    };
    MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
      var len = n.bitLength();
      var red = bn.mont(n);
      var rone = new bn(1).toRed(red);
      if (!k)
        k = Math.max(1, len / 48 | 0);
      var n1 = n.subn(1);
      for (var s = 0; !n1.testn(s); s++) {
      }
      var d = n.shrn(s);
      var rn1 = n1.toRed(red);
      for (; k > 0; k--) {
        var a = this._randrange(new bn(2), n1);
        var g = n.gcd(a);
        if (g.cmpn(1) !== 0)
          return g;
        var x = a.toRed(red).redPow(d);
        if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
          continue;
        for (var i = 1; i < s; i++) {
          x = x.redSqr();
          if (x.cmp(rone) === 0)
            return x.fromRed().subn(1).gcd(n);
          if (x.cmp(rn1) === 0)
            break;
        }
        if (i === s) {
          x = x.redSqr();
          return x.fromRed().subn(1).gcd(n);
        }
      }
      return false;
    };
  }
});
var require_generatePrime = __commonJS({
  "../../node_modules/diffie-hellman/lib/generatePrime.js"(exports, module) {
    init_process();
    init_buffer();
    var randomBytes = require_browser3();
    module.exports = findPrime;
    findPrime.simpleSieve = simpleSieve;
    findPrime.fermatTest = fermatTest;
    var BN = require_bn();
    var TWENTYFOUR = new BN(24);
    var MillerRabin = require_mr();
    var millerRabin = new MillerRabin();
    var ONE = new BN(1);
    var TWO = new BN(2);
    var FIVE = new BN(5);
    var SIXTEEN = new BN(16);
    var EIGHT = new BN(8);
    var TEN = new BN(10);
    var THREE = new BN(3);
    var SEVEN = new BN(7);
    var ELEVEN = new BN(11);
    var FOUR = new BN(4);
    var TWELVE = new BN(12);
    var primes = null;
    function _getPrimes() {
      if (primes !== null)
        return primes;
      var limit = 1048576;
      var res = [];
      res[0] = 2;
      for (var i = 1, k = 3; k < limit; k += 2) {
        var sqrt = Math.ceil(Math.sqrt(k));
        for (var j = 0; j < i && res[j] <= sqrt; j++)
          if (k % res[j] === 0)
            break;
        if (i !== j && res[j] <= sqrt)
          continue;
        res[i++] = k;
      }
      primes = res;
      return res;
    }
    function simpleSieve(p) {
      var primes2 = _getPrimes();
      for (var i = 0; i < primes2.length; i++)
        if (p.modn(primes2[i]) === 0) {
          if (p.cmpn(primes2[i]) === 0) {
            return true;
          } else {
            return false;
          }
        }
      return true;
    }
    function fermatTest(p) {
      var red = BN.mont(p);
      return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
    }
    function findPrime(bits, gen) {
      if (bits < 16) {
        if (gen === 2 || gen === 5) {
          return new BN([140, 123]);
        } else {
          return new BN([140, 39]);
        }
      }
      gen = new BN(gen);
      var num, n2;
      while (true) {
        num = new BN(randomBytes(Math.ceil(bits / 8)));
        while (num.bitLength() > bits) {
          num.ishrn(1);
        }
        if (num.isEven()) {
          num.iadd(ONE);
        }
        if (!num.testn(1)) {
          num.iadd(TWO);
        }
        if (!gen.cmp(TWO)) {
          while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
            num.iadd(FOUR);
          }
        } else if (!gen.cmp(FIVE)) {
          while (num.mod(TEN).cmp(THREE)) {
            num.iadd(FOUR);
          }
        }
        n2 = num.shrn(1);
        if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) {
          return num;
        }
      }
    }
  }
});
var require_primes = __commonJS({
  "../../node_modules/diffie-hellman/lib/primes.json"(exports, module) {
    module.exports = {
      modp1: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
      },
      modp2: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
      },
      modp5: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
      },
      modp14: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
      },
      modp15: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
      },
      modp16: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
      },
      modp17: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
      },
      modp18: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
      }
    };
  }
});
var require_dh = __commonJS({
  "../../node_modules/diffie-hellman/lib/dh.js"(exports, module) {
    init_process();
    init_buffer();
    var BN = require_bn();
    var MillerRabin = require_mr();
    var millerRabin = new MillerRabin();
    var TWENTYFOUR = new BN(24);
    var ELEVEN = new BN(11);
    var TEN = new BN(10);
    var THREE = new BN(3);
    var SEVEN = new BN(7);
    var primes = require_generatePrime();
    var randomBytes = require_browser3();
    module.exports = DH;
    function setPublicKey(pub, enc) {
      enc = enc || "utf8";
      if (!import_buffer.Buffer.isBuffer(pub)) {
        pub = new import_buffer.Buffer(pub, enc);
      }
      this._pub = new BN(pub);
      return this;
    }
    function setPrivateKey(priv, enc) {
      enc = enc || "utf8";
      if (!import_buffer.Buffer.isBuffer(priv)) {
        priv = new import_buffer.Buffer(priv, enc);
      }
      this._priv = new BN(priv);
      return this;
    }
    var primeCache = {};
    function checkPrime(prime, generator) {
      var gen = generator.toString("hex");
      var hex = [gen, prime.toString(16)].join("_");
      if (hex in primeCache) {
        return primeCache[hex];
      }
      var error = 0;
      if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {
        error += 1;
        if (gen === "02" || gen === "05") {
          error += 8;
        } else {
          error += 4;
        }
        primeCache[hex] = error;
        return error;
      }
      if (!millerRabin.test(prime.shrn(1))) {
        error += 2;
      }
      var rem;
      switch (gen) {
        case "02":
          if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
            error += 8;
          }
          break;
        case "05":
          rem = prime.mod(TEN);
          if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
            error += 8;
          }
          break;
        default:
          error += 4;
      }
      primeCache[hex] = error;
      return error;
    }
    function DH(prime, generator, malleable) {
      this.setGenerator(generator);
      this.__prime = new BN(prime);
      this._prime = BN.mont(this.__prime);
      this._primeLen = prime.length;
      this._pub = void 0;
      this._priv = void 0;
      this._primeCode = void 0;
      if (malleable) {
        this.setPublicKey = setPublicKey;
        this.setPrivateKey = setPrivateKey;
      } else {
        this._primeCode = 8;
      }
    }
    Object.defineProperty(DH.prototype, "verifyError", {
      enumerable: true,
      get: function() {
        if (typeof this._primeCode !== "number") {
          this._primeCode = checkPrime(this.__prime, this.__gen);
        }
        return this._primeCode;
      }
    });
    DH.prototype.generateKeys = function() {
      if (!this._priv) {
        this._priv = new BN(randomBytes(this._primeLen));
      }
      this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
      return this.getPublicKey();
    };
    DH.prototype.computeSecret = function(other) {
      other = new BN(other);
      other = other.toRed(this._prime);
      var secret = other.redPow(this._priv).fromRed();
      var out = new import_buffer.Buffer(secret.toArray());
      var prime = this.getPrime();
      if (out.length < prime.length) {
        var front = new import_buffer.Buffer(prime.length - out.length);
        front.fill(0);
        out = import_buffer.Buffer.concat([front, out]);
      }
      return out;
    };
    DH.prototype.getPublicKey = function getPublicKey(enc) {
      return formatReturnValue(this._pub, enc);
    };
    DH.prototype.getPrivateKey = function getPrivateKey(enc) {
      return formatReturnValue(this._priv, enc);
    };
    DH.prototype.getPrime = function(enc) {
      return formatReturnValue(this.__prime, enc);
    };
    DH.prototype.getGenerator = function(enc) {
      return formatReturnValue(this._gen, enc);
    };
    DH.prototype.setGenerator = function(gen, enc) {
      enc = enc || "utf8";
      if (!import_buffer.Buffer.isBuffer(gen)) {
        gen = new import_buffer.Buffer(gen, enc);
      }
      this.__gen = gen;
      this._gen = new BN(gen);
      return this;
    };
    function formatReturnValue(bn, enc) {
      var buf = new import_buffer.Buffer(bn.toArray());
      if (!enc) {
        return buf;
      } else {
        return buf.toString(enc);
      }
    }
  }
});
var require_browser9 = __commonJS({
  "../../node_modules/diffie-hellman/browser.js"(exports) {
    init_process();
    init_buffer();
    var generatePrime = require_generatePrime();
    var primes = require_primes();
    var DH = require_dh();
    function getDiffieHellman(mod) {
      var prime = new import_buffer.Buffer(primes[mod].prime, "hex");
      var gen = new import_buffer.Buffer(primes[mod].gen, "hex");
      return new DH(prime, gen);
    }
    var ENCODINGS = {
      "binary": true,
      "hex": true,
      "base64": true
    };
    function createDiffieHellman(prime, enc, generator, genc) {
      if (import_buffer.Buffer.isBuffer(enc) || ENCODINGS[enc] === void 0) {
        return createDiffieHellman(prime, "binary", enc, generator);
      }
      enc = enc || "binary";
      genc = genc || "binary";
      generator = generator || new import_buffer.Buffer([2]);
      if (!import_buffer.Buffer.isBuffer(generator)) {
        generator = new import_buffer.Buffer(generator, genc);
      }
      if (typeof prime === "number") {
        return new DH(generatePrime(prime, generator), generator, true);
      }
      if (!import_buffer.Buffer.isBuffer(prime)) {
        prime = new import_buffer.Buffer(prime, enc);
      }
      return new DH(prime, generator, true);
    }
    exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;
    exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;
  }
});
var require_bn2 = __commonJS({
  "../../node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_process();
    init_buffer();
    (function(module2, exports2) {
      "use strict";
      function assert(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN(number, base, endian) {
        if (BN.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base === "le" || base === "be") {
            endian = base;
            base = 10;
          }
          this._init(number || 0, base || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN;
      } else {
        exports2.BN = BN;
      }
      BN.BN = BN;
      BN.wordSize = 26;
      var Buffer;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer = window.Buffer;
        } else {
          Buffer = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN.isBN = function isBN(num) {
        if (num instanceof BN) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
      };
      BN.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN.prototype._init = function init(number, base, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base, endian);
        }
        if (base === "hex") {
          base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base, endian);
            }
          }
        }
      };
      BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base, endian);
      };
      BN.prototype._initArray = function _initArray(number, base, endian) {
        assert(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this._strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 48 && c <= 57) {
          return c - 48;
        } else if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          assert(false, "Invalid character in " + string);
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this._strip();
      };
      function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul;
          if (c >= 49) {
            b = c - 49 + 10;
          } else if (c >= 17) {
            b = c - 17 + 10;
          } else {
            b = c;
          }
          assert(c >= 0 && b < mul, "Invalid character");
          r += b;
        }
        return r;
      }
      BN.prototype._parseBase = function _parseBase(number, base, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base);
          for (i = 0; i < mod; i++) {
            pow *= base;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this._strip();
      };
      BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
      }
      BN.prototype._move = function _move(dest) {
        move(dest, this);
      };
      BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
      };
      BN.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN.prototype._strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") {
        try {
          BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect;
        } catch (e) {
          BN.prototype.inspect = inspect;
        }
      } else {
        BN.prototype.inspect = inspect;
      }
      function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      }
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
          var groupSize = groupSizes[base];
          var groupBase = groupBases[base];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modrn(groupBase).toString(base);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert(false, "Base should be between 2 and 36");
      };
      BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
      };
      if (Buffer) {
        BN.prototype.toBuffer = function toBuffer(endian, length) {
          return this.toArrayLike(Buffer, endian, length);
        };
      }
      BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      var allocate = function allocate2(ArrayType, size) {
        if (ArrayType.allocUnsafe) {
          return ArrayType.allocUnsafe(size);
        }
        return new ArrayType(size);
      };
      BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, "byte array longer than desired length");
        assert(reqLength > 0, "Requested array length <= 0");
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === "le" ? "LE" : "BE";
        this["_toArrayLike" + postfix](res, byteLength);
        return res;
      };
      BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = this.words[i] << shift | carry;
          res[position++] = word & 255;
          if (position < res.length) {
            res[position++] = word >> 8 & 255;
          }
          if (position < res.length) {
            res[position++] = word >> 16 & 255;
          }
          if (shift === 6) {
            if (position < res.length) {
              res[position++] = word >> 24 & 255;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }
        if (position < res.length) {
          res[position++] = carry;
          while (position < res.length) {
            res[position++] = 0;
          }
        }
      };
      BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = this.words[i] << shift | carry;
          res[position--] = word & 255;
          if (position >= 0) {
            res[position--] = word >> 8 & 255;
          }
          if (position >= 0) {
            res[position--] = word >> 16 & 255;
          }
          if (shift === 6) {
            if (position >= 0) {
              res[position--] = word >> 24 & 255;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }
        if (position >= 0) {
          res[position--] = carry;
          while (position >= 0) {
            res[position--] = 0;
          }
        }
      };
      if (Math.clz32) {
        BN.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = num.words[off] >>> wbit & 1;
        }
        return w;
      }
      BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN.prototype.neg = function neg() {
        return this.clone().ineg();
      };
      BN.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this._strip();
      };
      BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this._strip();
      };
      BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this._strip();
      };
      BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN.prototype.inotn = function inotn(width) {
        assert(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this._strip();
      };
      BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this._strip();
      };
      BN.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this._strip();
      };
      BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out._strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out._strip();
      }
      function jumboMulTo(self2, num, out) {
        return bigMulTo(self2, num, out);
      }
      BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for (var i = 0; i < N; i++) {
          t[i] = this.revBin(i, l, N);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for (var i = 0; i < N; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for (var s = 1; s < N; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for (N = N / 2 | 0; N; N = N >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1)
          return;
        for (var i = 0; i < N / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N - i - 1];
          rws[N - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N - i - 1];
          iws[N - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for (var i = 0; i < N / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N; ++i) {
          rws[i] = 0;
        }
        assert(carry === 0);
        assert((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for (var i = 0; i < N; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for (var i = 0; i < N; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
      };
      BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(typeof num === "number");
        assert(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return isNegNum ? this.ineg() : this;
      };
      BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this._strip();
      };
      BN.prototype.ishln = function ishln(bits) {
        assert(this.negative === 0);
        return this.iushln(bits);
      };
      BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this._strip();
      };
      BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN.prototype.testn = function testn(bit) {
        assert(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this._strip();
      };
      BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) <= num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN.prototype.isubn = function isubn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this._strip();
      };
      BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this._strip();
        assert(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this._strip();
      };
      BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q._strip();
        }
        a._strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN(0),
            mod: new BN(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN(this.modrn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN(this.modrn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return isNegNum ? -acc : acc;
      };
      BN.prototype.modn = function modn(num) {
        return this.modrn(num);
      };
      BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
      };
      BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN(1);
        var B = new BN(0);
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this._strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
      };
      BN.red = function red(num) {
        return new Red(num);
      };
      BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        assert(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN.prototype.fromRed = function fromRed() {
        assert(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN.prototype.redSub = function redSub(num) {
        assert(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN.prototype.redISub = function redISub(num) {
        assert(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN.prototype.redShl = function redShl(num) {
        assert(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN.prototype.redMul = function redMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN.prototype.redSqr = function redSqr() {
        assert(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN.prototype.redISqr = function redISqr() {
        assert(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN.prototype.redInvm = function redInvm() {
        assert(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN.prototype.redNeg = function redNeg() {
        assert(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(
          this,
          "k256",
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
        );
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(
          this,
          "p224",
          "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
        );
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(
          this,
          "p192",
          "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
        );
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(
          this,
          "25519",
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
        );
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, "red works only with positives");
        assert(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, "red works only with positives");
        assert(
          a.red && a.red === b.red,
          "red works only with red numbers"
        );
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
      };
      Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert(i < m);
          var b = this.pow(c, new BN(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero())
          return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});
var require_browserify_rsa = __commonJS({
  "../../node_modules/browserify-rsa/index.js"(exports, module) {
    init_process();
    init_buffer();
    var BN = require_bn2();
    var randomBytes = require_browser3();
    function blind(priv) {
      var r = getr(priv);
      var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();
      return { blinder, unblinder: r.invm(priv.modulus) };
    }
    function getr(priv) {
      var len = priv.modulus.byteLength();
      var r;
      do {
        r = new BN(randomBytes(len));
      } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));
      return r;
    }
    function crt(msg, priv) {
      var blinds = blind(priv);
      var len = priv.modulus.byteLength();
      var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);
      var c1 = blinded.toRed(BN.mont(priv.prime1));
      var c2 = blinded.toRed(BN.mont(priv.prime2));
      var qinv = priv.coefficient;
      var p = priv.prime1;
      var q = priv.prime2;
      var m1 = c1.redPow(priv.exponent1).fromRed();
      var m2 = c2.redPow(priv.exponent2).fromRed();
      var h = m1.isub(m2).imul(qinv).umod(p).imul(q);
      return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(import_buffer.Buffer, "be", len);
    }
    crt.getr = getr;
    module.exports = crt;
  }
});
var require_package2 = __commonJS({
  "../../node_modules/elliptic/package.json"(exports, module) {
    module.exports = {
      name: "elliptic",
      version: "6.5.4",
      description: "EC cryptography",
      main: "lib/elliptic.js",
      files: [
        "lib"
      ],
      scripts: {
        lint: "eslint lib test",
        "lint:fix": "npm run lint -- --fix",
        unit: "istanbul test _mocha --reporter=spec test/index.js",
        test: "npm run lint && npm run unit",
        version: "grunt dist && git add dist/"
      },
      repository: {
        type: "git",
        url: "git@github.com:indutny/elliptic"
      },
      keywords: [
        "EC",
        "Elliptic",
        "curve",
        "Cryptography"
      ],
      author: "Fedor Indutny <fedor@indutny.com>",
      license: "MIT",
      bugs: {
        url: "https://github.com/indutny/elliptic/issues"
      },
      homepage: "https://github.com/indutny/elliptic",
      devDependencies: {
        brfs: "^2.0.2",
        coveralls: "^3.1.0",
        eslint: "^7.6.0",
        grunt: "^1.2.1",
        "grunt-browserify": "^5.3.0",
        "grunt-cli": "^1.3.2",
        "grunt-contrib-connect": "^3.0.0",
        "grunt-contrib-copy": "^1.0.0",
        "grunt-contrib-uglify": "^5.0.0",
        "grunt-mocha-istanbul": "^5.0.2",
        "grunt-saucelabs": "^9.0.1",
        istanbul: "^0.4.5",
        mocha: "^8.0.1"
      },
      dependencies: {
        "bn.js": "^4.11.9",
        brorand: "^1.1.0",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.1",
        inherits: "^2.0.4",
        "minimalistic-assert": "^1.0.1",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    };
  }
});
var require_utils3 = __commonJS({
  "../../node_modules/minimalistic-crypto-utils/lib/utils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var utils = exports;
    function toArray(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg !== "string") {
        for (var i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
        return res;
      }
      if (enc === "hex") {
        msg = msg.replace(/[^a-z0-9]+/ig, "");
        if (msg.length % 2 !== 0)
          msg = "0" + msg;
        for (var i = 0; i < msg.length; i += 2)
          res.push(parseInt(msg[i] + msg[i + 1], 16));
      } else {
        for (var i = 0; i < msg.length; i++) {
          var c = msg.charCodeAt(i);
          var hi = c >> 8;
          var lo = c & 255;
          if (hi)
            res.push(hi, lo);
          else
            res.push(lo);
        }
      }
      return res;
    }
    utils.toArray = toArray;
    function zero2(word) {
      if (word.length === 1)
        return "0" + word;
      else
        return word;
    }
    utils.zero2 = zero2;
    function toHex(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    utils.toHex = toHex;
    utils.encode = function encode(arr, enc) {
      if (enc === "hex")
        return toHex(arr);
      else
        return arr;
    };
  }
});
var require_utils4 = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/utils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var utils = exports;
    var BN = require_bn();
    var minAssert = require_minimalistic_assert();
    var minUtils = require_utils3();
    utils.assert = minAssert;
    utils.toArray = minUtils.toArray;
    utils.zero2 = minUtils.zero2;
    utils.toHex = minUtils.toHex;
    utils.encode = minUtils.encode;
    function getNAF(num, w, bits) {
      var naf = new Array(Math.max(num.bitLength(), bits) + 1);
      naf.fill(0);
      var ws = 1 << w + 1;
      var k = num.clone();
      for (var i = 0; i < naf.length; i++) {
        var z;
        var mod = k.andln(ws - 1);
        if (k.isOdd()) {
          if (mod > (ws >> 1) - 1)
            z = (ws >> 1) - mod;
          else
            z = mod;
          k.isubn(z);
        } else {
          z = 0;
        }
        naf[i] = z;
        k.iushrn(1);
      }
      return naf;
    }
    utils.getNAF = getNAF;
    function getJSF(k1, k2) {
      var jsf = [
        [],
        []
      ];
      k1 = k1.clone();
      k2 = k2.clone();
      var d1 = 0;
      var d2 = 0;
      var m8;
      while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
        var m14 = k1.andln(3) + d1 & 3;
        var m24 = k2.andln(3) + d2 & 3;
        if (m14 === 3)
          m14 = -1;
        if (m24 === 3)
          m24 = -1;
        var u1;
        if ((m14 & 1) === 0) {
          u1 = 0;
        } else {
          m8 = k1.andln(7) + d1 & 7;
          if ((m8 === 3 || m8 === 5) && m24 === 2)
            u1 = -m14;
          else
            u1 = m14;
        }
        jsf[0].push(u1);
        var u2;
        if ((m24 & 1) === 0) {
          u2 = 0;
        } else {
          m8 = k2.andln(7) + d2 & 7;
          if ((m8 === 3 || m8 === 5) && m14 === 2)
            u2 = -m24;
          else
            u2 = m24;
        }
        jsf[1].push(u2);
        if (2 * d1 === u1 + 1)
          d1 = 1 - d1;
        if (2 * d2 === u2 + 1)
          d2 = 1 - d2;
        k1.iushrn(1);
        k2.iushrn(1);
      }
      return jsf;
    }
    utils.getJSF = getJSF;
    function cachedProperty(obj, name, computer) {
      var key = "_" + name;
      obj.prototype[name] = function cachedProperty2() {
        return this[key] !== void 0 ? this[key] : this[key] = computer.call(this);
      };
    }
    utils.cachedProperty = cachedProperty;
    function parseBytes(bytes) {
      return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
    }
    utils.parseBytes = parseBytes;
    function intFromLE(bytes) {
      return new BN(bytes, "hex", "le");
    }
    utils.intFromLE = intFromLE;
  }
});
var require_base = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/curve/base.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var BN = require_bn();
    var utils = require_utils4();
    var getNAF = utils.getNAF;
    var getJSF = utils.getJSF;
    var assert = utils.assert;
    function BaseCurve(type, conf) {
      this.type = type;
      this.p = new BN(conf.p, 16);
      this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);
      this.zero = new BN(0).toRed(this.red);
      this.one = new BN(1).toRed(this.red);
      this.two = new BN(2).toRed(this.red);
      this.n = conf.n && new BN(conf.n, 16);
      this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
      this._wnafT1 = new Array(4);
      this._wnafT2 = new Array(4);
      this._wnafT3 = new Array(4);
      this._wnafT4 = new Array(4);
      this._bitLength = this.n ? this.n.bitLength() : 0;
      var adjustCount = this.n && this.p.div(this.n);
      if (!adjustCount || adjustCount.cmpn(100) > 0) {
        this.redN = null;
      } else {
        this._maxwellTrick = true;
        this.redN = this.n.toRed(this.red);
      }
    }
    module.exports = BaseCurve;
    BaseCurve.prototype.point = function point() {
      throw new Error("Not implemented");
    };
    BaseCurve.prototype.validate = function validate() {
      throw new Error("Not implemented");
    };
    BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
      assert(p.precomputed);
      var doubles = p._getDoubles();
      var naf = getNAF(k, 1, this._bitLength);
      var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
      I /= 3;
      var repr = [];
      var j;
      var nafW;
      for (j = 0; j < naf.length; j += doubles.step) {
        nafW = 0;
        for (var l = j + doubles.step - 1; l >= j; l--)
          nafW = (nafW << 1) + naf[l];
        repr.push(nafW);
      }
      var a = this.jpoint(null, null, null);
      var b = this.jpoint(null, null, null);
      for (var i = I; i > 0; i--) {
        for (j = 0; j < repr.length; j++) {
          nafW = repr[j];
          if (nafW === i)
            b = b.mixedAdd(doubles.points[j]);
          else if (nafW === -i)
            b = b.mixedAdd(doubles.points[j].neg());
        }
        a = a.add(b);
      }
      return a.toP();
    };
    BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
      var w = 4;
      var nafPoints = p._getNAFPoints(w);
      w = nafPoints.wnd;
      var wnd = nafPoints.points;
      var naf = getNAF(k, w, this._bitLength);
      var acc = this.jpoint(null, null, null);
      for (var i = naf.length - 1; i >= 0; i--) {
        for (var l = 0; i >= 0 && naf[i] === 0; i--)
          l++;
        if (i >= 0)
          l++;
        acc = acc.dblp(l);
        if (i < 0)
          break;
        var z = naf[i];
        assert(z !== 0);
        if (p.type === "affine") {
          if (z > 0)
            acc = acc.mixedAdd(wnd[z - 1 >> 1]);
          else
            acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
        } else {
          if (z > 0)
            acc = acc.add(wnd[z - 1 >> 1]);
          else
            acc = acc.add(wnd[-z - 1 >> 1].neg());
        }
      }
      return p.type === "affine" ? acc.toP() : acc;
    };
    BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
      var wndWidth = this._wnafT1;
      var wnd = this._wnafT2;
      var naf = this._wnafT3;
      var max = 0;
      var i;
      var j;
      var p;
      for (i = 0; i < len; i++) {
        p = points[i];
        var nafPoints = p._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd;
        wnd[i] = nafPoints.points;
      }
      for (i = len - 1; i >= 1; i -= 2) {
        var a = i - 1;
        var b = i;
        if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
          naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
          naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
          max = Math.max(naf[a].length, max);
          max = Math.max(naf[b].length, max);
          continue;
        }
        var comb = [
          points[a],
          null,
          null,
          points[b]
        ];
        if (points[a].y.cmp(points[b].y) === 0) {
          comb[1] = points[a].add(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].add(points[b].neg());
        } else {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        }
        var index = [
          -3,
          -1,
          -5,
          -7,
          0,
          7,
          5,
          1,
          3
        ];
        var jsf = getJSF(coeffs[a], coeffs[b]);
        max = Math.max(jsf[0].length, max);
        naf[a] = new Array(max);
        naf[b] = new Array(max);
        for (j = 0; j < max; j++) {
          var ja = jsf[0][j] | 0;
          var jb = jsf[1][j] | 0;
          naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
          naf[b][j] = 0;
          wnd[a] = comb;
        }
      }
      var acc = this.jpoint(null, null, null);
      var tmp = this._wnafT4;
      for (i = max; i >= 0; i--) {
        var k = 0;
        while (i >= 0) {
          var zero = true;
          for (j = 0; j < len; j++) {
            tmp[j] = naf[j][i] | 0;
            if (tmp[j] !== 0)
              zero = false;
          }
          if (!zero)
            break;
          k++;
          i--;
        }
        if (i >= 0)
          k++;
        acc = acc.dblp(k);
        if (i < 0)
          break;
        for (j = 0; j < len; j++) {
          var z = tmp[j];
          p;
          if (z === 0)
            continue;
          else if (z > 0)
            p = wnd[j][z - 1 >> 1];
          else if (z < 0)
            p = wnd[j][-z - 1 >> 1].neg();
          if (p.type === "affine")
            acc = acc.mixedAdd(p);
          else
            acc = acc.add(p);
        }
      }
      for (i = 0; i < len; i++)
        wnd[i] = null;
      if (jacobianResult)
        return acc;
      else
        return acc.toP();
    };
    function BasePoint(curve, type) {
      this.curve = curve;
      this.type = type;
      this.precomputed = null;
    }
    BaseCurve.BasePoint = BasePoint;
    BasePoint.prototype.eq = function eq() {
      throw new Error("Not implemented");
    };
    BasePoint.prototype.validate = function validate() {
      return this.curve.validate(this);
    };
    BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
      bytes = utils.toArray(bytes, enc);
      var len = this.p.byteLength();
      if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
        if (bytes[0] === 6)
          assert(bytes[bytes.length - 1] % 2 === 0);
        else if (bytes[0] === 7)
          assert(bytes[bytes.length - 1] % 2 === 1);
        var res = this.point(
          bytes.slice(1, 1 + len),
          bytes.slice(1 + len, 1 + 2 * len)
        );
        return res;
      } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
        return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
      }
      throw new Error("Unknown point format");
    };
    BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
      return this.encode(enc, true);
    };
    BasePoint.prototype._encode = function _encode(compact) {
      var len = this.curve.p.byteLength();
      var x = this.getX().toArray("be", len);
      if (compact)
        return [this.getY().isEven() ? 2 : 3].concat(x);
      return [4].concat(x, this.getY().toArray("be", len));
    };
    BasePoint.prototype.encode = function encode(enc, compact) {
      return utils.encode(this._encode(compact), enc);
    };
    BasePoint.prototype.precompute = function precompute(power) {
      if (this.precomputed)
        return this;
      var precomputed = {
        doubles: null,
        naf: null,
        beta: null
      };
      precomputed.naf = this._getNAFPoints(8);
      precomputed.doubles = this._getDoubles(4, power);
      precomputed.beta = this._getBeta();
      this.precomputed = precomputed;
      return this;
    };
    BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
      if (!this.precomputed)
        return false;
      var doubles = this.precomputed.doubles;
      if (!doubles)
        return false;
      return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
    };
    BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
      if (this.precomputed && this.precomputed.doubles)
        return this.precomputed.doubles;
      var doubles = [this];
      var acc = this;
      for (var i = 0; i < power; i += step) {
        for (var j = 0; j < step; j++)
          acc = acc.dbl();
        doubles.push(acc);
      }
      return {
        step,
        points: doubles
      };
    };
    BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
      if (this.precomputed && this.precomputed.naf)
        return this.precomputed.naf;
      var res = [this];
      var max = (1 << wnd) - 1;
      var dbl = max === 1 ? null : this.dbl();
      for (var i = 1; i < max; i++)
        res[i] = res[i - 1].add(dbl);
      return {
        wnd,
        points: res
      };
    };
    BasePoint.prototype._getBeta = function _getBeta() {
      return null;
    };
    BasePoint.prototype.dblp = function dblp(k) {
      var r = this;
      for (var i = 0; i < k; i++)
        r = r.dbl();
      return r;
    };
  }
});
var require_short = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/curve/short.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils4();
    var BN = require_bn();
    var inherits = require_inherits_browser();
    var Base = require_base();
    var assert = utils.assert;
    function ShortCurve(conf) {
      Base.call(this, "short", conf);
      this.a = new BN(conf.a, 16).toRed(this.red);
      this.b = new BN(conf.b, 16).toRed(this.red);
      this.tinv = this.two.redInvm();
      this.zeroA = this.a.fromRed().cmpn(0) === 0;
      this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
      this.endo = this._getEndomorphism(conf);
      this._endoWnafT1 = new Array(4);
      this._endoWnafT2 = new Array(4);
    }
    inherits(ShortCurve, Base);
    module.exports = ShortCurve;
    ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
      if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
        return;
      var beta;
      var lambda;
      if (conf.beta) {
        beta = new BN(conf.beta, 16).toRed(this.red);
      } else {
        var betas = this._getEndoRoots(this.p);
        beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
        beta = beta.toRed(this.red);
      }
      if (conf.lambda) {
        lambda = new BN(conf.lambda, 16);
      } else {
        var lambdas = this._getEndoRoots(this.n);
        if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
          lambda = lambdas[0];
        } else {
          lambda = lambdas[1];
          assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
        }
      }
      var basis;
      if (conf.basis) {
        basis = conf.basis.map(function(vec) {
          return {
            a: new BN(vec.a, 16),
            b: new BN(vec.b, 16)
          };
        });
      } else {
        basis = this._getEndoBasis(lambda);
      }
      return {
        beta,
        lambda,
        basis
      };
    };
    ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
      var red = num === this.p ? this.red : BN.mont(num);
      var tinv = new BN(2).toRed(red).redInvm();
      var ntinv = tinv.redNeg();
      var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
      var l1 = ntinv.redAdd(s).fromRed();
      var l2 = ntinv.redSub(s).fromRed();
      return [l1, l2];
    };
    ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
      var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
      var u = lambda;
      var v = this.n.clone();
      var x1 = new BN(1);
      var y1 = new BN(0);
      var x2 = new BN(0);
      var y2 = new BN(1);
      var a0;
      var b0;
      var a1;
      var b1;
      var a2;
      var b2;
      var prevR;
      var i = 0;
      var r;
      var x;
      while (u.cmpn(0) !== 0) {
        var q = v.div(u);
        r = v.sub(q.mul(u));
        x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));
        if (!a1 && r.cmp(aprxSqrt) < 0) {
          a0 = prevR.neg();
          b0 = x1;
          a1 = r.neg();
          b1 = x;
        } else if (a1 && ++i === 2) {
          break;
        }
        prevR = r;
        v = u;
        u = r;
        x2 = x1;
        x1 = x;
        y2 = y1;
        y1 = y;
      }
      a2 = r.neg();
      b2 = x;
      var len1 = a1.sqr().add(b1.sqr());
      var len2 = a2.sqr().add(b2.sqr());
      if (len2.cmp(len1) >= 0) {
        a2 = a0;
        b2 = b0;
      }
      if (a1.negative) {
        a1 = a1.neg();
        b1 = b1.neg();
      }
      if (a2.negative) {
        a2 = a2.neg();
        b2 = b2.neg();
      }
      return [
        { a: a1, b: b1 },
        { a: a2, b: b2 }
      ];
    };
    ShortCurve.prototype._endoSplit = function _endoSplit(k) {
      var basis = this.endo.basis;
      var v1 = basis[0];
      var v2 = basis[1];
      var c1 = v2.b.mul(k).divRound(this.n);
      var c2 = v1.b.neg().mul(k).divRound(this.n);
      var p1 = c1.mul(v1.a);
      var p2 = c2.mul(v2.a);
      var q1 = c1.mul(v1.b);
      var q2 = c2.mul(v2.b);
      var k1 = k.sub(p1).sub(p2);
      var k2 = q1.add(q2).neg();
      return { k1, k2 };
    };
    ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
      x = new BN(x, 16);
      if (!x.red)
        x = x.toRed(this.red);
      var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
      var y = y2.redSqrt();
      if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      if (odd && !isOdd || !odd && isOdd)
        y = y.redNeg();
      return this.point(x, y);
    };
    ShortCurve.prototype.validate = function validate(point) {
      if (point.inf)
        return true;
      var x = point.x;
      var y = point.y;
      var ax = this.a.redMul(x);
      var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
      return y.redSqr().redISub(rhs).cmpn(0) === 0;
    };
    ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();
        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }
        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };
    function Point(curve, x, y, isRed) {
      Base.BasePoint.call(this, curve, "affine");
      if (x === null && y === null) {
        this.x = null;
        this.y = null;
        this.inf = true;
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        if (isRed) {
          this.x.forceRed(this.curve.red);
          this.y.forceRed(this.curve.red);
        }
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        this.inf = false;
      }
    }
    inherits(Point, Base.BasePoint);
    ShortCurve.prototype.point = function point(x, y, isRed) {
      return new Point(this, x, y, isRed);
    };
    ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
      return Point.fromJSON(this, obj, red);
    };
    Point.prototype._getBeta = function _getBeta() {
      if (!this.curve.endo)
        return;
      var pre = this.precomputed;
      if (pre && pre.beta)
        return pre.beta;
      var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
      if (pre) {
        var curve = this.curve;
        var endoMul = function(p) {
          return curve.point(p.x.redMul(curve.endo.beta), p.y);
        };
        pre.beta = beta;
        beta.precomputed = {
          beta: null,
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(endoMul)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(endoMul)
          }
        };
      }
      return beta;
    };
    Point.prototype.toJSON = function toJSON() {
      if (!this.precomputed)
        return [this.x, this.y];
      return [this.x, this.y, this.precomputed && {
        doubles: this.precomputed.doubles && {
          step: this.precomputed.doubles.step,
          points: this.precomputed.doubles.points.slice(1)
        },
        naf: this.precomputed.naf && {
          wnd: this.precomputed.naf.wnd,
          points: this.precomputed.naf.points.slice(1)
        }
      }];
    };
    Point.fromJSON = function fromJSON2(curve, obj, red) {
      if (typeof obj === "string")
        obj = JSON.parse(obj);
      var res = curve.point(obj[0], obj[1], red);
      if (!obj[2])
        return res;
      function obj2point(obj2) {
        return curve.point(obj2[0], obj2[1], red);
      }
      var pre = obj[2];
      res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: [res].concat(pre.doubles.points.map(obj2point))
        },
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: [res].concat(pre.naf.points.map(obj2point))
        }
      };
      return res;
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return this.inf;
    };
    Point.prototype.add = function add(p) {
      if (this.inf)
        return p;
      if (p.inf)
        return this;
      if (this.eq(p))
        return this.dbl();
      if (this.neg().eq(p))
        return this.curve.point(null, null);
      if (this.x.cmp(p.x) === 0)
        return this.curve.point(null, null);
      var c = this.y.redSub(p.y);
      if (c.cmpn(0) !== 0)
        c = c.redMul(this.x.redSub(p.x).redInvm());
      var nx = c.redSqr().redISub(this.x).redISub(p.x);
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };
    Point.prototype.dbl = function dbl() {
      if (this.inf)
        return this;
      var ys1 = this.y.redAdd(this.y);
      if (ys1.cmpn(0) === 0)
        return this.curve.point(null, null);
      var a = this.curve.a;
      var x2 = this.x.redSqr();
      var dyinv = ys1.redInvm();
      var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
      var nx = c.redSqr().redISub(this.x.redAdd(this.x));
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };
    Point.prototype.getX = function getX() {
      return this.x.fromRed();
    };
    Point.prototype.getY = function getY() {
      return this.y.fromRed();
    };
    Point.prototype.mul = function mul(k) {
      k = new BN(k, 16);
      if (this.isInfinity())
        return this;
      else if (this._hasDoubles(k))
        return this.curve._fixedNafMul(this, k);
      else if (this.curve.endo)
        return this.curve._endoWnafMulAdd([this], [k]);
      else
        return this.curve._wnafMul(this, k);
    };
    Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
      var points = [this, p2];
      var coeffs = [k1, k2];
      if (this.curve.endo)
        return this.curve._endoWnafMulAdd(points, coeffs);
      else
        return this.curve._wnafMulAdd(1, points, coeffs, 2);
    };
    Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
      var points = [this, p2];
      var coeffs = [k1, k2];
      if (this.curve.endo)
        return this.curve._endoWnafMulAdd(points, coeffs, true);
      else
        return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
    };
    Point.prototype.eq = function eq(p) {
      return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
    };
    Point.prototype.neg = function neg(_precompute) {
      if (this.inf)
        return this;
      var res = this.curve.point(this.x, this.y.redNeg());
      if (_precompute && this.precomputed) {
        var pre = this.precomputed;
        var negate = function(p) {
          return p.neg();
        };
        res.precomputed = {
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(negate)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(negate)
          }
        };
      }
      return res;
    };
    Point.prototype.toJ = function toJ() {
      if (this.inf)
        return this.curve.jpoint(null, null, null);
      var res = this.curve.jpoint(this.x, this.y, this.curve.one);
      return res;
    };
    function JPoint(curve, x, y, z) {
      Base.BasePoint.call(this, curve, "jacobian");
      if (x === null && y === null && z === null) {
        this.x = this.curve.one;
        this.y = this.curve.one;
        this.z = new BN(0);
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        this.z = new BN(z, 16);
      }
      if (!this.x.red)
        this.x = this.x.toRed(this.curve.red);
      if (!this.y.red)
        this.y = this.y.toRed(this.curve.red);
      if (!this.z.red)
        this.z = this.z.toRed(this.curve.red);
      this.zOne = this.z === this.curve.one;
    }
    inherits(JPoint, Base.BasePoint);
    ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
      return new JPoint(this, x, y, z);
    };
    JPoint.prototype.toP = function toP() {
      if (this.isInfinity())
        return this.curve.point(null, null);
      var zinv = this.z.redInvm();
      var zinv2 = zinv.redSqr();
      var ax = this.x.redMul(zinv2);
      var ay = this.y.redMul(zinv2).redMul(zinv);
      return this.curve.point(ax, ay);
    };
    JPoint.prototype.neg = function neg() {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    };
    JPoint.prototype.add = function add(p) {
      if (this.isInfinity())
        return p;
      if (p.isInfinity())
        return this;
      var pz2 = p.z.redSqr();
      var z2 = this.z.redSqr();
      var u1 = this.x.redMul(pz2);
      var u2 = p.x.redMul(z2);
      var s1 = this.y.redMul(pz2.redMul(p.z));
      var s2 = p.y.redMul(z2.redMul(this.z));
      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0)
          return this.curve.jpoint(null, null, null);
        else
          return this.dbl();
      }
      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);
      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(p.z).redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.mixedAdd = function mixedAdd(p) {
      if (this.isInfinity())
        return p.toJ();
      if (p.isInfinity())
        return this;
      var z2 = this.z.redSqr();
      var u1 = this.x;
      var u2 = p.x.redMul(z2);
      var s1 = this.y;
      var s2 = p.y.redMul(z2).redMul(this.z);
      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0)
          return this.curve.jpoint(null, null, null);
        else
          return this.dbl();
      }
      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);
      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.dblp = function dblp(pow) {
      if (pow === 0)
        return this;
      if (this.isInfinity())
        return this;
      if (!pow)
        return this.dbl();
      var i;
      if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for (i = 0; i < pow; i++)
          r = r.dbl();
        return r;
      }
      var a = this.curve.a;
      var tinv = this.curve.tinv;
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();
      var jyd = jy.redAdd(jy);
      for (i = 0; i < pow; i++) {
        var jx2 = jx.redSqr();
        var jyd2 = jyd.redSqr();
        var jyd4 = jyd2.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var t1 = jx.redMul(jyd2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        if (i + 1 < pow)
          jz4 = jz4.redMul(jyd4);
        jx = nx;
        jz = nz;
        jyd = dny;
      }
      return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
    };
    JPoint.prototype.dbl = function dbl() {
      if (this.isInfinity())
        return this;
      if (this.curve.zeroA)
        return this._zeroDbl();
      else if (this.curve.threeA)
        return this._threeDbl();
      else
        return this._dbl();
    };
    JPoint.prototype._zeroDbl = function _zeroDbl() {
      var nx;
      var ny;
      var nz;
      if (this.zOne) {
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var yyyy = yy.redSqr();
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx);
        var t = m.redSqr().redISub(s).redISub(s);
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        nx = t;
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        nz = this.y.redAdd(this.y);
      } else {
        var a = this.x.redSqr();
        var b = this.y.redSqr();
        var c = b.redSqr();
        var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        var e = a.redAdd(a).redIAdd(a);
        var f = e.redSqr();
        var c8 = c.redIAdd(c);
        c8 = c8.redIAdd(c8);
        c8 = c8.redIAdd(c8);
        nx = f.redISub(d).redISub(d);
        ny = e.redMul(d.redISub(nx)).redISub(c8);
        nz = this.y.redMul(this.z);
        nz = nz.redIAdd(nz);
      }
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype._threeDbl = function _threeDbl() {
      var nx;
      var ny;
      var nz;
      if (this.zOne) {
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var yyyy = yy.redSqr();
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
        var t = m.redSqr().redISub(s).redISub(s);
        nx = t;
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        nz = this.y.redAdd(this.y);
      } else {
        var delta = this.z.redSqr();
        var gamma = this.y.redSqr();
        var beta = this.x.redMul(gamma);
        var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        var beta4 = beta.redIAdd(beta);
        beta4 = beta4.redIAdd(beta4);
        var beta8 = beta4.redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8);
        nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        var ggamma8 = gamma.redSqr();
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
      }
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype._dbl = function _dbl() {
      var a = this.curve.a;
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();
      var jx2 = jx.redSqr();
      var jy2 = jy.redSqr();
      var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
      var jxd4 = jx.redAdd(jx);
      jxd4 = jxd4.redIAdd(jxd4);
      var t1 = jxd4.redMul(jy2);
      var nx = c.redSqr().redISub(t1.redAdd(t1));
      var t2 = t1.redISub(nx);
      var jyd8 = jy2.redSqr();
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      var ny = c.redMul(t2).redISub(jyd8);
      var nz = jy.redAdd(jy).redMul(jz);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.trpl = function trpl() {
      if (!this.curve.zeroA)
        return this.dbl().add(this);
      var xx = this.x.redSqr();
      var yy = this.y.redSqr();
      var zz = this.z.redSqr();
      var yyyy = yy.redSqr();
      var m = xx.redAdd(xx).redIAdd(xx);
      var mm = m.redSqr();
      var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      e = e.redIAdd(e);
      e = e.redAdd(e).redIAdd(e);
      e = e.redISub(mm);
      var ee = e.redSqr();
      var t = yyyy.redIAdd(yyyy);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
      var yyu4 = yy.redMul(u);
      yyu4 = yyu4.redIAdd(yyu4);
      yyu4 = yyu4.redIAdd(yyu4);
      var nx = this.x.redMul(ee).redISub(yyu4);
      nx = nx.redIAdd(nx);
      nx = nx.redIAdd(nx);
      var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.mul = function mul(k, kbase) {
      k = new BN(k, kbase);
      return this.curve._wnafMul(this, k);
    };
    JPoint.prototype.eq = function eq(p) {
      if (p.type === "affine")
        return this.eq(p.toJ());
      if (this === p)
        return true;
      var z2 = this.z.redSqr();
      var pz2 = p.z.redSqr();
      if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
        return false;
      var z3 = z2.redMul(this.z);
      var pz3 = pz2.redMul(p.z);
      return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
    };
    JPoint.prototype.eqXToP = function eqXToP(x) {
      var zs = this.z.redSqr();
      var rx = x.toRed(this.curve.red).redMul(zs);
      if (this.x.cmp(rx) === 0)
        return true;
      var xc = x.clone();
      var t = this.curve.redN.redMul(zs);
      for (; ; ) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0)
          return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0)
          return true;
      }
    };
    JPoint.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return "<EC JPoint Infinity>";
      return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
    };
    JPoint.prototype.isInfinity = function isInfinity() {
      return this.z.cmpn(0) === 0;
    };
  }
});
var require_mont = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/curve/mont.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var BN = require_bn();
    var inherits = require_inherits_browser();
    var Base = require_base();
    var utils = require_utils4();
    function MontCurve(conf) {
      Base.call(this, "mont", conf);
      this.a = new BN(conf.a, 16).toRed(this.red);
      this.b = new BN(conf.b, 16).toRed(this.red);
      this.i4 = new BN(4).toRed(this.red).redInvm();
      this.two = new BN(2).toRed(this.red);
      this.a24 = this.i4.redMul(this.a.redAdd(this.two));
    }
    inherits(MontCurve, Base);
    module.exports = MontCurve;
    MontCurve.prototype.validate = function validate(point) {
      var x = point.normalize().x;
      var x2 = x.redSqr();
      var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
      var y = rhs.redSqrt();
      return y.redSqr().cmp(rhs) === 0;
    };
    function Point(curve, x, z) {
      Base.BasePoint.call(this, curve, "projective");
      if (x === null && z === null) {
        this.x = this.curve.one;
        this.z = this.curve.zero;
      } else {
        this.x = new BN(x, 16);
        this.z = new BN(z, 16);
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.z.red)
          this.z = this.z.toRed(this.curve.red);
      }
    }
    inherits(Point, Base.BasePoint);
    MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
      return this.point(utils.toArray(bytes, enc), 1);
    };
    MontCurve.prototype.point = function point(x, z) {
      return new Point(this, x, z);
    };
    MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
      return Point.fromJSON(this, obj);
    };
    Point.prototype.precompute = function precompute() {
    };
    Point.prototype._encode = function _encode() {
      return this.getX().toArray("be", this.curve.p.byteLength());
    };
    Point.fromJSON = function fromJSON2(curve, obj) {
      return new Point(curve, obj[0], obj[1] || curve.one);
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return this.z.cmpn(0) === 0;
    };
    Point.prototype.dbl = function dbl() {
      var a = this.x.redAdd(this.z);
      var aa = a.redSqr();
      var b = this.x.redSub(this.z);
      var bb = b.redSqr();
      var c = aa.redSub(bb);
      var nx = aa.redMul(bb);
      var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
      return this.curve.point(nx, nz);
    };
    Point.prototype.add = function add() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.diffAdd = function diffAdd(p, diff) {
      var a = this.x.redAdd(this.z);
      var b = this.x.redSub(this.z);
      var c = p.x.redAdd(p.z);
      var d = p.x.redSub(p.z);
      var da = d.redMul(a);
      var cb = c.redMul(b);
      var nx = diff.z.redMul(da.redAdd(cb).redSqr());
      var nz = diff.x.redMul(da.redISub(cb).redSqr());
      return this.curve.point(nx, nz);
    };
    Point.prototype.mul = function mul(k) {
      var t = k.clone();
      var a = this;
      var b = this.curve.point(null, null);
      var c = this;
      for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
        bits.push(t.andln(1));
      for (var i = bits.length - 1; i >= 0; i--) {
        if (bits[i] === 0) {
          a = a.diffAdd(b, c);
          b = b.dbl();
        } else {
          b = a.diffAdd(b, c);
          a = a.dbl();
        }
      }
      return b;
    };
    Point.prototype.mulAdd = function mulAdd() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.jumlAdd = function jumlAdd() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.eq = function eq(other) {
      return this.getX().cmp(other.getX()) === 0;
    };
    Point.prototype.normalize = function normalize() {
      this.x = this.x.redMul(this.z.redInvm());
      this.z = this.curve.one;
      return this;
    };
    Point.prototype.getX = function getX() {
      this.normalize();
      return this.x.fromRed();
    };
  }
});
var require_edwards = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/curve/edwards.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils4();
    var BN = require_bn();
    var inherits = require_inherits_browser();
    var Base = require_base();
    var assert = utils.assert;
    function EdwardsCurve(conf) {
      this.twisted = (conf.a | 0) !== 1;
      this.mOneA = this.twisted && (conf.a | 0) === -1;
      this.extended = this.mOneA;
      Base.call(this, "edwards", conf);
      this.a = new BN(conf.a, 16).umod(this.red.m);
      this.a = this.a.toRed(this.red);
      this.c = new BN(conf.c, 16).toRed(this.red);
      this.c2 = this.c.redSqr();
      this.d = new BN(conf.d, 16).toRed(this.red);
      this.dd = this.d.redAdd(this.d);
      assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
      this.oneC = (conf.c | 0) === 1;
    }
    inherits(EdwardsCurve, Base);
    module.exports = EdwardsCurve;
    EdwardsCurve.prototype._mulA = function _mulA(num) {
      if (this.mOneA)
        return num.redNeg();
      else
        return this.a.redMul(num);
    };
    EdwardsCurve.prototype._mulC = function _mulC(num) {
      if (this.oneC)
        return num;
      else
        return this.c.redMul(num);
    };
    EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
      return this.point(x, y, z, t);
    };
    EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
      x = new BN(x, 16);
      if (!x.red)
        x = x.toRed(this.red);
      var x2 = x.redSqr();
      var rhs = this.c2.redSub(this.a.redMul(x2));
      var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
      var y2 = rhs.redMul(lhs.redInvm());
      var y = y2.redSqrt();
      if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      if (odd && !isOdd || !odd && isOdd)
        y = y.redNeg();
      return this.point(x, y);
    };
    EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
      y = new BN(y, 16);
      if (!y.red)
        y = y.toRed(this.red);
      var y2 = y.redSqr();
      var lhs = y2.redSub(this.c2);
      var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
      var x2 = lhs.redMul(rhs.redInvm());
      if (x2.cmp(this.zero) === 0) {
        if (odd)
          throw new Error("invalid point");
        else
          return this.point(this.zero, y);
      }
      var x = x2.redSqrt();
      if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      if (x.fromRed().isOdd() !== odd)
        x = x.redNeg();
      return this.point(x, y);
    };
    EdwardsCurve.prototype.validate = function validate(point) {
      if (point.isInfinity())
        return true;
      point.normalize();
      var x2 = point.x.redSqr();
      var y2 = point.y.redSqr();
      var lhs = x2.redMul(this.a).redAdd(y2);
      var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
      return lhs.cmp(rhs) === 0;
    };
    function Point(curve, x, y, z, t) {
      Base.BasePoint.call(this, curve, "projective");
      if (x === null && y === null && z === null) {
        this.x = this.curve.zero;
        this.y = this.curve.one;
        this.z = this.curve.one;
        this.t = this.curve.zero;
        this.zOne = true;
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        this.z = z ? new BN(z, 16) : this.curve.one;
        this.t = t && new BN(t, 16);
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        if (!this.z.red)
          this.z = this.z.toRed(this.curve.red);
        if (this.t && !this.t.red)
          this.t = this.t.toRed(this.curve.red);
        this.zOne = this.z === this.curve.one;
        if (this.curve.extended && !this.t) {
          this.t = this.x.redMul(this.y);
          if (!this.zOne)
            this.t = this.t.redMul(this.z.redInvm());
        }
      }
    }
    inherits(Point, Base.BasePoint);
    EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
      return Point.fromJSON(this, obj);
    };
    EdwardsCurve.prototype.point = function point(x, y, z, t) {
      return new Point(this, x, y, z, t);
    };
    Point.fromJSON = function fromJSON2(curve, obj) {
      return new Point(curve, obj[0], obj[1], obj[2]);
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
    };
    Point.prototype._extDbl = function _extDbl() {
      var a = this.x.redSqr();
      var b = this.y.redSqr();
      var c = this.z.redSqr();
      c = c.redIAdd(c);
      var d = this.curve._mulA(a);
      var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
      var g = d.redAdd(b);
      var f = g.redSub(c);
      var h = d.redSub(b);
      var nx = e.redMul(f);
      var ny = g.redMul(h);
      var nt = e.redMul(h);
      var nz = f.redMul(g);
      return this.curve.point(nx, ny, nz, nt);
    };
    Point.prototype._projDbl = function _projDbl() {
      var b = this.x.redAdd(this.y).redSqr();
      var c = this.x.redSqr();
      var d = this.y.redSqr();
      var nx;
      var ny;
      var nz;
      var e;
      var h;
      var j;
      if (this.curve.twisted) {
        e = this.curve._mulA(c);
        var f = e.redAdd(d);
        if (this.zOne) {
          nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
          ny = f.redMul(e.redSub(d));
          nz = f.redSqr().redSub(f).redSub(f);
        } else {
          h = this.z.redSqr();
          j = f.redSub(h).redISub(h);
          nx = b.redSub(c).redISub(d).redMul(j);
          ny = f.redMul(e.redSub(d));
          nz = f.redMul(j);
        }
      } else {
        e = c.redAdd(d);
        h = this.curve._mulC(this.z).redSqr();
        j = e.redSub(h).redSub(h);
        nx = this.curve._mulC(b.redISub(e)).redMul(j);
        ny = this.curve._mulC(e).redMul(c.redISub(d));
        nz = e.redMul(j);
      }
      return this.curve.point(nx, ny, nz);
    };
    Point.prototype.dbl = function dbl() {
      if (this.isInfinity())
        return this;
      if (this.curve.extended)
        return this._extDbl();
      else
        return this._projDbl();
    };
    Point.prototype._extAdd = function _extAdd(p) {
      var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
      var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
      var c = this.t.redMul(this.curve.dd).redMul(p.t);
      var d = this.z.redMul(p.z.redAdd(p.z));
      var e = b.redSub(a);
      var f = d.redSub(c);
      var g = d.redAdd(c);
      var h = b.redAdd(a);
      var nx = e.redMul(f);
      var ny = g.redMul(h);
      var nt = e.redMul(h);
      var nz = f.redMul(g);
      return this.curve.point(nx, ny, nz, nt);
    };
    Point.prototype._projAdd = function _projAdd(p) {
      var a = this.z.redMul(p.z);
      var b = a.redSqr();
      var c = this.x.redMul(p.x);
      var d = this.y.redMul(p.y);
      var e = this.curve.d.redMul(c).redMul(d);
      var f = b.redSub(e);
      var g = b.redAdd(e);
      var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
      var nx = a.redMul(f).redMul(tmp);
      var ny;
      var nz;
      if (this.curve.twisted) {
        ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
        nz = f.redMul(g);
      } else {
        ny = a.redMul(g).redMul(d.redSub(c));
        nz = this.curve._mulC(f).redMul(g);
      }
      return this.curve.point(nx, ny, nz);
    };
    Point.prototype.add = function add(p) {
      if (this.isInfinity())
        return p;
      if (p.isInfinity())
        return this;
      if (this.curve.extended)
        return this._extAdd(p);
      else
        return this._projAdd(p);
    };
    Point.prototype.mul = function mul(k) {
      if (this._hasDoubles(k))
        return this.curve._fixedNafMul(this, k);
      else
        return this.curve._wnafMul(this, k);
    };
    Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
      return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);
    };
    Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
      return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);
    };
    Point.prototype.normalize = function normalize() {
      if (this.zOne)
        return this;
      var zi = this.z.redInvm();
      this.x = this.x.redMul(zi);
      this.y = this.y.redMul(zi);
      if (this.t)
        this.t = this.t.redMul(zi);
      this.z = this.curve.one;
      this.zOne = true;
      return this;
    };
    Point.prototype.neg = function neg() {
      return this.curve.point(
        this.x.redNeg(),
        this.y,
        this.z,
        this.t && this.t.redNeg()
      );
    };
    Point.prototype.getX = function getX() {
      this.normalize();
      return this.x.fromRed();
    };
    Point.prototype.getY = function getY() {
      this.normalize();
      return this.y.fromRed();
    };
    Point.prototype.eq = function eq(other) {
      return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
    };
    Point.prototype.eqXToP = function eqXToP(x) {
      var rx = x.toRed(this.curve.red).redMul(this.z);
      if (this.x.cmp(rx) === 0)
        return true;
      var xc = x.clone();
      var t = this.curve.redN.redMul(this.z);
      for (; ; ) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0)
          return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0)
          return true;
      }
    };
    Point.prototype.toP = Point.prototype.normalize;
    Point.prototype.mixedAdd = Point.prototype.add;
  }
});
var require_curve = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/curve/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var curve = exports;
    curve.base = require_base();
    curve.short = require_short();
    curve.mont = require_mont();
    curve.edwards = require_edwards();
  }
});
var require_utils5 = __commonJS({
  "../../node_modules/hash.js/lib/hash/utils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var assert = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    exports.inherits = inherits;
    function isSurrogatePair(msg, i) {
      if ((msg.charCodeAt(i) & 64512) !== 55296) {
        return false;
      }
      if (i < 0 || i + 1 >= msg.length) {
        return false;
      }
      return (msg.charCodeAt(i + 1) & 64512) === 56320;
    }
    function toArray(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg === "string") {
        if (!enc) {
          var p = 0;
          for (var i = 0; i < msg.length; i++) {
            var c = msg.charCodeAt(i);
            if (c < 128) {
              res[p++] = c;
            } else if (c < 2048) {
              res[p++] = c >> 6 | 192;
              res[p++] = c & 63 | 128;
            } else if (isSurrogatePair(msg, i)) {
              c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);
              res[p++] = c >> 18 | 240;
              res[p++] = c >> 12 & 63 | 128;
              res[p++] = c >> 6 & 63 | 128;
              res[p++] = c & 63 | 128;
            } else {
              res[p++] = c >> 12 | 224;
              res[p++] = c >> 6 & 63 | 128;
              res[p++] = c & 63 | 128;
            }
          }
        } else if (enc === "hex") {
          msg = msg.replace(/[^a-z0-9]+/ig, "");
          if (msg.length % 2 !== 0)
            msg = "0" + msg;
          for (i = 0; i < msg.length; i += 2)
            res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
      } else {
        for (i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
      }
      return res;
    }
    exports.toArray = toArray;
    function toHex(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    exports.toHex = toHex;
    function htonl(w) {
      var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;
      return res >>> 0;
    }
    exports.htonl = htonl;
    function toHex32(msg, endian) {
      var res = "";
      for (var i = 0; i < msg.length; i++) {
        var w = msg[i];
        if (endian === "little")
          w = htonl(w);
        res += zero8(w.toString(16));
      }
      return res;
    }
    exports.toHex32 = toHex32;
    function zero2(word) {
      if (word.length === 1)
        return "0" + word;
      else
        return word;
    }
    exports.zero2 = zero2;
    function zero8(word) {
      if (word.length === 7)
        return "0" + word;
      else if (word.length === 6)
        return "00" + word;
      else if (word.length === 5)
        return "000" + word;
      else if (word.length === 4)
        return "0000" + word;
      else if (word.length === 3)
        return "00000" + word;
      else if (word.length === 2)
        return "000000" + word;
      else if (word.length === 1)
        return "0000000" + word;
      else
        return word;
    }
    exports.zero8 = zero8;
    function join32(msg, start, end, endian) {
      var len = end - start;
      assert(len % 4 === 0);
      var res = new Array(len / 4);
      for (var i = 0, k = start; i < res.length; i++, k += 4) {
        var w;
        if (endian === "big")
          w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
        else
          w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
        res[i] = w >>> 0;
      }
      return res;
    }
    exports.join32 = join32;
    function split32(msg, endian) {
      var res = new Array(msg.length * 4);
      for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
        var m = msg[i];
        if (endian === "big") {
          res[k] = m >>> 24;
          res[k + 1] = m >>> 16 & 255;
          res[k + 2] = m >>> 8 & 255;
          res[k + 3] = m & 255;
        } else {
          res[k + 3] = m >>> 24;
          res[k + 2] = m >>> 16 & 255;
          res[k + 1] = m >>> 8 & 255;
          res[k] = m & 255;
        }
      }
      return res;
    }
    exports.split32 = split32;
    function rotr32(w, b) {
      return w >>> b | w << 32 - b;
    }
    exports.rotr32 = rotr32;
    function rotl32(w, b) {
      return w << b | w >>> 32 - b;
    }
    exports.rotl32 = rotl32;
    function sum32(a, b) {
      return a + b >>> 0;
    }
    exports.sum32 = sum32;
    function sum32_3(a, b, c) {
      return a + b + c >>> 0;
    }
    exports.sum32_3 = sum32_3;
    function sum32_4(a, b, c, d) {
      return a + b + c + d >>> 0;
    }
    exports.sum32_4 = sum32_4;
    function sum32_5(a, b, c, d, e) {
      return a + b + c + d + e >>> 0;
    }
    exports.sum32_5 = sum32_5;
    function sum64(buf, pos, ah, al) {
      var bh = buf[pos];
      var bl = buf[pos + 1];
      var lo = al + bl >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      buf[pos] = hi >>> 0;
      buf[pos + 1] = lo;
    }
    exports.sum64 = sum64;
    function sum64_hi(ah, al, bh, bl) {
      var lo = al + bl >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      return hi >>> 0;
    }
    exports.sum64_hi = sum64_hi;
    function sum64_lo(ah, al, bh, bl) {
      var lo = al + bl;
      return lo >>> 0;
    }
    exports.sum64_lo = sum64_lo;
    function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
      var carry = 0;
      var lo = al;
      lo = lo + bl >>> 0;
      carry += lo < al ? 1 : 0;
      lo = lo + cl >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = lo + dl >>> 0;
      carry += lo < dl ? 1 : 0;
      var hi = ah + bh + ch + dh + carry;
      return hi >>> 0;
    }
    exports.sum64_4_hi = sum64_4_hi;
    function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
      var lo = al + bl + cl + dl;
      return lo >>> 0;
    }
    exports.sum64_4_lo = sum64_4_lo;
    function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var carry = 0;
      var lo = al;
      lo = lo + bl >>> 0;
      carry += lo < al ? 1 : 0;
      lo = lo + cl >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = lo + dl >>> 0;
      carry += lo < dl ? 1 : 0;
      lo = lo + el >>> 0;
      carry += lo < el ? 1 : 0;
      var hi = ah + bh + ch + dh + eh + carry;
      return hi >>> 0;
    }
    exports.sum64_5_hi = sum64_5_hi;
    function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var lo = al + bl + cl + dl + el;
      return lo >>> 0;
    }
    exports.sum64_5_lo = sum64_5_lo;
    function rotr64_hi(ah, al, num) {
      var r = al << 32 - num | ah >>> num;
      return r >>> 0;
    }
    exports.rotr64_hi = rotr64_hi;
    function rotr64_lo(ah, al, num) {
      var r = ah << 32 - num | al >>> num;
      return r >>> 0;
    }
    exports.rotr64_lo = rotr64_lo;
    function shr64_hi(ah, al, num) {
      return ah >>> num;
    }
    exports.shr64_hi = shr64_hi;
    function shr64_lo(ah, al, num) {
      var r = ah << 32 - num | al >>> num;
      return r >>> 0;
    }
    exports.shr64_lo = shr64_lo;
  }
});
var require_common = __commonJS({
  "../../node_modules/hash.js/lib/hash/common.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var assert = require_minimalistic_assert();
    function BlockHash() {
      this.pending = null;
      this.pendingTotal = 0;
      this.blockSize = this.constructor.blockSize;
      this.outSize = this.constructor.outSize;
      this.hmacStrength = this.constructor.hmacStrength;
      this.padLength = this.constructor.padLength / 8;
      this.endian = "big";
      this._delta8 = this.blockSize / 8;
      this._delta32 = this.blockSize / 32;
    }
    exports.BlockHash = BlockHash;
    BlockHash.prototype.update = function update(msg, enc) {
      msg = utils.toArray(msg, enc);
      if (!this.pending)
        this.pending = msg;
      else
        this.pending = this.pending.concat(msg);
      this.pendingTotal += msg.length;
      if (this.pending.length >= this._delta8) {
        msg = this.pending;
        var r = msg.length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length);
        if (this.pending.length === 0)
          this.pending = null;
        msg = utils.join32(msg, 0, msg.length - r, this.endian);
        for (var i = 0; i < msg.length; i += this._delta32)
          this._update(msg, i, i + this._delta32);
      }
      return this;
    };
    BlockHash.prototype.digest = function digest(enc) {
      this.update(this._pad());
      assert(this.pending === null);
      return this._digest(enc);
    };
    BlockHash.prototype._pad = function pad() {
      var len = this.pendingTotal;
      var bytes = this._delta8;
      var k = bytes - (len + this.padLength) % bytes;
      var res = new Array(k + this.padLength);
      res[0] = 128;
      for (var i = 1; i < k; i++)
        res[i] = 0;
      len <<= 3;
      if (this.endian === "big") {
        for (var t = 8; t < this.padLength; t++)
          res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = len >>> 24 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = len & 255;
      } else {
        res[i++] = len & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 24 & 255;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        for (t = 8; t < this.padLength; t++)
          res[i++] = 0;
      }
      return res;
    };
  }
});
var require_common2 = __commonJS({
  "../../node_modules/hash.js/lib/hash/sha/common.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var rotr32 = utils.rotr32;
    function ft_1(s, x, y, z) {
      if (s === 0)
        return ch32(x, y, z);
      if (s === 1 || s === 3)
        return p32(x, y, z);
      if (s === 2)
        return maj32(x, y, z);
    }
    exports.ft_1 = ft_1;
    function ch32(x, y, z) {
      return x & y ^ ~x & z;
    }
    exports.ch32 = ch32;
    function maj32(x, y, z) {
      return x & y ^ x & z ^ y & z;
    }
    exports.maj32 = maj32;
    function p32(x, y, z) {
      return x ^ y ^ z;
    }
    exports.p32 = p32;
    function s0_256(x) {
      return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
    }
    exports.s0_256 = s0_256;
    function s1_256(x) {
      return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
    }
    exports.s1_256 = s1_256;
    function g0_256(x) {
      return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
    }
    exports.g0_256 = g0_256;
    function g1_256(x) {
      return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
    }
    exports.g1_256 = g1_256;
  }
});
var require__ = __commonJS({
  "../../node_modules/hash.js/lib/hash/sha/1.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var common = require_common();
    var shaCommon = require_common2();
    var rotl32 = utils.rotl32;
    var sum32 = utils.sum32;
    var sum32_5 = utils.sum32_5;
    var ft_1 = shaCommon.ft_1;
    var BlockHash = common.BlockHash;
    var sha1_K = [
      1518500249,
      1859775393,
      2400959708,
      3395469782
    ];
    function SHA1() {
      if (!(this instanceof SHA1))
        return new SHA1();
      BlockHash.call(this);
      this.h = [
        1732584193,
        4023233417,
        2562383102,
        271733878,
        3285377520
      ];
      this.W = new Array(80);
    }
    utils.inherits(SHA1, BlockHash);
    module.exports = SHA1;
    SHA1.blockSize = 512;
    SHA1.outSize = 160;
    SHA1.hmacStrength = 80;
    SHA1.padLength = 64;
    SHA1.prototype._update = function _update(msg, start) {
      var W = this.W;
      for (var i = 0; i < 16; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i++)
        W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      for (i = 0; i < W.length; i++) {
        var s = ~~(i / 20);
        var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
        e = d;
        d = c;
        c = rotl32(b, 30);
        b = a;
        a = t;
      }
      this.h[0] = sum32(this.h[0], a);
      this.h[1] = sum32(this.h[1], b);
      this.h[2] = sum32(this.h[2], c);
      this.h[3] = sum32(this.h[3], d);
      this.h[4] = sum32(this.h[4], e);
    };
    SHA1.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
  }
});
var require__2 = __commonJS({
  "../../node_modules/hash.js/lib/hash/sha/256.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var common = require_common();
    var shaCommon = require_common2();
    var assert = require_minimalistic_assert();
    var sum32 = utils.sum32;
    var sum32_4 = utils.sum32_4;
    var sum32_5 = utils.sum32_5;
    var ch32 = shaCommon.ch32;
    var maj32 = shaCommon.maj32;
    var s0_256 = shaCommon.s0_256;
    var s1_256 = shaCommon.s1_256;
    var g0_256 = shaCommon.g0_256;
    var g1_256 = shaCommon.g1_256;
    var BlockHash = common.BlockHash;
    var sha256_K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ];
    function SHA256() {
      if (!(this instanceof SHA256))
        return new SHA256();
      BlockHash.call(this);
      this.h = [
        1779033703,
        3144134277,
        1013904242,
        2773480762,
        1359893119,
        2600822924,
        528734635,
        1541459225
      ];
      this.k = sha256_K;
      this.W = new Array(64);
    }
    utils.inherits(SHA256, BlockHash);
    module.exports = SHA256;
    SHA256.blockSize = 512;
    SHA256.outSize = 256;
    SHA256.hmacStrength = 192;
    SHA256.padLength = 64;
    SHA256.prototype._update = function _update(msg, start) {
      var W = this.W;
      for (var i = 0; i < 16; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i++)
        W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      var f = this.h[5];
      var g = this.h[6];
      var h = this.h[7];
      assert(this.k.length === W.length);
      for (i = 0; i < W.length; i++) {
        var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
        var T2 = sum32(s0_256(a), maj32(a, b, c));
        h = g;
        g = f;
        f = e;
        e = sum32(d, T1);
        d = c;
        c = b;
        b = a;
        a = sum32(T1, T2);
      }
      this.h[0] = sum32(this.h[0], a);
      this.h[1] = sum32(this.h[1], b);
      this.h[2] = sum32(this.h[2], c);
      this.h[3] = sum32(this.h[3], d);
      this.h[4] = sum32(this.h[4], e);
      this.h[5] = sum32(this.h[5], f);
      this.h[6] = sum32(this.h[6], g);
      this.h[7] = sum32(this.h[7], h);
    };
    SHA256.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
  }
});
var require__3 = __commonJS({
  "../../node_modules/hash.js/lib/hash/sha/224.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var SHA256 = require__2();
    function SHA224() {
      if (!(this instanceof SHA224))
        return new SHA224();
      SHA256.call(this);
      this.h = [
        3238371032,
        914150663,
        812702999,
        4144912697,
        4290775857,
        1750603025,
        1694076839,
        3204075428
      ];
    }
    utils.inherits(SHA224, SHA256);
    module.exports = SHA224;
    SHA224.blockSize = 512;
    SHA224.outSize = 224;
    SHA224.hmacStrength = 192;
    SHA224.padLength = 64;
    SHA224.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h.slice(0, 7), "big");
      else
        return utils.split32(this.h.slice(0, 7), "big");
    };
  }
});
var require__4 = __commonJS({
  "../../node_modules/hash.js/lib/hash/sha/512.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var common = require_common();
    var assert = require_minimalistic_assert();
    var rotr64_hi = utils.rotr64_hi;
    var rotr64_lo = utils.rotr64_lo;
    var shr64_hi = utils.shr64_hi;
    var shr64_lo = utils.shr64_lo;
    var sum64 = utils.sum64;
    var sum64_hi = utils.sum64_hi;
    var sum64_lo = utils.sum64_lo;
    var sum64_4_hi = utils.sum64_4_hi;
    var sum64_4_lo = utils.sum64_4_lo;
    var sum64_5_hi = utils.sum64_5_hi;
    var sum64_5_lo = utils.sum64_5_lo;
    var BlockHash = common.BlockHash;
    var sha512_K = [
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ];
    function SHA512() {
      if (!(this instanceof SHA512))
        return new SHA512();
      BlockHash.call(this);
      this.h = [
        1779033703,
        4089235720,
        3144134277,
        2227873595,
        1013904242,
        4271175723,
        2773480762,
        1595750129,
        1359893119,
        2917565137,
        2600822924,
        725511199,
        528734635,
        4215389547,
        1541459225,
        327033209
      ];
      this.k = sha512_K;
      this.W = new Array(160);
    }
    utils.inherits(SHA512, BlockHash);
    module.exports = SHA512;
    SHA512.blockSize = 1024;
    SHA512.outSize = 512;
    SHA512.hmacStrength = 192;
    SHA512.padLength = 128;
    SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
      var W = this.W;
      for (var i = 0; i < 32; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i += 2) {
        var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
        var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
        var c1_hi = W[i - 14];
        var c1_lo = W[i - 13];
        var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
        var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
        var c3_hi = W[i - 32];
        var c3_lo = W[i - 31];
        W[i] = sum64_4_hi(
          c0_hi,
          c0_lo,
          c1_hi,
          c1_lo,
          c2_hi,
          c2_lo,
          c3_hi,
          c3_lo
        );
        W[i + 1] = sum64_4_lo(
          c0_hi,
          c0_lo,
          c1_hi,
          c1_lo,
          c2_hi,
          c2_lo,
          c3_hi,
          c3_lo
        );
      }
    };
    SHA512.prototype._update = function _update(msg, start) {
      this._prepareBlock(msg, start);
      var W = this.W;
      var ah = this.h[0];
      var al = this.h[1];
      var bh = this.h[2];
      var bl = this.h[3];
      var ch = this.h[4];
      var cl = this.h[5];
      var dh = this.h[6];
      var dl = this.h[7];
      var eh = this.h[8];
      var el = this.h[9];
      var fh = this.h[10];
      var fl = this.h[11];
      var gh = this.h[12];
      var gl = this.h[13];
      var hh = this.h[14];
      var hl = this.h[15];
      assert(this.k.length === W.length);
      for (var i = 0; i < W.length; i += 2) {
        var c0_hi = hh;
        var c0_lo = hl;
        var c1_hi = s1_512_hi(eh, el);
        var c1_lo = s1_512_lo(eh, el);
        var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
        var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
        var c3_hi = this.k[i];
        var c3_lo = this.k[i + 1];
        var c4_hi = W[i];
        var c4_lo = W[i + 1];
        var T1_hi = sum64_5_hi(
          c0_hi,
          c0_lo,
          c1_hi,
          c1_lo,
          c2_hi,
          c2_lo,
          c3_hi,
          c3_lo,
          c4_hi,
          c4_lo
        );
        var T1_lo = sum64_5_lo(
          c0_hi,
          c0_lo,
          c1_hi,
          c1_lo,
          c2_hi,
          c2_lo,
          c3_hi,
          c3_lo,
          c4_hi,
          c4_lo
        );
        c0_hi = s0_512_hi(ah, al);
        c0_lo = s0_512_lo(ah, al);
        c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
        c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
        var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
        var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        eh = sum64_hi(dh, dl, T1_hi, T1_lo);
        el = sum64_lo(dl, dl, T1_hi, T1_lo);
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
        al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
      }
      sum64(this.h, 0, ah, al);
      sum64(this.h, 2, bh, bl);
      sum64(this.h, 4, ch, cl);
      sum64(this.h, 6, dh, dl);
      sum64(this.h, 8, eh, el);
      sum64(this.h, 10, fh, fl);
      sum64(this.h, 12, gh, gl);
      sum64(this.h, 14, hh, hl);
    };
    SHA512.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
    function ch64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ ~xh & zh;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function ch64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ ~xl & zl;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function maj64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ xh & zh ^ yh & zh;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function maj64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ xl & zl ^ yl & zl;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 28);
      var c1_hi = rotr64_hi(xl, xh, 2);
      var c2_hi = rotr64_hi(xl, xh, 7);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 28);
      var c1_lo = rotr64_lo(xl, xh, 2);
      var c2_lo = rotr64_lo(xl, xh, 7);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 14);
      var c1_hi = rotr64_hi(xh, xl, 18);
      var c2_hi = rotr64_hi(xl, xh, 9);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 14);
      var c1_lo = rotr64_lo(xh, xl, 18);
      var c2_lo = rotr64_lo(xl, xh, 9);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 1);
      var c1_hi = rotr64_hi(xh, xl, 8);
      var c2_hi = shr64_hi(xh, xl, 7);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 1);
      var c1_lo = rotr64_lo(xh, xl, 8);
      var c2_lo = shr64_lo(xh, xl, 7);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 19);
      var c1_hi = rotr64_hi(xl, xh, 29);
      var c2_hi = shr64_hi(xh, xl, 6);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 19);
      var c1_lo = rotr64_lo(xl, xh, 29);
      var c2_lo = shr64_lo(xh, xl, 6);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
  }
});
var require__5 = __commonJS({
  "../../node_modules/hash.js/lib/hash/sha/384.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var SHA512 = require__4();
    function SHA384() {
      if (!(this instanceof SHA384))
        return new SHA384();
      SHA512.call(this);
      this.h = [
        3418070365,
        3238371032,
        1654270250,
        914150663,
        2438529370,
        812702999,
        355462360,
        4144912697,
        1731405415,
        4290775857,
        2394180231,
        1750603025,
        3675008525,
        1694076839,
        1203062813,
        3204075428
      ];
    }
    utils.inherits(SHA384, SHA512);
    module.exports = SHA384;
    SHA384.blockSize = 1024;
    SHA384.outSize = 384;
    SHA384.hmacStrength = 192;
    SHA384.padLength = 128;
    SHA384.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h.slice(0, 12), "big");
      else
        return utils.split32(this.h.slice(0, 12), "big");
    };
  }
});
var require_sha3 = __commonJS({
  "../../node_modules/hash.js/lib/hash/sha.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.sha1 = require__();
    exports.sha224 = require__3();
    exports.sha256 = require__2();
    exports.sha384 = require__5();
    exports.sha512 = require__4();
  }
});
var require_ripemd = __commonJS({
  "../../node_modules/hash.js/lib/hash/ripemd.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var common = require_common();
    var rotl32 = utils.rotl32;
    var sum32 = utils.sum32;
    var sum32_3 = utils.sum32_3;
    var sum32_4 = utils.sum32_4;
    var BlockHash = common.BlockHash;
    function RIPEMD160() {
      if (!(this instanceof RIPEMD160))
        return new RIPEMD160();
      BlockHash.call(this);
      this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
      this.endian = "little";
    }
    utils.inherits(RIPEMD160, BlockHash);
    exports.ripemd160 = RIPEMD160;
    RIPEMD160.blockSize = 512;
    RIPEMD160.outSize = 160;
    RIPEMD160.hmacStrength = 192;
    RIPEMD160.padLength = 64;
    RIPEMD160.prototype._update = function update(msg, start) {
      var A = this.h[0];
      var B = this.h[1];
      var C = this.h[2];
      var D = this.h[3];
      var E = this.h[4];
      var Ah = A;
      var Bh = B;
      var Ch = C;
      var Dh = D;
      var Eh = E;
      for (var j = 0; j < 80; j++) {
        var T = sum32(
          rotl32(
            sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
            s[j]
          ),
          E
        );
        A = E;
        E = D;
        D = rotl32(C, 10);
        C = B;
        B = T;
        T = sum32(
          rotl32(
            sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
            sh[j]
          ),
          Eh
        );
        Ah = Eh;
        Eh = Dh;
        Dh = rotl32(Ch, 10);
        Ch = Bh;
        Bh = T;
      }
      T = sum32_3(this.h[1], C, Dh);
      this.h[1] = sum32_3(this.h[2], D, Eh);
      this.h[2] = sum32_3(this.h[3], E, Ah);
      this.h[3] = sum32_3(this.h[4], A, Bh);
      this.h[4] = sum32_3(this.h[0], B, Ch);
      this.h[0] = T;
    };
    RIPEMD160.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "little");
      else
        return utils.split32(this.h, "little");
    };
    function f(j, x, y, z) {
      if (j <= 15)
        return x ^ y ^ z;
      else if (j <= 31)
        return x & y | ~x & z;
      else if (j <= 47)
        return (x | ~y) ^ z;
      else if (j <= 63)
        return x & z | y & ~z;
      else
        return x ^ (y | ~z);
    }
    function K(j) {
      if (j <= 15)
        return 0;
      else if (j <= 31)
        return 1518500249;
      else if (j <= 47)
        return 1859775393;
      else if (j <= 63)
        return 2400959708;
      else
        return 2840853838;
    }
    function Kh(j) {
      if (j <= 15)
        return 1352829926;
      else if (j <= 31)
        return 1548603684;
      else if (j <= 47)
        return 1836072691;
      else if (j <= 63)
        return 2053994217;
      else
        return 0;
    }
    var r = [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      7,
      4,
      13,
      1,
      10,
      6,
      15,
      3,
      12,
      0,
      9,
      5,
      2,
      14,
      11,
      8,
      3,
      10,
      14,
      4,
      9,
      15,
      8,
      1,
      2,
      7,
      0,
      6,
      13,
      11,
      5,
      12,
      1,
      9,
      11,
      10,
      0,
      8,
      12,
      4,
      13,
      3,
      7,
      15,
      14,
      5,
      6,
      2,
      4,
      0,
      5,
      9,
      7,
      12,
      2,
      10,
      14,
      1,
      3,
      8,
      11,
      6,
      15,
      13
    ];
    var rh = [
      5,
      14,
      7,
      0,
      9,
      2,
      11,
      4,
      13,
      6,
      15,
      8,
      1,
      10,
      3,
      12,
      6,
      11,
      3,
      7,
      0,
      13,
      5,
      10,
      14,
      15,
      8,
      12,
      4,
      9,
      1,
      2,
      15,
      5,
      1,
      3,
      7,
      14,
      6,
      9,
      11,
      8,
      12,
      2,
      10,
      0,
      4,
      13,
      8,
      6,
      4,
      1,
      3,
      11,
      15,
      0,
      5,
      12,
      2,
      13,
      9,
      7,
      10,
      14,
      12,
      15,
      10,
      4,
      1,
      5,
      8,
      7,
      6,
      2,
      13,
      14,
      0,
      3,
      9,
      11
    ];
    var s = [
      11,
      14,
      15,
      12,
      5,
      8,
      7,
      9,
      11,
      13,
      14,
      15,
      6,
      7,
      9,
      8,
      7,
      6,
      8,
      13,
      11,
      9,
      7,
      15,
      7,
      12,
      15,
      9,
      11,
      7,
      13,
      12,
      11,
      13,
      6,
      7,
      14,
      9,
      13,
      15,
      14,
      8,
      13,
      6,
      5,
      12,
      7,
      5,
      11,
      12,
      14,
      15,
      14,
      15,
      9,
      8,
      9,
      14,
      5,
      6,
      8,
      6,
      5,
      12,
      9,
      15,
      5,
      11,
      6,
      8,
      13,
      12,
      5,
      12,
      13,
      14,
      11,
      8,
      5,
      6
    ];
    var sh = [
      8,
      9,
      9,
      11,
      13,
      15,
      15,
      5,
      7,
      7,
      8,
      11,
      14,
      14,
      12,
      6,
      9,
      13,
      15,
      7,
      12,
      8,
      9,
      11,
      7,
      7,
      12,
      7,
      6,
      15,
      13,
      11,
      9,
      7,
      15,
      11,
      8,
      6,
      6,
      14,
      12,
      13,
      5,
      14,
      13,
      13,
      7,
      5,
      15,
      5,
      8,
      11,
      14,
      14,
      6,
      14,
      6,
      9,
      12,
      9,
      12,
      5,
      15,
      8,
      8,
      5,
      12,
      9,
      12,
      5,
      14,
      6,
      8,
      13,
      6,
      5,
      15,
      13,
      11,
      11
    ];
  }
});
var require_hmac = __commonJS({
  "../../node_modules/hash.js/lib/hash/hmac.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils5();
    var assert = require_minimalistic_assert();
    function Hmac(hash, key, enc) {
      if (!(this instanceof Hmac))
        return new Hmac(hash, key, enc);
      this.Hash = hash;
      this.blockSize = hash.blockSize / 8;
      this.outSize = hash.outSize / 8;
      this.inner = null;
      this.outer = null;
      this._init(utils.toArray(key, enc));
    }
    module.exports = Hmac;
    Hmac.prototype._init = function init(key) {
      if (key.length > this.blockSize)
        key = new this.Hash().update(key).digest();
      assert(key.length <= this.blockSize);
      for (var i = key.length; i < this.blockSize; i++)
        key.push(0);
      for (i = 0; i < key.length; i++)
        key[i] ^= 54;
      this.inner = new this.Hash().update(key);
      for (i = 0; i < key.length; i++)
        key[i] ^= 106;
      this.outer = new this.Hash().update(key);
    };
    Hmac.prototype.update = function update(msg, enc) {
      this.inner.update(msg, enc);
      return this;
    };
    Hmac.prototype.digest = function digest(enc) {
      this.outer.update(this.inner.digest());
      return this.outer.digest(enc);
    };
  }
});
var require_hash2 = __commonJS({
  "../../node_modules/hash.js/lib/hash.js"(exports) {
    init_process();
    init_buffer();
    var hash = exports;
    hash.utils = require_utils5();
    hash.common = require_common();
    hash.sha = require_sha3();
    hash.ripemd = require_ripemd();
    hash.hmac = require_hmac();
    hash.sha1 = hash.sha.sha1;
    hash.sha256 = hash.sha.sha256;
    hash.sha224 = hash.sha.sha224;
    hash.sha384 = hash.sha.sha384;
    hash.sha512 = hash.sha.sha512;
    hash.ripemd160 = hash.ripemd.ripemd160;
  }
});
var require_secp256k1 = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = {
      doubles: {
        step: 4,
        points: [
          [
            "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
            "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
          ],
          [
            "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
            "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
          ],
          [
            "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
            "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
          ],
          [
            "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
            "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
          ],
          [
            "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
            "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
          ],
          [
            "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
            "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
          ],
          [
            "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
            "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
          ],
          [
            "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
            "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
          ],
          [
            "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
            "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
          ],
          [
            "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
            "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
          ],
          [
            "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
            "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
          ],
          [
            "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
            "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
          ],
          [
            "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
            "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
          ],
          [
            "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
            "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
          ],
          [
            "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
            "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
          ],
          [
            "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
            "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
          ],
          [
            "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
            "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
          ],
          [
            "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
            "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
          ],
          [
            "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
            "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
          ],
          [
            "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
            "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
          ],
          [
            "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
            "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
          ],
          [
            "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
            "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
          ],
          [
            "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
            "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
          ],
          [
            "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
            "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
          ],
          [
            "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
            "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
          ],
          [
            "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
            "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
          ],
          [
            "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
            "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
          ],
          [
            "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
            "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
          ],
          [
            "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
            "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
          ],
          [
            "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
            "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
          ],
          [
            "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
            "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
          ],
          [
            "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
            "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
          ],
          [
            "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
            "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
          ],
          [
            "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
            "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
          ],
          [
            "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
            "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
          ],
          [
            "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
            "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
          ],
          [
            "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
            "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
          ],
          [
            "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
            "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
          ],
          [
            "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
            "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
          ],
          [
            "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
            "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
          ],
          [
            "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
            "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
          ],
          [
            "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
            "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
          ],
          [
            "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
            "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
          ],
          [
            "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
            "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
          ],
          [
            "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
            "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
          ],
          [
            "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
            "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
          ],
          [
            "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
            "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
          ],
          [
            "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
            "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
          ],
          [
            "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
            "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
          ],
          [
            "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
            "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
          ],
          [
            "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
            "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
          ],
          [
            "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
            "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
          ],
          [
            "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
            "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
          ],
          [
            "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
            "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
          ],
          [
            "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
            "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
          ],
          [
            "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
            "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
          ],
          [
            "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
            "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
          ],
          [
            "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
            "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
          ],
          [
            "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
            "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
          ],
          [
            "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
            "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
          ],
          [
            "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
            "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
          ],
          [
            "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
            "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
          ],
          [
            "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
            "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
          ],
          [
            "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
            "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
          ],
          [
            "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
            "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
          ]
        ]
      },
      naf: {
        wnd: 7,
        points: [
          [
            "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
            "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
          ],
          [
            "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
            "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
          ],
          [
            "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
            "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
          ],
          [
            "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
            "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
          ],
          [
            "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
            "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
          ],
          [
            "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
            "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
          ],
          [
            "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
            "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
          ],
          [
            "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
            "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
          ],
          [
            "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
            "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
          ],
          [
            "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
            "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
          ],
          [
            "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
            "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
          ],
          [
            "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
            "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
          ],
          [
            "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
            "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
          ],
          [
            "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
            "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
          ],
          [
            "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
            "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
          ],
          [
            "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
            "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
          ],
          [
            "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
            "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
          ],
          [
            "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
            "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
          ],
          [
            "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
            "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
          ],
          [
            "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
            "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
          ],
          [
            "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
            "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
          ],
          [
            "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
            "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
          ],
          [
            "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
            "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
          ],
          [
            "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
            "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
          ],
          [
            "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
            "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
          ],
          [
            "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
            "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
          ],
          [
            "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
            "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
          ],
          [
            "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
            "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
          ],
          [
            "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
            "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
          ],
          [
            "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
            "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
          ],
          [
            "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
            "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
          ],
          [
            "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
            "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
          ],
          [
            "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
            "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
          ],
          [
            "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
            "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
          ],
          [
            "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
            "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
          ],
          [
            "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
            "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
          ],
          [
            "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
            "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
          ],
          [
            "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
            "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
          ],
          [
            "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
            "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
          ],
          [
            "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
            "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
          ],
          [
            "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
            "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
          ],
          [
            "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
            "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
          ],
          [
            "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
            "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
          ],
          [
            "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
            "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
          ],
          [
            "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
            "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
          ],
          [
            "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
            "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
          ],
          [
            "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
            "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
          ],
          [
            "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
            "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
          ],
          [
            "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
            "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
          ],
          [
            "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
            "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
          ],
          [
            "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
            "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
          ],
          [
            "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
            "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
          ],
          [
            "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
            "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
          ],
          [
            "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
            "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
          ],
          [
            "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
            "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
          ],
          [
            "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
            "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
          ],
          [
            "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
            "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
          ],
          [
            "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
            "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
          ],
          [
            "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
            "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
          ],
          [
            "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
            "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
          ],
          [
            "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
            "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
          ],
          [
            "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
            "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
          ],
          [
            "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
            "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
          ],
          [
            "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
            "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
          ],
          [
            "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
            "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
          ],
          [
            "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
            "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
          ],
          [
            "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
            "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
          ],
          [
            "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
            "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
          ],
          [
            "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
            "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
          ],
          [
            "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
            "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
          ],
          [
            "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
            "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
          ],
          [
            "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
            "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
          ],
          [
            "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
            "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
          ],
          [
            "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
            "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
          ],
          [
            "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
            "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
          ],
          [
            "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
            "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
          ],
          [
            "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
            "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
          ],
          [
            "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
            "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
          ],
          [
            "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
            "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
          ],
          [
            "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
            "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
          ],
          [
            "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
            "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
          ],
          [
            "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
            "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
          ],
          [
            "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
            "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
          ],
          [
            "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
            "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
          ],
          [
            "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
            "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
          ],
          [
            "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
            "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
          ],
          [
            "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
            "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
          ],
          [
            "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
            "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
          ],
          [
            "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
            "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
          ],
          [
            "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
            "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
          ],
          [
            "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
            "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
          ],
          [
            "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
            "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
          ],
          [
            "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
            "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
          ],
          [
            "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
            "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
          ],
          [
            "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
            "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
          ],
          [
            "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
            "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
          ],
          [
            "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
            "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
          ],
          [
            "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
            "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
          ],
          [
            "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
            "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
          ],
          [
            "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
            "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
          ],
          [
            "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
            "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
          ],
          [
            "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
            "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
          ],
          [
            "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
            "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
          ],
          [
            "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
            "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
          ],
          [
            "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
            "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
          ],
          [
            "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
            "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
          ],
          [
            "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
            "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
          ],
          [
            "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
            "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
          ],
          [
            "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
            "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
          ],
          [
            "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
            "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
          ],
          [
            "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
            "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
          ],
          [
            "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
            "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
          ],
          [
            "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
            "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
          ],
          [
            "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
            "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
          ],
          [
            "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
            "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
          ],
          [
            "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
            "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
          ],
          [
            "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
            "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
          ],
          [
            "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
            "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
          ],
          [
            "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
            "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
          ],
          [
            "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
            "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
          ],
          [
            "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
            "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
          ],
          [
            "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
            "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
          ],
          [
            "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
            "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
          ],
          [
            "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
            "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
          ],
          [
            "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
            "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
          ],
          [
            "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
            "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
          ],
          [
            "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
            "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
          ]
        ]
      }
    };
  }
});
var require_curves = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/curves.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var curves = exports;
    var hash = require_hash2();
    var curve = require_curve();
    var utils = require_utils4();
    var assert = utils.assert;
    function PresetCurve(options) {
      if (options.type === "short")
        this.curve = new curve.short(options);
      else if (options.type === "edwards")
        this.curve = new curve.edwards(options);
      else
        this.curve = new curve.mont(options);
      this.g = this.curve.g;
      this.n = this.curve.n;
      this.hash = options.hash;
      assert(this.g.validate(), "Invalid curve");
      assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    curves.PresetCurve = PresetCurve;
    function defineCurve(name, options) {
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        get: function() {
          var curve2 = new PresetCurve(options);
          Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            value: curve2
          });
          return curve2;
        }
      });
    }
    defineCurve("p192", {
      type: "short",
      prime: "p192",
      p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
      b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
      n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
      hash: hash.sha256,
      gRed: false,
      g: [
        "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
        "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
      ]
    });
    defineCurve("p224", {
      type: "short",
      prime: "p224",
      p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
      b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
      n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
      hash: hash.sha256,
      gRed: false,
      g: [
        "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
        "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
      ]
    });
    defineCurve("p256", {
      type: "short",
      prime: null,
      p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
      a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
      b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
      n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
      hash: hash.sha256,
      gRed: false,
      g: [
        "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
        "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
      ]
    });
    defineCurve("p384", {
      type: "short",
      prime: null,
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
      a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
      b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
      n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
      hash: hash.sha384,
      gRed: false,
      g: [
        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
      ]
    });
    defineCurve("p521", {
      type: "short",
      prime: null,
      p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
      a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
      b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
      n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
      hash: hash.sha512,
      gRed: false,
      g: [
        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
      ]
    });
    defineCurve("curve25519", {
      type: "mont",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "76d06",
      b: "1",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: hash.sha256,
      gRed: false,
      g: [
        "9"
      ]
    });
    defineCurve("ed25519", {
      type: "edwards",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "-1",
      c: "1",
      d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: hash.sha256,
      gRed: false,
      g: [
        "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
        "6666666666666666666666666666666666666666666666666666666666666658"
      ]
    });
    var pre;
    try {
      pre = require_secp256k1();
    } catch (e) {
      pre = void 0;
    }
    defineCurve("secp256k1", {
      type: "short",
      prime: "k256",
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
      a: "0",
      b: "7",
      n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
      h: "1",
      hash: hash.sha256,
      beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
      lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
      basis: [
        {
          a: "3086d221a7d46bcde86c90e49284eb15",
          b: "-e4437ed6010e88286f547fa90abfe4c3"
        },
        {
          a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
          b: "3086d221a7d46bcde86c90e49284eb15"
        }
      ],
      gRed: false,
      g: [
        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
        pre
      ]
    });
  }
});
var require_hmac_drbg = __commonJS({
  "../../node_modules/hmac-drbg/lib/hmac-drbg.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var hash = require_hash2();
    var utils = require_utils3();
    var assert = require_minimalistic_assert();
    function HmacDRBG(options) {
      if (!(this instanceof HmacDRBG))
        return new HmacDRBG(options);
      this.hash = options.hash;
      this.predResist = !!options.predResist;
      this.outLen = this.hash.outSize;
      this.minEntropy = options.minEntropy || this.hash.hmacStrength;
      this._reseed = null;
      this.reseedInterval = null;
      this.K = null;
      this.V = null;
      var entropy = utils.toArray(options.entropy, options.entropyEnc || "hex");
      var nonce = utils.toArray(options.nonce, options.nonceEnc || "hex");
      var pers = utils.toArray(options.pers, options.persEnc || "hex");
      assert(
        entropy.length >= this.minEntropy / 8,
        "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
      );
      this._init(entropy, nonce, pers);
    }
    module.exports = HmacDRBG;
    HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
      var seed = entropy.concat(nonce).concat(pers);
      this.K = new Array(this.outLen / 8);
      this.V = new Array(this.outLen / 8);
      for (var i = 0; i < this.V.length; i++) {
        this.K[i] = 0;
        this.V[i] = 1;
      }
      this._update(seed);
      this._reseed = 1;
      this.reseedInterval = 281474976710656;
    };
    HmacDRBG.prototype._hmac = function hmac() {
      return new hash.hmac(this.hash, this.K);
    };
    HmacDRBG.prototype._update = function update(seed) {
      var kmac = this._hmac().update(this.V).update([0]);
      if (seed)
        kmac = kmac.update(seed);
      this.K = kmac.digest();
      this.V = this._hmac().update(this.V).digest();
      if (!seed)
        return;
      this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
      this.V = this._hmac().update(this.V).digest();
    };
    HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
      if (typeof entropyEnc !== "string") {
        addEnc = add;
        add = entropyEnc;
        entropyEnc = null;
      }
      entropy = utils.toArray(entropy, entropyEnc);
      add = utils.toArray(add, addEnc);
      assert(
        entropy.length >= this.minEntropy / 8,
        "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
      );
      this._update(entropy.concat(add || []));
      this._reseed = 1;
    };
    HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
      if (this._reseed > this.reseedInterval)
        throw new Error("Reseed is required");
      if (typeof enc !== "string") {
        addEnc = add;
        add = enc;
        enc = null;
      }
      if (add) {
        add = utils.toArray(add, addEnc || "hex");
        this._update(add);
      }
      var temp = [];
      while (temp.length < len) {
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
      }
      var res = temp.slice(0, len);
      this._update(add);
      this._reseed++;
      return utils.encode(res, enc);
    };
  }
});
var require_key = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/ec/key.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var BN = require_bn();
    var utils = require_utils4();
    var assert = utils.assert;
    function KeyPair(ec, options) {
      this.ec = ec;
      this.priv = null;
      this.pub = null;
      if (options.priv)
        this._importPrivate(options.priv, options.privEnc);
      if (options.pub)
        this._importPublic(options.pub, options.pubEnc);
    }
    module.exports = KeyPair;
    KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
      if (pub instanceof KeyPair)
        return pub;
      return new KeyPair(ec, {
        pub,
        pubEnc: enc
      });
    };
    KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
      if (priv instanceof KeyPair)
        return priv;
      return new KeyPair(ec, {
        priv,
        privEnc: enc
      });
    };
    KeyPair.prototype.validate = function validate() {
      var pub = this.getPublic();
      if (pub.isInfinity())
        return { result: false, reason: "Invalid public key" };
      if (!pub.validate())
        return { result: false, reason: "Public key is not a point" };
      if (!pub.mul(this.ec.curve.n).isInfinity())
        return { result: false, reason: "Public key * N != O" };
      return { result: true, reason: null };
    };
    KeyPair.prototype.getPublic = function getPublic(compact, enc) {
      if (typeof compact === "string") {
        enc = compact;
        compact = null;
      }
      if (!this.pub)
        this.pub = this.ec.g.mul(this.priv);
      if (!enc)
        return this.pub;
      return this.pub.encode(enc, compact);
    };
    KeyPair.prototype.getPrivate = function getPrivate(enc) {
      if (enc === "hex")
        return this.priv.toString(16, 2);
      else
        return this.priv;
    };
    KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
      this.priv = new BN(key, enc || 16);
      this.priv = this.priv.umod(this.ec.curve.n);
    };
    KeyPair.prototype._importPublic = function _importPublic(key, enc) {
      if (key.x || key.y) {
        if (this.ec.curve.type === "mont") {
          assert(key.x, "Need x coordinate");
        } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
          assert(key.x && key.y, "Need both x and y coordinate");
        }
        this.pub = this.ec.curve.point(key.x, key.y);
        return;
      }
      this.pub = this.ec.curve.decodePoint(key, enc);
    };
    KeyPair.prototype.derive = function derive(pub) {
      if (!pub.validate()) {
        assert(pub.validate(), "public point not validated");
      }
      return pub.mul(this.priv).getX();
    };
    KeyPair.prototype.sign = function sign(msg, enc, options) {
      return this.ec.sign(msg, this, enc, options);
    };
    KeyPair.prototype.verify = function verify(msg, signature) {
      return this.ec.verify(msg, signature, this);
    };
    KeyPair.prototype.inspect = function inspect() {
      return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
    };
  }
});
var require_signature = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/ec/signature.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var BN = require_bn();
    var utils = require_utils4();
    var assert = utils.assert;
    function Signature(options, enc) {
      if (options instanceof Signature)
        return options;
      if (this._importDER(options, enc))
        return;
      assert(options.r && options.s, "Signature without r or s");
      this.r = new BN(options.r, 16);
      this.s = new BN(options.s, 16);
      if (options.recoveryParam === void 0)
        this.recoveryParam = null;
      else
        this.recoveryParam = options.recoveryParam;
    }
    module.exports = Signature;
    function Position() {
      this.place = 0;
    }
    function getLength(buf, p) {
      var initial = buf[p.place++];
      if (!(initial & 128)) {
        return initial;
      }
      var octetLen = initial & 15;
      if (octetLen === 0 || octetLen > 4) {
        return false;
      }
      var val = 0;
      for (var i = 0, off = p.place; i < octetLen; i++, off++) {
        val <<= 8;
        val |= buf[off];
        val >>>= 0;
      }
      if (val <= 127) {
        return false;
      }
      p.place = off;
      return val;
    }
    function rmPadding(buf) {
      var i = 0;
      var len = buf.length - 1;
      while (!buf[i] && !(buf[i + 1] & 128) && i < len) {
        i++;
      }
      if (i === 0) {
        return buf;
      }
      return buf.slice(i);
    }
    Signature.prototype._importDER = function _importDER(data, enc) {
      data = utils.toArray(data, enc);
      var p = new Position();
      if (data[p.place++] !== 48) {
        return false;
      }
      var len = getLength(data, p);
      if (len === false) {
        return false;
      }
      if (len + p.place !== data.length) {
        return false;
      }
      if (data[p.place++] !== 2) {
        return false;
      }
      var rlen = getLength(data, p);
      if (rlen === false) {
        return false;
      }
      var r = data.slice(p.place, rlen + p.place);
      p.place += rlen;
      if (data[p.place++] !== 2) {
        return false;
      }
      var slen = getLength(data, p);
      if (slen === false) {
        return false;
      }
      if (data.length !== slen + p.place) {
        return false;
      }
      var s = data.slice(p.place, slen + p.place);
      if (r[0] === 0) {
        if (r[1] & 128) {
          r = r.slice(1);
        } else {
          return false;
        }
      }
      if (s[0] === 0) {
        if (s[1] & 128) {
          s = s.slice(1);
        } else {
          return false;
        }
      }
      this.r = new BN(r);
      this.s = new BN(s);
      this.recoveryParam = null;
      return true;
    };
    function constructLength(arr, len) {
      if (len < 128) {
        arr.push(len);
        return;
      }
      var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
      arr.push(octets | 128);
      while (--octets) {
        arr.push(len >>> (octets << 3) & 255);
      }
      arr.push(len);
    }
    Signature.prototype.toDER = function toDER(enc) {
      var r = this.r.toArray();
      var s = this.s.toArray();
      if (r[0] & 128)
        r = [0].concat(r);
      if (s[0] & 128)
        s = [0].concat(s);
      r = rmPadding(r);
      s = rmPadding(s);
      while (!s[0] && !(s[1] & 128)) {
        s = s.slice(1);
      }
      var arr = [2];
      constructLength(arr, r.length);
      arr = arr.concat(r);
      arr.push(2);
      constructLength(arr, s.length);
      var backHalf = arr.concat(s);
      var res = [48];
      constructLength(res, backHalf.length);
      res = res.concat(backHalf);
      return utils.encode(res, enc);
    };
  }
});
var require_ec = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/ec/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var BN = require_bn();
    var HmacDRBG = require_hmac_drbg();
    var utils = require_utils4();
    var curves = require_curves();
    var rand = require_brorand();
    var assert = utils.assert;
    var KeyPair = require_key();
    var Signature = require_signature();
    function EC(options) {
      if (!(this instanceof EC))
        return new EC(options);
      if (typeof options === "string") {
        assert(
          Object.prototype.hasOwnProperty.call(curves, options),
          "Unknown curve " + options
        );
        options = curves[options];
      }
      if (options instanceof curves.PresetCurve)
        options = { curve: options };
      this.curve = options.curve.curve;
      this.n = this.curve.n;
      this.nh = this.n.ushrn(1);
      this.g = this.curve.g;
      this.g = options.curve.g;
      this.g.precompute(options.curve.n.bitLength() + 1);
      this.hash = options.hash || options.curve.hash;
    }
    module.exports = EC;
    EC.prototype.keyPair = function keyPair(options) {
      return new KeyPair(this, options);
    };
    EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
      return KeyPair.fromPrivate(this, priv, enc);
    };
    EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
      return KeyPair.fromPublic(this, pub, enc);
    };
    EC.prototype.genKeyPair = function genKeyPair(options) {
      if (!options)
        options = {};
      var drbg = new HmacDRBG({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || "utf8",
        entropy: options.entropy || rand(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || "utf8",
        nonce: this.n.toArray()
      });
      var bytes = this.n.byteLength();
      var ns2 = this.n.sub(new BN(2));
      for (; ; ) {
        var priv = new BN(drbg.generate(bytes));
        if (priv.cmp(ns2) > 0)
          continue;
        priv.iaddn(1);
        return this.keyFromPrivate(priv);
      }
    };
    EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
      var delta = msg.byteLength() * 8 - this.n.bitLength();
      if (delta > 0)
        msg = msg.ushrn(delta);
      if (!truncOnly && msg.cmp(this.n) >= 0)
        return msg.sub(this.n);
      else
        return msg;
    };
    EC.prototype.sign = function sign(msg, key, enc, options) {
      if (typeof enc === "object") {
        options = enc;
        enc = null;
      }
      if (!options)
        options = {};
      key = this.keyFromPrivate(key, enc);
      msg = this._truncateToN(new BN(msg, 16));
      var bytes = this.n.byteLength();
      var bkey = key.getPrivate().toArray("be", bytes);
      var nonce = msg.toArray("be", bytes);
      var drbg = new HmacDRBG({
        hash: this.hash,
        entropy: bkey,
        nonce,
        pers: options.pers,
        persEnc: options.persEnc || "utf8"
      });
      var ns1 = this.n.sub(new BN(1));
      for (var iter = 0; ; iter++) {
        var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
        k = this._truncateToN(k, true);
        if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
          continue;
        var kp = this.g.mul(k);
        if (kp.isInfinity())
          continue;
        var kpX = kp.getX();
        var r = kpX.umod(this.n);
        if (r.cmpn(0) === 0)
          continue;
        var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
        s = s.umod(this.n);
        if (s.cmpn(0) === 0)
          continue;
        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
        if (options.canonical && s.cmp(this.nh) > 0) {
          s = this.n.sub(s);
          recoveryParam ^= 1;
        }
        return new Signature({ r, s, recoveryParam });
      }
    };
    EC.prototype.verify = function verify(msg, signature, key, enc) {
      msg = this._truncateToN(new BN(msg, 16));
      key = this.keyFromPublic(key, enc);
      signature = new Signature(signature, "hex");
      var r = signature.r;
      var s = signature.s;
      if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
        return false;
      if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
        return false;
      var sinv = s.invm(this.n);
      var u1 = sinv.mul(msg).umod(this.n);
      var u2 = sinv.mul(r).umod(this.n);
      var p;
      if (!this.curve._maxwellTrick) {
        p = this.g.mulAdd(u1, key.getPublic(), u2);
        if (p.isInfinity())
          return false;
        return p.getX().umod(this.n).cmp(r) === 0;
      }
      p = this.g.jmulAdd(u1, key.getPublic(), u2);
      if (p.isInfinity())
        return false;
      return p.eqXToP(r);
    };
    EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
      assert((3 & j) === j, "The recovery param is more than two bits");
      signature = new Signature(signature, enc);
      var n = this.n;
      var e = new BN(msg);
      var r = signature.r;
      var s = signature.s;
      var isYOdd = j & 1;
      var isSecondKey = j >> 1;
      if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
        throw new Error("Unable to find sencond key candinate");
      if (isSecondKey)
        r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
      else
        r = this.curve.pointFromX(r, isYOdd);
      var rInv = signature.r.invm(n);
      var s1 = n.sub(e).mul(rInv).umod(n);
      var s2 = s.mul(rInv).umod(n);
      return this.g.mulAdd(s1, r, s2);
    };
    EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
      signature = new Signature(signature, enc);
      if (signature.recoveryParam !== null)
        return signature.recoveryParam;
      for (var i = 0; i < 4; i++) {
        var Qprime;
        try {
          Qprime = this.recoverPubKey(e, signature, i);
        } catch (e2) {
          continue;
        }
        if (Qprime.eq(Q))
          return i;
      }
      throw new Error("Unable to find valid recovery factor");
    };
  }
});
var require_key2 = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/eddsa/key.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var utils = require_utils4();
    var assert = utils.assert;
    var parseBytes = utils.parseBytes;
    var cachedProperty = utils.cachedProperty;
    function KeyPair(eddsa, params) {
      this.eddsa = eddsa;
      this._secret = parseBytes(params.secret);
      if (eddsa.isPoint(params.pub))
        this._pub = params.pub;
      else
        this._pubBytes = parseBytes(params.pub);
    }
    KeyPair.fromPublic = function fromPublic(eddsa, pub) {
      if (pub instanceof KeyPair)
        return pub;
      return new KeyPair(eddsa, { pub });
    };
    KeyPair.fromSecret = function fromSecret(eddsa, secret) {
      if (secret instanceof KeyPair)
        return secret;
      return new KeyPair(eddsa, { secret });
    };
    KeyPair.prototype.secret = function secret() {
      return this._secret;
    };
    cachedProperty(KeyPair, "pubBytes", function pubBytes() {
      return this.eddsa.encodePoint(this.pub());
    });
    cachedProperty(KeyPair, "pub", function pub() {
      if (this._pubBytes)
        return this.eddsa.decodePoint(this._pubBytes);
      return this.eddsa.g.mul(this.priv());
    });
    cachedProperty(KeyPair, "privBytes", function privBytes() {
      var eddsa = this.eddsa;
      var hash = this.hash();
      var lastIx = eddsa.encodingLength - 1;
      var a = hash.slice(0, eddsa.encodingLength);
      a[0] &= 248;
      a[lastIx] &= 127;
      a[lastIx] |= 64;
      return a;
    });
    cachedProperty(KeyPair, "priv", function priv() {
      return this.eddsa.decodeInt(this.privBytes());
    });
    cachedProperty(KeyPair, "hash", function hash() {
      return this.eddsa.hash().update(this.secret()).digest();
    });
    cachedProperty(KeyPair, "messagePrefix", function messagePrefix() {
      return this.hash().slice(this.eddsa.encodingLength);
    });
    KeyPair.prototype.sign = function sign(message) {
      assert(this._secret, "KeyPair can only verify");
      return this.eddsa.sign(message, this);
    };
    KeyPair.prototype.verify = function verify(message, sig) {
      return this.eddsa.verify(message, sig, this);
    };
    KeyPair.prototype.getSecret = function getSecret(enc) {
      assert(this._secret, "KeyPair is public only");
      return utils.encode(this.secret(), enc);
    };
    KeyPair.prototype.getPublic = function getPublic(enc) {
      return utils.encode(this.pubBytes(), enc);
    };
    module.exports = KeyPair;
  }
});
var require_signature2 = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/eddsa/signature.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var BN = require_bn();
    var utils = require_utils4();
    var assert = utils.assert;
    var cachedProperty = utils.cachedProperty;
    var parseBytes = utils.parseBytes;
    function Signature(eddsa, sig) {
      this.eddsa = eddsa;
      if (typeof sig !== "object")
        sig = parseBytes(sig);
      if (Array.isArray(sig)) {
        sig = {
          R: sig.slice(0, eddsa.encodingLength),
          S: sig.slice(eddsa.encodingLength)
        };
      }
      assert(sig.R && sig.S, "Signature without R or S");
      if (eddsa.isPoint(sig.R))
        this._R = sig.R;
      if (sig.S instanceof BN)
        this._S = sig.S;
      this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
      this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
    }
    cachedProperty(Signature, "S", function S() {
      return this.eddsa.decodeInt(this.Sencoded());
    });
    cachedProperty(Signature, "R", function R() {
      return this.eddsa.decodePoint(this.Rencoded());
    });
    cachedProperty(Signature, "Rencoded", function Rencoded() {
      return this.eddsa.encodePoint(this.R());
    });
    cachedProperty(Signature, "Sencoded", function Sencoded() {
      return this.eddsa.encodeInt(this.S());
    });
    Signature.prototype.toBytes = function toBytes() {
      return this.Rencoded().concat(this.Sencoded());
    };
    Signature.prototype.toHex = function toHex() {
      return utils.encode(this.toBytes(), "hex").toUpperCase();
    };
    module.exports = Signature;
  }
});
var require_eddsa = __commonJS({
  "../../node_modules/elliptic/lib/elliptic/eddsa/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var hash = require_hash2();
    var curves = require_curves();
    var utils = require_utils4();
    var assert = utils.assert;
    var parseBytes = utils.parseBytes;
    var KeyPair = require_key2();
    var Signature = require_signature2();
    function EDDSA(curve) {
      assert(curve === "ed25519", "only tested with ed25519 so far");
      if (!(this instanceof EDDSA))
        return new EDDSA(curve);
      curve = curves[curve].curve;
      this.curve = curve;
      this.g = curve.g;
      this.g.precompute(curve.n.bitLength() + 1);
      this.pointClass = curve.point().constructor;
      this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
      this.hash = hash.sha512;
    }
    module.exports = EDDSA;
    EDDSA.prototype.sign = function sign(message, secret) {
      message = parseBytes(message);
      var key = this.keyFromSecret(secret);
      var r = this.hashInt(key.messagePrefix(), message);
      var R = this.g.mul(r);
      var Rencoded = this.encodePoint(R);
      var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
      var S = r.add(s_).umod(this.curve.n);
      return this.makeSignature({ R, S, Rencoded });
    };
    EDDSA.prototype.verify = function verify(message, sig, pub) {
      message = parseBytes(message);
      sig = this.makeSignature(sig);
      var key = this.keyFromPublic(pub);
      var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
      var SG = this.g.mul(sig.S());
      var RplusAh = sig.R().add(key.pub().mul(h));
      return RplusAh.eq(SG);
    };
    EDDSA.prototype.hashInt = function hashInt() {
      var hash2 = this.hash();
      for (var i = 0; i < arguments.length; i++)
        hash2.update(arguments[i]);
      return utils.intFromLE(hash2.digest()).umod(this.curve.n);
    };
    EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
      return KeyPair.fromPublic(this, pub);
    };
    EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
      return KeyPair.fromSecret(this, secret);
    };
    EDDSA.prototype.makeSignature = function makeSignature(sig) {
      if (sig instanceof Signature)
        return sig;
      return new Signature(this, sig);
    };
    EDDSA.prototype.encodePoint = function encodePoint(point) {
      var enc = point.getY().toArray("le", this.encodingLength);
      enc[this.encodingLength - 1] |= point.getX().isOdd() ? 128 : 0;
      return enc;
    };
    EDDSA.prototype.decodePoint = function decodePoint(bytes) {
      bytes = utils.parseBytes(bytes);
      var lastIx = bytes.length - 1;
      var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~128);
      var xIsOdd = (bytes[lastIx] & 128) !== 0;
      var y = utils.intFromLE(normed);
      return this.curve.pointFromY(y, xIsOdd);
    };
    EDDSA.prototype.encodeInt = function encodeInt(num) {
      return num.toArray("le", this.encodingLength);
    };
    EDDSA.prototype.decodeInt = function decodeInt(bytes) {
      return utils.intFromLE(bytes);
    };
    EDDSA.prototype.isPoint = function isPoint(val) {
      return val instanceof this.pointClass;
    };
  }
});
var require_elliptic = __commonJS({
  "../../node_modules/elliptic/lib/elliptic.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var elliptic = exports;
    elliptic.version = require_package2().version;
    elliptic.utils = require_utils4();
    elliptic.rand = require_brorand();
    elliptic.curve = require_curve();
    elliptic.curves = require_curves();
    elliptic.ec = require_ec();
    elliptic.eddsa = require_eddsa();
  }
});
var require_bn3 = __commonJS({
  "../../node_modules/browserify-sign/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_process();
    init_buffer();
    (function(module2, exports2) {
      "use strict";
      function assert(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN(number, base, endian) {
        if (BN.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base === "le" || base === "be") {
            endian = base;
            base = 10;
          }
          this._init(number || 0, base || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN;
      } else {
        exports2.BN = BN;
      }
      BN.BN = BN;
      BN.wordSize = 26;
      var Buffer;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer = window.Buffer;
        } else {
          Buffer = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN.isBN = function isBN(num) {
        if (num instanceof BN) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
      };
      BN.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN.prototype._init = function init(number, base, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base, endian);
        }
        if (base === "hex") {
          base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base, endian);
            }
          }
        }
      };
      BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base, endian);
      };
      BN.prototype._initArray = function _initArray(number, base, endian) {
        assert(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this._strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 48 && c <= 57) {
          return c - 48;
        } else if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          assert(false, "Invalid character in " + string);
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this._strip();
      };
      function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul;
          if (c >= 49) {
            b = c - 49 + 10;
          } else if (c >= 17) {
            b = c - 17 + 10;
          } else {
            b = c;
          }
          assert(c >= 0 && b < mul, "Invalid character");
          r += b;
        }
        return r;
      }
      BN.prototype._parseBase = function _parseBase(number, base, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base);
          for (i = 0; i < mod; i++) {
            pow *= base;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this._strip();
      };
      BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
      }
      BN.prototype._move = function _move(dest) {
        move(dest, this);
      };
      BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
      };
      BN.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN.prototype._strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") {
        try {
          BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect;
        } catch (e) {
          BN.prototype.inspect = inspect;
        }
      } else {
        BN.prototype.inspect = inspect;
      }
      function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      }
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
          var groupSize = groupSizes[base];
          var groupBase = groupBases[base];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modrn(groupBase).toString(base);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert(false, "Base should be between 2 and 36");
      };
      BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
      };
      if (Buffer) {
        BN.prototype.toBuffer = function toBuffer(endian, length) {
          return this.toArrayLike(Buffer, endian, length);
        };
      }
      BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      var allocate = function allocate2(ArrayType, size) {
        if (ArrayType.allocUnsafe) {
          return ArrayType.allocUnsafe(size);
        }
        return new ArrayType(size);
      };
      BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, "byte array longer than desired length");
        assert(reqLength > 0, "Requested array length <= 0");
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === "le" ? "LE" : "BE";
        this["_toArrayLike" + postfix](res, byteLength);
        return res;
      };
      BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = this.words[i] << shift | carry;
          res[position++] = word & 255;
          if (position < res.length) {
            res[position++] = word >> 8 & 255;
          }
          if (position < res.length) {
            res[position++] = word >> 16 & 255;
          }
          if (shift === 6) {
            if (position < res.length) {
              res[position++] = word >> 24 & 255;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }
        if (position < res.length) {
          res[position++] = carry;
          while (position < res.length) {
            res[position++] = 0;
          }
        }
      };
      BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = this.words[i] << shift | carry;
          res[position--] = word & 255;
          if (position >= 0) {
            res[position--] = word >> 8 & 255;
          }
          if (position >= 0) {
            res[position--] = word >> 16 & 255;
          }
          if (shift === 6) {
            if (position >= 0) {
              res[position--] = word >> 24 & 255;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }
        if (position >= 0) {
          res[position--] = carry;
          while (position >= 0) {
            res[position--] = 0;
          }
        }
      };
      if (Math.clz32) {
        BN.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = num.words[off] >>> wbit & 1;
        }
        return w;
      }
      BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN.prototype.neg = function neg() {
        return this.clone().ineg();
      };
      BN.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this._strip();
      };
      BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this._strip();
      };
      BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this._strip();
      };
      BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN.prototype.inotn = function inotn(width) {
        assert(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this._strip();
      };
      BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this._strip();
      };
      BN.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this._strip();
      };
      BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out._strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out._strip();
      }
      function jumboMulTo(self2, num, out) {
        return bigMulTo(self2, num, out);
      }
      BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for (var i = 0; i < N; i++) {
          t[i] = this.revBin(i, l, N);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for (var i = 0; i < N; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for (var s = 1; s < N; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for (N = N / 2 | 0; N; N = N >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1)
          return;
        for (var i = 0; i < N / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N - i - 1];
          rws[N - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N - i - 1];
          iws[N - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for (var i = 0; i < N / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N; ++i) {
          rws[i] = 0;
        }
        assert(carry === 0);
        assert((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for (var i = 0; i < N; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for (var i = 0; i < N; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
      };
      BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(typeof num === "number");
        assert(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return isNegNum ? this.ineg() : this;
      };
      BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this._strip();
      };
      BN.prototype.ishln = function ishln(bits) {
        assert(this.negative === 0);
        return this.iushln(bits);
      };
      BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this._strip();
      };
      BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN.prototype.testn = function testn(bit) {
        assert(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this._strip();
      };
      BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) <= num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN.prototype.isubn = function isubn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this._strip();
      };
      BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this._strip();
        assert(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this._strip();
      };
      BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q._strip();
        }
        a._strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN(0),
            mod: new BN(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN(this.modrn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN(this.modrn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return isNegNum ? -acc : acc;
      };
      BN.prototype.modn = function modn(num) {
        return this.modrn(num);
      };
      BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
      };
      BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN(1);
        var B = new BN(0);
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this._strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
      };
      BN.red = function red(num) {
        return new Red(num);
      };
      BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        assert(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN.prototype.fromRed = function fromRed() {
        assert(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN.prototype.redSub = function redSub(num) {
        assert(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN.prototype.redISub = function redISub(num) {
        assert(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN.prototype.redShl = function redShl(num) {
        assert(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN.prototype.redMul = function redMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN.prototype.redSqr = function redSqr() {
        assert(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN.prototype.redISqr = function redISqr() {
        assert(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN.prototype.redInvm = function redInvm() {
        assert(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN.prototype.redNeg = function redNeg() {
        assert(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(
          this,
          "k256",
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
        );
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(
          this,
          "p224",
          "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
        );
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(
          this,
          "p192",
          "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
        );
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(
          this,
          "25519",
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
        );
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, "red works only with positives");
        assert(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, "red works only with positives");
        assert(
          a.red && a.red === b.red,
          "red works only with red numbers"
        );
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
      };
      Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert(i < m);
          var b = this.pow(c, new BN(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero())
          return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});
var require_safer = __commonJS({
  "../../node_modules/safer-buffer/safer.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var buffer = require_buffer();
    var Buffer = buffer.Buffer;
    var safer = {};
    var key;
    for (key in buffer) {
      if (!buffer.hasOwnProperty(key))
        continue;
      if (key === "SlowBuffer" || key === "Buffer")
        continue;
      safer[key] = buffer[key];
    }
    var Safer = safer.Buffer = {};
    for (key in Buffer) {
      if (!Buffer.hasOwnProperty(key))
        continue;
      if (key === "allocUnsafe" || key === "allocUnsafeSlow")
        continue;
      Safer[key] = Buffer[key];
    }
    safer.Buffer.prototype = Buffer.prototype;
    if (!Safer.from || Safer.from === Uint8Array.from) {
      Safer.from = function(value, encodingOrOffset, length) {
        if (typeof value === "number") {
          throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value);
        }
        if (value && typeof value.length === "undefined") {
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
        }
        return Buffer(value, encodingOrOffset, length);
      };
    }
    if (!Safer.alloc) {
      Safer.alloc = function(size, fill, encoding) {
        if (typeof size !== "number") {
          throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size);
        }
        if (size < 0 || size >= 2 * (1 << 30)) {
          throw new RangeError('The value "' + size + '" is invalid for option "size"');
        }
        var buf = Buffer(size);
        if (!fill || fill.length === 0) {
          buf.fill(0);
        } else if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
        return buf;
      };
    }
    if (!safer.kStringMaxLength) {
      try {
        safer.kStringMaxLength = process.binding("buffer").kStringMaxLength;
      } catch (e) {
      }
    }
    if (!safer.constants) {
      safer.constants = {
        MAX_LENGTH: safer.kMaxLength
      };
      if (safer.kStringMaxLength) {
        safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;
      }
    }
    module.exports = safer;
  }
});
var require_reporter = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/base/reporter.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    function Reporter(options) {
      this._reporterState = {
        obj: null,
        path: [],
        options: options || {},
        errors: []
      };
    }
    exports.Reporter = Reporter;
    Reporter.prototype.isError = function isError(obj) {
      return obj instanceof ReporterError;
    };
    Reporter.prototype.save = function save() {
      const state = this._reporterState;
      return { obj: state.obj, pathLen: state.path.length };
    };
    Reporter.prototype.restore = function restore(data) {
      const state = this._reporterState;
      state.obj = data.obj;
      state.path = state.path.slice(0, data.pathLen);
    };
    Reporter.prototype.enterKey = function enterKey(key) {
      return this._reporterState.path.push(key);
    };
    Reporter.prototype.exitKey = function exitKey(index) {
      const state = this._reporterState;
      state.path = state.path.slice(0, index - 1);
    };
    Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
      const state = this._reporterState;
      this.exitKey(index);
      if (state.obj !== null)
        state.obj[key] = value;
    };
    Reporter.prototype.path = function path() {
      return this._reporterState.path.join("/");
    };
    Reporter.prototype.enterObject = function enterObject() {
      const state = this._reporterState;
      const prev = state.obj;
      state.obj = {};
      return prev;
    };
    Reporter.prototype.leaveObject = function leaveObject(prev) {
      const state = this._reporterState;
      const now = state.obj;
      state.obj = prev;
      return now;
    };
    Reporter.prototype.error = function error(msg) {
      let err;
      const state = this._reporterState;
      const inherited = msg instanceof ReporterError;
      if (inherited) {
        err = msg;
      } else {
        err = new ReporterError(state.path.map(function(elem) {
          return "[" + JSON.stringify(elem) + "]";
        }).join(""), msg.message || msg, msg.stack);
      }
      if (!state.options.partial)
        throw err;
      if (!inherited)
        state.errors.push(err);
      return err;
    };
    Reporter.prototype.wrapResult = function wrapResult(result) {
      const state = this._reporterState;
      if (!state.options.partial)
        return result;
      return {
        result: this.isError(result) ? null : result,
        errors: state.errors
      };
    };
    function ReporterError(path, msg) {
      this.path = path;
      this.rethrow(msg);
    }
    inherits(ReporterError, Error);
    ReporterError.prototype.rethrow = function rethrow(msg) {
      this.message = msg + " at: " + (this.path || "(shallow)");
      if (Error.captureStackTrace)
        Error.captureStackTrace(this, ReporterError);
      if (!this.stack) {
        try {
          throw new Error(this.message);
        } catch (e) {
          this.stack = e.stack;
        }
      }
      return this;
    };
  }
});
var require_buffer3 = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/base/buffer.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Reporter = require_reporter().Reporter;
    var Buffer = require_safer().Buffer;
    function DecoderBuffer(base, options) {
      Reporter.call(this, options);
      if (!Buffer.isBuffer(base)) {
        this.error("Input not Buffer");
        return;
      }
      this.base = base;
      this.offset = 0;
      this.length = base.length;
    }
    inherits(DecoderBuffer, Reporter);
    exports.DecoderBuffer = DecoderBuffer;
    DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
      if (data instanceof DecoderBuffer) {
        return true;
      }
      const isCompatible = typeof data === "object" && Buffer.isBuffer(data.base) && data.constructor.name === "DecoderBuffer" && typeof data.offset === "number" && typeof data.length === "number" && typeof data.save === "function" && typeof data.restore === "function" && typeof data.isEmpty === "function" && typeof data.readUInt8 === "function" && typeof data.skip === "function" && typeof data.raw === "function";
      return isCompatible;
    };
    DecoderBuffer.prototype.save = function save() {
      return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
    };
    DecoderBuffer.prototype.restore = function restore(save) {
      const res = new DecoderBuffer(this.base);
      res.offset = save.offset;
      res.length = this.offset;
      this.offset = save.offset;
      Reporter.prototype.restore.call(this, save.reporter);
      return res;
    };
    DecoderBuffer.prototype.isEmpty = function isEmpty() {
      return this.offset === this.length;
    };
    DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
      if (this.offset + 1 <= this.length)
        return this.base.readUInt8(this.offset++, true);
      else
        return this.error(fail || "DecoderBuffer overrun");
    };
    DecoderBuffer.prototype.skip = function skip(bytes, fail) {
      if (!(this.offset + bytes <= this.length))
        return this.error(fail || "DecoderBuffer overrun");
      const res = new DecoderBuffer(this.base);
      res._reporterState = this._reporterState;
      res.offset = this.offset;
      res.length = this.offset + bytes;
      this.offset += bytes;
      return res;
    };
    DecoderBuffer.prototype.raw = function raw(save) {
      return this.base.slice(save ? save.offset : this.offset, this.length);
    };
    function EncoderBuffer(value, reporter) {
      if (Array.isArray(value)) {
        this.length = 0;
        this.value = value.map(function(item) {
          if (!EncoderBuffer.isEncoderBuffer(item))
            item = new EncoderBuffer(item, reporter);
          this.length += item.length;
          return item;
        }, this);
      } else if (typeof value === "number") {
        if (!(0 <= value && value <= 255))
          return reporter.error("non-byte EncoderBuffer value");
        this.value = value;
        this.length = 1;
      } else if (typeof value === "string") {
        this.value = value;
        this.length = Buffer.byteLength(value);
      } else if (Buffer.isBuffer(value)) {
        this.value = value;
        this.length = value.length;
      } else {
        return reporter.error("Unsupported type: " + typeof value);
      }
    }
    exports.EncoderBuffer = EncoderBuffer;
    EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
      if (data instanceof EncoderBuffer) {
        return true;
      }
      const isCompatible = typeof data === "object" && data.constructor.name === "EncoderBuffer" && typeof data.length === "number" && typeof data.join === "function";
      return isCompatible;
    };
    EncoderBuffer.prototype.join = function join(out, offset) {
      if (!out)
        out = Buffer.alloc(this.length);
      if (!offset)
        offset = 0;
      if (this.length === 0)
        return out;
      if (Array.isArray(this.value)) {
        this.value.forEach(function(item) {
          item.join(out, offset);
          offset += item.length;
        });
      } else {
        if (typeof this.value === "number")
          out[offset] = this.value;
        else if (typeof this.value === "string")
          out.write(this.value, offset);
        else if (Buffer.isBuffer(this.value))
          this.value.copy(out, offset);
        offset += this.length;
      }
      return out;
    };
  }
});
var require_node3 = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/base/node.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var Reporter = require_reporter().Reporter;
    var EncoderBuffer = require_buffer3().EncoderBuffer;
    var DecoderBuffer = require_buffer3().DecoderBuffer;
    var assert = require_minimalistic_assert();
    var tags = [
      "seq",
      "seqof",
      "set",
      "setof",
      "objid",
      "bool",
      "gentime",
      "utctime",
      "null_",
      "enum",
      "int",
      "objDesc",
      "bitstr",
      "bmpstr",
      "charstr",
      "genstr",
      "graphstr",
      "ia5str",
      "iso646str",
      "numstr",
      "octstr",
      "printstr",
      "t61str",
      "unistr",
      "utf8str",
      "videostr"
    ];
    var methods = [
      "key",
      "obj",
      "use",
      "optional",
      "explicit",
      "implicit",
      "def",
      "choice",
      "any",
      "contains"
    ].concat(tags);
    var overrided = [
      "_peekTag",
      "_decodeTag",
      "_use",
      "_decodeStr",
      "_decodeObjid",
      "_decodeTime",
      "_decodeNull",
      "_decodeInt",
      "_decodeBool",
      "_decodeList",
      "_encodeComposite",
      "_encodeStr",
      "_encodeObjid",
      "_encodeTime",
      "_encodeNull",
      "_encodeInt",
      "_encodeBool"
    ];
    function Node2(enc, parent, name) {
      const state = {};
      this._baseState = state;
      state.name = name;
      state.enc = enc;
      state.parent = parent || null;
      state.children = null;
      state.tag = null;
      state.args = null;
      state.reverseArgs = null;
      state.choice = null;
      state.optional = false;
      state.any = false;
      state.obj = false;
      state.use = null;
      state.useDecoder = null;
      state.key = null;
      state["default"] = null;
      state.explicit = null;
      state.implicit = null;
      state.contains = null;
      if (!state.parent) {
        state.children = [];
        this._wrap();
      }
    }
    module.exports = Node2;
    var stateProps = [
      "enc",
      "parent",
      "children",
      "tag",
      "args",
      "reverseArgs",
      "choice",
      "optional",
      "any",
      "obj",
      "use",
      "alteredUse",
      "key",
      "default",
      "explicit",
      "implicit",
      "contains"
    ];
    Node2.prototype.clone = function clone() {
      const state = this._baseState;
      const cstate = {};
      stateProps.forEach(function(prop) {
        cstate[prop] = state[prop];
      });
      const res = new this.constructor(cstate.parent);
      res._baseState = cstate;
      return res;
    };
    Node2.prototype._wrap = function wrap() {
      const state = this._baseState;
      methods.forEach(function(method) {
        this[method] = function _wrappedMethod() {
          const clone = new this.constructor(this);
          state.children.push(clone);
          return clone[method].apply(clone, arguments);
        };
      }, this);
    };
    Node2.prototype._init = function init(body) {
      const state = this._baseState;
      assert(state.parent === null);
      body.call(this);
      state.children = state.children.filter(function(child) {
        return child._baseState.parent === this;
      }, this);
      assert.equal(state.children.length, 1, "Root node can have only one child");
    };
    Node2.prototype._useArgs = function useArgs(args) {
      const state = this._baseState;
      const children = args.filter(function(arg) {
        return arg instanceof this.constructor;
      }, this);
      args = args.filter(function(arg) {
        return !(arg instanceof this.constructor);
      }, this);
      if (children.length !== 0) {
        assert(state.children === null);
        state.children = children;
        children.forEach(function(child) {
          child._baseState.parent = this;
        }, this);
      }
      if (args.length !== 0) {
        assert(state.args === null);
        state.args = args;
        state.reverseArgs = args.map(function(arg) {
          if (typeof arg !== "object" || arg.constructor !== Object)
            return arg;
          const res = {};
          Object.keys(arg).forEach(function(key) {
            if (key == (key | 0))
              key |= 0;
            const value = arg[key];
            res[value] = key;
          });
          return res;
        });
      }
    };
    overrided.forEach(function(method) {
      Node2.prototype[method] = function _overrided() {
        const state = this._baseState;
        throw new Error(method + " not implemented for encoding: " + state.enc);
      };
    });
    tags.forEach(function(tag) {
      Node2.prototype[tag] = function _tagMethod() {
        const state = this._baseState;
        const args = Array.prototype.slice.call(arguments);
        assert(state.tag === null);
        state.tag = tag;
        this._useArgs(args);
        return this;
      };
    });
    Node2.prototype.use = function use(item) {
      assert(item);
      const state = this._baseState;
      assert(state.use === null);
      state.use = item;
      return this;
    };
    Node2.prototype.optional = function optional() {
      const state = this._baseState;
      state.optional = true;
      return this;
    };
    Node2.prototype.def = function def(val) {
      const state = this._baseState;
      assert(state["default"] === null);
      state["default"] = val;
      state.optional = true;
      return this;
    };
    Node2.prototype.explicit = function explicit(num) {
      const state = this._baseState;
      assert(state.explicit === null && state.implicit === null);
      state.explicit = num;
      return this;
    };
    Node2.prototype.implicit = function implicit(num) {
      const state = this._baseState;
      assert(state.explicit === null && state.implicit === null);
      state.implicit = num;
      return this;
    };
    Node2.prototype.obj = function obj() {
      const state = this._baseState;
      const args = Array.prototype.slice.call(arguments);
      state.obj = true;
      if (args.length !== 0)
        this._useArgs(args);
      return this;
    };
    Node2.prototype.key = function key(newKey) {
      const state = this._baseState;
      assert(state.key === null);
      state.key = newKey;
      return this;
    };
    Node2.prototype.any = function any() {
      const state = this._baseState;
      state.any = true;
      return this;
    };
    Node2.prototype.choice = function choice(obj) {
      const state = this._baseState;
      assert(state.choice === null);
      state.choice = obj;
      this._useArgs(Object.keys(obj).map(function(key) {
        return obj[key];
      }));
      return this;
    };
    Node2.prototype.contains = function contains(item) {
      const state = this._baseState;
      assert(state.use === null);
      state.contains = item;
      return this;
    };
    Node2.prototype._decode = function decode(input, options) {
      const state = this._baseState;
      if (state.parent === null)
        return input.wrapResult(state.children[0]._decode(input, options));
      let result = state["default"];
      let present = true;
      let prevKey = null;
      if (state.key !== null)
        prevKey = input.enterKey(state.key);
      if (state.optional) {
        let tag = null;
        if (state.explicit !== null)
          tag = state.explicit;
        else if (state.implicit !== null)
          tag = state.implicit;
        else if (state.tag !== null)
          tag = state.tag;
        if (tag === null && !state.any) {
          const save = input.save();
          try {
            if (state.choice === null)
              this._decodeGeneric(state.tag, input, options);
            else
              this._decodeChoice(input, options);
            present = true;
          } catch (e) {
            present = false;
          }
          input.restore(save);
        } else {
          present = this._peekTag(input, tag, state.any);
          if (input.isError(present))
            return present;
        }
      }
      let prevObj;
      if (state.obj && present)
        prevObj = input.enterObject();
      if (present) {
        if (state.explicit !== null) {
          const explicit = this._decodeTag(input, state.explicit);
          if (input.isError(explicit))
            return explicit;
          input = explicit;
        }
        const start = input.offset;
        if (state.use === null && state.choice === null) {
          let save;
          if (state.any)
            save = input.save();
          const body = this._decodeTag(
            input,
            state.implicit !== null ? state.implicit : state.tag,
            state.any
          );
          if (input.isError(body))
            return body;
          if (state.any)
            result = input.raw(save);
          else
            input = body;
        }
        if (options && options.track && state.tag !== null)
          options.track(input.path(), start, input.length, "tagged");
        if (options && options.track && state.tag !== null)
          options.track(input.path(), input.offset, input.length, "content");
        if (state.any) {
        } else if (state.choice === null) {
          result = this._decodeGeneric(state.tag, input, options);
        } else {
          result = this._decodeChoice(input, options);
        }
        if (input.isError(result))
          return result;
        if (!state.any && state.choice === null && state.children !== null) {
          state.children.forEach(function decodeChildren(child) {
            child._decode(input, options);
          });
        }
        if (state.contains && (state.tag === "octstr" || state.tag === "bitstr")) {
          const data = new DecoderBuffer(result);
          result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);
        }
      }
      if (state.obj && present)
        result = input.leaveObject(prevObj);
      if (state.key !== null && (result !== null || present === true))
        input.leaveKey(prevKey, state.key, result);
      else if (prevKey !== null)
        input.exitKey(prevKey);
      return result;
    };
    Node2.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
      const state = this._baseState;
      if (tag === "seq" || tag === "set")
        return null;
      if (tag === "seqof" || tag === "setof")
        return this._decodeList(input, tag, state.args[0], options);
      else if (/str$/.test(tag))
        return this._decodeStr(input, tag, options);
      else if (tag === "objid" && state.args)
        return this._decodeObjid(input, state.args[0], state.args[1], options);
      else if (tag === "objid")
        return this._decodeObjid(input, null, null, options);
      else if (tag === "gentime" || tag === "utctime")
        return this._decodeTime(input, tag, options);
      else if (tag === "null_")
        return this._decodeNull(input, options);
      else if (tag === "bool")
        return this._decodeBool(input, options);
      else if (tag === "objDesc")
        return this._decodeStr(input, tag, options);
      else if (tag === "int" || tag === "enum")
        return this._decodeInt(input, state.args && state.args[0], options);
      if (state.use !== null) {
        return this._getUse(state.use, input._reporterState.obj)._decode(input, options);
      } else {
        return input.error("unknown tag: " + tag);
      }
    };
    Node2.prototype._getUse = function _getUse(entity, obj) {
      const state = this._baseState;
      state.useDecoder = this._use(entity, obj);
      assert(state.useDecoder._baseState.parent === null);
      state.useDecoder = state.useDecoder._baseState.children[0];
      if (state.implicit !== state.useDecoder._baseState.implicit) {
        state.useDecoder = state.useDecoder.clone();
        state.useDecoder._baseState.implicit = state.implicit;
      }
      return state.useDecoder;
    };
    Node2.prototype._decodeChoice = function decodeChoice(input, options) {
      const state = this._baseState;
      let result = null;
      let match = false;
      Object.keys(state.choice).some(function(key) {
        const save = input.save();
        const node = state.choice[key];
        try {
          const value = node._decode(input, options);
          if (input.isError(value))
            return false;
          result = { type: key, value };
          match = true;
        } catch (e) {
          input.restore(save);
          return false;
        }
        return true;
      }, this);
      if (!match)
        return input.error("Choice not matched");
      return result;
    };
    Node2.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
      return new EncoderBuffer(data, this.reporter);
    };
    Node2.prototype._encode = function encode(data, reporter, parent) {
      const state = this._baseState;
      if (state["default"] !== null && state["default"] === data)
        return;
      const result = this._encodeValue(data, reporter, parent);
      if (result === void 0)
        return;
      if (this._skipDefault(result, reporter, parent))
        return;
      return result;
    };
    Node2.prototype._encodeValue = function encode(data, reporter, parent) {
      const state = this._baseState;
      if (state.parent === null)
        return state.children[0]._encode(data, reporter || new Reporter());
      let result = null;
      this.reporter = reporter;
      if (state.optional && data === void 0) {
        if (state["default"] !== null)
          data = state["default"];
        else
          return;
      }
      let content = null;
      let primitive = false;
      if (state.any) {
        result = this._createEncoderBuffer(data);
      } else if (state.choice) {
        result = this._encodeChoice(data, reporter);
      } else if (state.contains) {
        content = this._getUse(state.contains, parent)._encode(data, reporter);
        primitive = true;
      } else if (state.children) {
        content = state.children.map(function(child) {
          if (child._baseState.tag === "null_")
            return child._encode(null, reporter, data);
          if (child._baseState.key === null)
            return reporter.error("Child should have a key");
          const prevKey = reporter.enterKey(child._baseState.key);
          if (typeof data !== "object")
            return reporter.error("Child expected, but input is not object");
          const res = child._encode(data[child._baseState.key], reporter, data);
          reporter.leaveKey(prevKey);
          return res;
        }, this).filter(function(child) {
          return child;
        });
        content = this._createEncoderBuffer(content);
      } else {
        if (state.tag === "seqof" || state.tag === "setof") {
          if (!(state.args && state.args.length === 1))
            return reporter.error("Too many args for : " + state.tag);
          if (!Array.isArray(data))
            return reporter.error("seqof/setof, but data is not Array");
          const child = this.clone();
          child._baseState.implicit = null;
          content = this._createEncoderBuffer(data.map(function(item) {
            const state2 = this._baseState;
            return this._getUse(state2.args[0], data)._encode(item, reporter);
          }, child));
        } else if (state.use !== null) {
          result = this._getUse(state.use, parent)._encode(data, reporter);
        } else {
          content = this._encodePrimitive(state.tag, data);
          primitive = true;
        }
      }
      if (!state.any && state.choice === null) {
        const tag = state.implicit !== null ? state.implicit : state.tag;
        const cls = state.implicit === null ? "universal" : "context";
        if (tag === null) {
          if (state.use === null)
            reporter.error("Tag could be omitted only for .use()");
        } else {
          if (state.use === null)
            result = this._encodeComposite(tag, primitive, cls, content);
        }
      }
      if (state.explicit !== null)
        result = this._encodeComposite(state.explicit, false, "context", result);
      return result;
    };
    Node2.prototype._encodeChoice = function encodeChoice(data, reporter) {
      const state = this._baseState;
      const node = state.choice[data.type];
      if (!node) {
        assert(
          false,
          data.type + " not found in " + JSON.stringify(Object.keys(state.choice))
        );
      }
      return node._encode(data.value, reporter);
    };
    Node2.prototype._encodePrimitive = function encodePrimitive(tag, data) {
      const state = this._baseState;
      if (/str$/.test(tag))
        return this._encodeStr(data, tag);
      else if (tag === "objid" && state.args)
        return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
      else if (tag === "objid")
        return this._encodeObjid(data, null, null);
      else if (tag === "gentime" || tag === "utctime")
        return this._encodeTime(data, tag);
      else if (tag === "null_")
        return this._encodeNull();
      else if (tag === "int" || tag === "enum")
        return this._encodeInt(data, state.args && state.reverseArgs[0]);
      else if (tag === "bool")
        return this._encodeBool(data);
      else if (tag === "objDesc")
        return this._encodeStr(data, tag);
      else
        throw new Error("Unsupported tag: " + tag);
    };
    Node2.prototype._isNumstr = function isNumstr(str) {
      return /^[0-9 ]*$/.test(str);
    };
    Node2.prototype._isPrintstr = function isPrintstr(str) {
      return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
    };
  }
});
var require_der = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/constants/der.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    function reverse(map) {
      const res = {};
      Object.keys(map).forEach(function(key) {
        if ((key | 0) == key)
          key = key | 0;
        const value = map[key];
        res[value] = key;
      });
      return res;
    }
    exports.tagClass = {
      0: "universal",
      1: "application",
      2: "context",
      3: "private"
    };
    exports.tagClassByName = reverse(exports.tagClass);
    exports.tag = {
      0: "end",
      1: "bool",
      2: "int",
      3: "bitstr",
      4: "octstr",
      5: "null_",
      6: "objid",
      7: "objDesc",
      8: "external",
      9: "real",
      10: "enum",
      11: "embed",
      12: "utf8str",
      13: "relativeOid",
      16: "seq",
      17: "set",
      18: "numstr",
      19: "printstr",
      20: "t61str",
      21: "videostr",
      22: "ia5str",
      23: "utctime",
      24: "gentime",
      25: "graphstr",
      26: "iso646str",
      27: "genstr",
      28: "unistr",
      29: "charstr",
      30: "bmpstr"
    };
    exports.tagByName = reverse(exports.tag);
  }
});
var require_der2 = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/encoders/der.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Buffer = require_safer().Buffer;
    var Node2 = require_node3();
    var der = require_der();
    function DEREncoder(entity) {
      this.enc = "der";
      this.name = entity.name;
      this.entity = entity;
      this.tree = new DERNode();
      this.tree._init(entity.body);
    }
    module.exports = DEREncoder;
    DEREncoder.prototype.encode = function encode(data, reporter) {
      return this.tree._encode(data, reporter).join();
    };
    function DERNode(parent) {
      Node2.call(this, "der", parent);
    }
    inherits(DERNode, Node2);
    DERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {
      const encodedTag = encodeTag(tag, primitive, cls, this.reporter);
      if (content.length < 128) {
        const header2 = Buffer.alloc(2);
        header2[0] = encodedTag;
        header2[1] = content.length;
        return this._createEncoderBuffer([header2, content]);
      }
      let lenOctets = 1;
      for (let i = content.length; i >= 256; i >>= 8)
        lenOctets++;
      const header = Buffer.alloc(1 + 1 + lenOctets);
      header[0] = encodedTag;
      header[1] = 128 | lenOctets;
      for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
        header[i] = j & 255;
      return this._createEncoderBuffer([header, content]);
    };
    DERNode.prototype._encodeStr = function encodeStr(str, tag) {
      if (tag === "bitstr") {
        return this._createEncoderBuffer([str.unused | 0, str.data]);
      } else if (tag === "bmpstr") {
        const buf = Buffer.alloc(str.length * 2);
        for (let i = 0; i < str.length; i++) {
          buf.writeUInt16BE(str.charCodeAt(i), i * 2);
        }
        return this._createEncoderBuffer(buf);
      } else if (tag === "numstr") {
        if (!this._isNumstr(str)) {
          return this.reporter.error("Encoding of string type: numstr supports only digits and space");
        }
        return this._createEncoderBuffer(str);
      } else if (tag === "printstr") {
        if (!this._isPrintstr(str)) {
          return this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark");
        }
        return this._createEncoderBuffer(str);
      } else if (/str$/.test(tag)) {
        return this._createEncoderBuffer(str);
      } else if (tag === "objDesc") {
        return this._createEncoderBuffer(str);
      } else {
        return this.reporter.error("Encoding of string type: " + tag + " unsupported");
      }
    };
    DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
      if (typeof id === "string") {
        if (!values)
          return this.reporter.error("string objid given, but no values map found");
        if (!values.hasOwnProperty(id))
          return this.reporter.error("objid not found in values map");
        id = values[id].split(/[\s.]+/g);
        for (let i = 0; i < id.length; i++)
          id[i] |= 0;
      } else if (Array.isArray(id)) {
        id = id.slice();
        for (let i = 0; i < id.length; i++)
          id[i] |= 0;
      }
      if (!Array.isArray(id)) {
        return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(id));
      }
      if (!relative) {
        if (id[1] >= 40)
          return this.reporter.error("Second objid identifier OOB");
        id.splice(0, 2, id[0] * 40 + id[1]);
      }
      let size = 0;
      for (let i = 0; i < id.length; i++) {
        let ident = id[i];
        for (size++; ident >= 128; ident >>= 7)
          size++;
      }
      const objid = Buffer.alloc(size);
      let offset = objid.length - 1;
      for (let i = id.length - 1; i >= 0; i--) {
        let ident = id[i];
        objid[offset--] = ident & 127;
        while ((ident >>= 7) > 0)
          objid[offset--] = 128 | ident & 127;
      }
      return this._createEncoderBuffer(objid);
    };
    function two(num) {
      if (num < 10)
        return "0" + num;
      else
        return num;
    }
    DERNode.prototype._encodeTime = function encodeTime(time, tag) {
      let str;
      const date = new Date(time);
      if (tag === "gentime") {
        str = [
          two(date.getUTCFullYear()),
          two(date.getUTCMonth() + 1),
          two(date.getUTCDate()),
          two(date.getUTCHours()),
          two(date.getUTCMinutes()),
          two(date.getUTCSeconds()),
          "Z"
        ].join("");
      } else if (tag === "utctime") {
        str = [
          two(date.getUTCFullYear() % 100),
          two(date.getUTCMonth() + 1),
          two(date.getUTCDate()),
          two(date.getUTCHours()),
          two(date.getUTCMinutes()),
          two(date.getUTCSeconds()),
          "Z"
        ].join("");
      } else {
        this.reporter.error("Encoding " + tag + " time is not supported yet");
      }
      return this._encodeStr(str, "octstr");
    };
    DERNode.prototype._encodeNull = function encodeNull() {
      return this._createEncoderBuffer("");
    };
    DERNode.prototype._encodeInt = function encodeInt(num, values) {
      if (typeof num === "string") {
        if (!values)
          return this.reporter.error("String int or enum given, but no values map");
        if (!values.hasOwnProperty(num)) {
          return this.reporter.error("Values map doesn't contain: " + JSON.stringify(num));
        }
        num = values[num];
      }
      if (typeof num !== "number" && !Buffer.isBuffer(num)) {
        const numArray = num.toArray();
        if (!num.sign && numArray[0] & 128) {
          numArray.unshift(0);
        }
        num = Buffer.from(numArray);
      }
      if (Buffer.isBuffer(num)) {
        let size2 = num.length;
        if (num.length === 0)
          size2++;
        const out2 = Buffer.alloc(size2);
        num.copy(out2);
        if (num.length === 0)
          out2[0] = 0;
        return this._createEncoderBuffer(out2);
      }
      if (num < 128)
        return this._createEncoderBuffer(num);
      if (num < 256)
        return this._createEncoderBuffer([0, num]);
      let size = 1;
      for (let i = num; i >= 256; i >>= 8)
        size++;
      const out = new Array(size);
      for (let i = out.length - 1; i >= 0; i--) {
        out[i] = num & 255;
        num >>= 8;
      }
      if (out[0] & 128) {
        out.unshift(0);
      }
      return this._createEncoderBuffer(Buffer.from(out));
    };
    DERNode.prototype._encodeBool = function encodeBool(value) {
      return this._createEncoderBuffer(value ? 255 : 0);
    };
    DERNode.prototype._use = function use(entity, obj) {
      if (typeof entity === "function")
        entity = entity(obj);
      return entity._getEncoder("der").tree;
    };
    DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
      const state = this._baseState;
      let i;
      if (state["default"] === null)
        return false;
      const data = dataBuffer.join();
      if (state.defaultBuffer === void 0)
        state.defaultBuffer = this._encodeValue(state["default"], reporter, parent).join();
      if (data.length !== state.defaultBuffer.length)
        return false;
      for (i = 0; i < data.length; i++)
        if (data[i] !== state.defaultBuffer[i])
          return false;
      return true;
    };
    function encodeTag(tag, primitive, cls, reporter) {
      let res;
      if (tag === "seqof")
        tag = "seq";
      else if (tag === "setof")
        tag = "set";
      if (der.tagByName.hasOwnProperty(tag))
        res = der.tagByName[tag];
      else if (typeof tag === "number" && (tag | 0) === tag)
        res = tag;
      else
        return reporter.error("Unknown tag: " + tag);
      if (res >= 31)
        return reporter.error("Multi-octet tag encoding unsupported");
      if (!primitive)
        res |= 32;
      res |= der.tagClassByName[cls || "universal"] << 6;
      return res;
    }
  }
});
var require_pem = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/encoders/pem.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var DEREncoder = require_der2();
    function PEMEncoder(entity) {
      DEREncoder.call(this, entity);
      this.enc = "pem";
    }
    inherits(PEMEncoder, DEREncoder);
    module.exports = PEMEncoder;
    PEMEncoder.prototype.encode = function encode(data, options) {
      const buf = DEREncoder.prototype.encode.call(this, data);
      const p = buf.toString("base64");
      const out = ["-----BEGIN " + options.label + "-----"];
      for (let i = 0; i < p.length; i += 64)
        out.push(p.slice(i, i + 64));
      out.push("-----END " + options.label + "-----");
      return out.join("\n");
    };
  }
});
var require_encoders = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/encoders/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var encoders = exports;
    encoders.der = require_der2();
    encoders.pem = require_pem();
  }
});
var require_der3 = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/decoders/der.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var bignum = require_bn();
    var DecoderBuffer = require_buffer3().DecoderBuffer;
    var Node2 = require_node3();
    var der = require_der();
    function DERDecoder(entity) {
      this.enc = "der";
      this.name = entity.name;
      this.entity = entity;
      this.tree = new DERNode();
      this.tree._init(entity.body);
    }
    module.exports = DERDecoder;
    DERDecoder.prototype.decode = function decode(data, options) {
      if (!DecoderBuffer.isDecoderBuffer(data)) {
        data = new DecoderBuffer(data, options);
      }
      return this.tree._decode(data, options);
    };
    function DERNode(parent) {
      Node2.call(this, "der", parent);
    }
    inherits(DERNode, Node2);
    DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
      if (buffer.isEmpty())
        return false;
      const state = buffer.save();
      const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
      if (buffer.isError(decodedTag))
        return decodedTag;
      buffer.restore(state);
      return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + "of" === tag || any;
    };
    DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
      const decodedTag = derDecodeTag(
        buffer,
        'Failed to decode tag of "' + tag + '"'
      );
      if (buffer.isError(decodedTag))
        return decodedTag;
      let len = derDecodeLen(
        buffer,
        decodedTag.primitive,
        'Failed to get length of "' + tag + '"'
      );
      if (buffer.isError(len))
        return len;
      if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + "of" !== tag) {
        return buffer.error('Failed to match tag: "' + tag + '"');
      }
      if (decodedTag.primitive || len !== null)
        return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
      const state = buffer.save();
      const res = this._skipUntilEnd(
        buffer,
        'Failed to skip indefinite length body: "' + this.tag + '"'
      );
      if (buffer.isError(res))
        return res;
      len = buffer.offset - state.offset;
      buffer.restore(state);
      return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
    };
    DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
      for (; ; ) {
        const tag = derDecodeTag(buffer, fail);
        if (buffer.isError(tag))
          return tag;
        const len = derDecodeLen(buffer, tag.primitive, fail);
        if (buffer.isError(len))
          return len;
        let res;
        if (tag.primitive || len !== null)
          res = buffer.skip(len);
        else
          res = this._skipUntilEnd(buffer, fail);
        if (buffer.isError(res))
          return res;
        if (tag.tagStr === "end")
          break;
      }
    };
    DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {
      const result = [];
      while (!buffer.isEmpty()) {
        const possibleEnd = this._peekTag(buffer, "end");
        if (buffer.isError(possibleEnd))
          return possibleEnd;
        const res = decoder.decode(buffer, "der", options);
        if (buffer.isError(res) && possibleEnd)
          break;
        result.push(res);
      }
      return result;
    };
    DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
      if (tag === "bitstr") {
        const unused = buffer.readUInt8();
        if (buffer.isError(unused))
          return unused;
        return { unused, data: buffer.raw() };
      } else if (tag === "bmpstr") {
        const raw = buffer.raw();
        if (raw.length % 2 === 1)
          return buffer.error("Decoding of string type: bmpstr length mismatch");
        let str = "";
        for (let i = 0; i < raw.length / 2; i++) {
          str += String.fromCharCode(raw.readUInt16BE(i * 2));
        }
        return str;
      } else if (tag === "numstr") {
        const numstr = buffer.raw().toString("ascii");
        if (!this._isNumstr(numstr)) {
          return buffer.error("Decoding of string type: numstr unsupported characters");
        }
        return numstr;
      } else if (tag === "octstr") {
        return buffer.raw();
      } else if (tag === "objDesc") {
        return buffer.raw();
      } else if (tag === "printstr") {
        const printstr = buffer.raw().toString("ascii");
        if (!this._isPrintstr(printstr)) {
          return buffer.error("Decoding of string type: printstr unsupported characters");
        }
        return printstr;
      } else if (/str$/.test(tag)) {
        return buffer.raw().toString();
      } else {
        return buffer.error("Decoding of string type: " + tag + " unsupported");
      }
    };
    DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
      let result;
      const identifiers = [];
      let ident = 0;
      let subident = 0;
      while (!buffer.isEmpty()) {
        subident = buffer.readUInt8();
        ident <<= 7;
        ident |= subident & 127;
        if ((subident & 128) === 0) {
          identifiers.push(ident);
          ident = 0;
        }
      }
      if (subident & 128)
        identifiers.push(ident);
      const first = identifiers[0] / 40 | 0;
      const second = identifiers[0] % 40;
      if (relative)
        result = identifiers;
      else
        result = [first, second].concat(identifiers.slice(1));
      if (values) {
        let tmp = values[result.join(" ")];
        if (tmp === void 0)
          tmp = values[result.join(".")];
        if (tmp !== void 0)
          result = tmp;
      }
      return result;
    };
    DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
      const str = buffer.raw().toString();
      let year;
      let mon;
      let day;
      let hour;
      let min;
      let sec;
      if (tag === "gentime") {
        year = str.slice(0, 4) | 0;
        mon = str.slice(4, 6) | 0;
        day = str.slice(6, 8) | 0;
        hour = str.slice(8, 10) | 0;
        min = str.slice(10, 12) | 0;
        sec = str.slice(12, 14) | 0;
      } else if (tag === "utctime") {
        year = str.slice(0, 2) | 0;
        mon = str.slice(2, 4) | 0;
        day = str.slice(4, 6) | 0;
        hour = str.slice(6, 8) | 0;
        min = str.slice(8, 10) | 0;
        sec = str.slice(10, 12) | 0;
        if (year < 70)
          year = 2e3 + year;
        else
          year = 1900 + year;
      } else {
        return buffer.error("Decoding " + tag + " time is not supported yet");
      }
      return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
    };
    DERNode.prototype._decodeNull = function decodeNull() {
      return null;
    };
    DERNode.prototype._decodeBool = function decodeBool(buffer) {
      const res = buffer.readUInt8();
      if (buffer.isError(res))
        return res;
      else
        return res !== 0;
    };
    DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
      const raw = buffer.raw();
      let res = new bignum(raw);
      if (values)
        res = values[res.toString(10)] || res;
      return res;
    };
    DERNode.prototype._use = function use(entity, obj) {
      if (typeof entity === "function")
        entity = entity(obj);
      return entity._getDecoder("der").tree;
    };
    function derDecodeTag(buf, fail) {
      let tag = buf.readUInt8(fail);
      if (buf.isError(tag))
        return tag;
      const cls = der.tagClass[tag >> 6];
      const primitive = (tag & 32) === 0;
      if ((tag & 31) === 31) {
        let oct = tag;
        tag = 0;
        while ((oct & 128) === 128) {
          oct = buf.readUInt8(fail);
          if (buf.isError(oct))
            return oct;
          tag <<= 7;
          tag |= oct & 127;
        }
      } else {
        tag &= 31;
      }
      const tagStr = der.tag[tag];
      return {
        cls,
        primitive,
        tag,
        tagStr
      };
    }
    function derDecodeLen(buf, primitive, fail) {
      let len = buf.readUInt8(fail);
      if (buf.isError(len))
        return len;
      if (!primitive && len === 128)
        return null;
      if ((len & 128) === 0) {
        return len;
      }
      const num = len & 127;
      if (num > 4)
        return buf.error("length octect is too long");
      len = 0;
      for (let i = 0; i < num; i++) {
        len <<= 8;
        const j = buf.readUInt8(fail);
        if (buf.isError(j))
          return j;
        len |= j;
      }
      return len;
    }
  }
});
var require_pem2 = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/decoders/pem.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var inherits = require_inherits_browser();
    var Buffer = require_safer().Buffer;
    var DERDecoder = require_der3();
    function PEMDecoder(entity) {
      DERDecoder.call(this, entity);
      this.enc = "pem";
    }
    inherits(PEMDecoder, DERDecoder);
    module.exports = PEMDecoder;
    PEMDecoder.prototype.decode = function decode(data, options) {
      const lines = data.toString().split(/[\r\n]+/g);
      const label = options.label.toUpperCase();
      const re = /^-----(BEGIN|END) ([^-]+)-----$/;
      let start = -1;
      let end = -1;
      for (let i = 0; i < lines.length; i++) {
        const match = lines[i].match(re);
        if (match === null)
          continue;
        if (match[2] !== label)
          continue;
        if (start === -1) {
          if (match[1] !== "BEGIN")
            break;
          start = i;
        } else {
          if (match[1] !== "END")
            break;
          end = i;
          break;
        }
      }
      if (start === -1 || end === -1)
        throw new Error("PEM section not found for: " + label);
      const base64 = lines.slice(start + 1, end).join("");
      base64.replace(/[^a-z0-9+/=]+/gi, "");
      const input = Buffer.from(base64, "base64");
      return DERDecoder.prototype.decode.call(this, input, options);
    };
  }
});
var require_decoders = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/decoders/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var decoders = exports;
    decoders.der = require_der3();
    decoders.pem = require_pem2();
  }
});
var require_api = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/api.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var encoders = require_encoders();
    var decoders = require_decoders();
    var inherits = require_inherits_browser();
    var api = exports;
    api.define = function define2(name, body) {
      return new Entity(name, body);
    };
    function Entity(name, body) {
      this.name = name;
      this.body = body;
      this.decoders = {};
      this.encoders = {};
    }
    Entity.prototype._createNamed = function createNamed(Base) {
      const name = this.name;
      function Generated(entity) {
        this._initNamed(entity, name);
      }
      inherits(Generated, Base);
      Generated.prototype._initNamed = function _initNamed(entity, name2) {
        Base.call(this, entity, name2);
      };
      return new Generated(this);
    };
    Entity.prototype._getDecoder = function _getDecoder(enc) {
      enc = enc || "der";
      if (!this.decoders.hasOwnProperty(enc))
        this.decoders[enc] = this._createNamed(decoders[enc]);
      return this.decoders[enc];
    };
    Entity.prototype.decode = function decode(data, enc, options) {
      return this._getDecoder(enc).decode(data, options);
    };
    Entity.prototype._getEncoder = function _getEncoder(enc) {
      enc = enc || "der";
      if (!this.encoders.hasOwnProperty(enc))
        this.encoders[enc] = this._createNamed(encoders[enc]);
      return this.encoders[enc];
    };
    Entity.prototype.encode = function encode(data, enc, reporter) {
      return this._getEncoder(enc).encode(data, reporter);
    };
  }
});
var require_base2 = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/base/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var base = exports;
    base.Reporter = require_reporter().Reporter;
    base.DecoderBuffer = require_buffer3().DecoderBuffer;
    base.EncoderBuffer = require_buffer3().EncoderBuffer;
    base.Node = require_node3();
  }
});
var require_constants = __commonJS({
  "../../node_modules/asn1.js/lib/asn1/constants/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var constants = exports;
    constants._reverse = function reverse(map) {
      const res = {};
      Object.keys(map).forEach(function(key) {
        if ((key | 0) == key)
          key = key | 0;
        const value = map[key];
        res[value] = key;
      });
      return res;
    };
    constants.der = require_der();
  }
});
var require_asn1 = __commonJS({
  "../../node_modules/asn1.js/lib/asn1.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var asn1 = exports;
    asn1.bignum = require_bn();
    asn1.define = require_api().define;
    asn1.base = require_base2();
    asn1.constants = require_constants();
    asn1.decoders = require_decoders();
    asn1.encoders = require_encoders();
  }
});
var require_certificate = __commonJS({
  "../../node_modules/parse-asn1/certificate.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    var asn = require_asn1();
    var Time = asn.define("Time", function() {
      this.choice({
        utcTime: this.utctime(),
        generalTime: this.gentime()
      });
    });
    var AttributeTypeValue = asn.define("AttributeTypeValue", function() {
      this.seq().obj(
        this.key("type").objid(),
        this.key("value").any()
      );
    });
    var AlgorithmIdentifier = asn.define("AlgorithmIdentifier", function() {
      this.seq().obj(
        this.key("algorithm").objid(),
        this.key("parameters").optional(),
        this.key("curve").objid().optional()
      );
    });
    var SubjectPublicKeyInfo = asn.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(
        this.key("algorithm").use(AlgorithmIdentifier),
        this.key("subjectPublicKey").bitstr()
      );
    });
    var RelativeDistinguishedName = asn.define("RelativeDistinguishedName", function() {
      this.setof(AttributeTypeValue);
    });
    var RDNSequence = asn.define("RDNSequence", function() {
      this.seqof(RelativeDistinguishedName);
    });
    var Name = asn.define("Name", function() {
      this.choice({
        rdnSequence: this.use(RDNSequence)
      });
    });
    var Validity = asn.define("Validity", function() {
      this.seq().obj(
        this.key("notBefore").use(Time),
        this.key("notAfter").use(Time)
      );
    });
    var Extension = asn.define("Extension", function() {
      this.seq().obj(
        this.key("extnID").objid(),
        this.key("critical").bool().def(false),
        this.key("extnValue").octstr()
      );
    });
    var TBSCertificate = asn.define("TBSCertificate", function() {
      this.seq().obj(
        this.key("version").explicit(0).int().optional(),
        this.key("serialNumber").int(),
        this.key("signature").use(AlgorithmIdentifier),
        this.key("issuer").use(Name),
        this.key("validity").use(Validity),
        this.key("subject").use(Name),
        this.key("subjectPublicKeyInfo").use(SubjectPublicKeyInfo),
        this.key("issuerUniqueID").implicit(1).bitstr().optional(),
        this.key("subjectUniqueID").implicit(2).bitstr().optional(),
        this.key("extensions").explicit(3).seqof(Extension).optional()
      );
    });
    var X509Certificate = asn.define("X509Certificate", function() {
      this.seq().obj(
        this.key("tbsCertificate").use(TBSCertificate),
        this.key("signatureAlgorithm").use(AlgorithmIdentifier),
        this.key("signatureValue").bitstr()
      );
    });
    module.exports = X509Certificate;
  }
});
var require_asn12 = __commonJS({
  "../../node_modules/parse-asn1/asn1.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var asn1 = require_asn1();
    exports.certificate = require_certificate();
    var RSAPrivateKey = asn1.define("RSAPrivateKey", function() {
      this.seq().obj(
        this.key("version").int(),
        this.key("modulus").int(),
        this.key("publicExponent").int(),
        this.key("privateExponent").int(),
        this.key("prime1").int(),
        this.key("prime2").int(),
        this.key("exponent1").int(),
        this.key("exponent2").int(),
        this.key("coefficient").int()
      );
    });
    exports.RSAPrivateKey = RSAPrivateKey;
    var RSAPublicKey = asn1.define("RSAPublicKey", function() {
      this.seq().obj(
        this.key("modulus").int(),
        this.key("publicExponent").int()
      );
    });
    exports.RSAPublicKey = RSAPublicKey;
    var PublicKey = asn1.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(
        this.key("algorithm").use(AlgorithmIdentifier),
        this.key("subjectPublicKey").bitstr()
      );
    });
    exports.PublicKey = PublicKey;
    var AlgorithmIdentifier = asn1.define("AlgorithmIdentifier", function() {
      this.seq().obj(
        this.key("algorithm").objid(),
        this.key("none").null_().optional(),
        this.key("curve").objid().optional(),
        this.key("params").seq().obj(
          this.key("p").int(),
          this.key("q").int(),
          this.key("g").int()
        ).optional()
      );
    });
    var PrivateKeyInfo = asn1.define("PrivateKeyInfo", function() {
      this.seq().obj(
        this.key("version").int(),
        this.key("algorithm").use(AlgorithmIdentifier),
        this.key("subjectPrivateKey").octstr()
      );
    });
    exports.PrivateKey = PrivateKeyInfo;
    var EncryptedPrivateKeyInfo = asn1.define("EncryptedPrivateKeyInfo", function() {
      this.seq().obj(
        this.key("algorithm").seq().obj(
          this.key("id").objid(),
          this.key("decrypt").seq().obj(
            this.key("kde").seq().obj(
              this.key("id").objid(),
              this.key("kdeparams").seq().obj(
                this.key("salt").octstr(),
                this.key("iters").int()
              )
            ),
            this.key("cipher").seq().obj(
              this.key("algo").objid(),
              this.key("iv").octstr()
            )
          )
        ),
        this.key("subjectPrivateKey").octstr()
      );
    });
    exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
    var DSAPrivateKey = asn1.define("DSAPrivateKey", function() {
      this.seq().obj(
        this.key("version").int(),
        this.key("p").int(),
        this.key("q").int(),
        this.key("g").int(),
        this.key("pub_key").int(),
        this.key("priv_key").int()
      );
    });
    exports.DSAPrivateKey = DSAPrivateKey;
    exports.DSAparam = asn1.define("DSAparam", function() {
      this.int();
    });
    var ECPrivateKey = asn1.define("ECPrivateKey", function() {
      this.seq().obj(
        this.key("version").int(),
        this.key("privateKey").octstr(),
        this.key("parameters").optional().explicit(0).use(ECParameters),
        this.key("publicKey").optional().explicit(1).bitstr()
      );
    });
    exports.ECPrivateKey = ECPrivateKey;
    var ECParameters = asn1.define("ECParameters", function() {
      this.choice({
        namedCurve: this.objid()
      });
    });
    exports.signature = asn1.define("signature", function() {
      this.seq().obj(
        this.key("r").int(),
        this.key("s").int()
      );
    });
  }
});
var require_aesid = __commonJS({
  "../../node_modules/parse-asn1/aesid.json"(exports, module) {
    module.exports = {
      "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
      "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
      "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
      "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
      "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
      "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
      "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
      "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
      "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
      "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
      "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
      "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
    };
  }
});
var require_fixProc = __commonJS({
  "../../node_modules/parse-asn1/fixProc.js"(exports, module) {
    init_process();
    init_buffer();
    var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m;
    var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;
    var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m;
    var evp = require_evp_bytestokey();
    var ciphers = require_browser7();
    var Buffer = require_safe_buffer().Buffer;
    module.exports = function(okey, password) {
      var key = okey.toString();
      var match = key.match(findProc);
      var decrypted;
      if (!match) {
        var match2 = key.match(fullRegex);
        decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ""), "base64");
      } else {
        var suite = "aes" + match[1];
        var iv = Buffer.from(match[2], "hex");
        var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ""), "base64");
        var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;
        var out = [];
        var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);
        out.push(cipher.update(cipherText));
        out.push(cipher.final());
        decrypted = Buffer.concat(out);
      }
      var tag = key.match(startRegex)[1];
      return {
        tag,
        data: decrypted
      };
    };
  }
});
var require_parse_asn1 = __commonJS({
  "../../node_modules/parse-asn1/index.js"(exports, module) {
    init_process();
    init_buffer();
    var asn1 = require_asn12();
    var aesid = require_aesid();
    var fixProc = require_fixProc();
    var ciphers = require_browser7();
    var compat = require_browser6();
    var Buffer = require_safe_buffer().Buffer;
    module.exports = parseKeys;
    function parseKeys(buffer) {
      var password;
      if (typeof buffer === "object" && !Buffer.isBuffer(buffer)) {
        password = buffer.passphrase;
        buffer = buffer.key;
      }
      if (typeof buffer === "string") {
        buffer = Buffer.from(buffer);
      }
      var stripped = fixProc(buffer, password);
      var type = stripped.tag;
      var data = stripped.data;
      var subtype, ndata;
      switch (type) {
        case "CERTIFICATE":
          ndata = asn1.certificate.decode(data, "der").tbsCertificate.subjectPublicKeyInfo;
        case "PUBLIC KEY":
          if (!ndata) {
            ndata = asn1.PublicKey.decode(data, "der");
          }
          subtype = ndata.algorithm.algorithm.join(".");
          switch (subtype) {
            case "1.2.840.113549.1.1.1":
              return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, "der");
            case "1.2.840.10045.2.1":
              ndata.subjectPrivateKey = ndata.subjectPublicKey;
              return {
                type: "ec",
                data: ndata
              };
            case "1.2.840.10040.4.1":
              ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, "der");
              return {
                type: "dsa",
                data: ndata.algorithm.params
              };
            default:
              throw new Error("unknown key id " + subtype);
          }
        case "ENCRYPTED PRIVATE KEY":
          data = asn1.EncryptedPrivateKey.decode(data, "der");
          data = decrypt(data, password);
        case "PRIVATE KEY":
          ndata = asn1.PrivateKey.decode(data, "der");
          subtype = ndata.algorithm.algorithm.join(".");
          switch (subtype) {
            case "1.2.840.113549.1.1.1":
              return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, "der");
            case "1.2.840.10045.2.1":
              return {
                curve: ndata.algorithm.curve,
                privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, "der").privateKey
              };
            case "1.2.840.10040.4.1":
              ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, "der");
              return {
                type: "dsa",
                params: ndata.algorithm.params
              };
            default:
              throw new Error("unknown key id " + subtype);
          }
        case "RSA PUBLIC KEY":
          return asn1.RSAPublicKey.decode(data, "der");
        case "RSA PRIVATE KEY":
          return asn1.RSAPrivateKey.decode(data, "der");
        case "DSA PRIVATE KEY":
          return {
            type: "dsa",
            params: asn1.DSAPrivateKey.decode(data, "der")
          };
        case "EC PRIVATE KEY":
          data = asn1.ECPrivateKey.decode(data, "der");
          return {
            curve: data.parameters.value,
            privateKey: data.privateKey
          };
        default:
          throw new Error("unknown key type " + type);
      }
    }
    parseKeys.signature = asn1.signature;
    function decrypt(data, password) {
      var salt = data.algorithm.decrypt.kde.kdeparams.salt;
      var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);
      var algo = aesid[data.algorithm.decrypt.cipher.algo.join(".")];
      var iv = data.algorithm.decrypt.cipher.iv;
      var cipherText = data.subjectPrivateKey;
      var keylen = parseInt(algo.split("-")[1], 10) / 8;
      var key = compat.pbkdf2Sync(password, salt, iters, keylen, "sha1");
      var cipher = ciphers.createDecipheriv(algo, key, iv);
      var out = [];
      out.push(cipher.update(cipherText));
      out.push(cipher.final());
      return Buffer.concat(out);
    }
  }
});
var require_curves2 = __commonJS({
  "../../node_modules/browserify-sign/browser/curves.json"(exports, module) {
    module.exports = {
      "1.3.132.0.10": "secp256k1",
      "1.3.132.0.33": "p224",
      "1.2.840.10045.3.1.1": "p192",
      "1.2.840.10045.3.1.7": "p256",
      "1.3.132.0.34": "p384",
      "1.3.132.0.35": "p521"
    };
  }
});
var require_sign = __commonJS({
  "../../node_modules/browserify-sign/browser/sign.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var createHmac = require_browser5();
    var crt = require_browserify_rsa();
    var EC = require_elliptic().ec;
    var BN = require_bn3();
    var parseKeys = require_parse_asn1();
    var curves = require_curves2();
    function sign(hash, key, hashType, signType, tag) {
      var priv = parseKeys(key);
      if (priv.curve) {
        if (signType !== "ecdsa" && signType !== "ecdsa/rsa")
          throw new Error("wrong private key type");
        return ecSign(hash, priv);
      } else if (priv.type === "dsa") {
        if (signType !== "dsa")
          throw new Error("wrong private key type");
        return dsaSign(hash, priv, hashType);
      } else {
        if (signType !== "rsa" && signType !== "ecdsa/rsa")
          throw new Error("wrong private key type");
      }
      hash = Buffer.concat([tag, hash]);
      var len = priv.modulus.byteLength();
      var pad = [0, 1];
      while (hash.length + pad.length + 1 < len)
        pad.push(255);
      pad.push(0);
      var i = -1;
      while (++i < hash.length)
        pad.push(hash[i]);
      var out = crt(pad, priv);
      return out;
    }
    function ecSign(hash, priv) {
      var curveId = curves[priv.curve.join(".")];
      if (!curveId)
        throw new Error("unknown curve " + priv.curve.join("."));
      var curve = new EC(curveId);
      var key = curve.keyFromPrivate(priv.privateKey);
      var out = key.sign(hash);
      return Buffer.from(out.toDER());
    }
    function dsaSign(hash, priv, algo) {
      var x = priv.params.priv_key;
      var p = priv.params.p;
      var q = priv.params.q;
      var g = priv.params.g;
      var r = new BN(0);
      var k;
      var H = bits2int(hash, q).mod(q);
      var s = false;
      var kv = getKey(x, q, hash, algo);
      while (s === false) {
        k = makeKey(q, kv, algo);
        r = makeR(g, k, p, q);
        s = k.invm(q).imul(H.add(x.mul(r))).mod(q);
        if (s.cmpn(0) === 0) {
          s = false;
          r = new BN(0);
        }
      }
      return toDER(r, s);
    }
    function toDER(r, s) {
      r = r.toArray();
      s = s.toArray();
      if (r[0] & 128)
        r = [0].concat(r);
      if (s[0] & 128)
        s = [0].concat(s);
      var total = r.length + s.length + 4;
      var res = [48, total, 2, r.length];
      res = res.concat(r, [2, s.length], s);
      return Buffer.from(res);
    }
    function getKey(x, q, hash, algo) {
      x = Buffer.from(x.toArray());
      if (x.length < q.byteLength()) {
        var zeros = Buffer.alloc(q.byteLength() - x.length);
        x = Buffer.concat([zeros, x]);
      }
      var hlen = hash.length;
      var hbits = bits2octets(hash, q);
      var v = Buffer.alloc(hlen);
      v.fill(1);
      var k = Buffer.alloc(hlen);
      k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();
      v = createHmac(algo, k).update(v).digest();
      k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();
      v = createHmac(algo, k).update(v).digest();
      return { k, v };
    }
    function bits2int(obits, q) {
      var bits = new BN(obits);
      var shift = (obits.length << 3) - q.bitLength();
      if (shift > 0)
        bits.ishrn(shift);
      return bits;
    }
    function bits2octets(bits, q) {
      bits = bits2int(bits, q);
      bits = bits.mod(q);
      var out = Buffer.from(bits.toArray());
      if (out.length < q.byteLength()) {
        var zeros = Buffer.alloc(q.byteLength() - out.length);
        out = Buffer.concat([zeros, out]);
      }
      return out;
    }
    function makeKey(q, kv, algo) {
      var t;
      var k;
      do {
        t = Buffer.alloc(0);
        while (t.length * 8 < q.bitLength()) {
          kv.v = createHmac(algo, kv.k).update(kv.v).digest();
          t = Buffer.concat([t, kv.v]);
        }
        k = bits2int(t, q);
        kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();
        kv.v = createHmac(algo, kv.k).update(kv.v).digest();
      } while (k.cmp(q) !== -1);
      return k;
    }
    function makeR(g, k, p, q) {
      return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);
    }
    module.exports = sign;
    module.exports.getKey = getKey;
    module.exports.makeKey = makeKey;
  }
});
var require_verify = __commonJS({
  "../../node_modules/browserify-sign/browser/verify.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var BN = require_bn3();
    var EC = require_elliptic().ec;
    var parseKeys = require_parse_asn1();
    var curves = require_curves2();
    function verify(sig, hash, key, signType, tag) {
      var pub = parseKeys(key);
      if (pub.type === "ec") {
        if (signType !== "ecdsa" && signType !== "ecdsa/rsa")
          throw new Error("wrong public key type");
        return ecVerify(sig, hash, pub);
      } else if (pub.type === "dsa") {
        if (signType !== "dsa")
          throw new Error("wrong public key type");
        return dsaVerify(sig, hash, pub);
      } else {
        if (signType !== "rsa" && signType !== "ecdsa/rsa")
          throw new Error("wrong public key type");
      }
      hash = Buffer.concat([tag, hash]);
      var len = pub.modulus.byteLength();
      var pad = [1];
      var padNum = 0;
      while (hash.length + pad.length + 2 < len) {
        pad.push(255);
        padNum++;
      }
      pad.push(0);
      var i = -1;
      while (++i < hash.length) {
        pad.push(hash[i]);
      }
      pad = Buffer.from(pad);
      var red = BN.mont(pub.modulus);
      sig = new BN(sig).toRed(red);
      sig = sig.redPow(new BN(pub.publicExponent));
      sig = Buffer.from(sig.fromRed().toArray());
      var out = padNum < 8 ? 1 : 0;
      len = Math.min(sig.length, pad.length);
      if (sig.length !== pad.length)
        out = 1;
      i = -1;
      while (++i < len)
        out |= sig[i] ^ pad[i];
      return out === 0;
    }
    function ecVerify(sig, hash, pub) {
      var curveId = curves[pub.data.algorithm.curve.join(".")];
      if (!curveId)
        throw new Error("unknown curve " + pub.data.algorithm.curve.join("."));
      var curve = new EC(curveId);
      var pubkey = pub.data.subjectPrivateKey.data;
      return curve.verify(hash, sig, pubkey);
    }
    function dsaVerify(sig, hash, pub) {
      var p = pub.data.p;
      var q = pub.data.q;
      var g = pub.data.g;
      var y = pub.data.pub_key;
      var unpacked = parseKeys.signature.decode(sig, "der");
      var s = unpacked.s;
      var r = unpacked.r;
      checkValue(s, q);
      checkValue(r, q);
      var montp = BN.mont(p);
      var w = s.invm(q);
      var v = g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);
      return v.cmp(r) === 0;
    }
    function checkValue(b, q) {
      if (b.cmpn(0) <= 0)
        throw new Error("invalid sig");
      if (b.cmp(q) >= q)
        throw new Error("invalid sig");
    }
    module.exports = verify;
  }
});
var require_browser10 = __commonJS({
  "../../node_modules/browserify-sign/browser/index.js"(exports, module) {
    init_process();
    init_buffer();
    var Buffer = require_safe_buffer().Buffer;
    var createHash = require_browser4();
    var stream = require_readable_browser();
    var inherits = require_inherits_browser();
    var sign = require_sign();
    var verify = require_verify();
    var algorithms = require_algorithms();
    Object.keys(algorithms).forEach(function(key) {
      algorithms[key].id = Buffer.from(algorithms[key].id, "hex");
      algorithms[key.toLowerCase()] = algorithms[key];
    });
    function Sign(algorithm) {
      stream.Writable.call(this);
      var data = algorithms[algorithm];
      if (!data)
        throw new Error("Unknown message digest");
      this._hashType = data.hash;
      this._hash = createHash(data.hash);
      this._tag = data.id;
      this._signType = data.sign;
    }
    inherits(Sign, stream.Writable);
    Sign.prototype._write = function _write(data, _, done) {
      this._hash.update(data);
      done();
    };
    Sign.prototype.update = function update(data, enc) {
      if (typeof data === "string")
        data = Buffer.from(data, enc);
      this._hash.update(data);
      return this;
    };
    Sign.prototype.sign = function signMethod(key, enc) {
      this.end();
      var hash = this._hash.digest();
      var sig = sign(hash, key, this._hashType, this._signType, this._tag);
      return enc ? sig.toString(enc) : sig;
    };
    function Verify(algorithm) {
      stream.Writable.call(this);
      var data = algorithms[algorithm];
      if (!data)
        throw new Error("Unknown message digest");
      this._hash = createHash(data.hash);
      this._tag = data.id;
      this._signType = data.sign;
    }
    inherits(Verify, stream.Writable);
    Verify.prototype._write = function _write(data, _, done) {
      this._hash.update(data);
      done();
    };
    Verify.prototype.update = function update(data, enc) {
      if (typeof data === "string")
        data = Buffer.from(data, enc);
      this._hash.update(data);
      return this;
    };
    Verify.prototype.verify = function verifyMethod(key, sig, enc) {
      if (typeof sig === "string")
        sig = Buffer.from(sig, enc);
      this.end();
      var hash = this._hash.digest();
      return verify(sig, hash, key, this._signType, this._tag);
    };
    function createSign(algorithm) {
      return new Sign(algorithm);
    }
    function createVerify(algorithm) {
      return new Verify(algorithm);
    }
    module.exports = {
      Sign: createSign,
      Verify: createVerify,
      createSign,
      createVerify
    };
  }
});
var require_browser11 = __commonJS({
  "../../node_modules/create-ecdh/browser.js"(exports, module) {
    init_process();
    init_buffer();
    var elliptic = require_elliptic();
    var BN = require_bn();
    module.exports = function createECDH(curve) {
      return new ECDH(curve);
    };
    var aliases = {
      secp256k1: {
        name: "secp256k1",
        byteLength: 32
      },
      secp224r1: {
        name: "p224",
        byteLength: 28
      },
      prime256v1: {
        name: "p256",
        byteLength: 32
      },
      prime192v1: {
        name: "p192",
        byteLength: 24
      },
      ed25519: {
        name: "ed25519",
        byteLength: 32
      },
      secp384r1: {
        name: "p384",
        byteLength: 48
      },
      secp521r1: {
        name: "p521",
        byteLength: 66
      }
    };
    aliases.p224 = aliases.secp224r1;
    aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
    aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
    aliases.p384 = aliases.secp384r1;
    aliases.p521 = aliases.secp521r1;
    function ECDH(curve) {
      this.curveType = aliases[curve];
      if (!this.curveType) {
        this.curveType = {
          name: curve
        };
      }
      this.curve = new elliptic.ec(this.curveType.name);
      this.keys = void 0;
    }
    ECDH.prototype.generateKeys = function(enc, format) {
      this.keys = this.curve.genKeyPair();
      return this.getPublicKey(enc, format);
    };
    ECDH.prototype.computeSecret = function(other, inenc, enc) {
      inenc = inenc || "utf8";
      if (!import_buffer.Buffer.isBuffer(other)) {
        other = new import_buffer.Buffer(other, inenc);
      }
      var otherPub = this.curve.keyFromPublic(other).getPublic();
      var out = otherPub.mul(this.keys.getPrivate()).getX();
      return formatReturnValue(out, enc, this.curveType.byteLength);
    };
    ECDH.prototype.getPublicKey = function(enc, format) {
      var key = this.keys.getPublic(format === "compressed", true);
      if (format === "hybrid") {
        if (key[key.length - 1] % 2) {
          key[0] = 7;
        } else {
          key[0] = 6;
        }
      }
      return formatReturnValue(key, enc);
    };
    ECDH.prototype.getPrivateKey = function(enc) {
      return formatReturnValue(this.keys.getPrivate(), enc);
    };
    ECDH.prototype.setPublicKey = function(pub, enc) {
      enc = enc || "utf8";
      if (!import_buffer.Buffer.isBuffer(pub)) {
        pub = new import_buffer.Buffer(pub, enc);
      }
      this.keys._importPublic(pub);
      return this;
    };
    ECDH.prototype.setPrivateKey = function(priv, enc) {
      enc = enc || "utf8";
      if (!import_buffer.Buffer.isBuffer(priv)) {
        priv = new import_buffer.Buffer(priv, enc);
      }
      var _priv = new BN(priv);
      _priv = _priv.toString(16);
      this.keys = this.curve.genKeyPair();
      this.keys._importPrivate(_priv);
      return this;
    };
    function formatReturnValue(bn, enc, len) {
      if (!Array.isArray(bn)) {
        bn = bn.toArray();
      }
      var buf = new import_buffer.Buffer(bn);
      if (len && buf.length < len) {
        var zeros = new import_buffer.Buffer(len - buf.length);
        zeros.fill(0);
        buf = import_buffer.Buffer.concat([zeros, buf]);
      }
      if (!enc) {
        return buf;
      } else {
        return buf.toString(enc);
      }
    }
  }
});
var require_mgf = __commonJS({
  "../../node_modules/public-encrypt/mgf.js"(exports, module) {
    init_process();
    init_buffer();
    var createHash = require_browser4();
    var Buffer = require_safe_buffer().Buffer;
    module.exports = function(seed, len) {
      var t = Buffer.alloc(0);
      var i = 0;
      var c;
      while (t.length < len) {
        c = i2ops(i++);
        t = Buffer.concat([t, createHash("sha1").update(seed).update(c).digest()]);
      }
      return t.slice(0, len);
    };
    function i2ops(c) {
      var out = Buffer.allocUnsafe(4);
      out.writeUInt32BE(c, 0);
      return out;
    }
  }
});
var require_xor = __commonJS({
  "../../node_modules/public-encrypt/xor.js"(exports, module) {
    init_process();
    init_buffer();
    module.exports = function xor(a, b) {
      var len = a.length;
      var i = -1;
      while (++i < len) {
        a[i] ^= b[i];
      }
      return a;
    };
  }
});
var require_withPublic = __commonJS({
  "../../node_modules/public-encrypt/withPublic.js"(exports, module) {
    init_process();
    init_buffer();
    var BN = require_bn();
    var Buffer = require_safe_buffer().Buffer;
    function withPublic(paddedMsg, key) {
      return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray());
    }
    module.exports = withPublic;
  }
});
var require_publicEncrypt = __commonJS({
  "../../node_modules/public-encrypt/publicEncrypt.js"(exports, module) {
    init_process();
    init_buffer();
    var parseKeys = require_parse_asn1();
    var randomBytes = require_browser3();
    var createHash = require_browser4();
    var mgf = require_mgf();
    var xor = require_xor();
    var BN = require_bn();
    var withPublic = require_withPublic();
    var crt = require_browserify_rsa();
    var Buffer = require_safe_buffer().Buffer;
    module.exports = function publicEncrypt(publicKey, msg, reverse) {
      var padding;
      if (publicKey.padding) {
        padding = publicKey.padding;
      } else if (reverse) {
        padding = 1;
      } else {
        padding = 4;
      }
      var key = parseKeys(publicKey);
      var paddedMsg;
      if (padding === 4) {
        paddedMsg = oaep(key, msg);
      } else if (padding === 1) {
        paddedMsg = pkcs1(key, msg, reverse);
      } else if (padding === 3) {
        paddedMsg = new BN(msg);
        if (paddedMsg.cmp(key.modulus) >= 0) {
          throw new Error("data too long for modulus");
        }
      } else {
        throw new Error("unknown padding");
      }
      if (reverse) {
        return crt(paddedMsg, key);
      } else {
        return withPublic(paddedMsg, key);
      }
    };
    function oaep(key, msg) {
      var k = key.modulus.byteLength();
      var mLen = msg.length;
      var iHash = createHash("sha1").update(Buffer.alloc(0)).digest();
      var hLen = iHash.length;
      var hLen2 = 2 * hLen;
      if (mLen > k - hLen2 - 2) {
        throw new Error("message too long");
      }
      var ps = Buffer.alloc(k - mLen - hLen2 - 2);
      var dblen = k - hLen - 1;
      var seed = randomBytes(hLen);
      var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen));
      var maskedSeed = xor(seed, mgf(maskedDb, hLen));
      return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k));
    }
    function pkcs1(key, msg, reverse) {
      var mLen = msg.length;
      var k = key.modulus.byteLength();
      if (mLen > k - 11) {
        throw new Error("message too long");
      }
      var ps;
      if (reverse) {
        ps = Buffer.alloc(k - mLen - 3, 255);
      } else {
        ps = nonZero(k - mLen - 3);
      }
      return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k));
    }
    function nonZero(len) {
      var out = Buffer.allocUnsafe(len);
      var i = 0;
      var cache = randomBytes(len * 2);
      var cur = 0;
      var num;
      while (i < len) {
        if (cur === cache.length) {
          cache = randomBytes(len * 2);
          cur = 0;
        }
        num = cache[cur++];
        if (num) {
          out[i++] = num;
        }
      }
      return out;
    }
  }
});
var require_privateDecrypt = __commonJS({
  "../../node_modules/public-encrypt/privateDecrypt.js"(exports, module) {
    init_process();
    init_buffer();
    var parseKeys = require_parse_asn1();
    var mgf = require_mgf();
    var xor = require_xor();
    var BN = require_bn();
    var crt = require_browserify_rsa();
    var createHash = require_browser4();
    var withPublic = require_withPublic();
    var Buffer = require_safe_buffer().Buffer;
    module.exports = function privateDecrypt(privateKey, enc, reverse) {
      var padding;
      if (privateKey.padding) {
        padding = privateKey.padding;
      } else if (reverse) {
        padding = 1;
      } else {
        padding = 4;
      }
      var key = parseKeys(privateKey);
      var k = key.modulus.byteLength();
      if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
        throw new Error("decryption error");
      }
      var msg;
      if (reverse) {
        msg = withPublic(new BN(enc), key);
      } else {
        msg = crt(enc, key);
      }
      var zBuffer = Buffer.alloc(k - msg.length);
      msg = Buffer.concat([zBuffer, msg], k);
      if (padding === 4) {
        return oaep(key, msg);
      } else if (padding === 1) {
        return pkcs1(key, msg, reverse);
      } else if (padding === 3) {
        return msg;
      } else {
        throw new Error("unknown padding");
      }
    };
    function oaep(key, msg) {
      var k = key.modulus.byteLength();
      var iHash = createHash("sha1").update(Buffer.alloc(0)).digest();
      var hLen = iHash.length;
      if (msg[0] !== 0) {
        throw new Error("decryption error");
      }
      var maskedSeed = msg.slice(1, hLen + 1);
      var maskedDb = msg.slice(hLen + 1);
      var seed = xor(maskedSeed, mgf(maskedDb, hLen));
      var db = xor(maskedDb, mgf(seed, k - hLen - 1));
      if (compare(iHash, db.slice(0, hLen))) {
        throw new Error("decryption error");
      }
      var i = hLen;
      while (db[i] === 0) {
        i++;
      }
      if (db[i++] !== 1) {
        throw new Error("decryption error");
      }
      return db.slice(i);
    }
    function pkcs1(key, msg, reverse) {
      var p1 = msg.slice(0, 2);
      var i = 2;
      var status = 0;
      while (msg[i++] !== 0) {
        if (i >= msg.length) {
          status++;
          break;
        }
      }
      var ps = msg.slice(2, i - 1);
      if (p1.toString("hex") !== "0002" && !reverse || p1.toString("hex") !== "0001" && reverse) {
        status++;
      }
      if (ps.length < 8) {
        status++;
      }
      if (status) {
        throw new Error("decryption error");
      }
      return msg.slice(i);
    }
    function compare(a, b) {
      a = Buffer.from(a);
      b = Buffer.from(b);
      var dif = 0;
      var len = a.length;
      if (a.length !== b.length) {
        dif++;
        len = Math.min(a.length, b.length);
      }
      var i = -1;
      while (++i < len) {
        dif += a[i] ^ b[i];
      }
      return dif;
    }
  }
});
var require_browser12 = __commonJS({
  "../../node_modules/public-encrypt/browser.js"(exports) {
    init_process();
    init_buffer();
    exports.publicEncrypt = require_publicEncrypt();
    exports.privateDecrypt = require_privateDecrypt();
    exports.privateEncrypt = function privateEncrypt(key, buf) {
      return exports.publicEncrypt(key, buf, true);
    };
    exports.publicDecrypt = function publicDecrypt(key, buf) {
      return exports.privateDecrypt(key, buf, true);
    };
  }
});
var require_browser13 = __commonJS({
  "../../node_modules/randomfill/browser.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    function oldBrowser() {
      throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
    }
    var safeBuffer = require_safe_buffer();
    var randombytes = require_browser3();
    var Buffer = safeBuffer.Buffer;
    var kBufferMaxLength = safeBuffer.kMaxLength;
    var crypto = globalThis.crypto || globalThis.msCrypto;
    var kMaxUint32 = Math.pow(2, 32) - 1;
    function assertOffset(offset, length) {
      if (typeof offset !== "number" || offset !== offset) {
        throw new TypeError("offset must be a number");
      }
      if (offset > kMaxUint32 || offset < 0) {
        throw new TypeError("offset must be a uint32");
      }
      if (offset > kBufferMaxLength || offset > length) {
        throw new RangeError("offset out of range");
      }
    }
    function assertSize(size, offset, length) {
      if (typeof size !== "number" || size !== size) {
        throw new TypeError("size must be a number");
      }
      if (size > kMaxUint32 || size < 0) {
        throw new TypeError("size must be a uint32");
      }
      if (size + offset > length || size > kBufferMaxLength) {
        throw new RangeError("buffer too small");
      }
    }
    if (crypto && crypto.getRandomValues || !process.browser) {
      exports.randomFill = randomFill;
      exports.randomFillSync = randomFillSync;
    } else {
      exports.randomFill = oldBrowser;
      exports.randomFillSync = oldBrowser;
    }
    function randomFill(buf, offset, size, cb) {
      if (!Buffer.isBuffer(buf) && !(buf instanceof globalThis.Uint8Array)) {
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
      }
      if (typeof offset === "function") {
        cb = offset;
        offset = 0;
        size = buf.length;
      } else if (typeof size === "function") {
        cb = size;
        size = buf.length - offset;
      } else if (typeof cb !== "function") {
        throw new TypeError('"cb" argument must be a function');
      }
      assertOffset(offset, buf.length);
      assertSize(size, offset, buf.length);
      return actualFill(buf, offset, size, cb);
    }
    function actualFill(buf, offset, size, cb) {
      if (process.browser) {
        var ourBuf = buf.buffer;
        var uint = new Uint8Array(ourBuf, offset, size);
        crypto.getRandomValues(uint);
        if (cb) {
          process.nextTick(function() {
            cb(null, buf);
          });
          return;
        }
        return buf;
      }
      if (cb) {
        randombytes(size, function(err, bytes2) {
          if (err) {
            return cb(err);
          }
          bytes2.copy(buf, offset);
          cb(null, buf);
        });
        return;
      }
      var bytes = randombytes(size);
      bytes.copy(buf, offset);
      return buf;
    }
    function randomFillSync(buf, offset, size) {
      if (typeof offset === "undefined") {
        offset = 0;
      }
      if (!Buffer.isBuffer(buf) && !(buf instanceof globalThis.Uint8Array)) {
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
      }
      assertOffset(offset, buf.length);
      if (size === void 0)
        size = buf.length - offset;
      assertSize(size, offset, buf.length);
      return actualFill(buf, offset, size);
    }
  }
});
var require_crypto_browserify = __commonJS({
  "../../node_modules/crypto-browserify/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require_browser3();
    exports.createHash = exports.Hash = require_browser4();
    exports.createHmac = exports.Hmac = require_browser5();
    var algos = require_algos();
    var algoKeys = Object.keys(algos);
    var hashes = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(algoKeys);
    exports.getHashes = function() {
      return hashes;
    };
    var p = require_browser6();
    exports.pbkdf2 = p.pbkdf2;
    exports.pbkdf2Sync = p.pbkdf2Sync;
    var aes = require_browser8();
    exports.Cipher = aes.Cipher;
    exports.createCipher = aes.createCipher;
    exports.Cipheriv = aes.Cipheriv;
    exports.createCipheriv = aes.createCipheriv;
    exports.Decipher = aes.Decipher;
    exports.createDecipher = aes.createDecipher;
    exports.Decipheriv = aes.Decipheriv;
    exports.createDecipheriv = aes.createDecipheriv;
    exports.getCiphers = aes.getCiphers;
    exports.listCiphers = aes.listCiphers;
    var dh = require_browser9();
    exports.DiffieHellmanGroup = dh.DiffieHellmanGroup;
    exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;
    exports.getDiffieHellman = dh.getDiffieHellman;
    exports.createDiffieHellman = dh.createDiffieHellman;
    exports.DiffieHellman = dh.DiffieHellman;
    var sign = require_browser10();
    exports.createSign = sign.createSign;
    exports.Sign = sign.Sign;
    exports.createVerify = sign.createVerify;
    exports.Verify = sign.Verify;
    exports.createECDH = require_browser11();
    var publicEncrypt = require_browser12();
    exports.publicEncrypt = publicEncrypt.publicEncrypt;
    exports.privateEncrypt = publicEncrypt.privateEncrypt;
    exports.publicDecrypt = publicEncrypt.publicDecrypt;
    exports.privateDecrypt = publicEncrypt.privateDecrypt;
    var rf = require_browser13();
    exports.randomFill = rf.randomFill;
    exports.randomFillSync = rf.randomFillSync;
    exports.createCredentials = function() {
      throw new Error([
        "sorry, createCredentials is not implemented yet",
        "we accept pull requests",
        "https://github.com/crypto-browserify/crypto-browserify"
      ].join("\n"));
    };
    exports.constants = {
      "DH_CHECK_P_NOT_SAFE_PRIME": 2,
      "DH_CHECK_P_NOT_PRIME": 1,
      "DH_UNABLE_TO_CHECK_GENERATOR": 4,
      "DH_NOT_SUITABLE_GENERATOR": 8,
      "NPN_ENABLED": 1,
      "ALPN_ENABLED": 1,
      "RSA_PKCS1_PADDING": 1,
      "RSA_SSLV23_PADDING": 2,
      "RSA_NO_PADDING": 3,
      "RSA_PKCS1_OAEP_PADDING": 4,
      "RSA_X931_PADDING": 5,
      "RSA_PKCS1_PSS_PADDING": 6,
      "POINT_CONVERSION_COMPRESSED": 2,
      "POINT_CONVERSION_UNCOMPRESSED": 4,
      "POINT_CONVERSION_HYBRID": 6
    };
  }
});
var require_cacheInvalidation = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/cacheInvalidation.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "hasContentChanged", {
      enumerable: true,
      get: () => hasContentChanged
    });
    var _crypto = _interopRequireDefault(require_crypto_browserify());
    var _sharedState = _interopRequireWildcard(require_sharedState());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function getHash(str) {
      try {
        return _crypto.default.createHash("md5").update(str, "utf-8").digest("binary");
      } catch (err) {
        return "";
      }
    }
    function hasContentChanged(sourcePath, root2) {
      let css = root2.toString();
      if (!css.includes("@tailwind")) {
        return false;
      }
      let existingHash = _sharedState.sourceHashMap.get(sourcePath);
      let rootHash = getHash(css);
      let didChange = existingHash !== rootHash;
      _sharedState.sourceHashMap.set(sourcePath, rootHash);
      return didChange;
    }
  }
});
var require_setupContextUtils = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/setupContextUtils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      isValidVariantFormatString: () => isValidVariantFormatString,
      parseVariant: () => parseVariant,
      getFileModifiedMap: () => getFileModifiedMap,
      createContext: () => createContext,
      getContext: () => getContext
    });
    var _fs = _interopRequireDefault(require_browserify_fs());
    var _url = _interopRequireDefault(require_url2());
    var _postcss = _interopRequireDefault(require_postcss());
    var _dlv = _interopRequireDefault(require_dlv_umd());
    var _postcssSelectorParser = _interopRequireDefault(require_dist());
    var _featureFlagsJs = require_featureFlags();
    var _transformThemeValue = _interopRequireDefault(require_transformThemeValue());
    var _parseObjectStyles = _interopRequireDefault(require_parseObjectStyles());
    var _prefixSelector = _interopRequireDefault(require_prefixSelector());
    var _isPlainObject = _interopRequireDefault(require_isPlainObject());
    var _escapeClassName = _interopRequireDefault(require_escapeClassName());
    var _nameClass = _interopRequireWildcard(require_nameClass());
    var _pluginUtils = require_pluginUtils();
    var _bigSign = _interopRequireDefault(require_bigSign());
    var _corePlugins = require_corePlugins();
    var _sharedState = _interopRequireWildcard(require_sharedState());
    var _toPath = require_toPath();
    var _log = _interopRequireDefault(require_log());
    var _negateValue = _interopRequireDefault(require_negateValue());
    var _isValidArbitraryValue = _interopRequireDefault(require_isValidArbitraryValue());
    var _generateRules = require_generateRules();
    var _cacheInvalidationJs = require_cacheInvalidation();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var MATCH_VARIANT = Symbol();
    function prefix(context, selector) {
      let prefix2 = context.tailwindConfig.prefix;
      return typeof prefix2 === "function" ? prefix2(selector) : prefix2 + selector;
    }
    function parseVariantFormatString(input) {
      if (input.includes("{")) {
        if (!isBalanced(input))
          throw new Error(`Your { and } are unbalanced.`);
        return input.split(/{(.*)}/gim).flatMap((line) => parseVariantFormatString(line)).filter(Boolean);
      }
      return [
        input.trim()
      ];
    }
    function isBalanced(input) {
      let count = 0;
      for (let char of input) {
        if (char === "{") {
          count++;
        } else if (char === "}") {
          if (--count < 0) {
            return false;
          }
        }
      }
      return count === 0;
    }
    function insertInto(list2, value, { before = [] } = {}) {
      before = [].concat(before);
      if (before.length <= 0) {
        list2.push(value);
        return;
      }
      let idx = list2.length - 1;
      for (let other of before) {
        let iidx = list2.indexOf(other);
        if (iidx === -1)
          continue;
        idx = Math.min(idx, iidx);
      }
      list2.splice(idx, 0, value);
    }
    function parseStyles(styles) {
      if (!Array.isArray(styles)) {
        return parseStyles([
          styles
        ]);
      }
      return styles.flatMap((style) => {
        let isNode = !Array.isArray(style) && !(0, _isPlainObject.default)(style);
        return isNode ? style : (0, _parseObjectStyles.default)(style);
      });
    }
    function getClasses(selector, mutate) {
      let parser = (0, _postcssSelectorParser.default)((selectors) => {
        let allClasses = [];
        if (mutate) {
          mutate(selectors);
        }
        selectors.walkClasses((classNode) => {
          allClasses.push(classNode.value);
        });
        return allClasses;
      });
      return parser.transformSync(selector);
    }
    function extractCandidates(node, state = {
      containsNonOnDemandable: false
    }, depth = 0) {
      let classes = [];
      if (node.type === "rule") {
        let ignoreNot = function(selectors) {
          selectors.walkPseudos((pseudo) => {
            if (pseudo.value === ":not") {
              pseudo.remove();
            }
          });
        };
        for (let selector of node.selectors) {
          let classCandidates = getClasses(selector, ignoreNot);
          if (classCandidates.length === 0) {
            state.containsNonOnDemandable = true;
          }
          for (let classCandidate of classCandidates) {
            classes.push(classCandidate);
          }
        }
      } else if (node.type === "atrule") {
        node.walkRules((rule2) => {
          for (let classCandidate of rule2.selectors.flatMap((selector) => getClasses(selector))) {
            classes.push(classCandidate);
          }
        });
      }
      if (depth === 0) {
        return [
          state.containsNonOnDemandable || classes.length === 0,
          classes
        ];
      }
      return classes;
    }
    function withIdentifiers(styles) {
      return parseStyles(styles).flatMap((node) => {
        let nodeMap = /* @__PURE__ */ new Map();
        let [containsNonOnDemandableSelectors, candidates] = extractCandidates(node);
        if (containsNonOnDemandableSelectors) {
          candidates.unshift(_sharedState.NOT_ON_DEMAND);
        }
        return candidates.map((c) => {
          if (!nodeMap.has(node)) {
            nodeMap.set(node, node);
          }
          return [
            c,
            nodeMap.get(node)
          ];
        });
      });
    }
    function isValidVariantFormatString(format) {
      return format.startsWith("@") || format.includes("&");
    }
    function parseVariant(variant) {
      variant = variant.replace(/\n+/g, "").replace(/\s{1,}/g, " ").trim();
      let fns = parseVariantFormatString(variant).map((str) => {
        if (!str.startsWith("@")) {
          return ({ format }) => format(str);
        }
        let [, name, params] = /@(.*?)( .+|[({].*)/g.exec(str);
        return ({ wrap }) => wrap(_postcss.default.atRule({
          name,
          params: params.trim()
        }));
      }).reverse();
      return (api) => {
        for (let fn of fns) {
          fn(api);
        }
      };
    }
    function buildPluginApi(tailwindConfig, context, { variantList, variantMap, offsets, classList }) {
      function getConfigValue(path, defaultValue) {
        return path ? (0, _dlv.default)(tailwindConfig, path, defaultValue) : tailwindConfig;
      }
      function applyConfiguredPrefix(selector) {
        return (0, _prefixSelector.default)(tailwindConfig.prefix, selector);
      }
      function prefixIdentifier(identifier, options) {
        if (identifier === _sharedState.NOT_ON_DEMAND) {
          return _sharedState.NOT_ON_DEMAND;
        }
        if (!options.respectPrefix) {
          return identifier;
        }
        return context.tailwindConfig.prefix + identifier;
      }
      function resolveThemeValue(path, defaultValue, opts = {}) {
        const [pathRoot, ...subPaths] = (0, _toPath.toPath)(path);
        const value = getConfigValue([
          "theme",
          pathRoot,
          ...subPaths
        ], defaultValue);
        return (0, _transformThemeValue.default)(pathRoot)(value, opts);
      }
      const theme = Object.assign((path, defaultValue = void 0) => resolveThemeValue(path, defaultValue), {
        withAlpha: (path, opacityValue) => resolveThemeValue(path, void 0, {
          opacityValue
        })
      });
      let api = {
        postcss: _postcss.default,
        prefix: applyConfiguredPrefix,
        e: _escapeClassName.default,
        config: getConfigValue,
        theme,
        corePlugins: (path) => {
          if (Array.isArray(tailwindConfig.corePlugins)) {
            return tailwindConfig.corePlugins.includes(path);
          }
          return getConfigValue([
            "corePlugins",
            path
          ], true);
        },
        variants: () => {
          return [];
        },
        addBase(base) {
          for (let [identifier, rule2] of withIdentifiers(base)) {
            let prefixedIdentifier = prefixIdentifier(identifier, {});
            let offset = offsets.base++;
            if (!context.candidateRuleMap.has(prefixedIdentifier)) {
              context.candidateRuleMap.set(prefixedIdentifier, []);
            }
            context.candidateRuleMap.get(prefixedIdentifier).push([
              {
                sort: offset,
                layer: "base"
              },
              rule2
            ]);
          }
        },
        addDefaults(group, declarations) {
          const groups = {
            [`@defaults ${group}`]: declarations
          };
          for (let [identifier, rule2] of withIdentifiers(groups)) {
            let prefixedIdentifier = prefixIdentifier(identifier, {});
            if (!context.candidateRuleMap.has(prefixedIdentifier)) {
              context.candidateRuleMap.set(prefixedIdentifier, []);
            }
            context.candidateRuleMap.get(prefixedIdentifier).push([
              {
                sort: offsets.base++,
                layer: "defaults"
              },
              rule2
            ]);
          }
        },
        addComponents(components, options) {
          let defaultOptions = {
            preserveSource: false,
            respectPrefix: true,
            respectImportant: false
          };
          options = Object.assign({}, defaultOptions, Array.isArray(options) ? {} : options);
          for (let [identifier, rule2] of withIdentifiers(components)) {
            let prefixedIdentifier = prefixIdentifier(identifier, options);
            classList.add(prefixedIdentifier);
            if (!context.candidateRuleMap.has(prefixedIdentifier)) {
              context.candidateRuleMap.set(prefixedIdentifier, []);
            }
            context.candidateRuleMap.get(prefixedIdentifier).push([
              {
                sort: offsets.components++,
                layer: "components",
                options
              },
              rule2
            ]);
          }
        },
        addUtilities(utilities, options) {
          let defaultOptions = {
            preserveSource: false,
            respectPrefix: true,
            respectImportant: true
          };
          options = Object.assign({}, defaultOptions, Array.isArray(options) ? {} : options);
          for (let [identifier, rule2] of withIdentifiers(utilities)) {
            let prefixedIdentifier = prefixIdentifier(identifier, options);
            classList.add(prefixedIdentifier);
            if (!context.candidateRuleMap.has(prefixedIdentifier)) {
              context.candidateRuleMap.set(prefixedIdentifier, []);
            }
            context.candidateRuleMap.get(prefixedIdentifier).push([
              {
                sort: offsets.utilities++,
                layer: "utilities",
                options
              },
              rule2
            ]);
          }
        },
        matchUtilities: function(utilities, options) {
          let defaultOptions = {
            respectPrefix: true,
            respectImportant: true
          };
          options = {
            ...defaultOptions,
            ...options
          };
          let offset = offsets.utilities++;
          for (let identifier in utilities) {
            let wrapped = function(modifier, { isOnlyPlugin }) {
              let { type = "any" } = options;
              type = [].concat(type);
              let [value, coercedType] = (0, _pluginUtils.coerceValue)(type, modifier, options, tailwindConfig);
              if (value === void 0) {
                return [];
              }
              if (!type.includes(coercedType) && !isOnlyPlugin) {
                return [];
              }
              if (!(0, _isValidArbitraryValue.default)(value)) {
                return [];
              }
              let ruleSets = [].concat(rule2(value)).filter(Boolean).map((declaration) => ({
                [(0, _nameClass.default)(identifier, modifier)]: declaration
              }));
              return ruleSets;
            };
            let prefixedIdentifier = prefixIdentifier(identifier, options);
            let rule2 = utilities[identifier];
            classList.add([
              prefixedIdentifier,
              options
            ]);
            let withOffsets = [
              {
                sort: offset,
                layer: "utilities",
                options
              },
              wrapped
            ];
            if (!context.candidateRuleMap.has(prefixedIdentifier)) {
              context.candidateRuleMap.set(prefixedIdentifier, []);
            }
            context.candidateRuleMap.get(prefixedIdentifier).push(withOffsets);
          }
        },
        matchComponents: function(components, options) {
          let defaultOptions = {
            respectPrefix: true,
            respectImportant: false
          };
          options = {
            ...defaultOptions,
            ...options
          };
          let offset = offsets.components++;
          for (let identifier in components) {
            let wrapped = function(modifier, { isOnlyPlugin }) {
              let { type = "any" } = options;
              type = [].concat(type);
              let [value, coercedType] = (0, _pluginUtils.coerceValue)(type, modifier, options, tailwindConfig);
              if (value === void 0) {
                return [];
              }
              if (!type.includes(coercedType)) {
                if (isOnlyPlugin) {
                  _log.default.warn([
                    `Unnecessary typehint \`${coercedType}\` in \`${identifier}-${modifier}\`.`,
                    `You can safely update it to \`${identifier}-${modifier.replace(coercedType + ":", "")}\`.`
                  ]);
                } else {
                  return [];
                }
              }
              if (!(0, _isValidArbitraryValue.default)(value)) {
                return [];
              }
              let ruleSets = [].concat(rule2(value)).filter(Boolean).map((declaration) => ({
                [(0, _nameClass.default)(identifier, modifier)]: declaration
              }));
              return ruleSets;
            };
            let prefixedIdentifier = prefixIdentifier(identifier, options);
            let rule2 = components[identifier];
            classList.add([
              prefixedIdentifier,
              options
            ]);
            let withOffsets = [
              {
                sort: offset,
                layer: "components",
                options
              },
              wrapped
            ];
            if (!context.candidateRuleMap.has(prefixedIdentifier)) {
              context.candidateRuleMap.set(prefixedIdentifier, []);
            }
            context.candidateRuleMap.get(prefixedIdentifier).push(withOffsets);
          }
        },
        addVariant(variantName, variantFunctions, options = {}) {
          variantFunctions = [].concat(variantFunctions).map((variantFunction) => {
            if (typeof variantFunction !== "string") {
              return (api2) => {
                let { args, modifySelectors, container, separator, wrap, format } = api2;
                let result = variantFunction(Object.assign({
                  modifySelectors,
                  container,
                  separator
                }, variantFunction[MATCH_VARIANT] && {
                  args,
                  wrap,
                  format
                }));
                if (typeof result === "string" && !isValidVariantFormatString(result)) {
                  throw new Error(`Your custom variant \`${variantName}\` has an invalid format string. Make sure it's an at-rule or contains a \`&\` placeholder.`);
                }
                if (Array.isArray(result)) {
                  return result.filter((variant) => typeof variant === "string").map((variant) => parseVariant(variant));
                }
                return result && typeof result === "string" && parseVariant(result)(api2);
              };
            }
            if (!isValidVariantFormatString(variantFunction)) {
              throw new Error(`Your custom variant \`${variantName}\` has an invalid format string. Make sure it's an at-rule or contains a \`&\` placeholder.`);
            }
            return parseVariant(variantFunction);
          });
          insertInto(variantList, variantName, options);
          variantMap.set(variantName, variantFunctions);
        }
      };
      if ((0, _featureFlagsJs.flagEnabled)(tailwindConfig, "matchVariant")) {
        api.matchVariant = function(variants, options) {
          for (let variant in variants) {
            var ref;
            for (let [k, v] of Object.entries((ref = options === null || options === void 0 ? void 0 : options.values) !== null && ref !== void 0 ? ref : {})) {
              api.addVariant(`${variant}-${k}`, variants[variant](v));
            }
            api.addVariant(variant, Object.assign(({ args }) => variants[variant](args), {
              [MATCH_VARIANT]: true
            }), options);
          }
        };
      }
      return api;
    }
    var fileModifiedMapCache = /* @__PURE__ */ new WeakMap();
    function getFileModifiedMap(context) {
      if (!fileModifiedMapCache.has(context)) {
        fileModifiedMapCache.set(context, /* @__PURE__ */ new Map());
      }
      return fileModifiedMapCache.get(context);
    }
    function trackModified(files, fileModifiedMap) {
      let changed = false;
      for (let file of files) {
        var ref;
        if (!file)
          continue;
        let parsed = _url.default.parse(file);
        let pathname = parsed.hash ? parsed.href.replace(parsed.hash, "") : parsed.href;
        pathname = parsed.search ? pathname.replace(parsed.search, "") : pathname;
        let newModified = (ref = _fs.default.statSync(decodeURIComponent(pathname), {
          throwIfNoEntry: false
        })) === null || ref === void 0 ? void 0 : ref.mtimeMs;
        if (!newModified) {
          continue;
        }
        if (!fileModifiedMap.has(file) || newModified > fileModifiedMap.get(file)) {
          changed = true;
        }
        fileModifiedMap.set(file, newModified);
      }
      return changed;
    }
    function extractVariantAtRules(node) {
      node.walkAtRules((atRule2) => {
        if ([
          "responsive",
          "variants"
        ].includes(atRule2.name)) {
          extractVariantAtRules(atRule2);
          atRule2.before(atRule2.nodes);
          atRule2.remove();
        }
      });
    }
    function collectLayerPlugins(root2) {
      let layerPlugins = [];
      root2.each((node) => {
        if (node.type === "atrule" && [
          "responsive",
          "variants"
        ].includes(node.name)) {
          node.name = "layer";
          node.params = "utilities";
        }
      });
      root2.walkAtRules("layer", (layerRule) => {
        extractVariantAtRules(layerRule);
        if (layerRule.params === "base") {
          for (let node of layerRule.nodes) {
            layerPlugins.push(function({ addBase }) {
              addBase(node, {
                respectPrefix: false
              });
            });
          }
          layerRule.remove();
        } else if (layerRule.params === "components") {
          for (let node1 of layerRule.nodes) {
            layerPlugins.push(function({ addComponents }) {
              addComponents(node1, {
                respectPrefix: false,
                preserveSource: true
              });
            });
          }
          layerRule.remove();
        } else if (layerRule.params === "utilities") {
          for (let node2 of layerRule.nodes) {
            layerPlugins.push(function({ addUtilities }) {
              addUtilities(node2, {
                respectPrefix: false,
                preserveSource: true
              });
            });
          }
          layerRule.remove();
        }
      });
      return layerPlugins;
    }
    function resolvePlugins(context, root2) {
      let corePluginList = Object.entries({
        ..._corePlugins.variantPlugins,
        ..._corePlugins.corePlugins
      }).map(([name, plugin2]) => {
        if (!context.tailwindConfig.corePlugins.includes(name)) {
          return null;
        }
        return plugin2;
      }).filter(Boolean);
      let userPlugins = context.tailwindConfig.plugins.map((plugin2) => {
        if (plugin2.__isOptionsFunction) {
          plugin2 = plugin2();
        }
        return typeof plugin2 === "function" ? plugin2 : plugin2.handler;
      });
      let layerPlugins = collectLayerPlugins(root2);
      let beforeVariants = [
        _corePlugins.variantPlugins["pseudoElementVariants"],
        _corePlugins.variantPlugins["pseudoClassVariants"]
      ];
      let afterVariants = [
        _corePlugins.variantPlugins["directionVariants"],
        _corePlugins.variantPlugins["reducedMotionVariants"],
        _corePlugins.variantPlugins["prefersContrastVariants"],
        _corePlugins.variantPlugins["darkVariants"],
        _corePlugins.variantPlugins["printVariant"],
        _corePlugins.variantPlugins["screenVariants"],
        _corePlugins.variantPlugins["orientationVariants"]
      ];
      return [
        ...corePluginList,
        ...beforeVariants,
        ...userPlugins,
        ...afterVariants,
        ...layerPlugins
      ];
    }
    function registerPlugins(plugins, context) {
      let variantList = [];
      let variantMap = /* @__PURE__ */ new Map();
      let offsets = {
        defaults: BigInt(0),
        base: BigInt(0),
        components: BigInt(0),
        utilities: BigInt(0),
        user: BigInt(0)
      };
      let classList = /* @__PURE__ */ new Set();
      let pluginApi = buildPluginApi(context.tailwindConfig, context, {
        variantList,
        variantMap,
        offsets,
        classList
      });
      for (let plugin2 of plugins) {
        if (Array.isArray(plugin2)) {
          for (let pluginItem of plugin2) {
            pluginItem(pluginApi);
          }
        } else {
          plugin2 === null || plugin2 === void 0 ? void 0 : plugin2(pluginApi);
        }
      }
      let highestOffset = ((args) => args.reduce((m, e) => e > m ? e : m))([
        offsets.base,
        offsets.defaults,
        offsets.components,
        offsets.utilities,
        offsets.user
      ]);
      let reservedBits = BigInt(highestOffset.toString(2).length);
      context.arbitraryPropertiesSort = (BigInt(1) << reservedBits << BigInt(0)) - BigInt(1);
      context.layerOrder = {
        defaults: BigInt(1) << reservedBits << BigInt(0),
        base: BigInt(1) << reservedBits << BigInt(1),
        components: BigInt(1) << reservedBits << BigInt(2),
        utilities: BigInt(1) << reservedBits << BigInt(3),
        user: BigInt(1) << reservedBits << BigInt(4)
      };
      reservedBits += BigInt(5);
      let offset = 0;
      context.variantOrder = new Map(variantList.map((variant, i) => {
        let variantFunctions = variantMap.get(variant).length;
        let bits = BigInt(1) << BigInt(i + offset) << reservedBits;
        offset += variantFunctions - 1;
        return [
          variant,
          bits
        ];
      }).sort(([, a], [, z]) => (0, _bigSign.default)(a - z)));
      context.minimumScreen = [
        ...context.variantOrder.values()
      ].shift();
      for (let [variantName, variantFunctions] of variantMap.entries()) {
        let sort = context.variantOrder.get(variantName);
        context.variantMap.set(variantName, variantFunctions.map((variantFunction, idx) => [
          sort << BigInt(idx),
          variantFunction
        ]));
      }
      var _safelist;
      let safelist = ((_safelist = context.tailwindConfig.safelist) !== null && _safelist !== void 0 ? _safelist : []).filter(Boolean);
      if (safelist.length > 0) {
        let checks = [];
        for (let value of safelist) {
          if (typeof value === "string") {
            context.changedContent.push({
              content: value,
              extension: "html"
            });
            continue;
          }
          if (value instanceof RegExp) {
            _log.default.warn("root-regex", [
              "Regular expressions in `safelist` work differently in Tailwind CSS v3.0.",
              "Update your `safelist` configuration to eliminate this warning.",
              "https://tailwindcss.com/docs/content-configuration#safelisting-classes"
            ]);
            continue;
          }
          checks.push(value);
        }
        if (checks.length > 0) {
          let patternMatchingCount = /* @__PURE__ */ new Map();
          let prefixLength = context.tailwindConfig.prefix.length;
          for (let util of classList) {
            let utils = Array.isArray(util) ? (() => {
              let [utilName, options] = util;
              var ref;
              let values = Object.keys((ref = options === null || options === void 0 ? void 0 : options.values) !== null && ref !== void 0 ? ref : {});
              let classes = values.map((value) => (0, _nameClass.formatClass)(utilName, value));
              if (options === null || options === void 0 ? void 0 : options.supportsNegativeValues) {
                classes = [
                  ...classes,
                  ...classes.map((cls) => "-" + cls)
                ];
                classes = [
                  ...classes,
                  ...classes.map((cls) => cls.slice(0, prefixLength) + "-" + cls.slice(prefixLength))
                ];
              }
              if ([].concat(options === null || options === void 0 ? void 0 : options.type).includes("color")) {
                classes = [
                  ...classes,
                  ...classes.flatMap((cls) => Object.keys(context.tailwindConfig.theme.opacity).map((opacity) => `${cls}/${opacity}`))
                ];
              }
              return classes;
            })() : [
              util
            ];
            for (let util1 of utils) {
              for (let { pattern, variants = [] } of checks) {
                pattern.lastIndex = 0;
                if (!patternMatchingCount.has(pattern)) {
                  patternMatchingCount.set(pattern, 0);
                }
                if (!pattern.test(util1))
                  continue;
                patternMatchingCount.set(pattern, patternMatchingCount.get(pattern) + 1);
                context.changedContent.push({
                  content: util1,
                  extension: "html"
                });
                for (let variant of variants) {
                  context.changedContent.push({
                    content: variant + context.tailwindConfig.separator + util1,
                    extension: "html"
                  });
                }
              }
            }
          }
          for (let [regex, count] of patternMatchingCount.entries()) {
            if (count !== 0)
              continue;
            _log.default.warn([
              `The safelist pattern \`${regex}\` doesn't match any Tailwind CSS classes.`,
              "Fix this pattern or remove it from your `safelist` configuration.",
              "https://tailwindcss.com/docs/content-configuration#safelisting-classes"
            ]);
          }
        }
      }
      let parasiteUtilities = /* @__PURE__ */ new Set([
        prefix(context, "group"),
        prefix(context, "peer")
      ]);
      context.getClassOrder = function getClassOrder(classes) {
        let sortedClassNames = /* @__PURE__ */ new Map();
        for (let [sort, rule2] of (0, _generateRules.generateRules)(new Set(classes), context)) {
          if (sortedClassNames.has(rule2.raws.tailwind.candidate))
            continue;
          sortedClassNames.set(rule2.raws.tailwind.candidate, sort);
        }
        return classes.map((className) => {
          var ref;
          let order = (ref = sortedClassNames.get(className)) !== null && ref !== void 0 ? ref : null;
          if (order === null && parasiteUtilities.has(className)) {
            order = context.layerOrder.components;
          }
          return [
            className,
            order
          ];
        });
      };
      context.getClassList = function getClassList() {
        let output = [];
        for (let util of classList) {
          if (Array.isArray(util)) {
            let [utilName, options] = util;
            let negativeClasses = [];
            var ref;
            for (let [key, value] of Object.entries((ref = options === null || options === void 0 ? void 0 : options.values) !== null && ref !== void 0 ? ref : {})) {
              output.push((0, _nameClass.formatClass)(utilName, key));
              if ((options === null || options === void 0 ? void 0 : options.supportsNegativeValues) && (0, _negateValue.default)(value)) {
                negativeClasses.push((0, _nameClass.formatClass)(utilName, `-${key}`));
              }
            }
            output.push(...negativeClasses);
          } else {
            output.push(util);
          }
        }
        return output;
      };
    }
    function createContext(tailwindConfig, changedContent = [], root2 = _postcss.default.root()) {
      let context = {
        disposables: [],
        ruleCache: /* @__PURE__ */ new Set(),
        classCache: /* @__PURE__ */ new Map(),
        applyClassCache: /* @__PURE__ */ new Map(),
        notClassCache: /* @__PURE__ */ new Set(),
        postCssNodeCache: /* @__PURE__ */ new Map(),
        candidateRuleMap: /* @__PURE__ */ new Map(),
        tailwindConfig,
        changedContent,
        variantMap: /* @__PURE__ */ new Map(),
        stylesheetCache: null
      };
      let resolvedPlugins = resolvePlugins(context, root2);
      registerPlugins(resolvedPlugins, context);
      return context;
    }
    var contextMap = _sharedState.contextMap;
    var configContextMap = _sharedState.configContextMap;
    var contextSourcesMap = _sharedState.contextSourcesMap;
    function getContext(root2, result, tailwindConfig, userConfigPath, tailwindConfigHash, contextDependencies) {
      let sourcePath = result.opts.from;
      let isConfigFile = userConfigPath !== null;
      _sharedState.env.DEBUG && console.log("Source path:", sourcePath);
      let existingContext;
      if (isConfigFile && contextMap.has(sourcePath)) {
        existingContext = contextMap.get(sourcePath);
      } else if (configContextMap.has(tailwindConfigHash)) {
        let context = configContextMap.get(tailwindConfigHash);
        contextSourcesMap.get(context).add(sourcePath);
        contextMap.set(sourcePath, context);
        existingContext = context;
      }
      let cssDidChange = (0, _cacheInvalidationJs.hasContentChanged)(sourcePath, root2);
      if (existingContext) {
        let contextDependenciesChanged = trackModified([
          ...contextDependencies
        ], getFileModifiedMap(existingContext));
        if (!contextDependenciesChanged && !cssDidChange) {
          return [
            existingContext,
            false
          ];
        }
      }
      if (contextMap.has(sourcePath)) {
        let oldContext = contextMap.get(sourcePath);
        if (contextSourcesMap.has(oldContext)) {
          contextSourcesMap.get(oldContext).delete(sourcePath);
          if (contextSourcesMap.get(oldContext).size === 0) {
            contextSourcesMap.delete(oldContext);
            for (let [tailwindConfigHash1, context1] of configContextMap) {
              if (context1 === oldContext) {
                configContextMap.delete(tailwindConfigHash1);
              }
            }
            for (let disposable of oldContext.disposables.splice(0)) {
              disposable(oldContext);
            }
          }
        }
      }
      _sharedState.env.DEBUG && console.log("Setting up new context...");
      let context2 = createContext(tailwindConfig, [], root2);
      trackModified([
        ...contextDependencies
      ], getFileModifiedMap(context2));
      configContextMap.set(tailwindConfigHash, context2);
      contextMap.set(sourcePath, context2);
      if (!contextSourcesMap.has(context2)) {
        contextSourcesMap.set(context2, /* @__PURE__ */ new Set());
      }
      contextSourcesMap.get(context2).add(sourcePath);
      return [
        context2,
        true
      ];
    }
  }
});
var is_glob_exports = {};
__export(is_glob_exports, {
  default: () => is_glob_default
});
var is_glob_default;
var init_is_glob = __esm({
  "src/fakeModules/is-glob.js"() {
    init_process();
    init_buffer();
    is_glob_default = () => false;
  }
});
var glob_parent_exports = {};
__export(glob_parent_exports, {
  default: () => glob_parent_default
});
var glob_parent_default;
var init_glob_parent = __esm({
  "src/fakeModules/glob-parent.js"() {
    init_process();
    init_buffer();
    glob_parent_default = () => "";
  }
});
var require_parseDependency = __commonJS({
  "../../node_modules/tailwindcss/lib/util/parseDependency.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => parseDependency
    });
    var _isGlob = _interopRequireDefault((init_is_glob(), __toCommonJS(is_glob_exports)));
    var _globParent = _interopRequireDefault((init_glob_parent(), __toCommonJS(glob_parent_exports)));
    var _path = _interopRequireDefault(require_path_browserify());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function parseGlob(pattern) {
      let glob = pattern;
      let base = (0, _globParent.default)(pattern);
      if (base !== ".") {
        glob = pattern.substr(base.length);
        if (glob.charAt(0) === "/") {
          glob = glob.substr(1);
        }
      }
      if (glob.substr(0, 2) === "./") {
        glob = glob.substr(2);
      }
      if (glob.charAt(0) === "/") {
        glob = glob.substr(1);
      }
      return {
        base,
        glob
      };
    }
    function parseDependency(normalizedFileOrGlob) {
      if (normalizedFileOrGlob.startsWith("!")) {
        return null;
      }
      let message;
      if ((0, _isGlob.default)(normalizedFileOrGlob)) {
        let { base, glob } = parseGlob(normalizedFileOrGlob);
        message = {
          type: "dir-dependency",
          dir: _path.default.resolve(base),
          glob
        };
      } else {
        message = {
          type: "dependency",
          file: _path.default.resolve(normalizedFileOrGlob)
        };
      }
      if (message.type === "dir-dependency" && process.env.ROLLUP_WATCH === "true") {
        message = {
          type: "dependency",
          file: message.dir
        };
      }
      return message;
    }
  }
});
var require_validateConfig = __commonJS({
  "../../node_modules/tailwindcss/lib/util/validateConfig.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "validateConfig", {
      enumerable: true,
      get: () => validateConfig
    });
    var _log = _interopRequireDefault(require_log());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function validateConfig(config) {
      if (config.content.files.length === 0) {
        _log.default.warn("content-problems", [
          "The `content` option in your Tailwind CSS configuration is missing or empty.",
          "Configure your content sources or your generated CSS will be missing styles.",
          "https://tailwindcss.com/docs/content-configuration"
        ]);
      }
      return config;
    }
  }
});
var require_setupTrackingContext = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/setupTrackingContext.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(
      exports,
      "default",
      {
        enumerable: true,
        get: () => setupTrackingContext
      }
    );
    var _fs = _interopRequireDefault(require_browserify_fs());
    var _path = _interopRequireDefault(require_path_browserify());
    var _fastGlob = _interopRequireDefault((init_fast_glob(), __toCommonJS(fast_glob_exports)));
    var _quickLru = _interopRequireDefault(require_quick_lru());
    var _normalizePath = _interopRequireDefault(require_normalize_path());
    var _hashConfig = _interopRequireDefault(require_hashConfig());
    var _getModuleDependencies = _interopRequireDefault(require_getModuleDependencies());
    var _resolveConfig = _interopRequireDefault(require_resolve_config());
    var _resolveConfigPath = _interopRequireDefault(require_resolveConfigPath());
    var _sharedState = require_sharedState();
    var _setupContextUtils = require_setupContextUtils();
    var _parseDependency = _interopRequireDefault(require_parseDependency());
    var _validateConfigJs = require_validateConfig();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var configPathCache = new _quickLru.default({
      maxSize: 100
    });
    var candidateFilesCache = /* @__PURE__ */ new WeakMap();
    function getCandidateFiles(context, tailwindConfig) {
      if (candidateFilesCache.has(context)) {
        return candidateFilesCache.get(context);
      }
      let candidateFiles = tailwindConfig.content.files.filter((item) => typeof item === "string").map((contentPath) => (0, _normalizePath.default)(contentPath));
      return candidateFilesCache.set(context, candidateFiles).get(context);
    }
    function getTailwindConfig(configOrPath) {
      let userConfigPath = (0, _resolveConfigPath.default)(configOrPath);
      if (userConfigPath !== null) {
        let [prevConfig, prevConfigHash, prevDeps, prevModified] = configPathCache.get(userConfigPath) || [];
        let newDeps = (0, _getModuleDependencies.default)(userConfigPath).map((dep) => dep.file);
        let modified = false;
        let newModified = /* @__PURE__ */ new Map();
        for (let file of newDeps) {
          let time = _fs.default.statSync(file).mtimeMs;
          newModified.set(file, time);
          if (!prevModified || !prevModified.has(file) || time > prevModified.get(file)) {
            modified = true;
          }
        }
        if (!modified) {
          return [
            prevConfig,
            userConfigPath,
            prevConfigHash,
            prevDeps
          ];
        }
        for (let file1 of newDeps) {
          delete __require.cache[file1];
        }
        let newConfig = (0, _resolveConfig.default)(__require(userConfigPath));
        newConfig = (0, _validateConfigJs.validateConfig)(newConfig);
        let newHash = (0, _hashConfig.default)(newConfig);
        configPathCache.set(userConfigPath, [
          newConfig,
          newHash,
          newDeps,
          newModified
        ]);
        return [
          newConfig,
          userConfigPath,
          newHash,
          newDeps
        ];
      }
      let newConfig1 = (0, _resolveConfig.default)(configOrPath.config === void 0 ? configOrPath : configOrPath.config);
      newConfig1 = (0, _validateConfigJs.validateConfig)(newConfig1);
      return [
        newConfig1,
        null,
        (0, _hashConfig.default)(newConfig1),
        []
      ];
    }
    function resolvedChangedContent(context, candidateFiles, fileModifiedMap) {
      let changedContent = context.tailwindConfig.content.files.filter((item) => typeof item.raw === "string").map(({ raw, extension = "html" }) => ({
        content: raw,
        extension
      }));
      for (let changedFile of resolveChangedFiles(candidateFiles, fileModifiedMap)) {
        let content = _fs.default.readFileSync(changedFile, "utf8");
        let extension = _path.default.extname(changedFile).slice(1);
        changedContent.push({
          content,
          extension
        });
      }
      return changedContent;
    }
    function resolveChangedFiles(candidateFiles, fileModifiedMap) {
      let changedFiles = /* @__PURE__ */ new Set();
      _sharedState.env.DEBUG && console.time("Finding changed files");
      let files = _fastGlob.default.sync(candidateFiles);
      for (let file of files) {
        let prevModified = fileModifiedMap.has(file) ? fileModifiedMap.get(file) : -Infinity;
        let modified = _fs.default.statSync(file).mtimeMs;
        if (modified > prevModified) {
          changedFiles.add(file);
          fileModifiedMap.set(file, modified);
        }
      }
      _sharedState.env.DEBUG && console.timeEnd("Finding changed files");
      return changedFiles;
    }
    function setupTrackingContext(configOrPath) {
      return ({ tailwindDirectives, registerDependency }) => {
        return (root2, result) => {
          let [tailwindConfig, userConfigPath, tailwindConfigHash, configDependencies] = getTailwindConfig(configOrPath);
          let contextDependencies = new Set(configDependencies);
          if (tailwindDirectives.size > 0) {
            contextDependencies.add(result.opts.from);
            for (let message of result.messages) {
              if (message.type === "dependency") {
                contextDependencies.add(message.file);
              }
            }
          }
          let [context] = (0, _setupContextUtils.getContext)(root2, result, tailwindConfig, userConfigPath, tailwindConfigHash, contextDependencies);
          let candidateFiles = getCandidateFiles(context, tailwindConfig);
          if (tailwindDirectives.size > 0) {
            let fileModifiedMap = (0, _setupContextUtils.getFileModifiedMap)(context);
            for (let fileOrGlob of candidateFiles) {
              let dependency = (0, _parseDependency.default)(fileOrGlob);
              if (dependency) {
                registerDependency(dependency);
              }
            }
            for (let changedContent of resolvedChangedContent(context, candidateFiles, fileModifiedMap)) {
              context.changedContent.push(changedContent);
            }
          }
          for (let file of configDependencies) {
            registerDependency({
              type: "dependency",
              file
            });
          }
          return context;
        };
      };
    }
  }
});
var require_normalizeTailwindDirectives = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/normalizeTailwindDirectives.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => normalizeTailwindDirectives
    });
    var _log = _interopRequireDefault(require_log());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function normalizeTailwindDirectives(root2) {
      let tailwindDirectives = /* @__PURE__ */ new Set();
      let layerDirectives = /* @__PURE__ */ new Set();
      let applyDirectives = /* @__PURE__ */ new Set();
      root2.walkAtRules((atRule2) => {
        if (atRule2.name === "apply") {
          applyDirectives.add(atRule2);
        }
        if (atRule2.name === "import") {
          if (atRule2.params === '"tailwindcss/base"' || atRule2.params === "'tailwindcss/base'") {
            atRule2.name = "tailwind";
            atRule2.params = "base";
          } else if (atRule2.params === '"tailwindcss/components"' || atRule2.params === "'tailwindcss/components'") {
            atRule2.name = "tailwind";
            atRule2.params = "components";
          } else if (atRule2.params === '"tailwindcss/utilities"' || atRule2.params === "'tailwindcss/utilities'") {
            atRule2.name = "tailwind";
            atRule2.params = "utilities";
          } else if (atRule2.params === '"tailwindcss/screens"' || atRule2.params === "'tailwindcss/screens'" || atRule2.params === '"tailwindcss/variants"' || atRule2.params === "'tailwindcss/variants'") {
            atRule2.name = "tailwind";
            atRule2.params = "variants";
          }
        }
        if (atRule2.name === "tailwind") {
          if (atRule2.params === "screens") {
            atRule2.params = "variants";
          }
          tailwindDirectives.add(atRule2.params);
        }
        if ([
          "layer",
          "responsive",
          "variants"
        ].includes(atRule2.name)) {
          if ([
            "responsive",
            "variants"
          ].includes(atRule2.name)) {
            _log.default.warn(`${atRule2.name}-at-rule-deprecated`, [
              `The \`@${atRule2.name}\` directive has been deprecated in Tailwind CSS v3.0.`,
              `Use \`@layer utilities\` or \`@layer components\` instead.`,
              "https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer"
            ]);
          }
          layerDirectives.add(atRule2);
        }
      });
      if (!tailwindDirectives.has("base") || !tailwindDirectives.has("components") || !tailwindDirectives.has("utilities")) {
        for (let rule2 of layerDirectives) {
          if (rule2.name === "layer" && [
            "base",
            "components",
            "utilities"
          ].includes(rule2.params)) {
            if (!tailwindDirectives.has(rule2.params)) {
              throw rule2.error(`\`@layer ${rule2.params}\` is used but no matching \`@tailwind ${rule2.params}\` directive is present.`);
            }
          } else if (rule2.name === "responsive") {
            if (!tailwindDirectives.has("utilities")) {
              throw rule2.error("`@responsive` is used but `@tailwind utilities` is missing.");
            }
          } else if (rule2.name === "variants") {
            if (!tailwindDirectives.has("utilities")) {
              throw rule2.error("`@variants` is used but `@tailwind utilities` is missing.");
            }
          }
        }
      }
      return {
        tailwindDirectives,
        applyDirectives
      };
    }
  }
});
var require_cloneNodes = __commonJS({
  "../../node_modules/tailwindcss/lib/util/cloneNodes.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => cloneNodes
    });
    function cloneNodes(nodes, source = void 0, raws = void 0) {
      return nodes.map((node) => {
        var ref;
        let cloned = node.clone();
        let shouldOverwriteSource = ((ref = node.raws.tailwind) === null || ref === void 0 ? void 0 : ref.preserveSource) !== true || !cloned.source;
        if (source !== void 0 && shouldOverwriteSource) {
          cloned.source = source;
          if ("walk" in cloned) {
            cloned.walk((child) => {
              child.source = source;
            });
          }
        }
        if (raws !== void 0) {
          cloned.raws.tailwind = {
            ...cloned.raws.tailwind,
            ...raws
          };
        }
        return cloned;
      });
    }
  }
});
var require_defaultExtractor = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/defaultExtractor.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "defaultExtractor", {
      enumerable: true,
      get: () => defaultExtractor
    });
    var _featureFlags = require_featureFlags();
    var _regex = _interopRequireWildcard(require_regex());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function defaultExtractor(context) {
      let patterns = Array.from(buildRegExps(context));
      return (content) => {
        let results = [];
        for (let pattern of patterns) {
          var ref;
          results = [
            ...results,
            ...(ref = content.match(pattern)) !== null && ref !== void 0 ? ref : []
          ];
        }
        return results.filter((v) => v !== void 0).map(clipAtBalancedParens);
      };
    }
    function* buildRegExps(context) {
      let separator = context.tailwindConfig.separator;
      let variantGroupingEnabled = (0, _featureFlags.flagEnabled)(context.tailwindConfig, "variantGrouping");
      let prefix = context.tailwindConfig.prefix !== "" ? _regex.optional(_regex.pattern([
        /-?/,
        _regex.escape(context.tailwindConfig.prefix)
      ])) : "";
      let utility = _regex.any([
        /\[[^\s:'"`]+:[^\s\]]+\]/,
        _regex.pattern([
          /-?(?:\w+)/,
          _regex.optional(_regex.any([
            _regex.pattern([
              /-(?:\w+-)*\[[^\s:]+\]/,
              /(?![{([]])/,
              /(?:\/[^\s'"`\\><$]*)?/
            ]),
            _regex.pattern([
              /-(?:\w+-)*\[[^\s]+\]/,
              /(?![{([]])/,
              /(?:\/[^\s'"`\\$]*)?/
            ]),
            /[-\/][^\s'"`\\$={><]*/
          ]))
        ])
      ]);
      let variantPatterns = [
        _regex.any([
          _regex.pattern([
            /([^\s"'`\[\\]+-)?\[[^\s"'`]+\]/,
            separator
          ]),
          _regex.pattern([
            /[^\s"'`\[\\]+/,
            separator
          ])
        ]),
        _regex.any([
          _regex.pattern([
            /([^\s"'`\[\\]+-)?\[[^\s`]+\]/,
            separator
          ]),
          _regex.pattern([
            /[^\s`\[\\]+/,
            separator
          ])
        ])
      ];
      for (const variantPattern of variantPatterns) {
        yield _regex.pattern([
          "((?=((",
          variantPattern,
          ")+))\\2)?",
          /!?/,
          prefix,
          variantGroupingEnabled ? _regex.any([
            _regex.pattern([
              /\(/,
              utility,
              _regex.zeroOrMore([
                /,/,
                utility
              ]),
              /\)/
            ]),
            utility
          ]) : utility
        ]);
      }
      yield /[^<>"'`\s.(){}[\]#=%$]*[^<>"'`\s.(){}[\]#=%:$]/g;
    }
    var SPECIALS = /([\[\]'"`])([^\[\]'"`])?/g;
    var ALLOWED_CLASS_CHARACTERS = /[^"'`\s<>\]]+/;
    function clipAtBalancedParens(input) {
      if (!input.includes("-[")) {
        return input;
      }
      let depth = 0;
      let openStringTypes = [];
      let matches = input.matchAll(SPECIALS);
      matches = Array.from(matches).flatMap((match) => {
        const [, ...groups] = match;
        return groups.map((group, idx) => Object.assign([], match, {
          index: match.index + idx,
          0: group
        }));
      });
      for (let match of matches) {
        let char = match[0];
        let inStringType = openStringTypes[openStringTypes.length - 1];
        if (char === inStringType) {
          openStringTypes.pop();
        } else if (char === "'" || char === '"' || char === "`") {
          openStringTypes.push(char);
        }
        if (inStringType) {
          continue;
        } else if (char === "[") {
          depth++;
          continue;
        } else if (char === "]") {
          depth--;
          continue;
        }
        if (depth < 0) {
          return input.substring(0, match.index);
        }
        if (depth === 0 && !ALLOWED_CLASS_CHARACTERS.test(char)) {
          return input.substring(0, match.index);
        }
      }
      return input;
    }
  }
});
var require_expandTailwindAtRules = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/expandTailwindAtRules.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => expandTailwindAtRules
    });
    var _quickLru = _interopRequireDefault(require_quick_lru());
    var _sharedState = _interopRequireWildcard(require_sharedState());
    var _generateRules = require_generateRules();
    var _bigSign = _interopRequireDefault(require_bigSign());
    var _log = _interopRequireDefault(require_log());
    var _cloneNodes = _interopRequireDefault(require_cloneNodes());
    var _defaultExtractor = require_defaultExtractor();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var env = _sharedState.env;
    var builtInExtractors = {
      DEFAULT: _defaultExtractor.defaultExtractor
    };
    var builtInTransformers = {
      DEFAULT: (content) => content,
      svelte: (content) => content.replace(/(?:^|\s)class:/g, " ")
    };
    function getExtractor(context, fileExtension) {
      let extractors = context.tailwindConfig.content.extract;
      return extractors[fileExtension] || extractors.DEFAULT || builtInExtractors[fileExtension] || builtInExtractors.DEFAULT(context);
    }
    function getTransformer(tailwindConfig, fileExtension) {
      let transformers = tailwindConfig.content.transform;
      return transformers[fileExtension] || transformers.DEFAULT || builtInTransformers[fileExtension] || builtInTransformers.DEFAULT;
    }
    var extractorCache = /* @__PURE__ */ new WeakMap();
    function getClassCandidates(content, extractor, candidates, seen) {
      if (!extractorCache.has(extractor)) {
        extractorCache.set(extractor, new _quickLru.default({
          maxSize: 25e3
        }));
      }
      for (let line of content.split("\n")) {
        line = line.trim();
        if (seen.has(line)) {
          continue;
        }
        seen.add(line);
        if (extractorCache.get(extractor).has(line)) {
          for (let match of extractorCache.get(extractor).get(line)) {
            candidates.add(match);
          }
        } else {
          let extractorMatches = extractor(line).filter((s) => s !== "!*");
          let lineMatchesSet = new Set(extractorMatches);
          for (let match1 of lineMatchesSet) {
            candidates.add(match1);
          }
          extractorCache.get(extractor).set(line, lineMatchesSet);
        }
      }
    }
    function buildStylesheet(rules, context) {
      let sortedRules = rules.sort(([a], [z]) => (0, _bigSign.default)(a - z));
      let returnValue = {
        base: /* @__PURE__ */ new Set(),
        defaults: /* @__PURE__ */ new Set(),
        components: /* @__PURE__ */ new Set(),
        utilities: /* @__PURE__ */ new Set(),
        variants: /* @__PURE__ */ new Set(),
        user: /* @__PURE__ */ new Set()
      };
      for (let [sort, rule2] of sortedRules) {
        if (sort >= context.minimumScreen) {
          returnValue.variants.add(rule2);
          continue;
        }
        if (sort & context.layerOrder.base) {
          returnValue.base.add(rule2);
          continue;
        }
        if (sort & context.layerOrder.defaults) {
          returnValue.defaults.add(rule2);
          continue;
        }
        if (sort & context.layerOrder.components) {
          returnValue.components.add(rule2);
          continue;
        }
        if (sort & context.layerOrder.utilities) {
          returnValue.utilities.add(rule2);
          continue;
        }
        if (sort & context.layerOrder.user) {
          returnValue.user.add(rule2);
          continue;
        }
      }
      return returnValue;
    }
    function expandTailwindAtRules(context) {
      return (root2) => {
        let layerNodes = {
          base: null,
          components: null,
          utilities: null,
          variants: null
        };
        root2.walkAtRules((rule2) => {
          if (rule2.name === "tailwind") {
            if (Object.keys(layerNodes).includes(rule2.params)) {
              layerNodes[rule2.params] = rule2;
            }
          }
        });
        if (Object.values(layerNodes).every((n) => n === null)) {
          return root2;
        }
        let candidates = /* @__PURE__ */ new Set([
          _sharedState.NOT_ON_DEMAND
        ]);
        let seen = /* @__PURE__ */ new Set();
        env.DEBUG && console.time("Reading changed files");
        for (let { content, extension } of context.changedContent) {
          let transformer = getTransformer(context.tailwindConfig, extension);
          let extractor = getExtractor(context, extension);
          getClassCandidates(transformer(content), extractor, candidates, seen);
        }
        env.DEBUG && console.timeEnd("Reading changed files");
        let classCacheCount = context.classCache.size;
        env.DEBUG && console.time("Generate rules");
        let rules = (0, _generateRules.generateRules)(candidates, context);
        env.DEBUG && console.timeEnd("Generate rules");
        env.DEBUG && console.time("Build stylesheet");
        if (context.stylesheetCache === null || context.classCache.size !== classCacheCount) {
          for (let rule2 of rules) {
            context.ruleCache.add(rule2);
          }
          context.stylesheetCache = buildStylesheet([
            ...context.ruleCache
          ], context);
        }
        env.DEBUG && console.timeEnd("Build stylesheet");
        let { defaults: defaultNodes, base: baseNodes, components: componentNodes, utilities: utilityNodes, variants: screenNodes } = context.stylesheetCache;
        if (layerNodes.base) {
          layerNodes.base.before((0, _cloneNodes.default)([
            ...baseNodes,
            ...defaultNodes
          ], layerNodes.base.source, {
            layer: "base"
          }));
          layerNodes.base.remove();
        }
        if (layerNodes.components) {
          layerNodes.components.before((0, _cloneNodes.default)([
            ...componentNodes
          ], layerNodes.components.source, {
            layer: "components"
          }));
          layerNodes.components.remove();
        }
        if (layerNodes.utilities) {
          layerNodes.utilities.before((0, _cloneNodes.default)([
            ...utilityNodes
          ], layerNodes.utilities.source, {
            layer: "utilities"
          }));
          layerNodes.utilities.remove();
        }
        const variantNodes = Array.from(screenNodes).filter((node) => {
          var ref;
          const parentLayer = (ref = node.raws.tailwind) === null || ref === void 0 ? void 0 : ref.parentLayer;
          if (parentLayer === "components") {
            return layerNodes.components !== null;
          }
          if (parentLayer === "utilities") {
            return layerNodes.utilities !== null;
          }
          return true;
        });
        if (layerNodes.variants) {
          layerNodes.variants.before((0, _cloneNodes.default)(variantNodes, layerNodes.variants.source, {
            layer: "variants"
          }));
          layerNodes.variants.remove();
        } else if (variantNodes.length > 0) {
          root2.append((0, _cloneNodes.default)(variantNodes, root2.source, {
            layer: "variants"
          }));
        }
        const hasUtilityVariants = variantNodes.some((node) => {
          var ref;
          return ((ref = node.raws.tailwind) === null || ref === void 0 ? void 0 : ref.parentLayer) === "utilities";
        });
        if (layerNodes.utilities && utilityNodes.size === 0 && !hasUtilityVariants) {
          _log.default.warn("content-problems", [
            "No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.",
            "https://tailwindcss.com/docs/content-configuration"
          ]);
        }
        if (env.DEBUG) {
          console.log("Potential classes: ", candidates.size);
          console.log("Active contexts: ", _sharedState.contextSourcesMap.size);
        }
        context.changedContent = [];
        root2.walkAtRules("layer", (rule2) => {
          if (Object.keys(layerNodes).includes(rule2.params)) {
            rule2.remove();
          }
        });
      };
    }
  }
});
var require_expandApplyAtRules = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/expandApplyAtRules.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => expandApplyAtRules
    });
    var _postcss = _interopRequireDefault(require_postcss());
    var _postcssSelectorParser = _interopRequireDefault(require_dist());
    var _generateRules = require_generateRules();
    var _bigSign = _interopRequireDefault(require_bigSign());
    var _escapeClassName = _interopRequireDefault(require_escapeClassName());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function extractClasses(node) {
      let groups = /* @__PURE__ */ new Map();
      let container = _postcss.default.root({
        nodes: [
          node.clone()
        ]
      });
      container.walkRules((rule2) => {
        (0, _postcssSelectorParser.default)((selectors) => {
          selectors.walkClasses((classSelector) => {
            let parentSelector = classSelector.parent.toString();
            let classes2 = groups.get(parentSelector);
            if (!classes2) {
              groups.set(parentSelector, classes2 = /* @__PURE__ */ new Set());
            }
            classes2.add(classSelector.value);
          });
        }).processSync(rule2.selector);
      });
      let normalizedGroups = Array.from(groups.values(), (classes2) => Array.from(classes2));
      let classes = normalizedGroups.flat();
      return Object.assign(classes, {
        groups: normalizedGroups
      });
    }
    var selectorExtractor = (0, _postcssSelectorParser.default)((root2) => root2.nodes.map((node) => node.toString()));
    function extractSelectors(ruleSelectors) {
      return selectorExtractor.transformSync(ruleSelectors);
    }
    function extractBaseCandidates(candidates, separator) {
      let baseClasses = /* @__PURE__ */ new Set();
      for (let candidate of candidates) {
        baseClasses.add(candidate.split(separator).pop());
      }
      return Array.from(baseClasses);
    }
    function prefix(context, selector) {
      let prefix2 = context.tailwindConfig.prefix;
      return typeof prefix2 === "function" ? prefix2(selector) : prefix2 + selector;
    }
    function* pathToRoot(node) {
      yield node;
      while (node.parent) {
        yield node.parent;
        node = node.parent;
      }
    }
    function shallowClone(node, overrides = {}) {
      let children = node.nodes;
      node.nodes = [];
      let tmp = node.clone(overrides);
      node.nodes = children;
      return tmp;
    }
    function nestedClone(node) {
      for (let parent of pathToRoot(node)) {
        if (node === parent) {
          continue;
        }
        if (parent.type === "root") {
          break;
        }
        node = shallowClone(parent, {
          nodes: [
            node
          ]
        });
      }
      return node;
    }
    function buildLocalApplyCache(root2, context) {
      let cache = /* @__PURE__ */ new Map();
      let highestOffset = context.layerOrder.user >> BigInt(4);
      root2.walkRules((rule2, idx) => {
        for (let node of pathToRoot(rule2)) {
          var ref;
          if (((ref = node.raws.tailwind) === null || ref === void 0 ? void 0 : ref.layer) !== void 0) {
            return;
          }
        }
        let container = nestedClone(rule2);
        for (let className of extractClasses(rule2)) {
          let list2 = cache.get(className) || [];
          cache.set(className, list2);
          list2.push([
            {
              layer: "user",
              sort: BigInt(idx) + highestOffset,
              important: false
            },
            container
          ]);
        }
      });
      return cache;
    }
    function buildApplyCache(applyCandidates, context) {
      for (let candidate of applyCandidates) {
        if (context.notClassCache.has(candidate) || context.applyClassCache.has(candidate)) {
          continue;
        }
        if (context.classCache.has(candidate)) {
          context.applyClassCache.set(candidate, context.classCache.get(candidate).map(([meta, rule2]) => [
            meta,
            rule2.clone()
          ]));
          continue;
        }
        let matches = Array.from((0, _generateRules.resolveMatches)(candidate, context));
        if (matches.length === 0) {
          context.notClassCache.add(candidate);
          continue;
        }
        context.applyClassCache.set(candidate, matches);
      }
      return context.applyClassCache;
    }
    function lazyCache(buildCacheFn) {
      let cache = null;
      return {
        get: (name) => {
          cache = cache || buildCacheFn();
          return cache.get(name);
        },
        has: (name) => {
          cache = cache || buildCacheFn();
          return cache.has(name);
        }
      };
    }
    function combineCaches(caches) {
      return {
        get: (name) => caches.flatMap((cache) => cache.get(name) || []),
        has: (name) => caches.some((cache) => cache.has(name))
      };
    }
    function extractApplyCandidates(params) {
      let candidates = params.split(/[\s\t\n]+/g);
      if (candidates[candidates.length - 1] === "!important") {
        return [
          candidates.slice(0, -1),
          true
        ];
      }
      return [
        candidates,
        false
      ];
    }
    function processApply(root2, context, localCache) {
      let applyCandidates = /* @__PURE__ */ new Set();
      let applies = [];
      root2.walkAtRules("apply", (rule2) => {
        let [candidates] = extractApplyCandidates(rule2.params);
        for (let util of candidates) {
          applyCandidates.add(util);
        }
        applies.push(rule2);
      });
      if (applies.length === 0) {
        return;
      }
      let applyClassCache = combineCaches([
        localCache,
        buildApplyCache(applyCandidates, context)
      ]);
      function replaceSelector(selector, utilitySelectors, candidate) {
        let needle = `.${(0, _escapeClassName.default)(candidate)}`;
        let needles = [
          .../* @__PURE__ */ new Set([
            needle,
            needle.replace(/\\2c /g, "\\,")
          ])
        ];
        let utilitySelectorsList = extractSelectors(utilitySelectors);
        return extractSelectors(selector).map((s) => {
          let replaced = [];
          for (let utilitySelector of utilitySelectorsList) {
            let replacedSelector = utilitySelector;
            for (const needle2 of needles) {
              replacedSelector = replacedSelector.replace(needle2, s);
            }
            if (replacedSelector === utilitySelector) {
              continue;
            }
            replaced.push(replacedSelector);
          }
          return replaced.join(", ");
        }).join(", ");
      }
      let perParentApplies = /* @__PURE__ */ new Map();
      for (let apply of applies) {
        let [candidates] = perParentApplies.get(apply.parent) || [
          [],
          apply.source
        ];
        perParentApplies.set(apply.parent, [
          candidates,
          apply.source
        ]);
        let [applyCandidates1, important] = extractApplyCandidates(apply.params);
        if (apply.parent.type === "atrule") {
          if (apply.parent.name === "screen") {
            const screenType = apply.parent.params;
            throw apply.error(`@apply is not supported within nested at-rules like @screen. We suggest you write this as @apply ${applyCandidates1.map((c) => `${screenType}:${c}`).join(" ")} instead.`);
          }
          throw apply.error(`@apply is not supported within nested at-rules like @${apply.parent.name}. You can fix this by un-nesting @${apply.parent.name}.`);
        }
        for (let applyCandidate of applyCandidates1) {
          if ([
            prefix(context, "group"),
            prefix(context, "peer")
          ].includes(applyCandidate)) {
            throw apply.error(`@apply should not be used with the '${applyCandidate}' utility`);
          }
          if (!applyClassCache.has(applyCandidate)) {
            throw apply.error(`The \`${applyCandidate}\` class does not exist. If \`${applyCandidate}\` is a custom class, make sure it is defined within a \`@layer\` directive.`);
          }
          let rules = applyClassCache.get(applyCandidate);
          candidates.push([
            applyCandidate,
            important,
            rules
          ]);
        }
      }
      for (const [parent, [candidates1, atApplySource]] of perParentApplies) {
        let siblings = [];
        for (let [applyCandidate1, important1, rules1] of candidates1) {
          let potentialApplyCandidates = [
            applyCandidate1,
            ...extractBaseCandidates([
              applyCandidate1
            ], context.tailwindConfig.separator)
          ];
          for (let [meta, node] of rules1) {
            let parentClasses = extractClasses(parent);
            let nodeClasses = extractClasses(node);
            nodeClasses = nodeClasses.groups.filter((classList) => classList.some((className) => potentialApplyCandidates.includes(className))).flat();
            nodeClasses = nodeClasses.concat(extractBaseCandidates(nodeClasses, context.tailwindConfig.separator));
            let intersects = parentClasses.some((selector) => nodeClasses.includes(selector));
            if (intersects) {
              throw node.error(`You cannot \`@apply\` the \`${applyCandidate1}\` utility here because it creates a circular dependency.`);
            }
            let root1 = _postcss.default.root({
              nodes: [
                node.clone()
              ]
            });
            root1.walk((node2) => {
              node2.source = atApplySource;
            });
            let canRewriteSelector = node.type !== "atrule" || node.type === "atrule" && node.name !== "keyframes";
            if (canRewriteSelector) {
              root1.walkRules((rule2) => {
                if (!extractClasses(rule2).some((candidate) => candidate === applyCandidate1)) {
                  rule2.remove();
                  return;
                }
                let importantSelector = typeof context.tailwindConfig.important === "string" ? context.tailwindConfig.important : null;
                let isGenerated = parent.raws.tailwind !== void 0;
                let parentSelector = isGenerated && importantSelector && parent.selector.indexOf(importantSelector) === 0 ? parent.selector.slice(importantSelector.length) : parent.selector;
                rule2.selector = replaceSelector(parentSelector, rule2.selector, applyCandidate1);
                if (importantSelector && parentSelector !== parent.selector) {
                  rule2.selector = `${importantSelector} ${rule2.selector}`;
                }
                rule2.walkDecls((d) => {
                  d.important = meta.important || important1;
                });
              });
            }
            if (!root1.nodes[0]) {
              continue;
            }
            siblings.push([
              {
                ...meta,
                sort: meta.sort | context.layerOrder[meta.layer]
              },
              root1.nodes[0]
            ]);
          }
        }
        let nodes = siblings.sort(([a], [z]) => (0, _bigSign.default)(a.sort - z.sort)).map((s) => s[1]);
        parent.after(nodes);
      }
      for (let apply1 of applies) {
        if (apply1.parent.nodes.length > 1) {
          apply1.remove();
        } else {
          apply1.parent.remove();
        }
      }
      processApply(root2, context, localCache);
    }
    function expandApplyAtRules(context) {
      return (root2) => {
        let localCache = lazyCache(() => buildLocalApplyCache(root2, context));
        processApply(root2, context, localCache);
      };
    }
  }
});
var require_didYouMean_1_2_1 = __commonJS({
  "../../node_modules/didyoumean/didYouMean-1.2.1.js"(exports, module) {
    init_process();
    init_buffer();
    (function() {
      "use strict";
      function didYouMean(str, list2, key) {
        if (!str)
          return null;
        if (!didYouMean.caseSensitive) {
          str = str.toLowerCase();
        }
        var thresholdRelative = didYouMean.threshold === null ? null : didYouMean.threshold * str.length, thresholdAbsolute = didYouMean.thresholdAbsolute, winningVal;
        if (thresholdRelative !== null && thresholdAbsolute !== null)
          winningVal = Math.min(thresholdRelative, thresholdAbsolute);
        else if (thresholdRelative !== null)
          winningVal = thresholdRelative;
        else if (thresholdAbsolute !== null)
          winningVal = thresholdAbsolute;
        else
          winningVal = null;
        var winner, candidate, testCandidate, val, i, len = list2.length;
        for (i = 0; i < len; i++) {
          candidate = list2[i];
          if (key) {
            candidate = candidate[key];
          }
          if (!candidate) {
            continue;
          }
          if (!didYouMean.caseSensitive) {
            testCandidate = candidate.toLowerCase();
          } else {
            testCandidate = candidate;
          }
          val = getEditDistance(str, testCandidate, winningVal);
          if (winningVal === null || val < winningVal) {
            winningVal = val;
            if (key && didYouMean.returnWinningObject)
              winner = list2[i];
            else
              winner = candidate;
            if (didYouMean.returnFirstMatch)
              return winner;
          }
        }
        return winner || didYouMean.nullResultValue;
      }
      didYouMean.threshold = 0.4;
      didYouMean.thresholdAbsolute = 20;
      didYouMean.caseSensitive = false;
      didYouMean.nullResultValue = null;
      didYouMean.returnWinningObject = null;
      didYouMean.returnFirstMatch = false;
      if (typeof module !== "undefined" && module.exports) {
        module.exports = didYouMean;
      } else {
        window.didYouMean = didYouMean;
      }
      var MAX_INT = Math.pow(2, 32) - 1;
      function getEditDistance(a, b, max) {
        max = max || max === 0 ? max : MAX_INT;
        var lena = a.length;
        var lenb = b.length;
        if (lena === 0)
          return Math.min(max + 1, lenb);
        if (lenb === 0)
          return Math.min(max + 1, lena);
        if (Math.abs(lena - lenb) > max)
          return max + 1;
        var matrix = [], i, j, colMin, minJ, maxJ;
        for (i = 0; i <= lenb; i++) {
          matrix[i] = [i];
        }
        for (j = 0; j <= lena; j++) {
          matrix[0][j] = j;
        }
        for (i = 1; i <= lenb; i++) {
          colMin = MAX_INT;
          minJ = 1;
          if (i > max)
            minJ = i - max;
          maxJ = lenb + 1;
          if (maxJ > max + i)
            maxJ = max + i;
          for (j = 1; j <= lena; j++) {
            if (j < minJ || j > maxJ) {
              matrix[i][j] = max + 1;
            } else {
              if (b.charAt(i - 1) === a.charAt(j - 1)) {
                matrix[i][j] = matrix[i - 1][j - 1];
              } else {
                matrix[i][j] = Math.min(
                  matrix[i - 1][j - 1] + 1,
                  Math.min(
                    matrix[i][j - 1] + 1,
                    matrix[i - 1][j] + 1
                  )
                );
              }
            }
            if (matrix[i][j] < colMin)
              colMin = matrix[i][j];
          }
          if (colMin > max)
            return max + 1;
        }
        return matrix[lenb][lena];
      }
    })();
  }
});
var require_evaluateTailwindFunctions = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/evaluateTailwindFunctions.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    var _dlv = _interopRequireDefault(require_dlv_umd());
    var _didyoumean = _interopRequireDefault(require_didYouMean_1_2_1());
    var _transformThemeValue = _interopRequireDefault(require_transformThemeValue());
    var _postcssValueParser = _interopRequireDefault(require_lib());
    var _normalizeScreens = require_normalizeScreens();
    var _buildMediaQuery = _interopRequireDefault(require_buildMediaQuery());
    var _toPath = require_toPath();
    var _withAlphaVariable = require_withAlphaVariable();
    var _pluginUtils = require_pluginUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function isObject(input) {
      return typeof input === "object" && input !== null;
    }
    function findClosestExistingPath(theme, path) {
      let parts = (0, _toPath.toPath)(path);
      do {
        parts.pop();
        if ((0, _dlv.default)(theme, parts) !== void 0)
          break;
      } while (parts.length);
      return parts.length ? parts : void 0;
    }
    function pathToString(path) {
      if (typeof path === "string")
        return path;
      return path.reduce((acc, cur, i) => {
        if (cur.includes("."))
          return `${acc}[${cur}]`;
        return i === 0 ? cur : `${acc}.${cur}`;
      }, "");
    }
    function list2(items) {
      return items.map((key) => `'${key}'`).join(", ");
    }
    function listKeys(obj) {
      return list2(Object.keys(obj));
    }
    function validatePath(config, path, defaultValue, themeOpts = {}) {
      const pathString = Array.isArray(path) ? pathToString(path) : path.replace(/^['"]+|['"]+$/g, "");
      const pathSegments = Array.isArray(path) ? path : (0, _toPath.toPath)(pathString);
      const value = (0, _dlv.default)(config.theme, pathSegments, defaultValue);
      if (value === void 0) {
        let error = `'${pathString}' does not exist in your theme config.`;
        const parentSegments = pathSegments.slice(0, -1);
        const parentValue = (0, _dlv.default)(config.theme, parentSegments);
        if (isObject(parentValue)) {
          const validKeys = Object.keys(parentValue).filter((key) => validatePath(config, [
            ...parentSegments,
            key
          ]).isValid);
          const suggestion = (0, _didyoumean.default)(pathSegments[pathSegments.length - 1], validKeys);
          if (suggestion) {
            error += ` Did you mean '${pathToString([
              ...parentSegments,
              suggestion
            ])}'?`;
          } else if (validKeys.length > 0) {
            error += ` '${pathToString(parentSegments)}' has the following valid keys: ${list2(validKeys)}`;
          }
        } else {
          const closestPath = findClosestExistingPath(config.theme, pathString);
          if (closestPath) {
            const closestValue = (0, _dlv.default)(config.theme, closestPath);
            if (isObject(closestValue)) {
              error += ` '${pathToString(closestPath)}' has the following keys: ${listKeys(closestValue)}`;
            } else {
              error += ` '${pathToString(closestPath)}' is not an object.`;
            }
          } else {
            error += ` Your theme has the following top-level keys: ${listKeys(config.theme)}`;
          }
        }
        return {
          isValid: false,
          error
        };
      }
      if (!(typeof value === "string" || typeof value === "number" || typeof value === "function" || value instanceof String || value instanceof Number || Array.isArray(value))) {
        let error1 = `'${pathString}' was found but does not resolve to a string.`;
        if (isObject(value)) {
          let validKeys1 = Object.keys(value).filter((key) => validatePath(config, [
            ...pathSegments,
            key
          ]).isValid);
          if (validKeys1.length) {
            error1 += ` Did you mean something like '${pathToString([
              ...pathSegments,
              validKeys1[0]
            ])}'?`;
          }
        }
        return {
          isValid: false,
          error: error1
        };
      }
      const [themeSection] = pathSegments;
      return {
        isValid: true,
        value: (0, _transformThemeValue.default)(themeSection)(value, themeOpts)
      };
    }
    function extractArgs(node, vNodes, functions) {
      vNodes = vNodes.map((vNode) => resolveVNode(node, vNode, functions));
      let args = [
        ""
      ];
      for (let vNode of vNodes) {
        if (vNode.type === "div" && vNode.value === ",") {
          args.push("");
        } else {
          args[args.length - 1] += _postcssValueParser.default.stringify(vNode);
        }
      }
      return args;
    }
    function resolveVNode(node, vNode, functions) {
      if (vNode.type === "function" && functions[vNode.value] !== void 0) {
        let args = extractArgs(node, vNode.nodes, functions);
        vNode.type = "word";
        vNode.value = functions[vNode.value](node, ...args);
      }
      return vNode;
    }
    function resolveFunctions(node, input, functions) {
      return (0, _postcssValueParser.default)(input).walk((vNode) => {
        resolveVNode(node, vNode, functions);
      }).toString();
    }
    var nodeTypePropertyMap = {
      atrule: "params",
      decl: "value"
    };
    function* toPaths(path) {
      path = path.replace(/^['"]+|['"]+$/g, "");
      let matches = path.match(/^([^\s]+)(?![^\[]*\])(?:\s*\/\s*([^\/\s]+))$/);
      let alpha = void 0;
      yield [
        path,
        void 0
      ];
      if (matches) {
        path = matches[1];
        alpha = matches[2];
        yield [
          path,
          alpha
        ];
      }
    }
    function resolvePath(config, path, defaultValue) {
      const results = Array.from(toPaths(path)).map(([path2, alpha]) => {
        return Object.assign(validatePath(config, path2, defaultValue, {
          opacityValue: alpha
        }), {
          resolvedPath: path2,
          alpha
        });
      });
      var ref;
      return (ref = results.find((result) => result.isValid)) !== null && ref !== void 0 ? ref : results[0];
    }
    function _default({ tailwindConfig: config }) {
      let functions = {
        theme: (node, path, ...defaultValue) => {
          let { isValid, value, error, alpha } = resolvePath(config, path, defaultValue.length ? defaultValue : void 0);
          if (!isValid) {
            throw node.error(error);
          }
          let maybeColor = (0, _pluginUtils.parseColorFormat)(value);
          let isColorFunction = maybeColor !== void 0 && typeof maybeColor === "function";
          if (alpha !== void 0 || isColorFunction) {
            if (alpha === void 0) {
              alpha = 1;
            }
            value = (0, _withAlphaVariable.withAlphaValue)(maybeColor, alpha, maybeColor);
          }
          return value;
        },
        screen: (node, screen) => {
          screen = screen.replace(/^['"]+/g, "").replace(/['"]+$/g, "");
          let screens = (0, _normalizeScreens.normalizeScreens)(config.theme.screens);
          let screenDefinition = screens.find(({ name }) => name === screen);
          if (!screenDefinition) {
            throw node.error(`The '${screen}' screen does not exist in your theme.`);
          }
          return (0, _buildMediaQuery.default)(screenDefinition);
        }
      };
      return (root2) => {
        root2.walk((node) => {
          let property = nodeTypePropertyMap[node.type];
          if (property === void 0) {
            return;
          }
          node[property] = resolveFunctions(node, node[property], functions);
        });
      };
    }
  }
});
var require_substituteScreenAtRules = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/substituteScreenAtRules.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    var _normalizeScreens = require_normalizeScreens();
    var _buildMediaQuery = _interopRequireDefault(require_buildMediaQuery());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _default({ tailwindConfig: { theme } }) {
      return function(css) {
        css.walkAtRules("screen", (atRule2) => {
          let screen = atRule2.params;
          let screens = (0, _normalizeScreens.normalizeScreens)(theme.screens);
          let screenDefinition = screens.find(({ name }) => name === screen);
          if (!screenDefinition) {
            throw atRule2.error(`No \`${screen}\` screen found.`);
          }
          atRule2.name = "media";
          atRule2.params = (0, _buildMediaQuery.default)(screenDefinition);
        });
      };
    }
  }
});
var require_resolveDefaultsAtRules = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/resolveDefaultsAtRules.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      elementSelectorParser: () => elementSelectorParser,
      default: () => resolveDefaultsAtRules
    });
    var _postcss = _interopRequireDefault(require_postcss());
    var _postcssSelectorParser = _interopRequireDefault(require_dist());
    var _featureFlags = require_featureFlags();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var getNode = {
      id(node) {
        return _postcssSelectorParser.default.attribute({
          attribute: "id",
          operator: "=",
          value: node.value,
          quoteMark: '"'
        });
      }
    };
    function minimumImpactSelector(nodes) {
      let rest = nodes.filter((node2) => {
        if (node2.type !== "pseudo")
          return true;
        if (node2.nodes.length > 0)
          return true;
        return node2.value.startsWith("::") || [
          ":before",
          ":after",
          ":first-line",
          ":first-letter"
        ].includes(node2.value);
      }).reverse();
      let searchFor = /* @__PURE__ */ new Set([
        "tag",
        "class",
        "id",
        "attribute"
      ]);
      let splitPointIdx = rest.findIndex((n) => searchFor.has(n.type));
      if (splitPointIdx === -1)
        return rest.reverse().join("").trim();
      let node = rest[splitPointIdx];
      let bestNode = getNode[node.type] ? getNode[node.type](node) : node;
      rest = rest.slice(0, splitPointIdx);
      let combinatorIdx = rest.findIndex((n) => n.type === "combinator" && n.value === ">");
      if (combinatorIdx !== -1) {
        rest.splice(0, combinatorIdx);
        rest.unshift(_postcssSelectorParser.default.universal());
      }
      return [
        bestNode,
        ...rest.reverse()
      ].join("").trim();
    }
    var elementSelectorParser = (0, _postcssSelectorParser.default)((selectors) => {
      return selectors.map((s) => {
        let nodes = s.split((n) => n.type === "combinator" && n.value === " ").pop();
        return minimumImpactSelector(nodes);
      });
    });
    var cache = /* @__PURE__ */ new Map();
    function extractElementSelector(selector) {
      if (!cache.has(selector)) {
        cache.set(selector, elementSelectorParser.transformSync(selector));
      }
      return cache.get(selector);
    }
    function resolveDefaultsAtRules({ tailwindConfig }) {
      return (root2) => {
        let variableNodeMap = /* @__PURE__ */ new Map();
        let universals = /* @__PURE__ */ new Set();
        root2.walkAtRules("defaults", (rule2) => {
          if (rule2.nodes && rule2.nodes.length > 0) {
            universals.add(rule2);
            return;
          }
          let variable = rule2.params;
          if (!variableNodeMap.has(variable)) {
            variableNodeMap.set(variable, /* @__PURE__ */ new Set());
          }
          variableNodeMap.get(variable).add(rule2.parent);
          rule2.remove();
        });
        if ((0, _featureFlags.flagEnabled)(tailwindConfig, "optimizeUniversalDefaults")) {
          for (let universal of universals) {
            let selectorGroups = /* @__PURE__ */ new Map();
            var ref;
            let rules = (ref = variableNodeMap.get(universal.params)) !== null && ref !== void 0 ? ref : [];
            for (let rule2 of rules) {
              for (let selector of extractElementSelector(rule2.selector)) {
                let selectorGroupName = selector.includes(":-") || selector.includes("::-") ? selector : "__DEFAULT__";
                var ref1;
                let selectors = (ref1 = selectorGroups.get(selectorGroupName)) !== null && ref1 !== void 0 ? ref1 : /* @__PURE__ */ new Set();
                selectorGroups.set(selectorGroupName, selectors);
                selectors.add(selector);
              }
            }
            if ((0, _featureFlags.flagEnabled)(tailwindConfig, "optimizeUniversalDefaults")) {
              if (selectorGroups.size === 0) {
                universal.remove();
                continue;
              }
              for (let [, selectors1] of selectorGroups) {
                let universalRule = _postcss.default.rule({
                  source: universal.source
                });
                universalRule.selectors = [
                  ...selectors1
                ];
                universalRule.append(universal.nodes.map((node) => node.clone()));
                universal.before(universalRule);
              }
            }
            universal.remove();
          }
        } else if (universals.size) {
          let universalRule1 = _postcss.default.rule({
            selectors: [
              "*",
              "::before",
              "::after"
            ]
          });
          for (let universal1 of universals) {
            universalRule1.append(universal1.nodes);
            if (!universalRule1.parent) {
              universal1.before(universalRule1);
            }
            if (!universalRule1.source) {
              universalRule1.source = universal1.source;
            }
            universal1.remove();
          }
          let backdropRule = universalRule1.clone({
            selectors: [
              "::backdrop"
            ]
          });
          universalRule1.after(backdropRule);
        }
      };
    }
  }
});
var require_collapseAdjacentRules = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/collapseAdjacentRules.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => collapseAdjacentRules
    });
    var comparisonMap = {
      atrule: [
        "name",
        "params"
      ],
      rule: [
        "selector"
      ]
    };
    var types = new Set(Object.keys(comparisonMap));
    function collapseAdjacentRules() {
      function collapseRulesIn(root2) {
        let currentRule = null;
        root2.each((node) => {
          if (!types.has(node.type)) {
            currentRule = null;
            return;
          }
          if (currentRule === null) {
            currentRule = node;
            return;
          }
          let properties = comparisonMap[node.type];
          var _property, _property1;
          if (node.type === "atrule" && node.name === "font-face") {
            currentRule = node;
          } else if (properties.every((property) => ((_property = node[property]) !== null && _property !== void 0 ? _property : "").replace(/\s+/g, " ") === ((_property1 = currentRule[property]) !== null && _property1 !== void 0 ? _property1 : "").replace(/\s+/g, " "))) {
            if (node.nodes) {
              currentRule.append(node.nodes);
            }
            node.remove();
          } else {
            currentRule = node;
          }
        });
        root2.each((node) => {
          if (node.type === "atrule") {
            collapseRulesIn(node);
          }
        });
      }
      return (root2) => {
        collapseRulesIn(root2);
      };
    }
  }
});
var require_collapseDuplicateDeclarations = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/collapseDuplicateDeclarations.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => collapseDuplicateDeclarations
    });
    function collapseDuplicateDeclarations() {
      return (root2) => {
        root2.walkRules((node) => {
          let seen = /* @__PURE__ */ new Map();
          let droppable = /* @__PURE__ */ new Set([]);
          let byProperty = /* @__PURE__ */ new Map();
          node.walkDecls((decl2) => {
            if (decl2.parent !== node) {
              return;
            }
            if (seen.has(decl2.prop)) {
              if (seen.get(decl2.prop).value === decl2.value) {
                droppable.add(seen.get(decl2.prop));
                seen.set(decl2.prop, decl2);
                return;
              }
              if (!byProperty.has(decl2.prop)) {
                byProperty.set(decl2.prop, /* @__PURE__ */ new Set());
              }
              byProperty.get(decl2.prop).add(seen.get(decl2.prop));
              byProperty.get(decl2.prop).add(decl2);
            }
            seen.set(decl2.prop, decl2);
          });
          for (let decl2 of droppable) {
            decl2.remove();
          }
          for (let declarations of byProperty.values()) {
            let byUnit = /* @__PURE__ */ new Map();
            for (let decl1 of declarations) {
              let unit = resolveUnit(decl1.value);
              if (unit === null) {
                continue;
              }
              if (!byUnit.has(unit)) {
                byUnit.set(unit, /* @__PURE__ */ new Set());
              }
              byUnit.get(unit).add(decl1);
            }
            for (let declarations1 of byUnit.values()) {
              let removableDeclarations = Array.from(declarations1).slice(0, -1);
              for (let decl2 of removableDeclarations) {
                decl2.remove();
              }
            }
          }
        });
      };
    }
    var UNITLESS_NUMBER = Symbol("unitless-number");
    function resolveUnit(input) {
      let result = /^-?\d*.?\d+([\w%]+)?$/g.exec(input);
      if (result) {
        var ref;
        return (ref = result[1]) !== null && ref !== void 0 ? ref : UNITLESS_NUMBER;
      }
      return null;
    }
  }
});
var require_partitionApplyAtRules = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/partitionApplyAtRules.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => expandApplyAtRules
    });
    function partitionRules(root2) {
      if (!root2.walkAtRules)
        return;
      let applyParents = /* @__PURE__ */ new Set();
      root2.walkAtRules("apply", (rule2) => {
        applyParents.add(rule2.parent);
      });
      if (applyParents.size === 0) {
        return;
      }
      for (let rule2 of applyParents) {
        let nodeGroups = [];
        let lastGroup = [];
        for (let node of rule2.nodes) {
          if (node.type === "atrule" && node.name === "apply") {
            if (lastGroup.length > 0) {
              nodeGroups.push(lastGroup);
              lastGroup = [];
            }
            nodeGroups.push([
              node
            ]);
          } else {
            lastGroup.push(node);
          }
        }
        if (lastGroup.length > 0) {
          nodeGroups.push(lastGroup);
        }
        if (nodeGroups.length === 1) {
          continue;
        }
        for (let group of [
          ...nodeGroups
        ].reverse()) {
          let clone = rule2.clone({
            nodes: []
          });
          clone.append(group);
          rule2.after(clone);
        }
        rule2.remove();
      }
    }
    function expandApplyAtRules() {
      return (root2) => {
        partitionRules(root2);
      };
    }
  }
});
var require_detectNesting = __commonJS({
  "../../node_modules/tailwindcss/lib/lib/detectNesting.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => _default
    });
    function _default(_context) {
      return (root2, result) => {
        let found = false;
        root2.walkAtRules("tailwind", (node) => {
          if (found)
            return false;
          if (node.parent && node.parent.type !== "root") {
            found = true;
            node.warn(result, [
              "Nested @tailwind rules were detected, but are not supported.",
              "Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix",
              "Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy"
            ].join("\n"));
            return false;
          }
        });
        root2.walkRules((rule2) => {
          if (found)
            return false;
          rule2.walkRules((nestedRule) => {
            found = true;
            nestedRule.warn(result, [
              "Nested CSS was detected, but CSS nesting has not been configured correctly.",
              "Please enable a CSS nesting plugin *before* Tailwind in your configuration.",
              "See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting"
            ].join("\n"));
            return false;
          });
        });
      };
    }
  }
});
var require_processTailwindFeatures = __commonJS({
  "../../node_modules/tailwindcss/lib/processTailwindFeatures.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: () => processTailwindFeatures
    });
    var _normalizeTailwindDirectives = _interopRequireDefault(require_normalizeTailwindDirectives());
    var _expandTailwindAtRules = _interopRequireDefault(require_expandTailwindAtRules());
    var _expandApplyAtRules = _interopRequireDefault(require_expandApplyAtRules());
    var _evaluateTailwindFunctions = _interopRequireDefault(require_evaluateTailwindFunctions());
    var _substituteScreenAtRules = _interopRequireDefault(require_substituteScreenAtRules());
    var _resolveDefaultsAtRules = _interopRequireDefault(require_resolveDefaultsAtRules());
    var _collapseAdjacentRules = _interopRequireDefault(require_collapseAdjacentRules());
    var _collapseDuplicateDeclarations = _interopRequireDefault(require_collapseDuplicateDeclarations());
    var _partitionApplyAtRules = _interopRequireDefault(require_partitionApplyAtRules());
    var _detectNesting = _interopRequireDefault(require_detectNesting());
    var _setupContextUtils = require_setupContextUtils();
    var _featureFlags = require_featureFlags();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function processTailwindFeatures(setupContext) {
      return function(root2, result) {
        let { tailwindDirectives, applyDirectives } = (0, _normalizeTailwindDirectives.default)(root2);
        (0, _detectNesting.default)()(root2, result);
        (0, _partitionApplyAtRules.default)()(root2, result);
        let context = setupContext({
          tailwindDirectives,
          applyDirectives,
          registerDependency(dependency) {
            result.messages.push({
              plugin: "tailwindcss",
              parent: result.opts.from,
              ...dependency
            });
          },
          createContext(tailwindConfig, changedContent) {
            return (0, _setupContextUtils.createContext)(tailwindConfig, changedContent, root2);
          }
        })(root2, result);
        if (context.tailwindConfig.separator === "-") {
          throw new Error("The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.");
        }
        (0, _featureFlags.issueFlagNotices)(context.tailwindConfig);
        (0, _expandTailwindAtRules.default)(context)(root2, result);
        (0, _partitionApplyAtRules.default)()(root2, result);
        (0, _expandApplyAtRules.default)(context)(root2, result);
        (0, _evaluateTailwindFunctions.default)(context)(root2, result);
        (0, _substituteScreenAtRules.default)(context)(root2, result);
        (0, _resolveDefaultsAtRules.default)(context)(root2, result);
        (0, _collapseAdjacentRules.default)(context)(root2, result);
        (0, _collapseDuplicateDeclarations.default)(context)(root2, result);
      };
    }
  }
});
var require_lib2 = __commonJS({
  "../../node_modules/tailwindcss/lib/index.js"(exports, module) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _setupTrackingContext = _interopRequireDefault(require_setupTrackingContext());
    var _processTailwindFeatures = _interopRequireDefault(require_processTailwindFeatures());
    var _sharedState = require_sharedState();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    module.exports = function tailwindcss(configOrPath) {
      return {
        postcssPlugin: "tailwindcss",
        plugins: [
          _sharedState.env.DEBUG && function(root2) {
            console.log("\n");
            console.time("JIT TOTAL");
            return root2;
          },
          function(root2, result) {
            let context = (0, _setupTrackingContext.default)(configOrPath);
            if (root2.type === "document") {
              let roots = root2.nodes.filter((node) => node.type === "root");
              for (const root1 of roots) {
                if (root1.type === "root") {
                  (0, _processTailwindFeatures.default)(context)(root1, result);
                }
              }
              return;
            }
            (0, _processTailwindFeatures.default)(context)(root2, result);
          },
          _sharedState.env.DEBUG && function(root2) {
            console.timeEnd("JIT TOTAL");
            console.log("\n");
            return root2;
          }
        ].filter(Boolean)
      };
    };
    module.exports.postcss = true;
  }
});
init_process();
init_buffer();
var import_autoprefixer = __toESM(require_autoprefixer());
init_process();
init_buffer();
var import_postcss = __toESM(require_postcss(), 1);
var postcss_default = import_postcss.default;
var stringify = import_postcss.default.stringify;
var fromJSON = import_postcss.default.fromJSON;
var plugin = import_postcss.default.plugin;
var parse = import_postcss.default.parse;
var list = import_postcss.default.list;
var document = import_postcss.default.document;
var comment = import_postcss.default.comment;
var atRule = import_postcss.default.atRule;
var rule = import_postcss.default.rule;
var decl = import_postcss.default.decl;
var root = import_postcss.default.root;
var CssSyntaxError = import_postcss.default.CssSyntaxError;
var Declaration = import_postcss.default.Declaration;
var Container = import_postcss.default.Container;
var Processor = import_postcss.default.Processor;
var Document = import_postcss.default.Document;
var Comment = import_postcss.default.Comment;
var Warning = import_postcss.default.Warning;
var AtRule = import_postcss.default.AtRule;
var Result = import_postcss.default.Result;
var Input = import_postcss.default.Input;
var Rule = import_postcss.default.Rule;
var Root = import_postcss.default.Root;
var Node = import_postcss.default.Node;
var import_tailwindcss = __toESM(require_lib2());
var mediaQueries_default = [
  {
    className: "hover:",
    css: "&:hover",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:hover"
  },
  {
    className: "focus:",
    css: "&:focus",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:focus"
  },
  {
    className: "focus-within:",
    css: "&:focus-within",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:focus-within"
  },
  {
    className: "focus-visible:",
    css: "&:focus-visible",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:focus-visible"
  },
  {
    className: "active:",
    css: "&:active",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:active"
  },
  {
    className: "visited:",
    css: "&:visited",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:visited"
  },
  {
    className: "target:",
    css: "&:target",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:target"
  },
  {
    className: "first:",
    css: "&:first-child",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:first-child"
  },
  {
    className: "last:",
    css: "&:last-child",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:last-child"
  },
  {
    className: "only:",
    css: "&:only-child",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:only-child"
  },
  {
    className: "odd:",
    css: "&:nth-child(odd)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:nth-child(odd)"
  },
  {
    className: "even:",
    css: "&:nth-child(even)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:nth-child(even)"
  },
  {
    className: "first-of-type:",
    css: "&:first-of-type",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:first-of-type"
  },
  {
    className: "last-of-type:",
    css: "&:last-of-type",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:last-of-type"
  },
  {
    className: "only-of-type:",
    css: "&:only-of-type",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:only-of-type"
  },
  {
    className: "empty:",
    css: "&:empty",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:empty"
  },
  {
    className: "disabled:",
    css: "&:disabled",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:disabled"
  },
  {
    className: "enabled:",
    css: "&:enabled",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:enabled"
  },
  {
    className: "checked:",
    css: "&:checked",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:checked"
  },
  {
    className: "indeterminate:",
    css: "&:indeterminate",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:indeterminate"
  },
  {
    className: "default:",
    css: "&:default",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:default"
  },
  {
    className: "required:",
    css: "&:required",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:required"
  },
  {
    className: "valid:",
    css: "&:valid",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:valid"
  },
  {
    className: "invalid:",
    css: "&:invalid",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:invalid"
  },
  {
    className: "in-range:",
    css: "&:in-range",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:in-range"
  },
  {
    className: "out-of-range:",
    css: "&:out-of-range",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:out-of-range"
  },
  {
    className: "placeholder-shown:",
    css: "&:placeholder-shown",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:placeholder-shown"
  },
  {
    className: "autofill:",
    css: "&:autofill",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:autofill"
  },
  {
    className: "read-only:",
    css: "&:read-only",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&:read-only"
  },
  {
    className: "open:",
    css: "&[open]",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&[open]"
  },
  {
    className: "before:",
    css: "&::before",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::before"
  },
  {
    className: "after:",
    css: "&::after",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::after"
  },
  {
    className: "first-letter:",
    css: "&::first-letter",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::first-letter"
  },
  {
    className: "first-line:",
    css: "&::first-line",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::first-line"
  },
  {
    className: "marker:",
    css: "&::marker",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::marker"
  },
  {
    className: "selection:",
    css: "&::selection",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::selection"
  },
  {
    className: "file:",
    css: "&::file-selector-button",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::file-selector-button"
  },
  {
    className: "backdrop:",
    css: "&::backdrop",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::backdrop"
  },
  {
    className: "placeholder:",
    css: "&::placeholder",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "&::placeholder"
  },
  {
    className: "sm:",
    css: "@media (min-width: 640px)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (min-width: 640px)"
  },
  {
    className: "md:",
    css: "@media (min-width: 768px)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (min-width: 768px)"
  },
  {
    className: "lg:",
    css: "@media (min-width: 1024px)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (min-width: 1024px)"
  },
  {
    className: "xl:",
    css: "@media (min-width: 1280px)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (min-width: 1280px)"
  },
  {
    className: "2xl:",
    css: "@media (min-width: 1536px)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (min-width: 1536px)"
  },
  {
    className: "dark:",
    css: "@media (prefers-color-scheme: dark)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (prefers-color-scheme: dark)"
  },
  {
    className: "portrait:",
    css: "@media (orientation: portrait)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (orientation: portrait)"
  },
  {
    className: "landscape:",
    css: "@media (orientation: landscape)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (orientation: landscape)"
  },
  {
    className: "motion-safe:",
    css: "@media (prefers-reduced-motion: no-preference)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (prefers-reduced-motion: no-preference)"
  },
  {
    className: "motion-reduce:",
    css: "@media (prefers-reduced-motion: reduce)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (prefers-reduced-motion: reduce)"
  },
  {
    className: "contrast-more:",
    css: "@media (prefers-contrast: more)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (prefers-contrast: more)"
  },
  {
    className: "contrast-less:",
    css: "@media (prefers-contrast: less)",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media (prefers-contrast: less)"
  },
  {
    className: "print:",
    css: "@media print",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "@media print"
  },
  {
    className: "rtl:",
    css: "[dir=\u201Crtl\u201D] &",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "[dir=\u201Crtl\u201D] &"
  },
  {
    className: "ltr:",
    css: "[dir=\u201Cltr\u201D] &",
    nodes: [],
    isColorClass: false,
    color: "",
    fullSearchString: "[dir=\u201Cltr\u201D] &"
  }
];
init_process();
init_buffer();
init_process();
init_buffer();
var singleComment = Symbol("singleComment");
var multiComment = Symbol("multiComment");
var stripWithoutWhitespace = () => "";
var stripWithWhitespace = (string, start, end) => string.slice(start, end).replace(/\S/g, " ");
var isEscaped = (jsonString, quotePosition) => {
  let index = quotePosition - 1;
  let backslashCount = 0;
  while (jsonString[index] === "\\") {
    index -= 1;
    backslashCount += 1;
  }
  return Boolean(backslashCount % 2);
};
function stripJsonComments(jsonString, { whitespace = true, trailingCommas = false } = {}) {
  if (typeof jsonString !== "string") {
    throw new TypeError(`Expected argument \`jsonString\` to be a \`string\`, got \`${typeof jsonString}\``);
  }
  const strip = whitespace ? stripWithWhitespace : stripWithoutWhitespace;
  let isInsideString = false;
  let isInsideComment = false;
  let offset = 0;
  let buffer = "";
  let result = "";
  let commaIndex = -1;
  for (let index = 0; index < jsonString.length; index++) {
    const currentCharacter = jsonString[index];
    const nextCharacter = jsonString[index + 1];
    if (!isInsideComment && currentCharacter === '"') {
      const escaped = isEscaped(jsonString, index);
      if (!escaped) {
        isInsideString = !isInsideString;
      }
    }
    if (isInsideString) {
      continue;
    }
    if (!isInsideComment && currentCharacter + nextCharacter === "//") {
      buffer += jsonString.slice(offset, index);
      offset = index;
      isInsideComment = singleComment;
      index++;
    } else if (isInsideComment === singleComment && currentCharacter + nextCharacter === "\r\n") {
      index++;
      isInsideComment = false;
      buffer += strip(jsonString, offset, index);
      offset = index;
      continue;
    } else if (isInsideComment === singleComment && currentCharacter === "\n") {
      isInsideComment = false;
      buffer += strip(jsonString, offset, index);
      offset = index;
    } else if (!isInsideComment && currentCharacter + nextCharacter === "/*") {
      buffer += jsonString.slice(offset, index);
      offset = index;
      isInsideComment = multiComment;
      index++;
      continue;
    } else if (isInsideComment === multiComment && currentCharacter + nextCharacter === "*/") {
      index++;
      isInsideComment = false;
      buffer += strip(jsonString, offset, index + 1);
      offset = index + 1;
      continue;
    } else if (trailingCommas && !isInsideComment) {
      if (commaIndex !== -1) {
        if (currentCharacter === "}" || currentCharacter === "]") {
          buffer += jsonString.slice(offset, index);
          result += strip(buffer, 0, 1) + buffer.slice(1);
          buffer = "";
          offset = index;
          commaIndex = -1;
        } else if (currentCharacter !== " " && currentCharacter !== "	" && currentCharacter !== "\r" && currentCharacter !== "\n") {
          buffer += jsonString.slice(offset, index);
          offset = index;
          commaIndex = -1;
        }
      } else if (currentCharacter === ",") {
        result += buffer + jsonString.slice(offset, index);
        buffer = "";
        offset = index;
        commaIndex = index;
      }
    }
  }
  return result + buffer + (isInsideComment ? strip(jsonString.slice(offset)) : jsonString.slice(offset));
}
var getTailwindTheme = async (directory) => {
  const fileHandle = directory.fileMap.get("tailwind.config.js");
  const file = await (fileHandle == null ? void 0 : fileHandle.getFile());
  const fileContents = await (file == null ? void 0 : file.text());
  if (!fileContents)
    return null;
  const themeLineRegex = /^\s*theme:\s*{$/gm;
  const themeLineMatches = fileContents.match(themeLineRegex);
  if (!themeLineMatches)
    return null;
  const themeLine = themeLineMatches[0];
  const themeLineIndex = fileContents.search(themeLine) + themeLine.length - 1;
  const indentation = themeLine.search(/\S/);
  const endThemeRegexStr = "^" + " ".repeat(indentation) + "},$";
  const endThemeRegex = new RegExp(endThemeRegexStr, "gm");
  let endThemeMatch = null;
  let endThemeIndex = -1;
  while ((endThemeMatch = endThemeRegex.exec(fileContents)) != null) {
    endThemeIndex = endThemeMatch.index;
    if (endThemeIndex > themeLineIndex)
      break;
  }
  if (!endThemeMatch)
    return null;
  const themeStr = fileContents.substring(
    themeLineIndex,
    endThemeIndex + endThemeMatch[0].length - 1
  );
  const doubleQuotedThemeStr = themeStr.replace(/'/g, `"`);
  const jsonThemeStr = doubleQuotedThemeStr.replace(
    /( *)([a-zA-Z0-9_]+):/gm,
    '$1"$2":'
  );
  const uncommentedJson = stripJsonComments(jsonThemeStr);
  const noTrailingCommaJson = uncommentedJson.replace(/,(\s*})/gm, "$1");
  const noDoubleQuotesInParenthesesJson = noTrailingCommaJson.replace(
    /(\(.*)"(.*)"(.*\))/gm,
    `$1'$2'$3`
  );
  const json = JSON.parse(noDoubleQuotesInParenthesesJson);
  return json;
};
var generateTailwindClasses = async (directory, tailwindConfig) => {
  let theme = {};
  if (tailwindConfig) {
    theme = tailwindConfig.theme;
  } else {
    try {
      theme = await getTailwindTheme(directory);
    } catch (e) {
      console.log(e);
    }
  }
  const postcssResult = postcss_default([
    (0, import_tailwindcss.default)({
      content: [],
      safelist: [{ pattern: /^([^\/]+|[wh]-.+)$/, variants: [] }],
      corePlugins: {
        preflight: false
      },
      theme: theme != null ? theme : {},
      plugins: []
    }),
    (0, import_autoprefixer.default)()
  ]).process(
    `
    @tailwind base;
    @tailwind components;
    @tailwind utilities;
    `
  );
  const tailwindClasses = postcssResult.root.nodes.filter((node) => {
    const singleClassSelectorRegex = /^\.\S+$/;
    return node.type === "rule" && node.selector.match(singleClassSelectorRegex);
  }).map((r) => {
    var _a, _b;
    const rule2 = r;
    const className = rule2.selector.replace(".", "").replaceAll("\\", "");
    const nodes = rule2.nodes.filter((node) => {
      return node.type === "decl";
    }).map((d) => {
      const decl2 = d;
      return { prop: decl2.prop, value: decl2.value };
    });
    let color = (_b = (_a = nodes.find((decl2) => {
      const hex = /^#[0-9A-F]{6}$/i.test(decl2.value);
      if (hex)
        return true;
      if (decl2.value.includes("rgb("))
        return true;
    })) == null ? void 0 : _a.value) != null ? _b : null;
    const isColorClass = color !== null;
    if (color) {
      if (color.includes("/")) {
        const end = color.indexOf("/");
        color = color.substring(0, end - 1) + ")";
      }
    }
    const strippedRule = rule2.clone();
    strippedRule.nodes = rule2.nodes.filter(
      (n) => !n.toString().match(/^-[^\-]/m)
    );
    strippedRule.cleanRaws();
    const cssVendorsStripped = strippedRule.toString();
    const target = {
      className,
      css: cssVendorsStripped,
      nodes,
      isColorClass,
      color: color != null ? color : "",
      fullSearchString: `${className} ${nodes.map((decl2) => `${decl2.prop} ${decl2.value}`).join(" ")}`
    };
    return target;
  }).sort((a, b) => a.className > b.className ? 1 : -1);
  const mediaQueries = mediaQueries_default;
  const uniqueTailwindClasses = [
    ...new Map(tailwindClasses.map((x) => [x.className, x])).values()
  ];
  const classes = [...uniqueTailwindClasses, ...mediaQueries];
  const fuse = new Fuse(classes, {
    includeScore: true,
    keys: ["className", "fullSearchString"]
  });
  return fuse;
};
export {
  generateTailwindClasses
};
/*!
 * normalize-path <https://github.com/jonschlinkert/normalize-path>
 *
 * Copyright (c) 2014-2018, Jon Schlinkert.
 * Released under the MIT License.
 */
/*! https://mths.be/cssesc v3.0.0 by @mathias */
/*! https://mths.be/punycode v1.3.2 by @mathias */
/**
 * @license Fraction.js v4.2.0 05/03/2022
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/
//# sourceMappingURL=generateTailwindClasses-LGWNLLOG-T2JGYI2B.js.map
