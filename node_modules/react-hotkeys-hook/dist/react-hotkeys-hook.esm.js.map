{"version":3,"file":"react-hotkeys-hook.esm.js","sources":["../src/parseHotkeys.ts","../src/validators.ts","../src/BoundHotkeysProxyProvider.tsx","../src/HotkeysProvider.tsx","../src/deepEqual.ts","../src/useDeepEqualMemo.ts","../src/useHotkeys.ts","../src/isHotkeyPressed.ts"],"sourcesContent":["import { Hotkey, KeyboardModifiers, Keys } from './types'\n\nconst reservedModifierKeywords = ['ctrl', 'shift', 'alt', 'meta', 'mod']\n\nconst mappedKeys: Record<string, string> = {\n  esc: 'escape',\n  return: 'enter',\n  left: 'arrowleft',\n  up: 'arrowup',\n  right: 'arrowright',\n  down: 'arrowdown',\n}\n\nexport function parseKeysHookInput(keys: Keys, splitKey: string = ','): string[] {\n  if (typeof keys === 'string') {\n    return keys.split(splitKey)\n  }\n\n  return keys\n}\n\nexport function parseHotkey(hotkey: string, combinationKey: string = '+'): Hotkey {\n  const keys = hotkey\n    .toLocaleLowerCase()\n    .split(combinationKey)\n    .map(k => k.trim())\n    .map(k => mappedKeys[k] || k)\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    shift: keys.includes('shift'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n  }\n\n  const singleCharKeys = keys.filter((k) => !reservedModifierKeywords.includes(k))\n\n  return {\n    ...modifiers,\n    keys: singleCharKeys,\n  }\n}\n","import { FormTags, Hotkey, Scopes, Trigger } from './types'\n\nexport function maybePreventDefault(e: KeyboardEvent, hotkey: Hotkey, preventDefault?: Trigger): void {\n  if ((typeof preventDefault === 'function' && preventDefault(e, hotkey)) || preventDefault === true) {\n    e.preventDefault()\n  }\n}\n\nexport function isHotkeyEnabled(e: KeyboardEvent, hotkey: Hotkey, enabled?: Trigger): boolean {\n  if (typeof enabled === 'function') {\n    return enabled(e, hotkey)\n  }\n\n  return enabled === true || enabled === undefined\n}\n\nexport function isKeyboardEventTriggeredByInput(ev: KeyboardEvent): boolean {\n  return isHotkeyEnabledOnTag(ev, ['input', 'textarea', 'select'])\n}\n\nexport function isHotkeyEnabledOnTag({ target }: KeyboardEvent, enabledOnTags: FormTags[] | boolean = false): boolean {\n  const targetTagName = target && (target as HTMLElement).tagName\n\n  if (enabledOnTags instanceof Array) {\n    return Boolean(targetTagName && enabledOnTags && enabledOnTags.some(tag => tag.toLowerCase() === targetTagName.toLowerCase()))\n  }\n\n  return Boolean(targetTagName && enabledOnTags && enabledOnTags === true)\n}\n\nexport function isScopeActive(activeScopes: string[], scopes?: Scopes): boolean {\n  if (activeScopes.length === 0 && scopes) {\n    console.warn(\n      'A hotkey has the \"scopes\" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>'\n    )\n\n    return true\n  }\n\n  if (!scopes) {\n    return true\n  }\n\n  return activeScopes.some(scope => scopes.includes(scope)) || activeScopes.includes('*')\n}\n\nexport const isHotkeyMatchingKeyboardEvent = (e: KeyboardEvent, hotkey: Hotkey, pressedDownKeys: Set<string>): boolean => {\n  const { alt, ctrl, meta, mod, shift, keys } = hotkey\n  const { altKey, ctrlKey, metaKey, shiftKey, key: pressedKeyUppercase, code } = e\n\n  const keyCode = code.toLowerCase().replace('key', '')\n  const pressedKey = pressedKeyUppercase.toLowerCase()\n\n  if (altKey !== alt && pressedKey !== 'alt') {\n    return false\n  }\n\n  if (shiftKey !== shift && pressedKey !== 'shift') {\n    return false\n  }\n\n  // Mod is a special key name that is checking for meta on macOS and ctrl on other platforms\n  if (mod) {\n    if (!metaKey && !ctrlKey) {\n      return false\n    }\n  } else {\n    if (metaKey !== meta && keyCode !== 'meta') {\n      return false\n    }\n\n    if (ctrlKey !== ctrl && keyCode !== 'ctrl') {\n      return false\n    }\n  }\n\n  // All modifiers are correct, now check the key\n  // If the key is set we check for the key\n  if (keys && keys.length === 1 && (keys.includes(pressedKey) || keys.includes(keyCode))) {\n    return true\n  } else if (keys) {\n    // Check if all keys are present in pressedDownKeys set\n    return keys.every(key => pressedDownKeys.has(key))\n  }\n  else if (!keys) {\n    // If the key is not set, we only listen for modifiers, that check went alright, so we return true\n    return true\n  }\n\n  // There is nothing that matches.\n  return false\n}\n","import { createContext, ReactNode, useContext } from 'react'\nimport { Hotkey } from './types'\n\ntype BoundHotkeysProxyProviderType = {\n  addHotkey: (hotkey: Hotkey) => void,\n  removeHotkey: (hotkey: Hotkey) => void,\n}\n\nconst BoundHotkeysProxyProvider = createContext<BoundHotkeysProxyProviderType | undefined>(undefined)\n\nexport const useBoundHotkeysProxy = () => {\n  return useContext(BoundHotkeysProxyProvider)\n}\n\ninterface Props {\n  children: ReactNode\n  addHotkey: (hotkey: Hotkey) => void\n  removeHotkey: (hotkey: Hotkey) => void\n}\n\nexport default function BoundHotkeysProxyProviderProvider({ addHotkey, removeHotkey, children }: Props) {\n  return <BoundHotkeysProxyProvider.Provider value={{addHotkey, removeHotkey}}>{children}</BoundHotkeysProxyProvider.Provider>\n}\n","import { Hotkey } from './types'\nimport { createContext, ReactNode, useMemo, useState, useContext } from 'react'\nimport BoundHotkeysProxyProviderProvider from './BoundHotkeysProxyProvider'\n\nexport type HotkeysContextType = {\n  hotkeys: ReadonlyArray<Hotkey>\n  enabledScopes: string[]\n  toggleScope: (scope: string) => void\n  enableScope: (scope: string) => void\n  disableScope: (scope: string) => void\n}\n\n// The context is only needed for special features like global scoping, so we use a graceful default fallback\nconst HotkeysContext = createContext<HotkeysContextType>({\n  hotkeys: [],\n  enabledScopes: [], // This array has to be empty instead of containing '*' as default, to check if the provider is set or not\n  toggleScope: () => {},\n  enableScope: () => {},\n  disableScope: () => {},\n})\n\nexport const useHotkeysContext = () => {\n  return useContext(HotkeysContext)\n}\n\ninterface Props {\n  initiallyActiveScopes?: string[]\n  children: ReactNode\n}\n\nexport const HotkeysProvider = ({initiallyActiveScopes = ['*'], children}: Props) => {\n  const [internalActiveScopes, setInternalActiveScopes] = useState(initiallyActiveScopes?.length > 0 ? initiallyActiveScopes : ['*'])\n  const [boundHotkeys, setBoundHotkeys] = useState<Hotkey[]>([]);\n\n  const isAllActive = useMemo(() => internalActiveScopes.includes('*'), [internalActiveScopes])\n\n  const enableScope = (scope: string) => {\n    if (isAllActive) {\n      setInternalActiveScopes([scope])\n    } else {\n      setInternalActiveScopes(Array.from(new Set([...internalActiveScopes, scope])))\n    }\n  }\n\n  const disableScope = (scope: string) => {\n    const scopes = internalActiveScopes.filter(s => s !== scope)\n\n    if (scopes.length === 0) {\n      setInternalActiveScopes(['*'])\n    } else {\n      setInternalActiveScopes(scopes)\n    }\n  }\n\n  const toggleScope = (scope: string) => {\n    if (internalActiveScopes.includes(scope)) {\n      disableScope(scope)\n    } else {\n      enableScope(scope)\n    }\n  }\n\n  const addBoundHotkey = (hotkey: Hotkey) => {\n    setBoundHotkeys([...boundHotkeys, hotkey])\n  }\n\n  const removeBoundHotkey = (hotkey: Hotkey) => {\n    setBoundHotkeys(boundHotkeys.filter(h => h.keys !== hotkey.keys))\n  }\n\n  return (\n    <HotkeysContext.Provider value={{enabledScopes: internalActiveScopes, hotkeys: boundHotkeys, enableScope, disableScope, toggleScope}}>\n      <BoundHotkeysProxyProviderProvider addHotkey={addBoundHotkey} removeHotkey={removeBoundHotkey}>\n        {children}\n      </BoundHotkeysProxyProviderProvider>\n    </HotkeysContext.Provider>\n  )\n}\n","export default function deepEqual(x: any, y: any): boolean {\n  //@ts-ignore\n  return (x && y && typeof x === 'object' && typeof y === 'object')\n    //@ts-ignore\n    ? (Object.keys(x).length === Object.keys(y).length) && Object.keys(x).reduce(function(isEqual, key) {\n      return isEqual && deepEqual(x[key], y[key])\n    }, true)\n    : (x === y)\n}\n","import { useRef } from 'react'\nimport deepEqual from './deepEqual'\n\nexport default function useDeepEqualMemo<T>(value: T) {\n  const ref = useRef<T | undefined>(undefined)\n\n  if (!deepEqual(ref.current, value)) {\n    ref.current = value\n  }\n\n  return ref.current\n}\n","import { HotkeyCallback, Keys, Options, OptionsOrDependencyArray, RefType } from './types'\nimport { DependencyList, useCallback, useEffect, useLayoutEffect, useRef } from 'react'\nimport { parseHotkey, parseKeysHookInput } from './parseHotkeys'\nimport {\n  isHotkeyEnabled,\n  isHotkeyEnabledOnTag,\n  isHotkeyMatchingKeyboardEvent,\n  isKeyboardEventTriggeredByInput,\n  isScopeActive,\n  maybePreventDefault,\n} from './validators'\nimport { useHotkeysContext } from './HotkeysProvider'\nimport { useBoundHotkeysProxy } from './BoundHotkeysProxyProvider'\nimport useDeepEqualMemo from './useDeepEqualMemo'\n\nconst stopPropagation = (e: KeyboardEvent): void => {\n  e.stopPropagation()\n  e.preventDefault()\n  e.stopImmediatePropagation()\n}\n\nconst useSafeLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default function useHotkeys<T extends HTMLElement>(\n  keys: Keys,\n  callback: HotkeyCallback,\n  options?: OptionsOrDependencyArray,\n  dependencies?: OptionsOrDependencyArray,\n) {\n  const ref = useRef<RefType<T>>(null)\n  const { current: pressedDownKeys } = useRef<Set<string>>(new Set())\n\n  const _options: Options | undefined = !(options instanceof Array) ? (options as Options) : !(dependencies instanceof Array) ? (dependencies as Options) : undefined\n  const _deps: DependencyList = options instanceof Array ? options : dependencies instanceof Array ? dependencies : []\n\n  const cb = useCallback(callback, [..._deps])\n  const memoisedOptions = useDeepEqualMemo(_options)\n\n  const { enabledScopes } = useHotkeysContext()\n  const proxy = useBoundHotkeysProxy()\n\n  useSafeLayoutEffect(() => {\n    if (memoisedOptions?.enabled === false || !isScopeActive(enabledScopes, memoisedOptions?.scopes)) {\n      return\n    }\n\n    const listener = (e: KeyboardEvent) => {\n      if (isKeyboardEventTriggeredByInput(e) && !isHotkeyEnabledOnTag(e, memoisedOptions?.enableOnFormTags)) {\n        return\n      }\n\n      // TODO: SINCE THE EVENT IS NOW ATTACHED TO THE REF, THE ACTIVE ELEMENT CAN NEVER BE INSIDE THE REF. THE HOTKEY ONLY TRIGGERS IF THE\n      // REF IS THE ACTIVE ELEMENT. THIS IS A PROBLEM SINCE FOCUSED SUB COMPONENTS WONT TRIGGER THE HOTKEY.\n\n      if (ref.current !== null && document.activeElement !== ref.current && !ref.current.contains(document.activeElement)) {\n        stopPropagation(e)\n\n        return\n      }\n\n      if (((e.target as HTMLElement)?.isContentEditable && !memoisedOptions?.enableOnContentEditable)) {\n        return\n      }\n\n      parseKeysHookInput(keys, memoisedOptions?.splitKey).forEach((key) => {\n        const hotkey = parseHotkey(key, memoisedOptions?.combinationKey)\n\n        if (isHotkeyMatchingKeyboardEvent(e, hotkey, pressedDownKeys) || hotkey.keys?.includes('*')) {\n          maybePreventDefault(e, hotkey, memoisedOptions?.preventDefault)\n\n          if (!isHotkeyEnabled(e, hotkey, memoisedOptions?.enabled)) {\n            stopPropagation(e)\n\n            return\n          }\n\n          cb(e, hotkey)\n        }\n      })\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      pressedDownKeys.add(event.key.toLowerCase())\n\n      if ((memoisedOptions?.keydown === undefined && memoisedOptions?.keyup !== true) || memoisedOptions?.keydown) {\n        listener(event)\n      }\n    }\n\n    const handleKeyUp = (event: KeyboardEvent) => {\n      if (event.key.toLowerCase() !== 'meta') {\n        pressedDownKeys.delete(event.key.toLowerCase())\n      } else {\n        // On macOS pressing down the meta key prevents triggering the keyup event for any other key https://stackoverflow.com/a/57153300/735226.\n        pressedDownKeys.clear()\n      }\n\n      if (memoisedOptions?.keyup) {\n        listener(event)\n      }\n    }\n\n    // @ts-ignore\n    (ref.current || document).addEventListener('keyup', handleKeyUp);\n    // @ts-ignore\n    (ref.current || document).addEventListener('keydown', handleKeyDown)\n\n    if (proxy) {\n      parseKeysHookInput(keys, memoisedOptions?.splitKey).forEach((key) => proxy.addHotkey(parseHotkey(key, memoisedOptions?.combinationKey)))\n    }\n\n    return () => {\n      // @ts-ignore\n      (ref.current || document).removeEventListener('keyup', handleKeyUp);\n      // @ts-ignore\n      (ref.current || document).removeEventListener('keydown', handleKeyDown)\n\n      if (proxy) {\n        parseKeysHookInput(keys, memoisedOptions?.splitKey).forEach((key) => proxy.removeHotkey(parseHotkey(key, memoisedOptions?.combinationKey)))\n      }\n    }\n  }, [keys, cb, memoisedOptions, enabledScopes])\n\n  return ref\n}\n","import { Hotkey } from './types'\nimport { parseHotkey } from './parseHotkeys'\nimport deepEqual from './deepEqual'\n\nconst currentlyPressedKeys: Set<Hotkey> = new Set<Hotkey>()\n\nexport function isHotkeyPressed(key: string | string[], splitKey: string = ','): boolean {\n  const hotkeyArray = Array.isArray(key) ? key : key.split(splitKey)\n\n  return hotkeyArray.every((hotkey) => {\n    const parsedHotkey = parseHotkey(hotkey)\n\n    for (const pressedHotkey of currentlyPressedKeys) {\n      if (deepEqual(parsedHotkey, pressedHotkey)) {\n        return true\n      }\n    }\n  })\n}\n\nexport function pushToCurrentlyPressedKeys(key: string | string[]): void {\n  const hotkeyArray = Array.isArray(key) ? key : [key]\n\n  hotkeyArray.forEach(hotkey => currentlyPressedKeys.add(parseHotkey(hotkey)))\n}\n\nexport function removeFromCurrentlyPressedKeys(key: string | string[]): void {\n  const hotkeyArray = Array.isArray(key) ? key : [key]\n\n  hotkeyArray.forEach((hotkey) => {\n    const parsedHotkey = parseHotkey(hotkey)\n\n    for (const pressedHotkey of currentlyPressedKeys) {\n      if (pressedHotkey.keys?.every((key) => parsedHotkey.keys?.includes(key))) {\n        currentlyPressedKeys.delete(pressedHotkey)\n      }\n    }\n  })\n}\n\n(() => {\n  if (typeof window !== 'undefined') {\n    window.addEventListener('DOMContentLoaded', () => {\n      document.addEventListener('keydown', e => {\n        pushToCurrentlyPressedKeys(e.key)\n      })\n\n      document.addEventListener('keyup', e => {\n        removeFromCurrentlyPressedKeys(e.key)\n      })\n    })\n  }\n})()\n"],"names":["reservedModifierKeywords","mappedKeys","esc","left","up","right","down","parseKeysHookInput","keys","splitKey","split","parseHotkey","hotkey","combinationKey","toLocaleLowerCase","map","k","trim","modifiers","alt","includes","ctrl","shift","meta","mod","singleCharKeys","filter","maybePreventDefault","e","preventDefault","isHotkeyEnabled","enabled","undefined","isKeyboardEventTriggeredByInput","ev","isHotkeyEnabledOnTag","enabledOnTags","target","targetTagName","tagName","Array","Boolean","some","tag","toLowerCase","isScopeActive","activeScopes","scopes","length","console","warn","scope","isHotkeyMatchingKeyboardEvent","pressedDownKeys","altKey","ctrlKey","metaKey","shiftKey","pressedKeyUppercase","key","code","keyCode","replace","pressedKey","every","has","BoundHotkeysProxyProvider","createContext","useBoundHotkeysProxy","useContext","BoundHotkeysProxyProviderProvider","addHotkey","removeHotkey","children","_jsx","HotkeysContext","hotkeys","enabledScopes","toggleScope","enableScope","disableScope","useHotkeysContext","HotkeysProvider","initiallyActiveScopes","useState","internalActiveScopes","setInternalActiveScopes","boundHotkeys","setBoundHotkeys","isAllActive","useMemo","from","Set","s","addBoundHotkey","removeBoundHotkey","h","deepEqual","x","y","Object","reduce","isEqual","useDeepEqualMemo","value","ref","useRef","current","stopPropagation","stopImmediatePropagation","useSafeLayoutEffect","window","useLayoutEffect","useEffect","useHotkeys","callback","options","dependencies","_options","_deps","cb","useCallback","memoisedOptions","proxy","listener","enableOnFormTags","document","activeElement","contains","isContentEditable","enableOnContentEditable","forEach","handleKeyDown","event","add","keydown","keyup","handleKeyUp","clear","addEventListener","removeEventListener","currentlyPressedKeys","isHotkeyPressed","hotkeyArray","isArray","parsedHotkey","pressedHotkey","pushToCurrentlyPressedKeys","removeFromCurrentlyPressedKeys"],"mappings":"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"}